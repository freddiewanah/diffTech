3des	aes	5
('3des', 'better', 'aes', '', '25982745', 'des is the least secure 3des is better but i d go for the aes\n')
('3des', 'more', 'aes', '', '149409', '3des is more expensive than aes for example\n')
('3des', 'much slower', 'aes', 'faster slower', '23658313', 'furthermore 3des is much slower than aes\n')
('aes', 'faster', '3des', 'faster slower', '3938726', 'should be as fast as 3des aes turned out to be much faster than 3des in software typically 5 to 10 times faster\n')
('3des', 'more expensive', 'aes', '', '149409', '3des is more expensive than aes for example\n')

jqplot	flot	4
('jqplot', 'better chart', 'flot', '', '9848654', 'jqplot is free in my opinion has better chart than flot it doesn√¢ t have events\n')
('jqplot', 'better', 'flot', '', '6759961', 'by looking at the google groups for qjplot and flot the support for jqplot is better lot s of unanswered questions at the flot group\n')
('jqplot', 'better lot', 'flot', '', '6759961', 'by looking at the google groups for qjplot and flot the support for jqplot is better lot s of unanswered questions at the flot group\n')
('jqplot', 'better documentation', 'flot', '', '21896130', 'i found jqplot easier to use with more options and better documentation than flot or graphael\n')

directory	folder	35
('directory', 'more', 'folder', '', '24197390', 'i need help in a vba macro that ll delete files in a directory that contains more than 2 _ and is older than 3 months old however there are some folder sub folder in the directory that must not be touched or modified\n')
('directory', 'more', 'folder', '', '17591179', 'i have a directory that contains more than 5000 subfolders....i need to get the name of the folder in the final level..\n')
('directory', 'faster ls', 'folder', 'ftp ls head', '32341733', 'if i run ls folder | head in a directory with a lot of files the execution time is about 50 times faster than ls folder | tail\n')
('directory', 'no more', 'folder', '', '16864778', 'i m starting in the base directory and i know that the the directory goes no more than 1 folder deep past the base directory\n')
('directory', 'target', 'folder', 'ftp ls head', '34044187', 'file must be in the same or higher directory as target folder\n')
('folder', 'nothing more', 'directory', '', '45985134', 'actually adding a new resource folder does nothing more then adding it as a resource directory in build.gradle\n')
('directory', 'sa44-3 not larger then', 'folder', '', '27842314', 'i need to make sure that each of these top mail directory sa44-3 is not larger then 8gb so the script should calculate the size of each top level folder and if its over 8gb create a new one called eg\n')
('directory', 'less', 'folder', 'ftp ls head', '15032819', 'i have tested on mp3 files in different directory it takes less than one second with over 6000 files stored in different folder\n')
('directory', 'also faster', 'folder', 'ftp ls head', '23086696', 'rm -rf directory also works faster for billion of files in one folder\n')
('directory', 'less', 'folder', '', '4225772', 'test code updated so you can see that both it works identically whether using varargs or not will fail if your home directory has less than 5 sub folder\n')
('directory', 'much more tedious', 'folder', '', '44990287', 'the first option is easy with one directory but becomes much more tedious with multiple folder not to mention that windows will likely create an object in the target directory before it has finished copying and i am compressing files potentially over 10 gb so that solution won t work\n')
('directory', 'more', 'folder', '', '31870629', 'i have a directory which has more than 10 folder\n')
('folder', 'nothing more then', 'directory', '', '45985134', 'actually adding a new resource folder does nothing more then adding it as a resource directory in build.gradle\n')
('directory', 'sa44-3 not larger', 'folder', '', '27842314', 'i need to make sure that each of these top mail directory sa44-3 is not larger then 8gb so the script should calculate the size of each top level folder and if its over 8gb create a new one called eg\n')
('directory', 'better', 'folder', '', '46428335', 'and before copying the directory it is better to zip the entire stata8 folder - that will significantly reduce copying time since there are plenty of small-sized files\n')
('directory', 'much more', 'folder', '', '44990287', 'the first option is easy with one directory but becomes much more tedious with multiple folder not to mention that windows will likely create an object in the target directory before it has finished copying and i am compressing files potentially over 10 gb so that solution won t work\n')
('directory', 'more', 'folder', '', '12469246', 'i have a directory containing more than 1000 folder\n')
('directory', 'more', 'folder', '', '31065144', 'i find the best way is to create a cache session folder in your systems directory is more safer i put important things like logs and cache in system rather than application folder\n')
('directory', 'c youruser', 'folder', '', '6643790', 'go to your user directory c profiles youruser there should be a folder called .m2 may be hidden\n')
('directory', 'more', 'folder', '', '27402039', 'to navigate to f you must go to c users folder a b c d e f within each directory there are a number of .html files and potentially more than one folder also\n')
('folder', 'more', 'directory', '', '33242205', 'i have makefile .mke on windows and i need to count directory in a folder which start with install and then make if clause to throw an exception if there are more than one directory like this\n')
('folder', 'longer', 'directory', '', '44498194', 'the problem is that the dropbox folder is no longer in my user directory so r cannot find the directory.\n')
('directory', 'more safer', 'folder', '', '31065144', 'i find the best way is to create a cache session folder in your systems directory is more safer i put important things like logs and cache in system rather than application folder\n')
('directory', 'lower', 'folder', 'ftp ls head', '47611724', 'i created a php file which deals with file deleting and uploading but i this file is one directory lower than the folder for files\n')
('folder', 'more', 'directory', '', '11369555', 'on windows xp however it works fine on local file systems but when watching folder on a mapped network drive it throws an ioexception when trying to watch more than 50 directory\n')
('directory', 'more', 'folder', 'ftp ls head', '6048084', 'i would recommend placing the common files in the same directory as the solution file or no more than 1 folder deep\n')
('directory', 'more', 'folder', 'ftp ls head', '11553430', 'i am using the bash ftp command to ftp files however i have a problem where i try to create a directory that is more than 2 folder deep\n')
('directory', 'more', 'folder', '', '16864778', 'i m starting in the base directory and i know that the the directory goes no more than 1 folder deep past the base directory\n')
('folder', 'greater', 'directory', '', '29498098', 'the genisoimage man page suggests using -r or -r which has better defaults for ownership in addition since the rock ridge standard supports 255 byte file names and folder depths greater than 8 directory and is a real standard unlike joliet\n')
('directory', 'structure more', 'folder', '', '7868608', 'but my directory structure is more organized its more like app lib mypackage folder\n')
('directory', 'further deeper', 'folder', '', '34350031', 'if you really need to enter the sub-directory however you can create recursive calls and in the call you can check if the directory has further deeper folder by using directoryinfo.getdirectories\n')
('folder', 'much worse', 'directory', '', '35459067', 'btw microsoft azure storage explorer in my case showed only some subset of folder which is much worse than displaying duplicated directory so i switched to azure explorer mentioned above and it s worth recommending\n')
('folder', 'bigger', 'directory', '', '27509536', 'unfortunately the directory also is a git repository and has a .git folder in it which is much bigger than the directory itself\n')
('directory', 'more', 'folder', '', '32585533', 'so now i just want to forget this virtual directory system and make the solution explorer to be nothing more than a folder tree as it is in real just like a windows explorer\n')
('folder', 'way more', 'directory', 'ftp ls head', '26279419', 'this folder has way more than 1 directory and has a bunch of files so apparently it snot reading something correctly\n')

nfa	dfa	12
('dfa', 'better choice', 'nfa', '', '37891579', 'dfa is a better choice over nfa because it has only one transition for an input while nfa can have many\n')
('dfa', 'faster', 'nfa', 'faster compact powerful', '37892171', 'generally speaking dfa is faster but nfa is more compact\n')
('dfa', 'larger', 'nfa', '', '1408183', 'if it can be practically determinized this give you a dfa that can be exponentially larger than the nfa then by all means do that\n')
('dfa', 'more states', 'nfa', '', '3979654', 'if we express combinations of states in an nfa as states themselves we ve got a dfa with a lot more states than the nfa but which does the same thing\n')
('nfa', 'slower', 'dfa', 'faster compact powerful', '36630254', 'perl uses nfa which is slower yet more powerful than the dfa engine sed has\n')
('nfa', 'far easier', 'dfa', '', '198624', 'because representation of a given problem with a nfa is far easier than the equivalent dfa\n')
('dfa', 'better', 'nfa', '', '37891579', 'dfa is a better choice over nfa because it has only one transition for an input while nfa can have many\n')
('nfa', 'slower', 'dfa', 'faster compact powerful', '9192904', 'regex is a nfa and is as such in most cases slower than a dfa or hand-written parser\n')
('nfa', 'more expressive', 'dfa', '', '36561846', 'the net effect is that the backtracking implementations i like that name better than traditional nfa are slightly more expressive than dfa implementations because they can match regexes like which matches three or more word characters repeated twice something that can t be matched by a dfa\n')
('dfa', 'typically more complex', 'nfa', '', '30114902', 'at the same time the compilation phase for a dfa is typically more complex than for an nfa and dfas don t have all the capabilities of nfas\n')
('dfa', 'typically more', 'nfa', '', '30114902', 'at the same time the compilation phase for a dfa is typically more complex than for an nfa and dfas don t have all the capabilities of nfas\n')
('dfa', 'smaller', 'nfa', '', '1217263', 'in fact because you are eliminating the redundancy of epsilon transitions many simple dfa s actually get smaller than the nfa they represent but there is simply no way to guarantee that\n')

awt	swing	36
('swing', 'more', 'awt', '', '27302462', 'swing has more or less deprecated awt so you should extend jframe instead of frame\n')
('swing', 'more', 'awt', '', '20927462', 'swing is relatively similar to awt apart from the fact that swing has more capabilities awt is probably the simplest form to start out with and has most if not all of the tools to complete your project hope this helps\n')
('swing', 'less memory', 'awt', '', '416947', 'i mean by light weight i thought maybe the swing components occupy less memory than the awt components\n')
('awt', 'worse technology', 'swing', '', '39676981', 'alternate way is to use awt - which is an older and worse technology than swing and in that case you can t use flowlayout - it puts all the components into one row\n')
('swing', 'newer', 'awt', 'functionality advanced better', '33978735', 'swing has newer and better api s than awt\n')
('swing', 'much more', 'awt', '', '19736083', 'use a swing gui not an awt gui since swing is much more powerful and flexible than awt\n')
('swing', 'more comfortable', 'awt', '', '16509409', 'i know you re thinking why did i use awt instead of swing but at the moment i am more comfortable with awt\n')
('swing', 'better', 'awt', 'functionality advanced better', '9009156', 'swing is better and few people remember how to use awt components\n')
('awt', 'approach closer', 'swing', '', '3906154', 'the awt approach seems closer to bare metal but since jdk 6 brought a lot of improvements in swing rendering pipeline i would go the swing java2d approach\n')
('swing', 'much greater power', 'awt', '', '25959726', 'in general avoid awt for swing which has much greater power and flexibility although it too is showing its age just less so than awt\n')
('swing', 'newer', 'awt', 'functionality advanced better', '36696741', 'yes swing has newer and better api s than awt\n')
('awt', 'more', 'swing', 'useful', '408820', 'are there any cases where awt is more useful advised to use than swing or vice-versa\n')
('awt', 'more useful', 'swing', 'useful', '1090158', 'as far as when awt may be more useful than swing -\n')
('swing', 'buggier', 'awt', '', '2994324', 'performance swing components are generally slower and buggier than awt due to both the fact that they are pure java and to video issues on various platforms\n')
('awt', 'more experience', 'swing', '', '42168264', 'awt is really out of date people have more experience with swing no days and even javafx\n')
('swing', 'much more powerful', 'awt', '', '19736083', 'use a swing gui not an awt gui since swing is much more powerful and flexible than awt\n')
('swing', 'far better then', 'awt', 'functionality advanced better', '21215282', 'swing is far better then awt and should be educated to people who is writing gui-based java for the first time\n')
('awt', 'more', 'swing', '', '13889116', 'swing will save your more time than awt as all the code of components of swing are purely written in java whereas of awt code of components are written in native language that is other than java thus compilation time of awt is more than swing\n')
('swing', 'far better', 'awt', 'functionality advanced better', '9996090', 'swing is far better than the obsolete awt library\n')
('swing', 'library easier', 'awt', '', '30424479', 'i find that the swing library is easier to use than awt although you do still have to use awt for listeners\n')
('awt', 'faster', 'swing', 'functionality advanced better', '12145525', 'its was said that awt is faster than swing as it uses the platform component but due the arrival of faster processor etc ..\n')
('swing', 'more capabilities', 'awt', '', '20927462', 'swing is relatively similar to awt apart from the fact that swing has more capabilities awt is probably the simplest form to start out with and has most if not all of the tools to complete your project hope this helps\n')
('swing', 'library much more portable', 'awt', '', '30424479', 'the swing library is much more portable than the awt library\n')
('swing', 'more efficient', 'awt', '', '20846514', 'generally swing is more efficient and advanced than awt\n')
('swing', 'more', 'awt', '', '20846514', 'generally swing is more efficient and advanced than awt\n')
('swing', 'richer', 'awt', 'functionality advanced better', '2044311', 'well swing is richer in terms of out-of-the-box components than awt\n')
('swing', 'better', 'awt', '', '7069984', 'note first there is no combobox item in awt there is jcombobox in swing which is better to use than choice of awt\n')
('swing', 'library much more', 'awt', '', '30424479', 'the swing library is much more portable than the awt library\n')
('swing', 'newer', 'awt', 'functionality advanced better', '21279086', 'you can read all over the web that awt is old and deprecated and swing is old but newer than awt and should be preferred over awt whenever possible\n')
('swing', 'more', 'awt', 'functionality advanced better', '2377467', 'in swing has more features than the awt components\n')
('swing', 'much greater', 'awt', '', '25959726', 'in general avoid awt for swing which has much greater power and flexibility although it too is showing its age just less so than awt\n')
('swing', 'much better performance', 'awt', 'functionality advanced better', '16289744', 'consider using swing which has much better performance over the old heavyweight awt\n')
('swing', 'more time', 'awt', '', '13889116', 'swing will save your more time than awt as all the code of components of swing are purely written in java whereas of awt code of components are written in native language that is other than java thus compilation time of awt is more than swing\n')
('swing', 'more', 'awt', 'functionality advanced better', '43499648', 'it has functionality the same as a canvas but swing is more advanced and has better features than awt\n')
('swing', 'better', 'awt', 'functionality advanced better', '29239458', 'swing or javafx would be better than awt\n')
('swing', 'more onerous', 'awt', '', '12426434', 'use swing follow the threading rules which are hardly likely to be more onerous than awt and enjoy\n')

mp4	webm	9
('mp4', 'implementation more', 'webm', '', '25829657', 'the mp4 implementation is more widely used and wouldn t require a webm fallback in most browsers\n')
('webm', 'faster standard', 'mp4', '', '42486772', 'probably webm will load faster than standard mp4 but i am not so familiar with webm format\n')
('webm', 'usually more robust', 'mp4', '', '24958247', 'webm is usually more robust than mp4 which can be all over the place\n')
('mp4', 'implementation more widely', 'webm', '', '25829657', 'the mp4 implementation is more widely used and wouldn t require a webm fallback in most browsers\n')
('webm', 'more robust', 'mp4', '', '24958247', 'webm is usually more robust than mp4 which can be all over the place\n')
('webm', 'usually more', 'mp4', '', '24958247', 'webm is usually more robust than mp4 which can be all over the place\n')
('mp4', 'smaller', 'webm', '', '23775693', 'i tried mp4 and webm and sometimes the file size after i convert to mp4 is smaller than webm but it is also sometimes larger than the original file size\n')
('mp4', 'faster', 'webm', '', '30801590', 'also it looks like when i transcode webm to mp4 2.7 is 30 faster than webm\n')
('webm', 'better', 'mp4', '', '32770855', 'the ogv version of the video seems to run a little better than the webm which itself seems to run better than the mp4\n')

geocode	geocoding	6
('geocode', 'more', 'geocoding', '', '7987892', 'can the geocode gem support more than one geocoding step\n')
('geocoding', 'better', 'geocode', '', '42536489', 'the geocoding api works better than geocode normally but has usage limits and the implementation is bigger\n')
('geocoding', 'more reliable', 'geocode', '', '26094097', '2 location + reverse geocoding - seems more reliable but requests location services on the device does it work on wifi only tablets and for it to be enabled and requires time to a fetch location b server call to reverse geocode\n')
('geocoding', 'api better', 'geocode', '', '42536489', 'the geocoding api works better than geocode normally but has usage limits and the implementation is bigger\n')
('geocoding', 'more', 'geocode', '', '26094097', '2 location + reverse geocoding - seems more reliable but requests location services on the device does it work on wifi only tablets and for it to be enabled and requires time to a fetch location b server call to reverse geocode\n')
('geocode', 'more enough', 'geocoding', '', '47124371', 'i had a similar problem using ggmap geocode for a batch of locations where roughly 20 of locations gave the over query limit error even though geocodequerycheck would show more than enough geocoding queries remaining and the errors were sporadically spread throughout the locations not just the last 20\n')

qplaintextedit	qtextedit	3
('qplaintextedit', 'better', 'qtextedit', '', '32826981', 'if you want to display your file as plain text the widget qplaintextedit is better then qtextedit\n')
('qplaintextedit', 'better then', 'qtextedit', '', '32826981', 'if you want to display your file as plain text the widget qplaintextedit is better then qtextedit\n')
('qplaintextedit', 'smaller', 'qtextedit', '', '11788422', 'i have tried connecting the qscrollbars but the maximum of the qplaintextedit is smaller than the qtextedit s\n')

double	int	150
('double', 'larger', 'int', 'larger range bigger', '20732505', 'a double is 1 typically larger than an int and 2 has some internal structure\n')
('double', 'little less', 'int', 'faster slower machine', '35802753', 'you will get 24 if pow 10 2 returns a double that is little less than 100 99.9999999998765 which when cast to int would be truncated resulting in 99 and thus you get\n')
('int', 'range much smaller', 'double', 'larger range bigger', '27334337', '1 int range is much smaller than double and for pow 2 100 that fails\n')
('int', 'better', 'double', 'better match overload', '22307506', 'imho int looks better than double in your task\n')
('int', 'more precsion', 'double', 'precision general precise', '38865387', 'this is important because if the int needs more precsion than 52-bits the precision is too low for a double\n')
('double', 'more precision', 'int', 'precision general precise', '29687757', 'double doesn t have infinite precision and you can t gain more precision than a double has by converting a double to a bigdecimal like you can t gain more precision with an int when you do which is 0.0 because it widens an int to a double\n')
('double', 'less', 'int', 'aware inexactness inexact', '23666565', 'as far as i m aware so long as the spacing between two double is less than 2 then int values stored as double should be exact - and though 10 14 is pushing it this should be an exact int since 10 14 2 46.507 2 53\n')
('double', 'less', 'int', 'faster slower machine', '526070', 'similarly when i cast a double that is less than the minimum possible int i also get -2147483648\n')
('double', 'lower ranges', 'int', 'type lower rank', '25831721', 'if we use float data type in java we have to add f at the end of floating point literal as java assumes it to be double data type and gives an error why not do the same for short and byte as both have lower ranges than int\n')
('int', 'larger', 'double', 'larger range bigger', '4391609', 'your upccode int is larger than the long data type so i tried it with double which is a float but works\n')
('double', 'higher', 'int', 'larger range bigger', '43723712', 'if your resulting double has higher int value then simple int math sometimes stops working\n')
('int', 'faster', 'double', 'difference clock cycles', '16298551', 'the difference is that int are still faster than double because it takes very few clock cycles to do arithmetic operations on int\n')
('int', 'smaller sizeof', 'double', 'larger range bigger', '24146146', 'since sizeof int is very probably smaller than sizeof double this is going to lead to horror\n')
('double', 'more precision', 'int', 'precision general precise', '35525303', 'double can hold more precision than int\n')
('int', 'more', 'double', 'specific void first', '2521374', 'by contrast void doitagain int is more specific than void doitagain double because int is a subtype of double according the the jls\n')
('double', 'bigger', 'int', 'larger range bigger', '20354046', 'you can convert your object into double and then into int but you should take care as double value is much bigger than int\n')
('double', 'larger', 'int', 'larger range bigger', '20181170', 'many processors and or compilers implement long double types larger than any int type regardless of name and there are processors with 32 byte pointers\n')
('int', 'smaller', 'double', 'larger range bigger', '13032415', 'and since float is typically promoted to double with varargs calls if your int is smaller than your double this will break\n')
('double', 'bigger', 'int', 'larger range bigger', '26690571', 'a double is bigger than an int\n')
('double', 'more', 'int', 'larger range bigger', '30079823', 'operations on float and especially double cost more than on int\n')
('double', 'value also larger', 'int', 'larger range bigger', '511928', 'the largest double value is also larger than the largest int so it would have to be a long\n')
('double', 'smaller', 'int', 'larger range bigger', '38606192', 'that means a float will be a double and anything smaller than an int will be an int\n')
('double', 'wider range', 'int', 'larger range bigger', '5694078', 'also given that double has a wider range what would one return for those out of range int values\n')
('double', 'smaller', 'int', 'larger range bigger', '32021034', 'in the third case double precision loss is much smaller than the int and you get something like\n')
('int', 'faster', 'double', 'faster slower machine', '37742530', 'maybe division between double and int is faster than it between double\n')
('int', 'better results', 'double', 'better match overload', '5787578', 'if you use int between -128 and 127 you will get much better results than double from -128 to 127 because the former uses caches values the later does not\n')
('int', 'smaller range', 'double', 'larger range bigger', '42537385', 'int or int32 has a much smaller range than double\n')
('int', 'type larger', 'double', 'larger range bigger', '12323870', 'you need to use 2 even if the number of bits in your int type is larger than the precision of a double since the number of used bits in the most significant value might only be 1\n')
('int', 'slower', 'double', 'faster slower machine', '7896213', 'with it is nub on and comparing big int is slower than comparing double\n')
('int', 'greater', 'double', 'precision bits actual', '22740584', 'if a 64-bit long is written as an int and is greater than 2 53 ieee double has a 52-bit mantissa then reading it as a double will lose precision\n')
('int', 'more specific', 'double', 'specific void first', '42046449', 'we could check that void mymethod int i is more specific than void mymethod double a if any invocation handled by the first method can be passed on to the other one without a compile-time type error\n')
('double', 'better', 'int', 'precision general precise', '21886861', 'double is better than int though as it will help you keep precision\n')
('double', 'larger', 'int', 'likely overruns bear', '33913731', 'bear in mind that if the double returned is larger or smaller than that which can be held in an int then the program behaviour is undefined\n')
('double', 'bigger', 'int', 'larger range bigger', '2386794', 'the double has a bigger mantissa the int bits of the real number\n')
('double', 'more', 'int', 'precision general precise', '15770825', 'but this isn t true because double is more general than int and therefore int is the most-specific option in this case\n')
('double', 'larger 64-bit', 'int', 'larger range bigger', '21071959', 'typically a double is 64-bit ieee floating point with roughly 52 bits precision and with range much larger than 64-bit int so magnitude is no problem\n')
('int', 'better', 'double', 'larger range bigger', '35717845', 'it would really depend on the processor and the range of the int which is better and using double would resolve most of the range issues\n')
('double', 'value bigger', 'int', 'larger range bigger', '37956224', 'i wanted to check if a double value is bigger than maximum int value but because converting function does not return an optional value i am not be able to check by using optional binding\n')
('int', 'faster', 'double', 'faster slower machine', '24159693', 'int subtractions are 2.5 times faster than double subtractions on my machine\n')
('int', 'narrower', 'double', 'narrower type positive', '19591563', 'i believe the following works as a sort comparison function for positive int provided the int type used is substantially narrower than the double type 32-bit int and 64-bit double and the log10 routine used returns exactly correct results for exact powers of 10 which a good implementation does\n')
('int', 'lower', 'double', 'type lower rank', '18709820', 'num is a of type const int which is of lower rank when compared to the type of z which is double\n')
('int', 'better', 'double', 'performance better version', '29631941', 'byte takes less memory than double and int and provides better performance than bigger datatypes especially better than double\n')
('double', 'not bigger', 'int', 'larger range bigger', '16268270', 'this will work as long as the double is not bigger than what can fit in an int\n')
('int', 'types more instructions', 'double', '64-bit instructions equivalent', '6385312', 'on a 32-bit machine doing addition and comparison on 64-bit int types takes more instructions than doing the equivalent on double s\n')
('double', 'larger', 'int', 'larger range bigger', '35973092', 'if you are not storing infinity nowhere and use it just for comparison you can use double infinity which is larger than int and long max value\n')
('int', 'range wider', 'double', 'larger range bigger', '41360457', 'can be false when int range is wider than double uncommon and dx is a rounded value whose next higher representable value to 2 greater\n')
('int', 'type substantially narrower', 'double', 'narrower type positive', '19591563', 'the int portions of the logarithms of 31 and 310 use different numbers of bits so there are different numbers of bits left for the significand so they end up being rounded to slightly different values. as long as the int type is substantially narrower than the double type the calculated limit will be much larger than the error in log10\n')
('double', 'bigger numbers', 'int', 'larger range bigger', '25060840', 'clearly calling int x on a double is asking for trouble since double can store bigger numbers than int\n')
('double', 'far greater', 'int', 'larger range bigger', '605547', 'another reason is that the range of double is far greater than that of int\n')
('int', 'smaller', 'double', 'larger range bigger', '8103414', 'in vararg functions such as printf int smaller than int are promoted to int and floats smaller than double are promoted to double\n')
('int', 'less space', 'double', 'space memory outofmemory', '17383440', 'i don t understand how an int 63823 takes up less space than a double 1.0\n')
('int', 'indeed more', 'double', 'specific void first', '42046449', 'an implicit conversion from byte to int is indeed more specific than an implicit conversion from byte to double according to widening primitive conversions rules\n')
('double', 'range more', 'int', 'precision bits actual', '2582032', 'double has range more than a 64-bit int but its precision is less dues to its representation since double is 64-bit as well it can t fit more actual values\n')
('double', 'slower', 'int', 'faster slower machine', '16741312', 'incrementing the value might be a special case but it s possible that on your machine incrementing double is slower than incrementing int\n')
('double', 'much wider', 'int', 'larger range bigger', '1348958', 'the range of double is much wider than the range of int or long\n')
('double', 'more general type', 'int', 'precision general precise', '19823940', 'double can in a way be seen as a more general type than int\n')
('int', 'lower', 'double', 'type lower rank', '13589067', 'so no arguments after the 1st one get automatically converted except as defined by default argument conversions basically any int type with a rank lower than int to int and any floating-point type with a rank lower than double to double thank you pascal cuoq\n')
('double', 'bigger maximum', 'int', 'larger range bigger', '37956224', 'i know that there s another way to check if a double number is bigger than maximum int value but i m curious as why it s happening this way\n')
('double', 'higher values', 'int', 'type lower rank', '17379031', 'to prevent the code from overflowing the int value space you should could change the type of res to double long anything that can hold higher values than int\n')
('double', 'larger', 'int', 'larger range bigger', '27064252', 'you do explicit type casting to get your result in int because double is a larger data-type than int\n')
('int', 'less precise', 'double', 'precision general precise', '36801182', 'since int is less precise than double i thought i needed to cast it when parsing it into a method\n')
('double', 'array less', 'int', 'larger range bigger', '43258026', 'if a value in the double array is less than the int value at the same position of the two dimensional array then in that part of the boolean array the value would is true\n')
('int', 'faster', 'double', 'faster slower machine', '24159693', 'int multiplications however are only 1.5 times faster than double multiplications\n')
('int', 'less', 'double', 'length value', '35931486', 'or a value for int a that is 6 less than double c\n')
('double', 'bigger', 'int', 'larger range bigger', '39108379', 'double is much bigger than int\n')
('int', 'much smaller', 'double', 'larger range bigger', '4181954', 'don t forget that the range of int is much smaller than the range of double\n')
('double', 'more', 'int', 'length value', '22203178', 'double s length is way more than int that s why you should be checking int first\n')
('int', 'smaller', 'double', 'larger range bigger', '45198135', '4 + 4 since int is smaller size compared to double padding of double size is done\n')
('double', 'greater precision', 'int', 'larger range bigger', '25636405', 'and the second calculation 33 5.0 the result is actually promoted to double which has greater precision than int and resulted to decimal\n')
('double', 'larger', 'int', 'larger range bigger', '34400483', 'because a double is larger than an int this accesses the 4 bytes of the original int and an extra 4 bytes on the stack\n')
('int', 'slower', 'double', 'faster slower machine', '10107000', 'even dividing int is slower than multiplying floats or double in some cases\n')
('double', 'precision less bits', 'int', 'precision bits actual', '38489471', 'however if you have large enough number the limit checking does not work because 64bit double precision has less bits usually 54 but this is not defined in standard for the fractions part than a 64bit int\n')
('double', 'less specific', 'int', 'specific void first', '42050694', 'so overloadedsingleparam double a is less specific than void overloadedsingleparam int a when an int value is passed as argument\n')
('int', 'quicker float', 'double', 'solution small fractions', '11286328', 'a solution using int only calculations should be quicker than float double calculations is\n')
('double', 'larger', 'int', 'larger range bigger', '29017088', 'when the result of math.pow i j a double is larger than integer.max_value and you cast to an int then the result is integer.max_value\n')
('double', 'larger', 'int', 'parameter sizeof greater', '44542353', 'the undefined behaviour as identified in other answers is explained on my intel platform with vc as that the f format specifier expects a double on the stack which is larger than an int so when it retrieves the value it retrieves more bytes than of an int and now assumes the next parameter at a diferent position on the stack causing z to be printed wrong it is not z that is printed\n')
('int', 'smaller', 'double', 'parameter sizeof greater', '23953851', 'it doesn t matter if second member would be int short or whatever - as long as it is smaller than double sizeof struct will be 16\n')
('int', 'faster', 'double', 'performance better version', '45876593', 'the versions using diff are especially impacted ave_diff with int constants is about 2.5 times faster than the double contants version\n')
('double', 'less', 'int', '64-bit instructions equivalent', '3481367', 'that wouldn t work on platforms where a double is less than 64 bits but it would work on many platforms without 64-bit int\n')
('double', 'larger', 'int', 'larger range bigger', '12015986', 'double is larger than an int hence the overflow\n')
('int', 'better', 'double', 'performance better version', '14285655', 'note how i cast the result to int which is better suited for years than the double precision returned by extract\n')
('int', 'greater', 'double', 'larger range bigger', '32134782', 'what i need to do it iterate over a list find the first int which is greater than 3 and is even then just double it and return it\n')
('double', 'smaller', 'int', 'larger range bigger', '10789396', 'you could try to add some value to the double to make sure it s bigger or smaller than an int can be\n')
('double', 'much slower', 'int', 'faster slower machine', '15298409', 'double is much slower than int\n')
('int', 'larger', 'double', 'larger range bigger', '43662319', 'for platforms where int is larger than double it s obviously false\n')
('double', 'larger', 'int', 'larger range bigger', '30706940', 'because a double which f expects probably is larger than an int on your platform\n')
('double', 'less', 'int', 'precision general precise', '36164348', 'further the precision of double may be less than int introducing other problems\n')
('int', 'better', 'double', 'better match overload', '28466553', 'with gcc 4.9 it prints error because the second overload isn t discarded and int is a better match than double\n')
('double', 'larger numbers', 'int', 'larger range bigger', '5693480', 'because double can contain larger numbers than int or long\n')
('int', 'better', 'double', 'better match overload', '27318100', 'is simply a hard error because f int is a better match than f double even though the f int overload causes a hard error further on\n')
('int', 'faster pow', 'double', 'faster slower machine', '25354205', 'this can t help performance either since pow double int is significantly faster than pow double double in general\n')
('double', 'bigger', 'int', 'larger range bigger', '10951622', 'one of long long and double is bigger than 3 int and a multiple of 8\n')
('double', 'way greater', 'int', 'larger range bigger', '605544', 'the range of double is way greater than the range of 32 or 64 bit int which is why std floor returns a double\n')
('double', 'smaller values', 'int', 'larger range bigger', '32946829', 'another option would be to add a cast not recommended due to the same loss of information the error warns you about - the fractional part will simply be removed from the value and double can hold way larger and smaller values than int\n')
('double', 'faster', 'int', 'faster slower machine', '594466', 'so i asked myself can a double be faster than a int\n')
('double', 'bigger', 'int', 'larger range bigger', '10556878', 'a double is also probably bigger than an int\n')
('double', 'bigger', 'int', 'larger range bigger', '32663774', 'if you tell it the top of the stack has a double and double is bigger than int you ve now just told it to take extra bytes off of the stack which is terrible\n')
('int', 'slower code', 'double', 'difference clock cycles', '2242618', 'using and at the same time to check equality on a int results in slower code because it takes two comparisons instead of one taking the double amount of time\n')
('double', 'precision much more complex', 'int', 'arithmetic complex modern', '3632503', 'as for the last question floating point arithmetic particularly double precision is much more complex than int arithmetic so on a reasonably modern pipelined processor each instruction will take longer to execute\n')
('int', 'more efficient', 'double', 'arithmetic complex modern', '7998350', 'if you want the modulus use as it gives an int and would be more efficient than double arithmetic\n')
('int', 'greater', 'double', 'larger range bigger', '6297636', 'you should be using math.ceiling which will return the smallest int value that is greater than the double passed in\n')
('double', 'larger range', 'int', 'larger range bigger', '39937154', 'if one of the operands is a double the result of the multiplication would be a double which allows for a much larger range than an int\n')
('double', 'higher precision', 'int', 'type lower rank', '19565419', 'you can assign the int s returned from integer.parseint string s to your double variables because double s are higher precision than int s and so type conversion happens automatically without the need for an explicit cast\n')
('int', 'less memory', 'double', 'largest form equal', '13566079', 'typically an int will use less memory than a double that is why one doesn t just use the largest possible datatype\n')
('int', 'less specific', 'double', 'specific void first', '25924211', 'this is java detecting what you are doing and thinking it may be a mistake on your part - int s are less specific than double s\n')
('double', 'more inexact', 'int', 'aware inexactness inexact', '14701685', 'about the inexactness problem you should be aware that double can be more inexact than int\n')
('int', 'much less', 'double', 'precision general precise', '45266203', 'indeed fact is limited by the range of type unsigned int which is much less than the precision of type long double\n')
('double', 'less', 'int', 'larger range bigger', '15949536', 'you really might need to up cast everything into a double and then check to see if the result is greater than or less than an int\n')
('double', 'better fit', 'int', 'better match overload', '38239419', 'so your compiler picks the double constructor as a better fit than the int one\n')
('int', 'smaller range', 'double', 'larger range bigger', '1696724', 'int can hold a smaller range than double\n')
('double', 'greater', 'int', 'parameter sizeof greater', '38741563', 'this causes a referencing to a memory area that was not completely initialized with value passed as parameter to the printf because double size memory buffer area is greater than int size\n')
('double', 'greater sizeof', 'int', 'parameter sizeof greater', '11321381', 'alternatively if fieldsize is equal to sizeof double and sizeof double is greater than sizeof int then you are writing off the end of d_buffer and then something is corrupting your data\n')
('int', 'math faster', 'double', 'faster slower machine', '31346703', 'often using int math is faster than double\n')
('int', 'more bits', 'double', 'precision bits actual', '14313668', 'you can work around this issue if you ll advance to big int floating point numbers that store more bits than a double precision number\n')
('int', 'smaller rank', 'double', 'type lower rank', '25343540', 'for historical reasons you can not pass an int argument of smaller rank than int or a floating type of smaller rank than double to a variadic function\n')
('double', 'shorter', 'int', 'larger range bigger', '43554894', 'note that when float values are passed to printf they are automatically converted to double just as numeric types shorter than int are promoted to int\n')
('double', 'greater value', 'int', 'larger range bigger', '5693478', 'double has a greater value range than int\n')
('double', 'larger type', 'int', 'larger range bigger', '12931816', 'the math.round double a method returns a long which is a larger type than int\n')
('double', 'bigger', 'int', 'larger range bigger', '18580095', 'you could try using double which is bigger than a long and use only the int part\n')
('int', 'better', 'double', 'performance better version', '36965719', 'well in multithread the performance of the int version is 2.6 times better than the double precision\n')
('double', 'more space ints-an', 'int', 'space memory outofmemory', '1935145', 'you re getting the outofmemory because if you declare int 1000 the memory is allocated immediately additionally double take up more space than ints-an int representation will also save you space\n')
('double', 'bigger', 'int', 'solution small fractions', '2551657', 'edit actually my solution does not work because double can be very big much bigger than int and also very small like fractions\n')
('int', 'less', 'double', 'largest form equal', '3027395', 'it implicitly converts an int to a double gets the double form of largest int that is less or equal to that double and converts that back to an int\n')
('double', 'larger values', 'int', 'larger range bigger', '8424026', 'a double variable can hold larger values than an int and is able to store an approximation of the value 4000000000\n')
('double', 'faster', 'int', 'faster slower machine', '12443760', 'on my machine the double swap loop completes 11 times faster than the int swap loop\n')
('double', 'smaller', 'int', 'larger range bigger', '5772391', 'these conversions promote float to double and anything smaller than int to int or unsigned int\n')
('double', 'greater', 'int', 'larger range bigger', '41806502', 'a double has a range that can be greater than any int type\n')
('double', 'bigger', 'int', 'likely overruns bear', '11001264', 'with the cast that bad stuff is undefined behavior most likely double is bigger than int and it overruns the memory for i\n')
('double', 'greater', 'int', 'larger range bigger', '12314984', 'since double is greater that int and long int and long will be turned into double in double long and int double\n')
('int', 'less', 'double', 'space memory outofmemory', '14638096', 'int takes less space than double on ram\n')
('int', 'less', 'double', 'closest math.ceil math.floor', '7472356', 'you can also use math.floor double to get the closest int that is less than the double\n')
('double', 'more', 'int', 'precision general precise', '25924215', 'you used the double to calculate an int result the double is more precise than the int so you lost precision\n')
('double', 'smaller', 'int', 'larger range bigger', '24119742', 'this imply that result of pow x y converted to int will be truncated because of double arithmetic and exponentiation that will return double value slightly smaller than int\n')
('int', 'more', 'double', 'precision bits actual', '9447869', 'as soon as the int needs more than 29 bits the atom is changed by the vm into a number type which is really represented as a 29 bit pointer to the actual 64 bit double precision float\n')
('int', 'less space', 'double', 'space memory outofmemory', '14674829', 'int would take up less space than a double\n')
('double', 'higher', 'int', 'larger range bigger', '2625948', 'because a double is higher it will merge the int into the 0.0\n')
('double', 'higher', 'int', 'larger range bigger', '40734664', 'and if the value of your double is higher than the range of an int then this can produce undefined behavior\n')
('double', 'bigger maximum', 'int', 'larger range bigger', '37956224', 'so if i try to convert a double number bigger than maximum int it crashes instead of returning nil\n')
('int', 'more specific', 'double', 'specific void first', '19436196', 'i thought when i pass 1 as the argument java would have picked the first argument because int is more specific than double\n')
('int', 'less memory', 'double', 'space memory outofmemory', '21528753', 'int needs less memory comparing to double numbers\n')
('double', 'greater', 'int', 'larger range bigger', '526070', 'today i noticed that when i cast a double that is greater than the maximum possible int to an int i get -2147483648\n')
('int', 'better performance', 'double', 'performance better version', '3676567', 'i m writing a c# class to perform 2d separable convolution using int to obtain better performance than double counterpart\n')
('int', 'smaller', 'double', 'larger range bigger', '28683183', 'extra arguments to variatic functions with types smaller than int are promoted to int and passed as such and floating point types smaller than double are promoted to double and passed as such\n')
('double', 'better', 'int', 'better match overload', '17306689', 'except that double is much better than int for storing the join_angle in radians\n')
('int', 'more', 'double', 'closest math.ceil math.floor', '7472356', 'or math.ceil double which returns the closest int that is more than the double\n')
('double', 'wider', 'int', 'larger range bigger', '26209492', 'the range of double is wider than int\n')
('double', 'more', 'int', 'precision general precise', '3878773', 'a double is a more precise type than an int in a general manner of speaking\n')
('int', 'more specific', 'double', 'specific void first', '32293611', 'this behaviour is due to the fact that int is more specific than double while there is no such comparison between int and boolean\n')
('double', 'slower manipulations', 'int', 'faster slower machine', '41633258', 'also after the first coercion from a side effect of a benchmark as noted above r will operate on double s and that contains slower manipulations than on int s\n')
('int', 'smaller', 'double', 'precision bits actual', '31627536', 'since an int is representing by a non-decimal number 1 and a double is represented by a decimal-number with precision 32 bytes more than that of a float 1.0 we can say that int s are less than or smaller than double s and by that logic int s can be promoted to double s and double s can be demoted to int s\n')

uicollectionview	uitableview	5
('uicollectionview', 'more', 'uitableview', '', '28599198', 'uicollectionview is more generic than uitableview and you can custom almost thing on it\n')
('uicollectionview', 'more generic', 'uitableview', '', '28599198', 'uicollectionview is more generic than uitableview and you can custom almost thing on it\n')
('uicollectionview', 'more', 'uitableview', '', '35645665', 'instead of using a uitableview in this instance perhaps you might consider using a uicollectionview - they are built for something like you describe more than a uitableview\n')
('uicollectionview', 'better candidate', 'uitableview', '', '22944159', 'on second thoughts in your case uicollectionview is surely a better candidate than uitableview\n')
('uicollectionview', 'more visual flexibility', 'uitableview', '', '22590525', 'finally you might want to look into uicollectionview which provides a lot more visual flexibility than uitableview and can be seen as a sort of generalization of the latter\n')

pagespeed	yslow	3
('pagespeed', 'better', 'yslow', '', '27689780', 'imho pagespeed is better than yslow\n')
('pagespeed', 'better', 'yslow', '', '584890', 'in my testing so far google s pagespeed addon is far and above much better than yslow\n')
('yslow', 'more reliable', 'pagespeed', '', '19182412', 'i use firefox with firebug and yslow and think it s more reliable than pagespeed\n')

nexus	artifactory	4
('nexus', 'better choice', 'artifactory', '', '8953059', 'nexus looks better choice than artifactory because of using filesystem instead of database to keep repository\n')
('artifactory', 'better', 'nexus', '', '15488729', 'i would recommend artifactory much better than the nexus\n')
('nexus', 'better', 'artifactory', '', '8953059', 'nexus looks better choice than artifactory because of using filesystem instead of database to keep repository\n')
('nexus', 'better', 'artifactory', '', '15226169', 'i will not argue why and if nexus is better than artifactory as it would not be fair and would only cause flame wars\n')

cin	cout	3
('cin', 'printf faster', 'cout', 'little preferable situations', '780111', 'scanf is faster than cin printf is faster than cout etc\n')
('cin', 'more practical', 'cout', 'little preferable situations', '14757282', 'there are obviously situations where in c++ scanf is preferable to cin i was wondering if there are any situations where printf is more practical than cout\n')
('cout', 'faster', 'cin', 'little preferable situations', '22112628', 'using printf isn t faster than cout but scanf is a little faster than cin 0.04s + - 0.05\n')

macports	fink	5
('fink', 'reputedly more stable', 'macports', 'stable top access', '4527378', 'because fink is reputedly more stable than macports and has many more packages\n')
('fink', 'more packages', 'macports', 'stable top access', '3822232', 'fink has more packages than macports\n')
('fink', 'more packages', 'macports', 'stable top access', '4396834', 'on top of that fink gives you access to more packages than macports\n')
('macports', 'more', 'fink', '', '388422', 'i second macports it is more up to date than fink and closer to the freebsd ports system where i come from\n')
('macports', 'less reliable', 'fink', '', '4396834', 'since i have seen many reports of the macports package manager being less reliable than the fink package manager i would suggest installing fink and then simply doing\n')

cudnn	theano	4
('cudnn', 'version more recent', 'theano', '', '42335562', 'userwarning your cudnn version is more recent than the one theano\n')
('cudnn', 'version more', 'theano', '', '46502997', 'usr local lib python2.7 dist-packages theano sandbox cuda init .py 600 userwarning your cudnn version is more recent than the one theano officially supports\n')
('cudnn', 'version more recent', 'theano', '', '46502997', 'usr local lib python2.7 dist-packages theano sandbox cuda init .py 600 userwarning your cudnn version is more recent than the one theano officially supports\n')
('cudnn', 'version more', 'theano', '', '42335562', 'userwarning your cudnn version is more recent than the one theano\n')

landscape	portrait	32
('landscape', 'smaller', 'portrait', 'screen mode smaller', '39829397', 'your imageview in landscape is smaller than portrait\n')
('portrait', 'lower', 'landscape', 'screen mode smaller', '3222095', 'without more detail it s hard to say why your approach doesn t work but my guess is that you are seeing the sprite positioning you describe as a result of the fact that if you don t change orientation the lower left in portrait is the lower right in landscape when rotated left it s the same point in gl space 0 0\n')
('landscape', 'larger', 'portrait', 'screen mode smaller', '38283302', 'i had an outlet of a viewgraph which was a subclass of uiview in which i drew some graphics.in landscape mode the size of the viewgraph is larger than in portrait mode\n')
('portrait', 'mode less', 'landscape', 'screen mode smaller', '15405098', 'now my doubt is when i rotate it to portrait mode from landscape mode since the width of the textblocks present inside the itemtemplate of listbox is already defined when i rotate the it to portrait i am not able to see all the data present it cuts off since the width of the portrait mode is less when compared to landscape mode\n')
('landscape', 'bigger', 'portrait', 'screen mode smaller', '35218575', 'you are using the screen size to generate your placeholder image and the width of the screen in landscape is bigger than portrait\n')
('portrait', 'choppier', 'landscape', 'screen mode smaller', '11651304', 'if you switch between portrait and landscape when viewing this on an ipad3 you ll need to refresh the browser window between switches you can see that portrait mode is choppier than landscape\n')
('portrait', 'orientation better', 'landscape', '', '22694615', 'currently i m using only the portrait orientation for all devices but the portrait orientation looks better on phones meanwhile landscape orientation looks better on tablets\n')
('landscape', 'cell much wider', 'portrait', 'css nothing images', '28429494', 'the difference between a min and max dimension can be very large as the given area covered by a landscape cell is much wider and shorter than a portrait cell\n')
('landscape', 'view less', 'portrait', '', '2952593', 'or the tableview is covering it up because the landscape view has less vertical room than the portrait view\n')
('portrait', 'more rows', 'landscape', 'screen mode smaller', '15130794', 'portrait mode can display more rows than in landscape mode\n')
('landscape', 'less', 'portrait', 'screen mode smaller', '43578371', 'on an iphone compact in landscape mode the status bar is hidden and the navigation bar height is less than in portrait\n')
('portrait', 'mode greater', 'landscape', 'screen mode smaller', '19364430', 'the amount of spacing to the right of the uiview when in portrait mode is greater than i want for landscape mode and the distance from the bottom is less than i want for landscape mode\n')
('landscape', 'smaller', 'portrait', '', '33138747', 'but the only thing i get is that the activity is still in landscape but the rectangle now is smaller with the portrait dimensions and the camera becomes weird because the image is rotated 90 degrees and moves down when i move the phone left and up when moving the phone right\n')
('landscape', 'lesser space', 'portrait', 'css nothing images', '34962474', 'as landscape has lesser space than portrait you are able to view only top scrollview so only that portion would be scrollable\n')
('portrait', 'smaller', 'landscape', 'screen mode smaller', '13646497', 'obviously i want in portrait view the content area of this iframe to be smaller than in landscape\n')
('landscape', 'webview way higher', 'portrait', '', '18352012', 'you may try to listen to uideviceorientationdidchangenotification within your subclass cell to rotate the webview and within your view controller with the table view and run a -reloaddata on your table view in order to properly resize the cells assuming the landscape webview is way higher than the portrait webview\n')
('portrait', 'taller', 'landscape', 'css nothing images', '34425898', 'i am trying to make all a row of 4 images all have the same height size i already tried to play around with the width and height using css but nothing seems to work the portrait images always end up taller than the landscape ones here s the code\n')
('landscape', 'smaller', 'portrait', 'screen mode smaller', '7752076', 'because in landscape your height is smaller than in portrait you need to have a value smaller than 1.0\n')
('portrait', 'taller', 'landscape', 'css nothing images', '29357275', 'portrait is taller landscape is wider\n')
('landscape', 'mode lower then', 'portrait', 'screen mode smaller', '45437891', 'you have this issue because height in landscape mode is lower then in portrait\n')
('landscape', 'view less vertical', 'portrait', '', '2952593', 'or the tableview is covering it up because the landscape view has less vertical room than the portrait view\n')
('landscape', 'more horizontal space', 'portrait', 'css nothing images', '45057795', 'i want all of the images to fit inside the width of the text area which will change dynamically with the window size and i want them all to be the same height meaning of course that landscape images take up more horizontal space than portrait ones etc\n')
('landscape', 'more space', 'portrait', 'screen mode smaller', '32267160', 'in portrait the spacing is decent but in landscape mode i feel like the graphs should be bigger and take up more space than in portrait mode which is simply not possible with the tab bar and navigation bar\n')
('landscape', 'more', 'portrait', 'screen mode smaller', '40165509', 'in landscape it has more buttons in addition to what is there in portrait mode\n')
('landscape', 'higher', 'portrait', '', '18352012', 'you may try to listen to uideviceorientationdidchangenotification within your subclass cell to rotate the webview and within your view controller with the table view and run a -reloaddata on your table view in order to properly resize the cells assuming the landscape webview is way higher than the portrait webview\n')
('portrait', 'bigger topbar', 'landscape', 'screen mode smaller', '29092300', 'topbar portrait height is bigger than topbar landscape height everywhere except iphone 6 plus\n')
('landscape', 'wider', 'portrait', 'css nothing images', '19877662', 'as long as landscape means wider than taller and portrait viceversa it means to read the image into memory and check width and height\n')
('portrait', 'layout more', 'landscape', 'css nothing images', '34962474', 'i guess you are able to see the complete layout in portrait just because portrait layout is having more space and your complete layout is fitting well but landscape is having lesser space\n')
('portrait', 'more', 'landscape', 'screen mode smaller', '29184666', 'then you can write separate css for width less than 650px portrait more than 650 landscape\n')
('landscape', 'bigger', 'portrait', 'screen mode smaller', '25076470', 'my problem with this is that the calculation works fine in the portrait mode but as soon as i switch to landscape mode the distance between bottom and button is bigger than in portrait mode\n')
('portrait', 'mode more', 'landscape', 'screen mode smaller', '32246796', 'its because the height of the screen in portrait mode is more when compared to height of the screen in landscape mode\n')
('landscape', 'narrower', 'portrait', 'css nothing images', '25353972', 'as you can see the bottom two photos landscape so have been rotated are narrower than the portrait ones at the top\n')

compareto	equals	34
('compareto', 'less', 'equals', 'bigger lesser numbers', '17790456', 'compareto returns a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object\n')
('compareto', 'less', 'equals', 'bigger lesser numbers', '2504816', 'the interface defines one method compareto that must return a negative integer zero or a positive integer if this object is less than equals to or greater than the other object respectively\n')
('compareto', 'less', 'equals', '', '22130261', 'i am using the min value because i read that the compareto method returns negative 0 or positive whether the first string is less than equals to or greater than the second\n')
('compareto', 'greater', 'equals', 'bigger lesser numbers', '21615168', 'you need to call the compareto method which will indicate the result of the comparison by returning an integer less than greater than or equals to 0\n')
('compareto', 'less', 'equals', 'bigger lesser numbers', '1168889', 'compareto compares values and returns an int which tells if the values compare less than equals or greater than\n')
('compareto', 'less', 'equals', '', '42863933', 'and my guess as to why an element is being dropped is your compareto method never returns a 1 in any case so elements are always considered to be less than or equals to other elements which is probably screwing with the treeset\n')
('compareto', 'less', 'equals', 'bigger lesser numbers', '26910623', 'you should be using compareto method for less than or equals or greater than\n')
('compareto', 'less', 'equals', '', '15893212', 'if this works it seems that u are still comparing the strings in your ordered list and u should now check if the return value of compareto is less grater equals to 0\n')
('compareto', 'less', 'equals', 'bigger lesser numbers', '30146917', 'is a generic type at compile time java will require that an instance provide an implementation of int compareto t o which from the javadoc returns a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object\n')
('compareto', 'less', 'equals', 'bigger lesser numbers', '22751028', 'with this rather than needing to implement a comparator all you need to implement is the int compareto class o method in the class which returns a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object.\n')
('compareto', 'less', 'equals', '', '1814118', 'per the page i linked to compareto returns a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object.\n')
('compareto', 'bigger', 'equals', 'bigger lesser numbers', '40578389', 'we can call its compareto method to decide whether it is bigger than equals to or less than any int\n')
('compareto', 'less', 'equals', '', '22085195', 'all i changed was the first compareto comparison to be less than instead of less than or equals to\n')
('compareto', 'greater', 'equals', 'bigger lesser numbers', '11146653', 'i am using the compareto method in java to try and check if a certain date is greater than or equals than 24 hours after another date\n')
('compareto', 'less', 'equals', 'bigger lesser numbers', '35256125', 'the compareto method returns one of -1 0 1 depending on whether or not the argument is less than equals to or greater than respectively\n')
('compareto', 'less grater', 'equals', '', '15893212', 'if this works it seems that u are still comparing the strings in your ordered list and u should now check if the return value of compareto is less grater equals to 0\n')
('compareto', 'less', 'equals', '', '29596189', 'compareto returns a number that is less than equals to or greater than zero corresponding to the first string being before the same as or after the second string respectively\n')
('compareto', 'less', 'equals', 'bigger lesser numbers', '2045608', 'in the compareto method you can then write the code which will call the getters for the year month and so on until it figures out whether the current object is less than equals to or greater than the object o being passed into the compareto method\n')
('compareto', 'less', 'equals', 'bigger lesser numbers', '27008416', 'in the compareto method you can decide which fields are used for the comparison greater less than or equals\n')
('compareto', 'greater less', 'equals', 'bigger lesser numbers', '27367410', 'the only significance of a compareto return value is if it is greater less than or equals to zero\n')
('compareto', 'worse', 'equals', '', '16559648', 'when one of the strings is a prefix of another the performance of compareto is worse as it still needs to determine the lexicographical ordering while equals won t worry any more and return false immediately\n')
('compareto', 'less', 'equals', 'bigger lesser numbers', '13620180', 'this interface defines the method compareto t which will return a negative number zero or a positive number if the first object is less than equals to or greater than the other one respectively\n')
('compareto', 'less', 'equals', '', '22743324', 'implement compareto in temporary temporary.compareto left such that it returns a negative integer zero or a positive integer as temporary is less than equals to or greater than the left\n')
('compareto', 'less', 'equals', 'bigger lesser numbers', '8694958', 'icomparable declares the compareto method which returns an integer that specifies a less than equals to or greater than relationship between two objects of the same type\n')
('compareto', 'greater', 'equals', 'bigger lesser numbers', '22186019', 'the compareto method returns 1 0 or -1 depending on whether value a is respectively greater than equals to or lesser than value b\n')
('compareto', 'less', 'equals', 'bigger lesser numbers', '20005392', 'i know that in java there is a compareto method that you can write in a class that will compare two variables and return a value -1 1 or 0 signifing greater than less than and equals to operations\n')
('equals', 'once much slower', 'compareto', '', '29003698', 'most likely hashcode will be faster unless for whatever reason calling hashcode + equals once is much slower than calling compareto log n times\n')
('compareto', 'less', 'equals', 'bigger lesser numbers', '43117226', 'according to javadoc compareto needs to return a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object\n')
('compareto', 'less', 'equals', '', '43948265', 'note that in both cases you can take advantage of the fact that int also implements so you can use its compareto method to determine whether corresponding values in each instance of your class are less than equals to or greater than each other\n')
('compareto', 'less', 'equals', 'bigger lesser numbers', '8528899', 'or is it compareto returns negative numbers 0 and positive numbers respectively indicating whether the calling object is less than equals to or greater than the specified object\n')
('equals', 'slower', 'compareto', '', '29003698', 'most likely hashcode will be faster unless for whatever reason calling hashcode + equals once is much slower than calling compareto log n times\n')
('compareto', 'less', 'equals', '', '17221209', 'compareto defines whether your base student is greater than less than or equals to your studenttocompare and you can define these with any criteria you please\n')
('compareto', 'less', 'equals', 'bigger lesser numbers', '14918703', 'compareto return a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object\n')
('compareto', 'less', 'equals', 'bigger lesser numbers', '13719521', 'compareto method returns a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object\n')

localization	translation	4
('localization', 'more just', 'translation', '', '8732514', 'i d have one project team responsible for localization which may well involve more than just translation - different countries have different legal requirements currencies payment providers etc. and one team for improving the code base\n')
('localization', 'easier', 'translation', '', '539857', 'localization it s easier to translation text than images\n')
('translation', 'better way', 'localization', '', '9722966', 'is the best solution to add a new column called engmaterial and add the english translation there or is it possible to solve this in a better way with localization in .net\n')
('localization', 'more', 'translation', '', '4362280', 'this is where i learned that localization is a lot more than translation\n')

short	base	3
('short', 'worse design', 'base', '', '9740151', 'in short it s worse design to move things to the base class than it is to downcast to the specific class\n')
('short', 'worse', 'base', '', '9740151', 'in short it s worse design to move things to the base class than it is to downcast to the specific class\n')
('short', 'less', 'base', '', '10307766', 'as the condition reads a loop can not be zipped tighter if it s either too short less than five base or its ends do not match\n')

namedtuple	dictionary	7
('namedtuple', 'faster', 'dictionary', '', '40184533', 'namedtuple is faster and significantly more memory efficient than a dictionary\n')
('namedtuple', 'lighter', 'dictionary', '', '38679970', 'as namedtuple lighter than dictionary\n')
('namedtuple', 'lighter', 'dictionary', '', '18384001', '2 you probably want a namedtuple - i m pretty sure they re lighter than dictionary and you can access properties using dot notation for which i have an aesthetic preference anyway\n')
('namedtuple', 'lower overhead', 'dictionary', 'use lists lower', '9072260', 'namedtuple have a lower overhead than dictionary since the duplicate keys don t have to be stored per item but have the convenience of named access\n')
('dictionary', 'better', 'namedtuple', 'use lists lower', '30406083', 'depending on your use case a dictionary might fit better than a namedtuple\n')
('namedtuple', 'less overhead', 'dictionary', 'use lists lower', '36613126', 'namedtuple should perform better less overhead than dictionary if the lists are long\n')
('namedtuple', 'easier', 'dictionary', '', '40066792', 'creating an instance of the namedtuple is easier than creating a dictionary\n')

polygons	distance	4
('distance', 'less', 'polygons', '', '18668955', 'if that distance is less than the radius of the circle then you know that the polygons intersects the circle\n')
('polygons', 'greater', 'distance', '', '1120009', 'calculate the actual minimum distance and continue through the sorted list until the maximum distance between the polygons is greater than the minimum distance found so far\n')
('distance', 'less intuitive', 'polygons', '', '21541246', 'the one drawback is that distance between vertices might be slightly less intuitive than polygons area but the two are proportional\n')
('polygons', 'more x', 'distance', '', '25954497', 'plenty of others don t use a delimiter at all and require you to start a new segment polygons if you re more than x distance away from the last point. furthermore these things often wind up being multi-gb ascii files so reading the entire thing into memory can be impractical\n')

httphandler	httpmodule	3
('httpmodule', 'still better', 'httphandler', '', '10348554', 'i m not sure httpmodule is still better then httphandler\n')
('httpmodule', 'still better then', 'httphandler', '', '10348554', 'i m not sure httpmodule is still better then httphandler\n')
('httphandler', 'more', 'httpmodule', '', '4628975', 'you can have only one httphandler but can plug in more than one httpmodule to examine and handle the requests\n')

swift	objective-c	88
('objective-c', 'more', 'swift', 'use', '33544254', 'i use objective-c more than swift\n')
('swift', 'less complicated', 'objective-c', '', '46952620', 'it seems to me that swift would be way simpler to learn then objective-c for beginners i know because i learned it in like 2 months and swift is less complicated and better laid out then objective-c\n')
('swift', 'dictionary more', 'objective-c', '', '28191176', 'this is because the swift dictionary is more strongly typed than the objective-c nsdictionary\n')
('objective-c', 'more familiar', 'swift', 'familiar apps unfamiliar', '30496890', 'this article seems to suggest that this is possible by swizzling a fake location into apple s cllocationmanager class to be used by other apps but i am unfamiliar with the objective-c code more familiar with swift\n')
('swift', 'stricter', 'objective-c', '', '34910248', 'swift is stricter about runtime type correctness than objective-c so duck typing alone is not enough\n')
('swift', 'faster', 'objective-c', 'faster slower compiler', '24019229', 'as craig revealed within the announcement of swift it is said to be faster than objective-c by far\n')
('swift', 'less dynamic', 'objective-c', '', '24174697', 'swift seems to be less dynamic than objective-c in these stuffs\n')
('swift', 'more effective', 'objective-c', '', '28556371', 'after reading some related articles i don t think swift is more effective than objective-c\n')
('swift', 'more', 'objective-c', '', '30762258', 'swift won t allow you to do absolutely everything that objective-c does but it will allow you to do almost everything and the code will be probably more robust considering that swift is more modern language with stronger typing than objective-c\n')
('swift', 'stronger typing', 'objective-c', '', '30762258', 'swift won t allow you to do absolutely everything that objective-c does but it will allow you to do almost everything and the code will be probably more robust considering that swift is more modern language with stronger typing than objective-c\n')
('objective-c', 'more comfortable', 'swift', 'application fine unit', '27609828', 'i have a objective-c application working fine and smooth to be more comfortable with swift i decided to write the unit tests for this app in swift\n')
('swift', 'easier', 'objective-c', 'class easier method', '4850967', 'download xcode free and learn objective-c or swift swift is easier to learn than objective-c\n')
('swift', 'clearer', 'objective-c', '', '41127787', 'swift is clearer on versions releases and i keep asking myself if i am missing something related to objective-c since i can t find this information\n')
('swift', 'more', 'objective-c', '', '28556371', 'after reading some related articles i don t think swift is more effective than objective-c\n')
('swift', 'more strictly', 'objective-c', '', '34158886', 'swift is more strictly typed than objective-c\n')
('objective-c', 'better deal', 'swift', '', '37177621', 'or is it merely a hint to whatever tool converts between swift and objective-c to better deal with swift optionals\n')
('objective-c', 'older', 'swift', 'applications older programming', '39811417', 'as objective-c is the older programming language for ios or macos applications swift allows you to use those classes structs in your code\n')
('swift', 'more modern', 'objective-c', '', '30762258', 'swift won t allow you to do absolutely everything that objective-c does but it will allow you to do almost everything and the code will be probably more robust considering that swift is more modern language with stronger typing than objective-c\n')
('swift', 'more', 'objective-c', '', '27213575', 'personally i prefer objective-c because you can use c very easily as anything that is legal in c is also legal in objective-c added to which swift is a more procedural in style where objective-c is quite clearly object orientated\n')
('swift', 'example more complex', 'objective-c', '', '31149697', 'as you can see the swift example is more complex and error prone than your objective-c code\n')
('swift', 'cleaner', 'objective-c', 'class easier method', '33330810', 'usually i find swift s method naming to be cleaner than objective-c s but init methods can be an exception\n')
('swift', 'lot smarter', 'objective-c', 'class easier method', '33758594', 'swift is lot smarter than objective-c about singleton class\n')
('swift', 'faster pure', 'objective-c', 'faster slower compiler', '28699167', 'it is possible for swift to be faster than pure objective-c in things that you would traditionally use c or c++ for anyway\n')
('swift', 'faster', 'objective-c', 'faster slower compiler', '38899257', 'the perf hit will be ridiculous i know apple say swift execute faster than objective-c but this is low level so it will be harmless\n')
('objective-c', 'much nicer', 'swift', '', '34829520', 'i find that objective-c is much nicer for working with core audio than swift\n')
('swift', 'more static', 'objective-c', 'class easier method', '24050500', 'we ve seen that swift uses a more static method dispatch than objective-c which unless a class dervices from foundation nsobject prevents the style of swizzling based on remapping method implementations at runtime\n')
('swift', 'better', 'objective-c', '', '43249602', 'i feel swift is better than objective-c in many aspects but my major question is - will swift dynamic libraries support older version of swift\n')
('objective-c', 'more comfortable', 'swift', 'syntax new wise', '38241771', 'however i read that swift was the successor of objective-c and i would feel more comfortable with swift syntax\n')
('swift', 'faster', 'objective-c', 'faster slower compiler', '34341377', 'most importantly for your image processing app the compiler will optimize swift code to run faster than objective-c\n')
('objective-c', '-documentary more content', 'swift', '', '45442390', 'objective-c -documentary provides more content than the documentary for swift\n')
('swift', 'more', 'objective-c', '', '34342193', 'one of the reasons we want to move is because swift is more secure than objective-c\n')
('swift', 'greater', 'objective-c', '', '46952620', 'i know that swift is buggy as heck i run into bugs everyday but ill bet objective-c was even worse when it started out benefits of hindsight so in a couple of years swift will be equal or greater than objective-c keeping its basic simplicity as well\n')
('swift', 'stricter', 'objective-c', '', '27680835', 'furthermore swift is stricter than objective-c when it comes to initialisers\n')
('swift', 'better', 'objective-c', 'class easier method', '29049334', 'swift also prevents us i believe from overriding a parent class s property but also still lets us observe changes to that property--this is much better than objective-c s approach\n')
('swift', 'fewer situations', 'objective-c', '', '24021418', 'swift will incur this penalty in fewer situations than objective-c will for instance method calls to swift-only protocol methods do not hit objc_msgsend but if the protocol is declared in objective-c or if the swift protocol is decorated with objective-c such that it can be adopted by objective-c objects as well then method calls to methods in that protocol adopted by swift objects appear to be dispatched via objc_msgsend\n')
('swift', 'code slower', 'objective-c', 'faster slower compiler', '26991969', 'there are multiple reasons why the swift code is slower than the objective-c code\n')
('objective-c', 'more', 'swift', '', '32043789', 'if you get a difference between swift and objective-c it s more because swift is probably better on optimisation\n')
('swift', 'better', 'objective-c', 'better safer safe', '27468779', 'better if you have a code swift is better but is not problem objective-c\n')
('objective-c', 'faster', 'swift', 'faster slower compiler', '24078665', 'my view is that if in some cases objective-c is faster than swift it doesn t mean that all over performance of swift is slower\n')
('swift', 'more sensible', 'objective-c', '', '45358385', 'note that swift s arrays are much more sensible than objective-c s\n')
('swift', 'more just', 'objective-c', '', '27835223', 'the swift designers went through a lot of trouble to make sure that it s more than just objective-c without the constraints of c in fact i almost wish they hadn t said that since it s so often misquoted\n')
('swift', 'more readable', 'objective-c', 'readable print', '36220153', 'with swift the code is much more readable than with objective-c\n')
('swift', 'safer', 'objective-c', '', '35546224', 'apple seems to claim that the optional type in swift is safer than nil in objective-c but i don t understand why this is so\n')
('swift', 'more', 'objective-c', '', '33798907', 'specifically it makes it possible to write objective-c code that plays nicely with swift which is more strongly typed than objective-c\n')
('swift', 'easier', 'objective-c', 'class easier method', '30210640', 'on the other hand swift is easier to learn especially if you have objective-c background so it can be adopted during the time slowly and paralelly with using objective-c\n')
('objective-c', 'much more free', 'swift', 'class easier method', '37682771', 'objective-c is much more free and easy with types and compilation checks where swift isn t\n')
('swift', 'dictionary more strongly', 'objective-c', '', '28191176', 'this is because the swift dictionary is more strongly typed than the objective-c nsdictionary\n')
('objective-c', '-documentary more', 'swift', '', '45442390', 'objective-c -documentary provides more content than the documentary for swift\n')
('swift', 'easier', 'objective-c', 'class easier method', '45696488', 'early this month i started learning swift as i found it fun and easier than objective-c\n')
('swift', 'more', 'objective-c', '', '30021879', 'no objects come magically into existence in swift any more than in objective-c\n')
('objective-c', 'more', 'swift', 'use', '33706305', 'also note that i use objective-c more than swift\n')
('swift', 'more', 'objective-c', '', '34158886', 'swift is more strictly typed than objective-c\n')
('objective-c', 'less type-safe', 'swift', '', '30885637', 'so it should have always been gkagent under objective-c in order to be strictly correct however objective-c is less type-safe than swift so you could get away with it with the possibility that you d get an unrecognized selector exception if a gkagent object was ever passed to the delegate method and you assumed it was a gkagent2d\n')
('objective-c', 'more understandable', 'swift', '', '29532756', 'those attributes let you create objective-c code which is more understandable by swift and complier warn you when you break the rule for example\n')
('swift', 'faster', 'objective-c', 'faster slower compiler', '28162623', 'bottom line i would personally hesitate to draw any simple conclusions of swift is faster than objective-c or vice versa\n')
('swift', 'application much bigger', 'objective-c', 'application fine unit', '28741895', 'executable size of swift application is much bigger than size of objective-c application\n')
('swift', 'runtime smaller', 'objective-c', '', '24150239', 'the swift runtime is smaller than the objective-c runtime\n')
('swift', 'easier', 'objective-c', 'better safer safe', '28699167', 'swift is neither easier to read nor understand than objective-c\n')
('swift', 'more', 'objective-c', 'syntax new wise', '38606180', 'im new to swift but i like it more than objective-c as it looks a bit like java does to me from syntax wise compared to objective-c\n')
('swift', 'smaller', 'objective-c', '', '24150239', 'the swift runtime is smaller than the objective-c runtime\n')
('swift', 'no longer visible', 'objective-c', '', '46861113', 'however when i switch to swift 4.0 the methods declared in swift is no longer visible in objective-c\n')
('swift', 'much easier', 'objective-c', 'class easier method', '38170278', 'as you can see defining a singleton class in swift is much easier than in objective-c\n')
('swift', 'no longer', 'objective-c', '', '46861113', 'however when i switch to swift 4.0 the methods declared in swift is no longer visible in objective-c\n')
('objective-c', 'api easier', 'swift', '', '38056234', 'adding lightweight generics to your objective-c api makes it easier to interface with swift because your api gets translated more precisely\n')
('swift', 'more procedural', 'objective-c', '', '27213575', 'personally i prefer objective-c because you can use c very easily as anything that is legal in c is also legal in objective-c added to which swift is a more procedural in style where objective-c is quite clearly object orientated\n')
('swift', 'more strongly', 'objective-c', '', '33798907', 'specifically it makes it possible to write objective-c code that plays nicely with swift which is more strongly typed than objective-c\n')
('swift', 'example more', 'objective-c', '', '31149697', 'as you can see the swift example is more complex and error prone than your objective-c code\n')
('objective-c', 'print more', 'swift', 'readable print', '42978589', 'objective-c print is more readable compared to swift\n')
('swift', 'more', 'objective-c', 'faster slower compiler', '27570223', 'swift s compiler is also doing a lot more than objective-c s compiler considering swift is more strongly typed and does not required specifying imports among other things\n')
('swift', 'less dynamically', 'objective-c', '', '31885528', 'but swift is less dynamically typed than objective-c and has less support for reflection\n')
('swift', 'less', 'objective-c', '', '31885528', 'but swift is less dynamically typed than objective-c and has less support for reflection\n')
('swift', 'newer', 'objective-c', 'faster slower compiler', '42119927', 'the swift compiler is doing a lot more and is quite a bit newer than the objective-c compiler so it unlikely it will be as stable fast for quite some time\n')
('swift', 'larger', 'objective-c', '', '34080597', 'you will notice that swift bundles are always about 4-5 mb larger than their objective-c counterparts and this is precisely why\n')
('swift', 'faster', 'objective-c', 'faster slower compiler', '24765759', 'i don t think that as of today you can run these tests and determine with any certainty whether swift 1.0 is faster or slower than objective-c\n')
('swift', 'more', 'objective-c', 'applications older programming', '32190188', 'writing swift 2.0 in my professional work my personal opinion is that it s indeed ready for enterprise applications -- maybe even more than objective-c ever were\n')
('swift', 'slower', 'objective-c', 'faster slower compiler', '37892309', 'wouldn t swift be slower than objective-c in this case since it is layered on top of it\n')
('swift', 'significantly more secure', 'objective-c', '', '34358631', 'while i think the move to swift is prudent but i think it overstates the case to argue that swift is significantly more secure that objective-c\n')
('objective-c', 'less', 'swift', '', '30885637', 'so it should have always been gkagent under objective-c in order to be strictly correct however objective-c is less type-safe than swift so you could get away with it with the possibility that you d get an unrecognized selector exception if a gkagent object was ever passed to the delegate method and you assumed it was a gkagent2d\n')
('swift', 'more secure', 'objective-c', '', '34342193', 'one of the reasons we want to move is because swift is more secure than objective-c\n')
('swift', 'application harder', 'objective-c', 'application fine unit', '28549095', 'injecting code in a swift application is harder than it was for an objective-c application but it s still possible\n')
('swift', 'less safe', 'objective-c', 'better safer safe', '41691607', 'swift in that case would not be safer but less safe than objective-c\n')
('swift', 'more faster', 'objective-c', 'faster slower compiler', '24078665', 'and also apple does might not confidently announce that swift is more faster than objective-c in all the cases\n')
('swift', 'less', 'objective-c', '', '46952620', 'it seems to me that swift would be way simpler to learn then objective-c for beginners i know because i learned it in like 2 months and swift is less complicated and better laid out then objective-c\n')
('swift', 'less familiar', 'objective-c', 'familiar apps unfamiliar', '32918935', 'i m learning swift and much less familiar with objective-c but for the life of me i can t figure out how they are trying to achieve the goal stated as build list of encodings sorted and including only those with human readable names.\n')
('swift', 'significantly more', 'objective-c', '', '34358631', 'while i think the move to swift is prudent but i think it overstates the case to argue that swift is significantly more secure that objective-c\n')
('swift', 'better', 'objective-c', 'better safer safe', '24049884', 'so i ve started learning swift because it looks way better than objective-c\n')
('objective-c', 'more', 'swift', '', '29691943', 'i also use objective-c more than swift but here s what my guess is as to what the objective-c code would come to\n')
('swift', 'dramatically slower then', 'objective-c', 'faster slower compiler', '26990394', 'the swift one is dramatically slower then objective-c implementation\n')

piston	tastypie	5
('piston', 'better luck', 'tastypie', 'query similar luck', '2397232', '- similar to piston but i ve had better luck with tastypie\n')
('tastypie', 'more', 'piston', '', '10464883', 'tastypie is more tightly coupled to the orm than piston but there are methods that you can define in a tastypie resource to specify how to handle create read update delete\n')
('tastypie', 'better', 'piston', 'query similar luck', '15662815', 'edit i found out that piston was proposing query throttling but everywhere people say that tastypie is better than piston\n')
('tastypie', 'nicer', 'piston', '', '12758060', 'i recommend to take a look on tastypie which turned out to work even nicer than piston it helps you also with things like versioning your api and mamange multiple endpoints nicly\n')
('tastypie', 'more tightly', 'piston', '', '10464883', 'tastypie is more tightly coupled to the orm than piston but there are methods that you can define in a tastypie resource to specify how to handle create read update delete\n')

ini	config	7
('ini', 'less', 'config', '', '677459', 'ini is really a much simpler format than xml if you have less than fifty config options and they are not nested\n')
('ini', 'more', 'config', '', '31487131', 'i like that ini is more for config purposes but with todays interest in json it seems more logical for the config be designed with json in mind\n')
('config', 'slightly more powerful', 'ini', '', '8377835', 'because spring s xml config is slightly more powerful than shiro s ini spring users are encouraged to use full spring config instead of shiro ini\n')
('config', 'simpler', 'ini', '', '17799411', 'it is similar to incron however config uses a simpler to read ini file instead of a plain text file\n')
('config', 'slightly more', 'ini', '', '8377835', 'because spring s xml config is slightly more powerful than shiro s ini spring users are encouraged to use full spring config instead of shiro ini\n')
('config', 'probably better', 'ini', '', '21449065', 'if you intend manual config it s probably better to choose something else for example ini\n')
('config', 'faster', 'ini', '', '2015715', 'since json can store arrays i can create quite complex config with it and it parses faster than ini files\n')

sudo	passwd	3
('sudo', 'slighly more', 'passwd', '', '15868282', 'automating sudo is slighly more complex if you need to pass the passwd but still can be done\n')
('sudo', 'slighly more complex', 'passwd', '', '15868282', 'automating sudo is slighly more complex if you need to pass the passwd but still can be done\n')
('sudo', 'better', 'passwd', '', '982185', 'sudo is better in most respects but still requires a passwd which asroot does not\n')

datamapper	activerecord	18
('datamapper', 'much smarter', 'activerecord', 'smarter newer better', '5351338', 'datamapper is much smarter then activerecord\n')
('datamapper', 'much more ruby', 'activerecord', '', '2681920', 'also datamapper is much more ruby syntax friendy and features like lazy loading when doing chainable conditions like activerecord in rails 3 are there from the beginning\n')
('datamapper', 'potentially more', 'activerecord', 'complex easier domain', '94070', 'datamapper is potentially more complex then activerecord but it s a lot easier to develop your domain model and database asynchronous then with activerecord\n')
('datamapper', 'better', 'activerecord', '', '5351338', 'datamapper idea is definitely better than activerecord\n')
('datamapper', 'more work', 'activerecord', '', '38681724', 'with datamapper this is somewhat more work than with activerecord which provides it s own db tasks\n')
('datamapper', 'newer', 'activerecord', 'smarter newer better', '3828265', 'so a question for those who know better is datamapper newer than activerecord\n')
('datamapper', 'model much easier', 'activerecord', 'complex easier domain', '4338143', 'from my point of view the datamapper model is much easier to grasp but since activerecord is the defacto standard it feels weird to change the orm just for this little problem\n')
('datamapper', 'somewhat more work', 'activerecord', '', '38681724', 'with datamapper this is somewhat more work than with activerecord which provides it s own db tasks\n')
('datamapper', 'idea definitely better', 'activerecord', '', '5351338', 'datamapper idea is definitely better than activerecord\n')
('activerecord', 'much simpler then', 'datamapper', '', '4034591', 'activerecord is much simpler then a datamapper but also much more limited\n')
('datamapper', 'somewhat more', 'activerecord', '', '38681724', 'with datamapper this is somewhat more work than with activerecord which provides it s own db tasks\n')
('datamapper', 'faster', 'activerecord', '', '818424', 'i d recommend datamapper for orm not only it s way faster than activerecord but it s also very modularly built and plugins are actual gems that you can easily install\n')
('datamapper', 'way higher', 'activerecord', '', '8169572', 'the level of abstraction of datamapper is way higher than the activerecord s\n')
('datamapper', 'newer', 'activerecord', 'smarter newer better', '3828562', 'datamapper is newer than activerecord\n')
('datamapper', 'much more', 'activerecord', '', '2681920', 'also datamapper is much more ruby syntax friendy and features like lazy loading when doing chainable conditions like activerecord in rails 3 are there from the beginning\n')
('datamapper', 'higher', 'activerecord', '', '8169572', 'the level of abstraction of datamapper is way higher than the activerecord s\n')
('activerecord', 'much simpler', 'datamapper', '', '4034591', 'activerecord is much simpler then a datamapper but also much more limited\n')
('activerecord', 'more', 'datamapper', '', '18681836', 'i don t know whether this port of cql3 to ruby support activerecord it acts more like a simple datamapper but it worths having a look\n')

ienumerable	iqueryable	16
('ienumerable', 'smaller', 'iqueryable', '', '41962207', 'for your view to expect an ienumerable you need to change your view declaration to be also if you really need to perform a find use iqueryable first them return the result as ienumerable since the payload on ienumerable is smaller than iqueryable\n')
('ienumerable', 'more', 'iqueryable', 'generic instances', '23475916', 'ienumerable is more generic than iqueryable though all\n')
('iqueryable', 'much more preferable', 'ienumerable', '', '9246022', 'i m not familiar with the infeasability of iqueryable but this blog post seems to indicate that iqueryable is much more preferable to ienumerable because iqueryable allows access to the underlying expression\n')
('ienumerable', 'more useful', 'iqueryable', '', '33005821', 'can you provide any useful example that shows ienumerable could be more useful than iqueryable\n')
('ienumerable', 'better', 'iqueryable', '', '5182499', 'the ienumerable side of linq which works on in-memory objects that are already in the heap will almost certainly perform better than the iqueryable side which exists to be translated into a native query language like sql\n')
('iqueryable', 'faster', 'ienumerable', '', '26992283', 'i assume applying iqueryable will be much faster than the ienumerable not to forget i was able to use iqueryable on the other entities without any issues\n')
('iqueryable', 'implementation more picky', 'ienumerable', '', '9773250', 'entity framework s iqueryable implementation is more picky about creating new objects in objects than regular linq to objects ienumerable\n')
('iqueryable', 'implementation more', 'ienumerable', '', '9773250', 'entity framework s iqueryable implementation is more picky about creating new objects in objects than regular linq to objects ienumerable\n')
('iqueryable', 'better', 'ienumerable', 'better query linq', '36964658', 'what i know is using iqueryable is better than ienumerable if another query is going to be performed\n')
('ienumerable', 'slower', 'iqueryable', '', '17604913', 'in simple words all operations on ienumerable causes simple iteratation over all elements well it s lazy ienumerable really slower than iqueryable\n')
('ienumerable', 'better', 'iqueryable', '', '30685017', 'final result will be of type ienumerable and in terms of performance this would be better than iqueryable since here join is taking place between in memory collections\n')
('ienumerable', 'more generic', 'iqueryable', 'generic instances', '20529312', 'ienumerable is more generic than iqueryable though all instances of iqueryable implement ienumerable and only defines\n')
('iqueryable', 'better', 'ienumerable', 'better query linq', '7791066', 'i have read about ienumerable and iqueryable i have read that iqueryable is better with linq because when you use where clauses it creates the exact query it needs but with ienumerable it retrieves all rows from database and then filters on memory\n')
('iqueryable', 'way quicker', 'ienumerable', 'calls quicker place', '17920394', 'with really basic calls to the database iqueryable is way quicker but when do i need to think about using an ienumerable in its place\n')
('iqueryable', 'more suitable', 'ienumerable', 'calls quicker place', '13622131', 'i d say iqueryable is more suitable for interaction with a database than ienumerable is\n')
('iqueryable', 'much more', 'ienumerable', '', '9246022', 'i m not familiar with the infeasability of iqueryable but this blog post seems to indicate that iqueryable is much more preferable to ienumerable because iqueryable allows access to the underlying expression\n')

elasticsearch	kibana	3
('elasticsearch', 'more', 'kibana', '', '30607004', 'odd that elasticsearch is more tolerant than kibana\n')
('elasticsearch', 'less functionality', 'kibana', '', '39650868', 'if you would like a unified front-end for elasticsearch and opentsdb you could consider grafana which has support for both elasticsearch and opentsdb but less functionality than kibana in regard to elasticsearch\n')
('elasticsearch', 'more tolerant', 'kibana', '', '30607004', 'odd that elasticsearch is more tolerant than kibana\n')

opera	google-chrome	11
('opera', 'probably more complete', 'google-chrome', '', '17245353', 'opera probably is more complete to manage canvas than google-chrome but the problem is always to exclude the finger touch if i m using the pen\n')
('opera', 'faster', 'google-chrome', '', '46726727', 'note i recommend using opera - it is much faster than google-chrome as it doesn t have memory leaks and comes with a built-in ad blocker\n')
('google-chrome', 'release more', 'opera', '', '37058103', 'for comparison 0.68 usage means this outdated google-chrome release is more popular than the current and previous versions of opera the penultimate version of safari on ios and ie 9 or 10\n')
('google-chrome', 'release more popular', 'opera', '', '37058103', 'for comparison 0.68 usage means this outdated google-chrome release is more popular than the current and previous versions of opera the penultimate version of safari on ios and ie 9 or 10\n')
('opera', 'longer', 'google-chrome', '', '2294832', 'also nice to know is the fact that the latest version of google-chrome and also opera don t know since when but longer than google-chrome supports userscripts out of the box no need to install any add-ons\n')
('opera', 'much more', 'google-chrome', '', '3888711', 'especially in opera there is much more green in the painting than in google-chrome\n')
('google-chrome', 'longer', 'opera', '', '44177682', 'as you can see in the image google-chrome is running a lot longer than opera\n')
('opera', 'much more green', 'google-chrome', '', '3888711', 'especially in opera there is much more green in the painting than in google-chrome\n')
('opera', 'higher', 'google-chrome', '', '14887100', 'now this works fine in google-chrome and safari and i have had to use assitional css settings for firefox but ie and opera both display my ribbon div about 25px higher than in google-chrome or safari\n')
('opera', 'probably more', 'google-chrome', '', '17245353', 'opera probably is more complete to manage canvas than google-chrome but the problem is always to exclude the finger touch if i m using the pen\n')
('opera', 'more powerful', 'google-chrome', '', '7449937', 'since you noted thoughts on other browsers would be helpful opera s kiosk mode seems more powerful than google-chrome s\n')

addition	multiplying	9
('multiplying', 'more complex', 'addition', 'boilerplate operation complex', '28311068', 'however multiplying is a more complex operation than addition or shifting\n')
('addition', 'faster', 'multiplying', '', '6831617', 'you can try x1 c1 and then x1 + c1 but i don t think the addition is much faster than multiplying on todays cpus\n')
('multiplying', 'slower simple', 'addition', '', '7464279', 'we don t actually multiplying it s slower than simple addition and as you can see we destroy temporary register t0 but don t touch s0 s1\n')
('multiplying', 'slower', 'addition', '', '20209624', 'if multiplying is slower than addition then case 2 is slightly slower than case 1\n')
('multiplying', 'more complex', 'addition', 'boilerplate operation complex', '23188645', 'the boilerplate code would multiplying rapidly when the express get more complex than addition of two terms\n')
('multiplying', 'deeper', 'addition', '', '23555455', 'so we must show that a gradeschool multiplying circuit is o log n times deeper than an addition circuit\n')
('multiplying', 'better', 'addition', '', '33582244', 'so the compiler can t make the optimization because it can t tell if you wanted the exact behavior where multiplying is better or the implemented behavior where the scale of sum affects the result of the addition\n')
('addition', 'much faster', 'multiplying', '', '6831617', 'you can try x1 c1 and then x1 + c1 but i don t think the addition is much faster than multiplying on todays cpus\n')
('multiplying', 'slower', 'addition', '', '7464279', 'we don t actually multiplying it s slower than simple addition and as you can see we destroy temporary register t0 but don t touch s0 s1\n')

stateful	stateless	11
('stateless', 'cluster often simpler', 'stateful', '', '10669327', 'dealing with a stateless cluster is often simpler then dealing with a stateful cluster\n')
('stateful', 'service typically harder', 'stateless', '', '25236081', 'a stateful service is typically harder to develop and scale than stateless services\n')
('stateful', 'more', 'stateless', '', '1177422', 'do you have any situation where stateful is more appropriate than stateless\n')
('stateless', 'simpler', 'stateful', '', '29933428', 'while a lot of development has been done with stateless connections to solve most problems sometimes it s just simpler with stateful connections\n')
('stateless', 'better', 'stateful', '', '19457354', 'but keep in mind that in many cases being stateful or not stateless is no problem and not all stateless applications are by definition better than stateful ones\n')
('stateless', 'lighter', 'stateful', 'kinds transactions faster', '40551515', 'service to build drools knowledge and get session i prepared a stateless engine lighter than the stateful one\n')
('stateless', 'better', 'stateful', '', '31567108', 'or in short stateless is better than stateful\n')
('stateful', 'more appropriate', 'stateless', '', '1177422', 'do you have any situation where stateful is more appropriate than stateless\n')
('stateless', 'faster', 'stateful', 'kinds transactions faster', '5497077', 'for certain kinds of transactions a stateless session may perform slightly faster than a stateful session\n')
('stateless', 'better', 'stateful', 'kinds transactions faster', '17227882', 'in ejb3 there is no such thing as stateless is better than stateful session beans\n')
('stateless', 'cluster often simpler then', 'stateful', '', '10669327', 'dealing with a stateless cluster is often simpler then dealing with a stateful cluster\n')

implements	extends	18
('implements', 'runnable better', 'extends', 'runnable better thread', '28491250', 'i have read that implements runnable is better than extends thread but i have no idea of how\n')
('implements', 'more succinctly', 'extends', '', '25498711', 'more or less the same thing as the accepted answer can be implements more succinctly by extends the gridviewpager like this\n')
('implements', 'larger', 'extends', '', '25098811', 'implements gives larger errors because i tried with extends\n')
('implements', 'better option', 'extends', 'runnable better thread', '2782744', 'why is implements runnable a better option than extends from thread class\n')
('implements', 'better system', 'extends', 'runnable better thread', '3311788', 'i have not found a lot of times when implements an interface would be a better system than extends a superclass\n')
('implements', 'better', 'extends', 'runnable better thread', '17311842', 'i also know implements runable is better than extends thread\n')
('extends', 'mouseadapter easier', 'implements', 'note mouseadapter easier', '42584044', 'note extends mouseadapter is easier since you only need to implements the methods you want to handle\n')
('implements', 'faster', 'extends', '', '7194541', 'is implements the rawcomparator that much faster than extends writablecomparator\n')
('extends', 'better position', 'implements', '', '43306204', 'but if you d like to extends this api to be used by the external services then you ll be in a much better position with implements oauth 2.0 using doorkeeper because you can easily configure for example a authorization code grant for them\n')
('extends', 'easier', 'implements', 'note mouseadapter easier', '18354161', 'second in order to add or update the value of listview in general extends arrayadapter is much easier than implements baseadapter because of arrayadapter support add remove insert method by itself\n')
('extends', 'more sense', 'implements', '', '8032509', 'extends makes more sense to me here than implements maybe it s a typo in the book\n')
('extends', 'more', 'implements', '', '8032509', 'extends makes more sense to me here than implements maybe it s a typo in the book\n')
('extends', 'better', 'implements', '', '38187566', 'are there some solutions available to extends asp.net identity better than implements a custom solution as suggested in the links\n')
('extends', 'higher priority', 'implements', '', '32471220', 'which i think makes sense because extends from a class should take higher priority than implements from an interface\n')
('implements', 'runnable more preferrable', 'extends', 'runnable better thread', '22595284', 'they say that implements runnable is more preferrable than extends thread\n')
('implements', 'runnable better', 'extends', 'runnable better thread', '21962174', 'implements runnable is better because you can extends other classes\n')
('extends', 'stronger relationship', 'implements', '', '22268825', 'a possible reason is that extends represents a a stronger relationship than implements although both represent is a or is a type of relationships\n')
('implements', 'larger errors', 'extends', '', '25098811', 'implements gives larger errors because i tried with extends\n')

ubuntu	centos	8
('ubuntu', 'system newer', 'centos', '', '21462120', 'this is because your ubuntu system has newer system libraries than your centos one\n')
('ubuntu', 'less desirable', 'centos', '', '263966', 'in this respect ubuntu is less desirable on a server than rhel or centos which stick to more mature versions\n')
('centos', 'more', 'ubuntu', '', '17406652', 'centos is more consistent and reliable because it is enterprise while ubuntu is geared towards desktops and personal computers\n')
('ubuntu', 'slower', 'centos', '', '10574176', 'is there anything obvious in ubuntu that would otherwise be making sfphpview- render run slower than centos\n')
('centos', 'more consistent', 'ubuntu', '', '17406652', 'centos is more consistent and reliable because it is enterprise while ubuntu is geared towards desktops and personal computers\n')
('ubuntu', 'better', 'centos', '', '8709321', 'i believe that ubuntu is better than centos when it comes to mono as it is much easier to setup and seems to be better supported\n')
('ubuntu', 'less', 'centos', '', '263966', 'in this respect ubuntu is less desirable on a server than rhel or centos which stick to more mature versions\n')
('ubuntu', 'system newer system', 'centos', '', '21462120', 'this is because your ubuntu system has newer system libraries than your centos one\n')

xapian	whoosh	3
('xapian', 'slightly more', 'whoosh', '', '10939202', 'xapian is slightly more difficult to setup but is much faster than whoosh\n')
('xapian', 'slightly more difficult', 'whoosh', '', '10939202', 'xapian is slightly more difficult to setup but is much faster than whoosh\n')
('xapian', 'faster', 'whoosh', '', '10939202', 'xapian is slightly more difficult to setup but is much faster than whoosh\n')

outputstream	inputstream	3
('outputstream', 'less bytes', 'inputstream', '', '17035499', 'what i did not expect is that outputstream is much less bytes than inputstream although i have yet to make any modification on doc\n')
('outputstream', 'much less', 'inputstream', '', '17035499', 'what i did not expect is that outputstream is much less bytes than inputstream although i have yet to make any modification on doc\n')
('outputstream', 'much less bytes', 'inputstream', '', '17035499', 'what i did not expect is that outputstream is much less bytes than inputstream although i have yet to make any modification on doc\n')

vmware	virtualbox	13
('vmware', 'more', 'virtualbox', '', '55578', 'vmware has more features but costs 80 virtualbox on the other hand is more basic but is free for most users see virtualbox licensing faq for details\n')
('virtualbox', 'less powerfull', 'vmware', 'good free powerfull', '8107257', 'virtualbox free but less powerfull than vmware\n')
('virtualbox', 'slower', 'vmware', 'better slower server', '46375001', 'virtualbox is slower than vmware\n')
('vmware', 'much more stable', 'virtualbox', '', '43954151', 'however i found that vmware is much more stable full screen resolution much much better to handle the iphone connection via usb and i didn t have yet any crash when on virtualbox it s quite often\n')
('virtualbox', 'worse', 'vmware', '', '45324556', 'im trying very hard to like virtualbox but so far i find it so much worse than vmware in so many ways\n')
('vmware', 'faster', 'virtualbox', 'better slower server', '12349097', 'from my experience vmware 5 is faster than virtualbox 4.2 rc3 and has better smp performance\n')
('virtualbox', 'better', 'vmware', 'better slower server', '3791405', 'fwiw i have never gotten freebsd to work properly under virtualbox perhaps if you need that you would be better off with vmware which does\n')
('vmware', 'much more', 'virtualbox', '', '43954151', 'however i found that vmware is much more stable full screen resolution much much better to handle the iphone connection via usb and i didn t have yet any crash when on virtualbox it s quite often\n')
('vmware', 'better', 'virtualbox', 'better slower server', '5763931', 'i am not sure if vmware server will be much better than virtualbox\n')
('vmware', 'faster', 'virtualbox', 'better slower server', '630233', 'in my experience i ve found that vmware seems to be faster than virtualbox although i don t have any hard data to back it up\n')
('vmware', 'faster', 'virtualbox', 'good free powerfull', '630233', 'even though vmware has been faster for me i still use virtualbox because it s good enough and is free and im cheap\n')
('vmware', 'more', 'virtualbox', '', '26948540', 'i really miss this feature on virtualbox because i find vmware to be bloated and it slows the host system down much more than virtualbox does\n')
('vmware', 'more features', 'virtualbox', '', '55578', 'vmware has more features but costs 80 virtualbox on the other hand is more basic but is free for most users see virtualbox licensing faq for details\n')

listview	gridview	10
('listview', 'better', 'gridview', 'situation dataview clean', '16225337', 'i think the listview is better than gridview in this situation\n')
('listview', 'better fit', 'gridview', 'control article fit', '13209588', 'here s another article that describes the listview control and why it s probably a better fit than the gridview\n')
('listview', 'better', 'gridview', 'situation dataview clean', '10809', 'listview much better than the gridview dataview in that they let you write out clean html\n')
('listview', 'more', 'gridview', '', '1879340', 'regarding comparison between gridview and listview my experience is that listview is more lightweight as compared to gridview\n')
('gridview', 'more', 'listview', '', '41508471', 'note that i do not want to bind a gridview directly to the view property from a resourcedictionary where the datatemplates x shared attribute is set to false as this leads to problems in the xaml designer view can t be shared by more than one listview\n')
('gridview', 'more', 'listview', '', '2419913', 'the error is because the gridview is being applied to more than one listview\n')
('listview', 'easier', 'gridview', 'easier better', '36362028', 'you may also consider using a listview which is easier to customize than the gridview\n')
('gridview', 'better', 'listview', 'easier better', '37560070', 'i think using a gridview is better for your case than a listview\n')
('listview', 'more lightweight', 'gridview', '', '1879340', 'regarding comparison between gridview and listview my experience is that listview is more lightweight as compared to gridview\n')
('gridview', 'much finer', 'listview', 'control article fit', '31765196', 'i believe gridview allows much finer grained control of display than does listview\n')

mayavi	matplotlib	5
('mayavi', 'more options', 'matplotlib', '', '38790724', 'mayavi has more options for moving the camera than matplotlib but it doesn t seem to have a way to rotate around the y axis so i m guessing i ll need to perform some complex calculations on the azimuth and elevation to achieve the same result - but i m at a loss as to where to start i m new to working in 3d space and my brain doesn t think that way yet\n')
('mayavi', 'more', 'matplotlib', '', '38790724', 'mayavi has more options for moving the camera than matplotlib but it doesn t seem to have a way to rotate around the y axis so i m guessing i ll need to perform some complex calculations on the azimuth and elevation to achieve the same result - but i m at a loss as to where to start i m new to working in 3d space and my brain doesn t think that way yet\n')
('mayavi', 'easier', 'matplotlib', '', '4739360', 'mayavi makes it easier to visualize the data but matplotlib looks more professional\n')
('mayavi', 'way better', 'matplotlib', 'stuff past performance', '20386398', 'anyway if you re willing to do advanced 3d stuff mayavi is way better than matplotlib\n')
('mayavi', 'better', 'matplotlib', 'stuff past performance', '46457858', 'personally i ve used mayavi in the past and found the performance much better than matplotlib for 3d scatter plotting though the python bindings are somewhat in question moving forward i think\n')

google-chrome	firefox	260
('firefox', 'greater', 'google-chrome', 'higher smaller bigger', '13198764', 'i ve ran into out of memory errors on firefox with canvas heights greater than 8000 google-chrome seems to handle much higher at least to 32000\n')
('firefox', 'higher', 'google-chrome', 'higher smaller bigger', '14882752', 'for my website i noticed that tooltip delay in firefox was much higher than in google-chrome\n')
('firefox', 'faster', 'google-chrome', 'faster slower browser', '6774018', 'it s just a matter of preferences and browser implementation eg firefox works faster with brackets while google-chrome works faster with the dots\n')
('firefox', 'more power', 'google-chrome', 'extensions browsers tool', '3417323', 'firefox extensions have much more power than google-chrome and have wider access to browser s internal api\n')
('firefox', 'smaller', 'google-chrome', 'higher smaller bigger', '8850307', 'if i remove this code the width of green image in firefox becomes smaller but it s still bigger than necessary about 100px the google-chrome images keeps unchanged\n')
('firefox', 'slower', 'google-chrome', 'faster slower browser', '16639931', 'why is firefox so much slower than google-chrome on my laptop\n')
('firefox', 'slower', 'google-chrome', 'faster slower browser', '11577677', 'in google-chrome it seems .prototype is faster firefox shows no difference between the two although generally performs slower than google-chrome\n')
('google-chrome', 'significantly faster', 'firefox', 'faster slower browser', '7221963', 'on google-chrome it s significantly faster to do this using 1 0 but on firefox it s slightly faster to do this using bool\n')
('google-chrome', 'slower', 'firefox', 'faster slower browser', '12583588', 'the reason google-chrome is slower than firefox is that the devmode plugin runs in a sandbox so calls and data have to cross the sandbox boundaries\n')
('firefox', 'faster', 'google-chrome', 'faster slower browser', '37896235', 'however if thats the case does this mean firefox is faster in execution than google-chrome\n')
('firefox', 'better', 'google-chrome', 'better time browser', '12542302', 'firefox handles this better than google-chrome does but neither exactly the way i want\n')
('google-chrome', 'smaller', 'firefox', 'higher smaller bigger', '11778005', 'in google-chrome the font appears to be 1px smaller than firefox and ie and i cannot see why\n')
('google-chrome', 'more', 'firefox', 'higher smaller bigger', '14686908', 'the issue that i encountered was that google-chrome was giving me height about 300px more than the firefox ie\n')
('firefox', 'less width', 'google-chrome', 'higher smaller bigger', '19814480', 'firefox has like 40px less width than google-chrome in columns which is causing problems\n')
('google-chrome', 'just faster', 'firefox', 'faster slower browser', '12829930', 'google-chrome is just faster than firefox which just faster than ie at bit-wise operations\n')
('google-chrome', 'less efficient', 'firefox', '', '8264054', 'so why is google-chrome less efficient than firefox and ie\n')
('firefox', 'consistently better', 'google-chrome', 'better time browser', '25606508', 'also it does appear that firefox consistently handles this better than ie or google-chrome\n')
('google-chrome', 'lower', 'firefox', 'similar issue windows', '18068582', 'i m seeing a strange issue on windows in google-chrome the framerate is almost 2 times lower than in firefox on mac google-chrome and firefox have similar framerates\n')
('google-chrome', 'more', 'firefox', '', '6222562', 'i ve been trying to sum up values over a swipe and see how different browsers report values and they vary a lot with safari reporting order of magnitude bigger numbers on almost all platforms google-chrome reporting quite more like 3 times more than firefox firefox being balanced on the long run but quite different among platforms on small movements on ubuntu gnome nearly only +3 or -3 seems like it sums up smaller events and then send a big +3\n')
('firefox', 'better', 'google-chrome', '', '40426348', 'i m sticking with firefox debugging of my angular 2 app outside of vs code as its user experience is better than google-chrome especially when working with typescript files so i ll stick with that for now unless i can figure this out\n')
('google-chrome', 'much slower', 'firefox', 'faster slower browser', '8838478', 'because of how google-chrome s plugin system works development mode in google-chrome is much slower than in firefox or safari see here for more details\n')
('firefox', 'wider', 'google-chrome', 'extensions browsers tool', '12569898', 'after looking into the issue with the inspection tools of both browsers it seems that firefox is making the #main_nav_bar ul 10px wider than google-chrome\n')
('google-chrome', 'more forgiving', 'firefox', 'forgiving work extension', '12391385', 'i guess google-chrome is a bit more forgiving than firefox\n')
('google-chrome', 'more', 'firefox', 'console first information', '23064942', 'in google-chrome it seems more or less ok but in firefox when i first tried it it should give me not logged in my console\n')
('google-chrome', 'fatter', 'firefox', '', '6103317', 'it works fine even for italics but i m aware that the user s browser is being asked to make a best-guess here and have noticed that google-chrome will make individual chars appear slightly fatter than firefox when i do things this way\n')
('firefox', 'further', 'google-chrome', '', '9492029', 'you can see if you look at the bottom and right hand edges of both google-chrome lines up perfectly but firefox seems further in both directions and i cannot work out why either in firebug or google-chrome dev tools\n')
('google-chrome', 'better', 'firefox', 'better time browser', '25067464', 'google-chrome shows it better than firefox firebug\n')
('google-chrome', 'better', 'firefox', 'better time browser', '19931969', 'in firefox the render of new tiles and the panning is laggy this is not the case when using maps.google.com so it s not an issue of google-chrome being better than firefox\n')
('firefox', 'more picky', 'google-chrome', '', '35236659', 'i had a hiccup in firefox but found a fix after figuring out firefox is a bit more picky than google-chrome when defining svg attributes\n')
('firefox', 'more time', 'google-chrome', '', '30634669', 'in firefox it takes some more time compared to google-chrome safari\n')
('firefox', 'faster', 'google-chrome', '', '7332444', 'when i posted this on facebook someone said that since firefox is open source project developers optimized math.min but google-chrome didn t since google-chrome is just a modification of chromium but beside that above statement is not quite right that makes no sense because that doesn t explain the reason why google-chrome s and firefox s math.min a b performs in similar speed and google-chrome s math.min a b and firefox s performs in same speed because if firefox is faster than google-chrome then google-chrome s math.min a b should be much slower than firefox s\n')
('google-chrome', 'more', 'firefox', 'characters illegal picky', '5375848', 'maybe google-chrome is more lenient when it comes to illegal characters in the url than firefox or something like that\n')
('firefox', 'better', 'google-chrome', 'better time browser', '45403936', 'firefox works a bit better than google-chrome but the settimeout just seems to delay the final result being shown rather than delaying each step\n')
('firefox', 'lower', 'google-chrome', 'higher smaller bigger', '11021028', 'firefox text is 1px lower than in google-chrome and ie\n')
('google-chrome', 'smaller', 'firefox', 'higher smaller bigger', '23072956', 'my question is similar the same page in my pc renders fine firefox google-chrome but the same one on a server rendered smaller by firefox google-chrome ok\n')
('firefox', 'more-so', 'google-chrome', 'more-so pickier', '35630482', 'it looks like it shows for firefox more-so than google-chrome but it might help\n')
('firefox', 'more picky', 'google-chrome', 'characters illegal picky', '39847666', 'firefox is more picky about characters that are set in uris than google-chrome\n')
('google-chrome', 'faster', 'firefox', 'faster slower browser', '19044179', 'the funny thing is that for abc_def property google-chrome is actually much faster than firefox and ie as i expected\n')
('firefox', 'easier', 'google-chrome', 'easier easy apk', '14747312', 'with firefox it was very easy i just grabbed the apk from their ftp server run the adb install command one would think it should be even easier with google-chrome but it s really not\n')
('firefox', 'more padding', 'google-chrome', 'higher smaller bigger', '38729442', 'firefox s default textbox includes more padding than ie google-chrome\n')
('firefox', 'higher', 'google-chrome', '', '11488114', 'most noticeably if you look or google-chrome firefox and then internet explorer 9 you ll notice that the terms and conditions are slightly higher than in google-chrome or firefox and thus slightly touching the main content area\n')
('firefox', 'always higher', 'google-chrome', 'higher smaller bigger', '7676281', 'the position of the list in firefox is always higher than that of google-chrome no matter how i padding or margin the list\n')
('google-chrome', 'better javascript', 'firefox', 'better time browser', '5204325', 'in my experience google-chrome has better javascript performance than firefox\n')
('firefox', 'larger', 'google-chrome', 'extensions browsers tool', '20738370', 'safari and opera work with the google-chrome setting but firefox and ie display the iframed page larger than google-chrome causing part of the text to be cut off\n')
('firefox', 'bolder', 'google-chrome', 'higher smaller bigger', '30802594', 'i have too problem with text in the firefox is bigger maybe bolder as in google-chrome .\n')
('google-chrome', 'larger heights', 'firefox', 'higher smaller bigger', '34256894', 'suffice to say ie and google-chrome start having problems at larger heights than does firefox\n')
('firefox', 'higher security', 'google-chrome', 'higher smaller bigger', '28196310', 'found that the issue stemmed from using the firefox webdriver which apparently has much higher security than its google-chrome counterpart\n')
('google-chrome', 'faster', 'firefox', 'faster slower browser', '7057368', 'as google-chrome s v8 is dramatically faster than firefox s spidermonkey at the moment these things are constantly in flux pick the forward loop as it s faster on the slower engine\n')
('firefox', 'slower', 'google-chrome', 'faster slower browser', '3156866', 'firefox is slower than google-chrome in javascript\n')
('firefox', 'older', 'google-chrome', 'forgiving work extension', '44939382', 'on stable versions of google-chrome the permissions show allow and it still won t connect even with firefox works older versions of google-chrome work\n')
('google-chrome', 'faster', 'firefox', 'faster slower browser', '5299127', 'but i guess google-chrome i have version 10 should be much faster than firefox 3.6\n')
('firefox', 'better', 'google-chrome', 'better time browser', '34924977', 'also why does firefox perform way better than google-chrome on this benchmark\n')
('google-chrome', 'better', 'firefox', 'better time browser', '12899440', 'transparency is also an issue however google-chrome seems to handle all three better than firefox\n')
('google-chrome', 'larger', 'firefox', 'higher smaller bigger', '8840940', 'i am checking it in firefox and google-chrome and see that in google-chrome spacing between letter is larger than in firefox\n')
('firefox', 'easier', 'google-chrome', 'easier easy apk', '41742075', 'i have been trying to do this in firefox webextensions but if it s easier with google-chrome i will try it that way instead.\n')
('firefox', 'richer', 'google-chrome', '', '2213961', 'i inspected the range object in both google-chrome and firefox and then noticed that firefox s range object is far richer than google-chrome s\n')
('firefox', 'filter slightly faster', 'google-chrome', 'faster slower browser', '42412501', 'tldr in firefox filter is slightly faster in google-chrome that s the opposite\n')
('firefox', 'slower', 'google-chrome', 'faster slower browser', '1233693', 'firefox is slower than google-chrome which boats one of the highest javascript engines a modified version of webkit\n')
('google-chrome', 'better', 'firefox', 'better time browser', '25318564', 'and additionally the algorithm that google-chrome uses is better than the one in firefox at least for handling the resizing of text\n')
('firefox', 'much better', 'google-chrome', 'better time browser', '8519584', 'ie8 is the same and firefox is much better but i ve migrated away to google-chrome now so would like to stick with the one browser if possible\n')
('google-chrome', 'faster', 'firefox', 'faster slower browser', '11881265', 'rendering without buffering on google-chrome is faster than firefox so i m actually not sure why google-chrome is having such a problem with drawimage\n')
('firefox', 'less noticeable', 'google-chrome', '', '10511066', 'support exists in firefox and my test just confirmed this√¢ but the handle is a little less noticeable than in google-chrome\n')
('google-chrome', 'better', 'firefox', 'better time browser', '14895327', 'google-chrome handles these better than compared to firefox\n')
('google-chrome', 'smaller', 'firefox', 'higher smaller bigger', '5699024', 'if we remove the font-size it appears properly in google-chrome but shows up smaller in firefox\n')
('google-chrome', 'more', 'firefox', 'forgiving work extension', '26973643', 'google-chrome is more forgiving or you could call it less compliant firefox less so\n')
('firefox', 'more', 'google-chrome', '', '38297450', 'firefox can get away with more than google-chrome before aborting\n')
('google-chrome', 'more limited', 'firefox', 'extensions browsers tool', '27465781', 'google-chrome extensions are considerably more limited than firefox extensions √¢ √¢ they can only hook the behavior of the browser in certain predefined ways\n')
('google-chrome', 'less', 'firefox', 'faster slower browser', '36332132', 'i need to do the same condition but for less than google-chrome version 46 and for less than firefox version 44\n')
('firefox', 'more', 'google-chrome', '', '5645603', 'firefox is more tolerant when it comes to image headers then ie and google-chrome\n')
('google-chrome', 'best less', 'firefox', 'better time browser', '12215314', 'the performance in google-chrome is best less so in firefox and ie\n')
('google-chrome', 'taller', 'firefox', 'higher smaller bigger', '4134107', 'currently with the 10px top padding the cells in google-chrome look taller than in firefox\n')
('firefox', 'faster', 'google-chrome', 'faster slower browser', '5150147', 'the results varied from a browser to another firefox 4.0b12 is faster using but google-chrome webkit and opera is faster when using\n')
('google-chrome', 'better', 'firefox', 'better time browser', '19165746', 'if you are able to enforce browser usage i find that google-chrome on android preserves line breaks when copying and pasting much better than firefox\n')
('firefox', 'larger', 'google-chrome', 'higher smaller bigger', '24077137', 'i ve found that the font-size in firefox is a bit larger than in google-chrome\n')
('firefox', 'better', 'google-chrome', 'better time browser', '30843036', 'although firefox is a better browser for developers than google-chrome cause it gives you more tools to work with\n')
('firefox', 'more advanced', 'google-chrome', 'forgiving work extension', '6916614', 'firefox has a more advanced plugin than the google-chrome extension but both work\n')
('firefox', 'wider', 'google-chrome', 'higher smaller bigger', '46178781', 'even if you give the inputs a attribute firefox renders them wider than google-chrome\n')
('google-chrome', 'faster', 'firefox', 'faster slower browser', '35114347', 'as you said google-chrome is faster than firefox so the webdriver is trying to interact with the dom before when elements are not yet visible exist\n')
('google-chrome', 'worse', 'firefox', 'faster slower browser', '23770379', 'though from a design perspective it may be easier to simply add the extra 5px to the width designing for the worst case browser to prevent wrapping in google-chrome which is worse than extra space in firefox ie\n')
('firefox', 'more strict', 'google-chrome', 'strict', '35358677', 'is this due to firefox being more strict than google-chrome\n')
('google-chrome', 'easier', 'firefox', 'better time browser', '4472205', 'another alternative for javascript ajax is writing a google-chrome add-on easier than firefox or embeding a web browser within your application\n')
('google-chrome', 'more', 'firefox', 'forgiving work extension', '22889989', 'google-chrome provides more detailed information about the ajax errors even when firefox doesn t say anything\n')
('firefox', 'much more', 'google-chrome', 'strict restrictions middle', '24072476', 'apple s safari applies almost no cross domain restrictions to files opened locally but firefox is much more strict about what it permits with google-chrome somewhere in the middle\n')
('google-chrome', 's much longer', 'firefox', 'faster slower browser', '17238511', 'i want to set my own time limit rather than use the browser s default i believe google-chrome s is much longer than firefox s\n')
('firefox', 'larger', 'google-chrome', 'extensions browsers tool', '5780924', 'this is because in ie and firefox the footer link text is larger than in google-chrome and safari therefore the margins that i ve set up for the icons do not work\n')
('google-chrome', 'slower', 'firefox', 'faster slower browser', '24051882', 'i have been working with linear parsers lately and noticed the performance in google-chrome v37 was much slower than in firefox v30\n')
('google-chrome', 'higher however', 'firefox', 'higher smaller bigger', '16534059', 'i just found out that if you re using google-chrome you trigger antialiasing at 49px or higher however with firefox it s set at 257px or higher\n')
('firefox', 'much better', 'google-chrome', 'better time browser', '29925542', 'on my computer firefox performs much better than google-chrome on these tests using jsperf\n')
('firefox', 'better', 'google-chrome', 'better time browser', '30315914', 'my knowledge of firefox is better than google-chrome so my apologies if i missed something\n')
('firefox', 'worse', 'google-chrome', 'faster slower browser', '39862190', 'firefox gsap performance is still much worse than in google-chrome but google-chrome gsap does still lag every few repeats or so while in google-chrome the css animations do not\n')
('firefox', 'wider', 'google-chrome', 'higher smaller bigger', '35241820', 'the same word in firefox look wider than in google-chrome\n')
('firefox', 'slower', 'google-chrome', 'faster slower browser', '16188505', 'svg performance in firefox is slower than in webkit google-chrome and ie10\n')
('firefox', 'perhaps more right', 'google-chrome', 'higher smaller bigger', '20625114', 'thus i think firefox is perhaps more right but other developers at google-chrome think otherwise\n')
('firefox', 'smoother', 'google-chrome', 'faster slower browser', '15058125', 'i m on a mac os x 10.8.2 running firefox 18.0.2 - it actually runs the game faster and smoother than my google-chrome 25.0.1364.99\n')
('google-chrome', 'situation better', 'firefox', 'better time browser', '43033977', 'ps i ve noticed that in google-chrome situation is better than in firefox but new line still starts beneath tag\n')
('firefox', 'better', 'google-chrome', 'better time browser', '3341954', 'they use iframes in firefox which seems better but in google-chrome they do this by putting manually defined span and font tags\n')
('firefox', 'taller element', 'google-chrome', 'higher smaller bigger', '18185150', 'the reason this is happening is because firefox renders the select box as a taller element than google-chrome and the container of the blue text is getting caught on the select s container element because it s now sticking out lower than the others\n')
('google-chrome', 'better', 'firefox', 'better time browser', '32425205', 'it seems google-chrome applies some formatting to render better than firefox\n')
('firefox', 'sometimes more', 'google-chrome', 'forgiving work extension', '12488412', 'in my experience firefox is sometimes more lenient than google-chrome but i would definitely test in both\n')
('firefox', 'more strict', 'google-chrome', '', '7377302', 'firefox and ie9 require a proper domain to run from presumably because they are more strict than google-chrome in the way they associate the localstorate object to a domain in google-chrome it doesn t need to be a domain as such\n')
('firefox', 'lesser extent', 'google-chrome', 'better time browser', '6583582', 'this is sporadic and i see it happening most of the time with firefox 4.0.1 and 5.0 and to a lesser extent with google-chrome\n')
('google-chrome', 'chromium much better', 'firefox', 'better time browser', '15934117', 'also for animations google-chrome chromium behaves much better that is why i use it for development but do my general browsing in firefox\n')
('google-chrome', 'more persnickety', 'firefox', '', '10527980', 'obviously google-chrome is more persnickety whereas firefox defaults to moving and sizing the printout as necessary\n')
('firefox', 'bigger height', 'google-chrome', 'higher smaller bigger', '23845903', 'but in firefox the left-collumn gets a much bigger height than in google-chrome\n')
('google-chrome', 'earlier', 'firefox', '', '4265710', 'if google-chrome seems to finish earlier than firefox then that is the freezing glitch in action\n')
('google-chrome', 'faster', 'firefox', 'faster slower browser', '44011008', 'maybe google-chrome is working faster than firefox try adding a wait with expected conditions\n')
('firefox', 'better', 'google-chrome', '', '6433693', 'given these last two complications i am leaning towards a browser plugin as the solution probably firefox since low-level http stuff seems to be better supported than in google-chrome but i am wondering if anyone has an idea for a more cross-browser-y solution and or if there is something out there that might provide a good api for this kind of thing\n')
('google-chrome', 'slower', 'firefox', 'faster slower browser', '9050531', 'use firefox rather than google-chrome - google-chrome with dev mode is much slower than firefox\n')
('firefox', 'taller', 'google-chrome', 'higher smaller bigger', '6557784', 'by highlighting the shape of the two elements you can see that in firefox left the button is 2px taller than in google-chrome right\n')
('firefox', 'higher baseline', 'google-chrome', 'higher smaller bigger', '14870041', 'ie firefox higher than baseline google-chrome on baseline\n')
('firefox', 'even slower', 'google-chrome', 'faster slower browser', '11057475', 'firefox is even slower that google-chrome\n')
('firefox', 'higher', 'google-chrome', 'higher smaller bigger', '35735824', 'what firefox displays is about 5 inches higher than what google-chrome displays\n')
('firefox', 'slower', 'google-chrome', 'faster slower browser', '24708649', 'update just tried it on firefox 30 and it did not experience the same slowdown in a worker thread but it was slower than google-chrome when run in the main thread\n')
('firefox', 'nicer', 'google-chrome', 'better time browser', '21204517', 'in firefox this might be handled a little nicer than google-chrome but rather than completely redraw an element you should try to append only what you need\n')
('google-chrome', 'older issue', 'firefox', 'similar issue windows', '32256754', 'i have encounter a problem with google-chrome that is similar to an older issue with firefox at this url scrolling blocks javascript execution in firefox\n')
('google-chrome', 'nicer', 'firefox', '', '9634984', 'in my testing google-chrome is nicer it pops-up the unresponsive alert whereas firefox apparently doesn t care\n')
('google-chrome', 'less conveniently', 'firefox', 'better time browser', '28388530', 'what s up with google-chrome that the debugger behaves less conveniently than firefox\n')
('google-chrome', 'thinner', 'firefox', 'higher smaller bigger', '12303054', 'even then google-chrome s fonts look thinner than in firefox or ie\n')
('firefox', 'more padding', 'google-chrome', 'higher smaller bigger', '2954659', 'in firefox the input button has more padding than in google-chrome\n')
('google-chrome', 'more', 'firefox', '', '22364875', 'google-chrome is more flexible in this sense than firefox which is why it works there\n')
('google-chrome', 'passwords smaller', 'firefox', 'higher smaller bigger', '12990034', 'google-chrome renders passwords smaller than firefox\n')
('firefox', 'better', 'google-chrome', 'better time browser', '37640574', 'evidently firefox debugger firebug is better than google-chrome debugger\n')
('google-chrome', 'better', 'firefox', 'better time browser', '7876912', 'the google-chrome apis are currently experimental hence these tools are likely to be better developed under firefox\n')
('firefox', 'higher', 'google-chrome', 'higher smaller bigger', '11648488', 'i know different engines render fonts differently and but the issue i m having is that firefox renders the font higher than google-chrome - at the size i am displaying the font this is very noticeable 3 or 4 px - which on a button means they re totally misaligned\n')
('google-chrome', 'faster', 'firefox', 'faster slower browser', '5746611', 'i use google-chrome for development as i find it runs faster than firefox and ie so it is a bore to guess where the icons are\n')
('google-chrome', 'bigger', 'firefox', 'higher smaller bigger', '7229568', 'why height in google-chrome is bigger than firefox of input\n')
('google-chrome', 'more files', 'firefox', '', '17532421', 'in google-chrome there is more files download 47 than in firefox ie 42\n')
('firefox', 'reproducible more', 'google-chrome', 'higher smaller bigger', '25065194', 'this does not seem to occur in safari or ie and a similar permission error occurs sometimes in firefox but is reproducible more often than not in google-chrome\n')
('firefox', 'more', 'google-chrome', 'ram memory', '7159127', 'firefox allocates lots of memory during that preloading up to 20-30 times more than google-chrome or safari do and even twice as much as ie\n')
('firefox', 'better', 'google-chrome', 'better time browser', '45031412', 'also ie and firefox seems to work better than google-chrome\n')
('google-chrome', 'smaller', 'firefox', 'higher smaller bigger', '30222783', 'it looks like google-chrome is smaller in your screenshot there so firefox could just not be at the defined break-point yet\n')
('google-chrome', 'faster', 'firefox', '', '42117742', 'what we can see is that regardless of raw hardware power google-chrome seems to run up to three times faster than edge and also significantly faster than firefox all updated to the latest verion\n')
('firefox', 'quicker even', 'google-chrome', 'better time browser', '18477622', 'the most interesting thing i noted is that certain test combos in firefox are much quicker than even google-chrome\n')
('firefox', 'worse', 'google-chrome', 'faster slower browser', '6817093', 'google-chrome is lightning fast when you use the dom api but vastly slower using the .innerhtml operator by a magnitude 1000-fold slower however firefox is worse than google-chrome in some areas for instance the append test is much slower than google-chrome but the innerhtml test runs much faster than google-chrome\n')
('firefox', 'far more subtle', 'google-chrome', '', '45818759', 'it s clearly visible in firefox and is far more subtle yet also distinguishable in google-chrome\n')
('google-chrome', 'stricter', 'firefox', 'data stricter seconds', '44613029', 'google-chrome is stricter than firefox when it comes to loading data from your local filesystem\n')
('google-chrome', 'less pleasant', 'firefox', '', '21798628', 'i m trying to add a ribbon to a page using css3 linear-gradients but the rendering in google-chrome looks a lot less pleasant than its firefox or ie alternative\n')
('firefox', 'more', 'google-chrome', 'forgiving work extension', '20262398', 'i m taking a quite educated guess here that firefox is more forgiving with the irregular syntax than google-chrome\n')
('firefox', 'clearly less', 'google-chrome', '', '40264503', 'firefox is clearly less secured it deliberately allows something that google-chrome locks down\n')
('firefox', 'more forgiving', 'google-chrome', 'forgiving work extension', '3008645', 'most likely your post value has one or more characters in it that are breaking the html of the page and ie firefox are being a bit more forgiving than google-chrome is\n')
('firefox', 'greatly faster', 'google-chrome', 'faster slower browser', '19769556', 'i ve found that firefox is greatly faster with imacros than google-chrome\n')
('google-chrome', 'more strict', 'firefox', 'strict restrictions middle', '2821210', 'google-chrome s parsing may be more strict than firefox is at having things like trailing commas as specified by the standard at as stated in danilo celic s answer\n')
('firefox', 'smaller', 'google-chrome', 'higher smaller bigger', '13139755', 'my menu links seem in google-chrome correctly but in firefox my menu links are 1 px smaller than google-chrome\n')
('google-chrome', 'more', 'firefox', 'higher smaller bigger', '16420086', 'when i run my http web server on google google-chrome it gives more 324 error than in firefox\n')
('google-chrome', 'slower', 'firefox', 'faster slower browser', '40715077', 'google-chrome is extremely slow for your code path but grep seems to be 50 faster than array.filter here making it 900 slower than the firefox run\n')
('google-chrome', 'typically narrower', 'firefox', '', '8618000', 'try your current setup in google-chrome google-chrome typically has a narrower minimum viewport width and try something like min-width 600px in firefox and your styles should be applied as expected layout.css will be applied when the viewport is at least 600px wide\n')
('firefox', 'slower', 'google-chrome', 'faster slower browser', '18308946', 'firefox - good a bit slower than google-chrome\n')
('firefox', 'brighter', 'google-chrome', 'extensions browsers tool', '32877975', 'in firefox and other browsers the background is much whiter and brighter than in google-chrome\n')
('firefox', 'more complete', 'google-chrome', 'better time browser', '32095422', 'pd note that firefox s developer tools are better and more complete than google-chrome developer tools but in essence are for the same purpose\n')
('google-chrome', 'more details', 'firefox', 'faster slower browser', '17608767', 'i usually use google-chrome s developer mode which imho already gives even more details than firefox\n')
('google-chrome', 'easier', 'firefox', 'extensions browsers tool', '7366195', 'i found programming google-chrome extensions easier than firefox but i couldn t come across something similar to xpcom in google-chrome\n')
('firefox', 'longer', 'google-chrome', 'forgiving work extension', '3591151', 'this is due to the simple fact that firefox has been in the extension business longer than google-chrome or ie\n')
('google-chrome', 'security fussier', 'firefox', '', '20009049', 'i ve learned partly by trawling this site that the google-chrome security is fussier and the app loads correctly without errors in firefox and ie but i can t find any resources that are loaded from a non https source\n')
('firefox', 'longer', 'google-chrome', '', '36987871', 'firefox takes almost 3 times longer than google-chrome\n')
('google-chrome', 'better', 'firefox', 'better time browser', '11662302', 'when i ran the test individually with a timer google-chrome actually performed better than firefox hope this helps\n')
('google-chrome', 'faster', 'firefox', 'faster slower browser', '20655397', 'now when clicking a time less than 1 millisecond will be displayed however it obviously takes nearly a second on my computer until the changed color actually is displayed where btw. google-chrome seems to be faster than firefox\n')
('firefox', 'everything more saturated', 'google-chrome', '', '3237600', 'i have just noticed a site i am working on looks different in google-chrome than other browsers saf firefox everything is more saturated in google-chrome even a background-color rgb\n')
('firefox', 'bolder', 'google-chrome', 'higher smaller bigger', '16221732', 'font-face bold in firefox is bolder than in google-chrome\n')
('firefox', 'more', 'google-chrome', 'better time browser', '18528300', 'my firefox adds more chopping to video playing itself google-chrome plays the video much better\n')
('google-chrome', 'quicker', 'firefox', 'extensions browsers tool', '19350398', 'also google-chrome has a great tool that allows you to edit css on the fly which i find more useful and quicker than using firefox s extensions\n')
('firefox', 'faster', 'google-chrome', 'faster slower browser', '35612869', 'that means firefox is more than 7x faster than google-chrome here\n')
('google-chrome', 'typeof slower', 'firefox', 'faster slower browser', '20680334', 'in google-chrome typeof is slower than the other two but in firefox it is the fastest\n')
('firefox', 'more', 'google-chrome', '', '3288456', 'firefox produces more space compared to google-chrome\n')
('google-chrome', 'faster', 'firefox', 'faster slower browser', '36034808', 'and of course the results - if they are reproducible - might suggest that google-chrome is faster than firefox or that firefox just prioritises timeouts over dom events\n')
('google-chrome', 'earlier', 'firefox', '', '1996484', 'i suspect that this may be the case because ie and google-chrome need to know about the content of the div earlier than firefox\n')
('firefox', 'better performance', 'google-chrome', 'better time browser', '39681968', 'of late firefox has had much better performance than google-chrome\n')
('firefox', 'slower', 'google-chrome', 'faster slower browser', '20740967', 'spidermonkey firefox is slower 50 of google-chrome max speed but the speed is consistent\n')
('google-chrome', 'higher', 'firefox', 'higher smaller bigger', '7012987', 'in google-chrome it is appearing higher than the original in firefox\n')
('firefox', 'less responsive', 'google-chrome', '', '46691875', 'but firefox keeps being less responsive than google-chrome or ie\n')
('firefox', 'slower', 'google-chrome', 'faster slower browser', '8382400', 'it depends on the browser its definitely true for ie and firefox but seems slower on google-chrome\n')
('google-chrome', 'less', 'firefox', 'data stricter seconds', '640303', 'using the same data google-chrome does in less than 5 seconds what took ie and firefox 10 to 15 seconds to accomplish\n')
('firefox', 'version better', 'google-chrome', 'better time browser', '15244665', 'install firebug firefox version is better then a google-chrome one\n')
('firefox', 'quicker', 'google-chrome', 'slower duration 1s', '34985268', 'firefox seems to animate the element quicker than google-chrome does and so while a duration of 1s is enough for the animation in google-chrome firefox needs it to be 2s to be slower and show the effect\n')
('google-chrome', 'less frequent', 'firefox', '', '15113342', 'this doesn t happen in google-chrome and is less frequent in firefox than in ie\n')
('firefox', 'less', 'google-chrome', 'forgiving work extension', '42775173', 'also about firefox i know still less than google-chrome and i m not sure about how it innerly manage resources among threads and if it is even possible to achieve what i want but if possible i d need to do the same work with firefox threads\n')
('firefox', 'smaller left', 'google-chrome', 'higher smaller bigger', '25310350', 'why in firefox text smaller left than in google-chrome and opera right\n')
('firefox', 'more standards-compliant', 'google-chrome', 'forgiving work extension', '33759931', 'firefox which is more standards-compliant than google-chrome doesn t allow this\n')
('google-chrome', 'better imo', 'firefox', 'better time browser', '23245240', 'google-chrome sends back and html collection that is longer really better imo than firefox ie or chromium\n')
('firefox', 'easier', 'google-chrome', 'better time browser', '41484342', 'firefox is easier and better than google-chrome in finding the element from the webpage\n')
('google-chrome', 'faster', 'firefox', 'faster slower browser', '18351894', 'in my experience google-chrome will be a lot faster than firefox to debug huge js files\n')
('firefox', 'less noticeable', 'google-chrome', '', '18204595', 'in firefox it s less noticeable but in google-chrome it s very noticeable\n')
('firefox', 'more technically', 'google-chrome', '', '7616566', 'firefox is more technically correct in this case as it outputs the state of the object at each point in the loop whereas google-chrome is apparently waiting until the end of the loop to output each console.log but i m not aware of a standards specification that covers the console host object\n')
('firefox', 'faster', 'google-chrome', 'faster slower browser', '23763890', 'i am not concerned about the fact that firefox runs faster as browser js implementations will vary so much as the wide spread of results encountered in google-chrome that makes getting an accurate result impossible\n')
('google-chrome', 'slower', 'firefox', 'faster slower browser', '23311171', 'do you have any idea why google-chrome loads javascript function much slower than firefox\n')
('google-chrome', 'faster', 'firefox', 'faster slower browser', '27318095', 'for example using renatoargh s test google-chrome is faster with option 2 firefox with option 1\n')
('google-chrome', 'older', 'firefox', 'faster slower browser', '40642495', 'i would like this function to work in firefox ie google-chrome etc but at the moment it only works in google-chrome and older than firefox version 49\n')
('google-chrome', 'slower', 'firefox', 'slower duration 1s', '18452965', 'this is trickier to work around and you should file a google-chrome bug describing the situation and where it s slower than firefox but you could potentially reduce the amount of buffer uploads by looking into instancing or using uniform arrays instead of updating vertexes for positions textures\n')
('firefox', 'shorter', 'google-chrome', '', '20622748', 'however a sdp object local description by firefox does not contain datachannel at all and moreover the sdp is much shorter than google-chrome and less information bundled\n')
('firefox', 'better', 'google-chrome', 'better time browser', '42863498', 'so firefox is better than google-chrome - but both suck in that regard\n')
('firefox', 'more', 'google-chrome', 'forgiving work extension', '38256817', '2 install the firefox extension there s also one for google-chrome but the firefox one is more reliable -- so if you re a google-chrome addict like i am then use both\n')
('google-chrome', 'longer', 'firefox', 'higher smaller bigger', '30248543', 'google-chrome renders longer input fields than firefox and ie\n')
('firefox', 'bigger', 'google-chrome', 'higher smaller bigger', '11542460', 'here the working header request with firefox bigger than google-chrome request\n')
('google-chrome', 'bigger', 'firefox', 'higher smaller bigger', '4899792', 'i built a site and the problem is google-chrome display font-size 1px bigger than firefox\n')
('google-chrome', 'higher', 'firefox', 'higher smaller bigger', '11208545', 'on linux google-chrome displays text about one pixel higher than firefox and opera\n')
('firefox', 'slower', 'google-chrome', 'faster slower browser', '12150212', 'i ve tested the sample on firefox and it s a bit slower than google-chrome but usable\n')
('google-chrome', 'much better', 'firefox', 'better time browser', '3136004', 'is it because google-chrome has much better javascript support than firefox\n')
('google-chrome', 'wider', 'firefox', 'higher smaller bigger', '19297982', 'in google-chrome the button is wider than in firefox\n')
('firefox', 'objects better', 'google-chrome', 'better time browser', '39372828', 'performance is browser and device dependent for example firefox handles objects better than arrays while google-chrome prefers arrays\n')
('firefox', 'stricter', 'google-chrome', 'data stricter seconds', '43785589', 'i d say that firefox is correct in being stricter than google-chrome here even though i m not entirely sure the base uri has changed and this new uri should be used for the relative uri #symboltype1 too\n')
('google-chrome', 'more finnicky', 'firefox', 'forgiving work extension', '43724970', 'in general i have found google-chrome to be more finnicky than firefox\n')
('google-chrome', 'less', 'firefox', '', '16169171', 'update3 now it works here which means that i couldn t fully reproduce my bug to show it to you but in general the problem is that the height of 5x5 table in google-chrome is less from firefox on 22px which is 22px gap between table container and a table itself\n')
('firefox', 'easier', 'google-chrome', 'easier easy apk', '17298652', 'firefox is probably easier than google-chrome these days\n')
('firefox', 'faster', 'google-chrome', 'faster slower browser', '41419724', 'this makes firefox 50x faster than google-chrome and 70x faster than safari is there any known reason for that\n')
('firefox', 'faster', 'google-chrome', 'faster slower browser', '30830253', 'here is a simple performance test showing that in google-chrome filling is faster than clearing i am not sure what goes on with google-chrome and canvas nowadays but in firefox clearing is many times faster than filling both significantly faster than google-chrome\n')
('firefox', 'more detailed', 'google-chrome', '', '39137371', 'use firefox network in development tools and check your requests sometimes it just sends options request in cross origin i insist on firefox because it s network tool is much more detailed than google-chrome and safari\n')
('google-chrome', 'more smoothly', 'firefox', 'extensions browsers tool', '43524743', 'notably this doesn t happen in all browsers google-chrome renders more smoothly than ie and firefox for instance but is there any way i can make those white lines stop appearing when the user zooms in\n')
('firefox', 'slower', 'google-chrome', 'better time browser', '2284148', 'better use google-chrome even thought firefox is not slower than google-chrome for once probably the tracing for the image comparison pays off yay\n')
('google-chrome', 'older', 'firefox', 'forgiving work extension', '6070609', 'i believe the error might be how firefox and google-chrome handles these multiple times included jquerys and it might be that google-chrome uses the older and firefox newer version\n')
('google-chrome', 'higher severity', 'firefox', '', '41705094', 'google-chrome is reporting the missing key with a higher severity than firefox is so i want to eliminate that as a possible cause\n')
('firefox', 'larger', 'google-chrome', 'higher smaller bigger', '19429156', 'for example if you have a text size of 15px well firefox makes a larger 15px than google-chrome does\n')
('google-chrome', 'better', 'firefox', 'better time browser', '25699066', 'google-chrome dev tools are by far better than firefox ie whatever imho\n')
('google-chrome', 'more', 'firefox', '', '19007974', 'ellipsis still wraps in google-chrome but is more user friendly in firefox by adding the .\n')
('google-chrome', 'less', 'firefox', 'faster slower browser', '8120047', 'the idea is that if they are using ie then they must install google-chrome frame and if they are using less than firefox 4 or opera 11.5 then they must upgrade their browser not not sure if the way i am doing that is correct\n')
('firefox', 'more handy', 'google-chrome', 'extensions browsers tool', '16682516', 'first just a heads up you may want to try firebug+firepath on firefox which is a more handy tool than google-chrome s developer tool\n')
('firefox', 'smaller', 'google-chrome', 'extensions browsers tool', '10007704', 'while the rest of the browsers report the correct width of the document firefox reports a smaller one example at screen resolution of 1920x1080 ie google-chrome and safari reports 1920 while firefox reports 1903\n')
('google-chrome', 'more', 'firefox', '', '30537568', 'often google-chrome is understanding more thing then it should and firefox is bringing you the reality back in your face eheh\n')
('firefox', 'lower', 'google-chrome', 'better time browser', '18394282', 'phantomjs achieves a better accuracy than firefox slightly lower than google-chrome but in around half the time of firefox\n')
('google-chrome', 'faster', 'firefox', 'faster slower browser', '4213247', 'right now google-chrome is faster than firefox sunspider tests so your statement it loads faster in firefox is not really correct\n')
('firefox', 'smaller', 'google-chrome', 'higher smaller bigger', '17458265', 'firefox thumbnail 4 times smaller than on google-chrome\n')
('firefox', 'more', 'google-chrome', 'strict restrictions middle', '18223158', 'it works in firefox because firefox is more lax about this security restriction and google-chrome happens to be more strict on mixed-content errors\n')
('firefox', 'better', 'google-chrome', 'better time browser', '27272144', 'it s not the first time that the plugin for firefox works better for me than the one for google-chrome\n')
('firefox', 'lower', 'google-chrome', 'higher smaller bigger', '15483083', 'in firefox it seems that this is 1px lower than in google-chrome and safari\n')
('google-chrome', 'bigger time', 'firefox', 'better time browser', '21867035', 'google-chrome has a bigger time difference yet firefox is the one with the gap in the animation\n')
('google-chrome', 'more restrictive', 'firefox', 'better time browser', '5020686', 'no and there won t be any time soon because google-chrome s add-on api is more restrictive than firefox\n')
('firefox', 'just stricter', 'google-chrome', 'faster slower browser', '19391406', 'it is also proper browser behavior firefox is just stricter about it than google-chrome is\n')
('google-chrome', 'slower', 'firefox', 'faster slower browser', '22182454', 'also google-chrome s map function is up to 2x slower than firefox on my machine\n')
('google-chrome', 'pickier', 'firefox', 'more-so pickier', '28008564', 'apparently google-chrome is pickier than firefox\n')
('google-chrome', 'more ram', 'firefox', 'ram memory', '36921492', 'we use google-chrome though which i believe uses more ram than firefox\n')
('firefox', 'more', 'google-chrome', '', '19754809', 'firefox encodes more characters than google-chrome\n')
('firefox', 'less', 'google-chrome', '', '40264341', 'or does this mean firefox is less secured on that point than google-chrome\n')
('firefox', 'much better', 'google-chrome', 'better time browser', '26699714', 'in firefox it s much better than google-chrome but still not as black as ie\n')
('firefox', 'faster', 'google-chrome', 'faster slower browser', '3164817', 'also firefox 4 has hardware accelerated canvas that is marginally faster than ie9 and a lot faster than google-chrome\n')
('google-chrome', 'larger', 'firefox', 'higher smaller bigger', '15382071', 'arabic default font in google-chrome is larger than it is in firefox\n')
('firefox', 'lower', 'google-chrome', 'extensions browsers tool', '46124506', 'open up the fiddle in both firefox google-chrome to see what i m talking about - in firefox the positioning of the background image is much lower than in google-chrome safari\n')
('google-chrome', 'faster', 'firefox', 'faster slower browser', '1238849', 'the trouble is choosing a good value for x since for this particular page google-chrome is so very much faster than firefox which is faster than ie\n')
('google-chrome', 'less close', 'firefox', '', '32568215', 'btw google-chrome is less close to w3c specs than firefox de 42+ i d opt to start using firefox for your initial testing and then test it in ch to detect quirks\n')
('google-chrome', 'even faster', 'firefox', 'faster slower browser', '4952787', 'in ie8 and google-chrome it runs even faster than firefox in general and this slow down never happens\n')
('google-chrome', 'just more', 'firefox', 'forgiving work extension', '20167596', 'google-chrome is just more forgiving for some mistakes then firefox\n')
('google-chrome', 'bigger', 'firefox', 'higher smaller bigger', '11782208', 'in google-chrome the green div is bigger than in firefox i really don t know what is the problem i think in firefox it displays as it should but in google-chrome and ie9 it displays different\n')
('firefox', 'less forgiving', 'google-chrome', 'forgiving work extension', '27507680', 'actually your code doesn t work on firefox because he is less forgiving than google-chrome about errors\n')
('firefox', 'slower', 'google-chrome', 'faster slower browser', '10706070', 'and also does anyone know why is firefox so much slower than google-chrome in 3d rendering\n')
('google-chrome', 'more information', 'firefox', 'console first information', '21147622', 'the google-chrome console gives more information than the firefox console\n')
('google-chrome', 'more', 'firefox', 'better time browser', '25982053', 'my guess is google-chrome is caching more agressively and thats why you are seeing worse load time on firefox\n')
('firefox', 'more', 'google-chrome', '', '17973121', 'i think from my tests perhaps firefox has more strict standards than google-chrome about cookie manipulation\n')
('google-chrome', 'more', 'firefox', 'higher smaller bigger', '3702732', 'any ideas why google-chrome is apply more spacing than firefox ie\n')
('firefox', 'slower', 'google-chrome', 'faster slower browser', '16481858', 'using firefox even it s slower than google-chrome it s still more respectful of privacy\n')
('firefox', 'more flexibility', 'google-chrome', '', '14040074', 'firefox may be sniffing the document s encoding with more flexibility than google-chrome is\n')
('google-chrome', 'smarter', 'firefox', '', '17538178', 'i guess google-chrome is smarter about me being careless than firefox is\n')
('firefox', 'slower', 'google-chrome', 'faster slower browser', '4398883', 'as you can see ie 8 is about 5 times slower than firefox 3.6 and almost 20 times slower than google-chrome 9 at least when using sunspider tests\n')
('firefox', 'lower', 'google-chrome', 'higher smaller bigger', '25118060', 'it seems that in firefox ie the line-through style is a bit lower than google-chrome i am not sure if this is because of the implementation of different browsers or something\n')
('google-chrome', 'more strict', 'firefox', 'strict', '5697000', 'google-chrome is a bit more strict than firefox here\n')
('google-chrome', 'better', 'firefox', '', '15999099', 'graph beeing cut in google-chrome is a known issue google-chrome does not respect some print css and works much better with firefox not all versions still\n')
('firefox', 'better', 'google-chrome', 'better time browser', '36229848', 'the logs only seem to work with a google-chrome browser which is a laugh as usually firefox is better at running google apps than google-chrome\n')
('google-chrome', 'higher', 'firefox', 'higher smaller bigger', '2512461', 'so i wonder the benchmark is also influenced by the installed extensions or google-chrome is really so much higher than firefox in performance\n')
('google-chrome', 'actually load', 'firefox', 'faster slower browser', '31841419', 'based on what you have provided i cannot tell if google-chrome actually does load faster than firefox\n')
('firefox', 'better', 'google-chrome', 'better time browser', '25605880', 'i have tried firefox and it better than google-chrome crash issue is not always happen but not solved this issue\n')
('google-chrome', 'better', 'firefox', 'better time browser', '17510122', 'bad buffering can also be a result of a slow computer because statistics show that google-chrome is better for a normal-fast computer and firefox works best on slow computers\n')
('firefox', 'more sluggish', 'google-chrome', 'better time browser', '14176911', 'firefox on nexus 7 is a bit better at producing reasonable sample rate readings but the updating of the display is even more sluggish than google-chrome\n')
('google-chrome', 'smaller', 'firefox', 'higher smaller bigger', '11605875', 'in google-chrome the button should be a tad smaller than in firefox\n')
('google-chrome', 'bigger', 'firefox', 'higher smaller bigger', '8817800', 'that happens because pixels size in google-chrome is bigger than in firefox\n')

parsley	robotlegs	3
('parsley', 'more robust', 'robotlegs', '', '6585643', 'parsley is more robust and adds a lot more features than robotlegs which is why its been used in the world s largest flex applications\n')
('parsley', 'more features', 'robotlegs', '', '6585643', 'parsley is more robust and adds a lot more features than robotlegs which is why its been used in the world s largest flex applications\n')
('parsley', 'more', 'robotlegs', '', '6585643', 'parsley is more robust and adds a lot more features than robotlegs which is why its been used in the world s largest flex applications\n')

requestfactory	gwt	3
('requestfactory', 'better counterpart', 'gwt', 'better counterpart db4o', '9420697', 'from gwt 2.1 requestfactory is better counterpart than gwt rpc when you use db4o together\n')
('requestfactory', 'more complicated systems', 'gwt', '', '4926459', 'with requestfactory you pay an up-front startup cost to accommodate more complicated systems than gwt rpc easily supports\n')
('requestfactory', 'slower', 'gwt', 'better counterpart db4o', '14364885', 'gwt requestfactory by design is slower than gwt rpc and gwt json etc\n')

profiler	gprof	3
('profiler', 'way better results', 'gprof', '', '6664948', 'for time measurements use google s cpu profiler it gives way better results than gprof\n')
('profiler', 'better results', 'gprof', '', '6664948', 'for time measurements use google s cpu profiler it gives way better results than gprof\n')
('profiler', 'way better', 'gprof', '', '6664948', 'for time measurements use google s cpu profiler it gives way better results than gprof\n')

many-to-one	one-to-many	3
('many-to-one', 'side much more efficient', 'one-to-many', '', '25251777', 'inverse is for bidirectional associations and most often it s on the same side with cascade but that s because the many-to-one side is much more efficient to control the association than the one-to-many one\n')
('many-to-one', 'side much more', 'one-to-many', '', '25251777', 'inverse is for bidirectional associations and most often it s on the same side with cascade but that s because the many-to-one side is much more efficient to control the association than the one-to-many one\n')
('many-to-one', 'much easier', 'one-to-many', '', '3114169', 'fifth many-to-one is much easier to use correctly in nhibernate and i assume hibernate than one-to-many collection mapping\n')

boolean	int	27
('int', 'longer last case', 'boolean', '', '46043964', 'but wait it s not really constant for boolean arrays and why does int array indexing take longer last case than boolean array indexing even if it has to process 5 times less elements\n')
('int', 'more', 'boolean', '', '28614411', 'you can encode up to 32 boolean in an int as follows the method won t error on more than 32 boolean s but won t be able to unpack correctly\n')
('int', 'less space', 'boolean', 'value efficient existence', '23069431', 'it is saying this because using the int to store the value 32 bits is going to use less space than a boolean 256 as each allocated boolean will take up 8 bits 8 256 2048\n')
('boolean', 'less', 'int', '', '4528318', 'keep in mind that depending on the use and on the system using it while a boolean takes less space because it s just a single bit depending on the implementation an int is the native word size of the hardware\n')
('boolean', 'better performance', 'int', '', '30976199', 'a boolean would most likely not yield better performance than int since the excel formula engine is dynamically typed\n')
('boolean', 'less space', 'int', '', '4528318', 'keep in mind that depending on the use and on the system using it while a boolean takes less space because it s just a single bit depending on the implementation an int is the native word size of the hardware\n')
('boolean', 'operation quite longer', 'int', '', '42760245', 'so boolean operation is quite longer than for int or float\n')
('boolean', 'more time', 'int', 'time a.length consuming', '35320435', 'since the logic is the same i thought evaluating boolean objects takes more time than int equivalence true 1 and false 0 therefore i came up with the following benchmark and it turns out that i was correct\n')
('int', 'better', 'boolean', 'type numeric better', '35052403', 'perhaps using int type if values are all numeric would work better than boolean for a and b\n')
('boolean', 'more', 'int', 'time a.length consuming', '21107085', 'however the second loop causes the additional task of casting each of the values between a.length and 0 to a boolean which is more time consuming than int comparison\n')
('boolean', 'less space', 'int', 'memory heap space', '22715785', 'a boolean takes less space than an int\n')
('boolean', 'longer', 'int', '', '42760245', 'so boolean operation is quite longer than for int or float\n')
('boolean', 'true more meaningful', 'int', '', '19790845', 'boolean true is more meaningful than int or chars 1\n')
('int', 'more memory', 'boolean', 'memory heap space', '18152578', 'int occupy more memory than boolean so the heap got corrupted\n')
('boolean', 'less', 'int', '', '20412664', 'which is invalid as a boolean cannot be less than an int\n')
('boolean', 'true more', 'int', '', '19790845', 'boolean true is more meaningful than int or chars 1\n')
('int', 'better', 'boolean', '', '38837450', 'there is one case when boolean or int works better than boolean and int\n')
('int', 'better', 'boolean', '', '4545595', 'also your examples about why int would be better than boolean are kinda flawed\n')
('boolean', 'more efficient', 'int', 'value efficient existence', '7221963', 'i always assumed that boolean were more efficient than int at storing an on off value - considering that s their reason for existence\n')
('int', 'more', 'boolean', '', '29899349', 'since your patterns are just 0 and 1 values you can think of them as numeric values long is a 64bit int which is more than enough which can be converted later to a boolean matrix\n')
('boolean', 'more meaningful', 'int', '', '2469679', 'from the link which is mentioned in question my question is that microsoft says the c# type keywords and their aliases are interchangeable but why we need aliases from my point of view boolean is more meaningful then bool and int32 is more meaningful then int then why aliases\n')
('boolean', 'more meaningful', 'int', '', '19790845', 'boolean true is more meaningful than int or chars 1\n')
('boolean', 'more', 'int', '', '2469679', 'from the link which is mentioned in question my question is that microsoft says the c# type keywords and their aliases are interchangeable but why we need aliases from my point of view boolean is more meaningful then bool and int32 is more meaningful then int then why aliases\n')
('boolean', 'greater', 'int', '', '23406215', 'if the boolean value is true and the length of the string is greater than the int value print the sum of the float and the int\n')
('boolean', 'more space', 'int', 'value efficient existence', '18429507', 'would a boolean array of size 32 take more space than an int variable for example\n')
('boolean', 'array more', 'int', 'type numeric better', '42517950', 'but counting the number of trues in a boolean array is more difficult since the accumulated type int differs from the source type bool\n')
('int', 'faster', 'boolean', '', '41089110', 'the int version seems to execute much faster than the boolean one\n')

rythm	velocity	3
('rythm', 'faster', 'velocity', 'high pure strong', '13906189', 'rythm is a strong typed java template engine using razor like syntax with high performance 2 to 3 times faster than velocity and fm\n')
('rythm', 'faster', 'velocity', 'high pure strong', '9596890', 'the benchmark shows rythm is 2 to 3 times faster than velocity on a normal page\n')
('rythm', 'faster', 'velocity', 'high pure strong', '9926106', 'rythm is a high performance 2 to 3 times faster than velocity pure java template which use razor like syntax\n')

filewriter	printwriter	3
('printwriter', 'more effective', 'filewriter', '', '21198091', 'printwriter is more effective than filewriter and filewriter is needed anyhow but this will work also if you want to do multiples people then just for-loop it and dont forget to close\n')
('printwriter', 'more', 'filewriter', '', '21198091', 'printwriter is more effective than filewriter and filewriter is needed anyhow but this will work also if you want to do multiples people then just for-loop it and dont forget to close\n')
('filewriter', 'better', 'printwriter', '', '20182239', 'i m not sure if printwriter or filewriter is better but printwriter worked for me\n')

pypy	cpython	55
('pypy', 'faster', 'cpython', 'numerix faster possible', '5318157', 'pypy s jit can make python code execute much faster than cpython\n')
('pypy', 'faster', 'cpython', 'numerix faster possible', '18949049', 'that site does not claim pypy is 6.3 times faster than cpython\n')
('pypy', 'slower', 'cpython', '', '25681097', 'as mentioned by ifloop this would be running a cpython c extension module on pypy which often works not always but is slower than on cpython\n')
('pypy', 'slower', 'cpython', 'numerix faster possible', '29966745', 'jython is more unpredictable√¢ sometimes almost as fast as pypy sometimes much slower than cpython\n')
('pypy', 'faster', 'cpython', 'numerix faster possible', '5843950', 'judging from the benchmarks posted on the pypy speed center it appears as if pypy is faster than cpython for all but two of the tests presented\n')
('pypy', 'faster', 'cpython', 'numerix faster possible', '28404279', 'can someone please help to how use that script using the pypy as i heard it is much faster than cpython\n')
('pypy', 'more', 'cpython', '', '7067001', 'profiling is known to slow pypy a lot more than cpython\n')
('pypy', 'generally faster', 'cpython', 'numerix faster possible', '7529473', 'i saw that pypy is generally faster than cpython\n')
('pypy', 'faster', 'cpython', 'numerix faster possible', '8797731', 'so how is it possible for pypy to be faster than cpython also becomes fairly obvious\n')
('pypy', 'higher recursion', 'cpython', '', '7541324', 'pypy has a higher recursion limit than cpython normally\n')
('pypy', 'more secure', 'cpython', '', '10588174', 'edit again one completely different approach would be to use pypy s sandboxing mechanism which should be much more secure than cpython plus a sandboxing module\n')
('pypy', 'faster', 'cpython', 'numerix faster possible', '6726347', 'you could try running it in pypy - for some cases it can be significantly faster than cpython\n')
('pypy', 'slower', 'cpython', '', '18958181', 'long-term evidence is showing that pypy runs certain python codes slower than cpython and this drawback seems to be rooted very deeply in pypy\n')
('pypy', 'more memory', 'cpython', '', '18958181', 'secondly the current version of pypy consumes much more memory than cpython in a rather large set of cases\n')
('pypy', 'currently more', 'cpython', 'numerix faster possible', '9934528', 'pypy is currently more than 5x faster than cpython on average\n')
('pypy', 'faster', 'cpython', 'numerix faster possible', '8452592', 'pypy is now faster than cpython in most cases\n')
('cpython', 'faster', 'pypy', 'numerix faster possible', '5843950', 'cpython is faster than pypy on the two tests slowspitfire and waf\n')
('pypy', 'more complex', 'cpython', 'numerix faster possible', '43456211', 'the pypy jit for python is also much more complex than cpython but also typically much faster √¢ increased complexity is a fairly typical cost for speed. the four levels of disassembly for julia code give you access to the representation of a julia method implementation for particular argument types at different stages of the transformation from source code to machine code\n')
('pypy', 'faster', 'cpython', 'numerix faster possible', '25363585', 'unfortunately as martijn pieters noted there are no accepted solution for python 3.x and only one for python 2.x and according to the amount of memory spent for solving it numerix could have used psyco the library on which pypy is based much faster than cpython\n')
('pypy', 'faster', 'cpython', 'numerix faster possible', '10727166', 'you might want to try running your trainer under pypy if you aren t already -- it s significantly faster than cpython for some workloads\n')
('pypy', 'more', 'cpython', '', '45117672', 'i did a search on the web but i was unable to find any evidence that suggests that pypy s memory usage is much more than cpython\n')
('pypy', 'faster', 'cpython', 'numerix faster possible', '18047406', 'i ve tried using pypy because i ve heard its faster than the cpython interpreter but still no good\n')
('pypy', 'faster', 'cpython', 'numerix faster possible', '619544', 'part of the compiler toolchain includes an experimental jit generator now in its fifth incarnation and starting to work really well - the goal is for a jited pypy to run much faster than cpython\n')
('pypy', 'faster', 'cpython', 'numerix faster possible', '40708984', 'pypy is faster than cpython s sum intrinsic because it can figure out that all the elements of the array are numeric and slice out a bunch of per-element overhead\n')
('pypy', 'faster', 'cpython', 'numerix faster possible', '17483632', 'however consider that pypy might do the linear search 100 times faster than cpython then a few times might be dozens\n')
('pypy', 'much more memory', 'cpython', '', '18958181', 'secondly the current version of pypy consumes much more memory than cpython in a rather large set of cases\n')
('pypy', 'faster', 'cpython', 'numerix faster possible', '45490403', 'in the competing programming a lot of problems are never meant to be solved with cpython but with pypy which has a faster integer-arithmetic and a git-compiler but otherwise a python interpreter just as cpython\n')
('pypy', 'faster', 'cpython', '', '19998762', 'so at this point in time pypy is just over 9 times faster than cpython in this micro benchmark\n')
('pypy', 'faster', 'cpython', 'numerix faster possible', '37192125', 'some people may argue with me on this one but i find pypy to be faster than cpython\n')
('pypy', 'better', 'cpython', '', '12575001', 'now there are some implementations like pypy rpython which run a static-typing phase and should favor much better than cpython here\n')
('pypy', 'slower', 'cpython', 'numerix faster possible', '32777213', 'this is why pypy may be slower than cpython sometimes it needs a warm-up phase in which it can actually optimize repeated operations\n')
('pypy', 'less memory', 'cpython', 'major part data', '5495318', 'when people talk about pypy using less memory than cpython this is a major part of what they re talking about\n')
('pypy', 'smaller', 'cpython', '', '8675877', 'i know many of pypy s data structures are actually smaller than cpython s but again that has nothing to do with the jit\n')
('pypy', 'less memory', 'cpython', 'major part data', '8675877', 'if the dominant memory usage is program data structures then i wouldn t be at all surprised to find pypy using significantly less memory than cpython whether or not the jit was enabled\n')
('pypy', 'slower', 'cpython', 'numerix faster possible', '26515134', 'i haven t tried comparing the two but this pypy bug seems to suggest that multiprocessing in pypy is slower than in cpython\n')
('cpython', 'slower', 'pypy', 'numerix faster possible', '26457906', 'as gnibbler pointed out cpython is slower in the simple implementation but pypy is jit compiled for much faster code when you need it\n')
('pypy', 'faster', 'cpython', '', '21270502', 'but for a really useful explanation you d have to tell us exactly which database and library you re using and which python version√¢ cpython 3.3.2 s csv module seems to be a lot faster than cpython 2.7.5 s and pypy 2.1 2.7.2 seems to be faster than cpython 2.7.5 as well but then either one also might run your code faster too√¢ and so on\n')
('cpython', 'faster', 'pypy', 'numerix faster possible', '30679809', 'under cpython tests run 4 times faster than under pypy\n')
('pypy', 'faster', 'cpython', 'numerix faster possible', '3163538', 'for python there is a pypy project which it includes jit making possible the code to run faster than in cpython in many cases\n')
('pypy', 'better', 'cpython', '', '5923232', 'the waf benchmark has less of a pronounced difference in performance and i d guess that the answer would be more complicated some factors pypy does better some factors cpython does better and overall cpython comes out slightly ahead\n')
('pypy', 'better', 'cpython', '', '18958181', 'if pypy succeeds to be better than cpython in general which is questionable the main weakness affecting its wider adoption will be its compatibility with cpython\n')
('pypy', 'faster', 'cpython', 'numerix faster possible', '2703428', 'just keep in mind most of the time c is faster than python but then again most of the time pypy is faster than cpython\n')
('cpython', 'more architectures', 'pypy', '', '12867428', 'cpython runs on more architectures than pypy and has been successfully adapted to run in embedded architectures in ways that may be impractical for pypy\n')
('pypy', 'faster', 'cpython', 'numerix faster possible', '25713282', 'note that there are plenty of python implementations other than cpython out there - for loopy code pypy tends to be much faster than cpython\n')
('pypy', 'faster', 'cpython', 'numerix faster possible', '34837400', 'pypy which in general is much faster than cpython is considerably slower for this use case\n')
('cpython', 'more', 'pypy', '', '12867428', 'cpython runs on more architectures than pypy and has been successfully adapted to run in embedded architectures in ways that may be impractical for pypy\n')
('pypy', 'faster', 'cpython', 'numerix faster possible', '7991345', 'i presume it s why is pypy faster than cpython some of the time\n')
('pypy', 'much more', 'cpython', '', '18958181', 'secondly the current version of pypy consumes much more memory than cpython in a rather large set of cases\n')
('pypy', 'faster', 'cpython', 'numerix faster possible', '14294643', 'pypy is supposedly faster than cpython while gevent is based on co-routines and greenlets which supposedly makes for a faster web server\n')
('pypy', 'faster', 'cpython', 'numerix faster possible', '11125957', 'i finally ran it through pypy and was delighted to discover that when the lists got really deep pypy was running significantly faster than cpython\n')
('pypy', 'faster', 'cpython', 'numerix faster possible', '6636272', 'pypy compiled with jit is almost always faster than cpython frequently by a large margin\n')
('pypy', 'slower', 'cpython', 'numerix faster possible', '31826941', 'the answer is simple here - pickle on pypy is slower because it s implemeneted in pure python as opposed to c in cpython\n')
('pypy', 'higher', 'cpython', '', '7541324', 'pypy has a higher recursion limit than cpython normally\n')
('pypy', 'faster', 'cpython', 'numerix faster possible', '14024189', 'if that isn t sufficient a lot of standard python code can be run on the pypy implementation which generally faster than the cpython implementation\n')
('pypy', 'more', 'cpython', '', '36091217', 'further the relative speed of profiled code may well differ hugely between them - pypy code is low-level and so introducing profiling is likely to slow it down relatively speaking more than cpython\n')

ieee	decimal	4
('ieee', 'less', 'decimal', 'representable value binary32', '26032849', 'the maximum representable value with ieee 754-2008 binary32 is so the base 2 log of a number stored in binary 32 is less than decimal 128\n')
('ieee', 'more complex', 'decimal', '', '46150959', 'double has its ieee floating point definition which is also much more complex than decimal\n')
('decimal', 'slower', 'ieee', '', '10562448', 'decimal types libraries are fantastic for financial applications because we re used to dealing with the style of rounding required in financial stuff but there is the cost that they tend to be slower than ieee floating point\n')
('ieee', 'less', 'decimal', 'representable value binary32', '5729100', 'the third line displays the data with the maximum useful precision - an ieee 754 64bit floating-point number has slightly less than 16 decimal digits of precision so all those digits of the literal in math.h are pointless perhaps they can be seen as future-proofing against a possible future redefinition in a format with more precision\n')

codeigniter	cakephp	15
('cakephp', 'newer more feature', 'codeigniter', '', '3015992', 'cakephp is newer more feature rich and heavier than codeigniter codeigniter is designed to have a much smaller footprint so you will most likely find yourself creating functionality in codeigniter to match cake s\n')
('codeigniter', 'more experienced', 'cakephp', '', '8779290', 'in my opinion it will probably be easier to integrate with codeigniter although someone more experienced with cakephp might prove me wrong\n')
('codeigniter', 'lighter', 'cakephp', '', '139120', 'i suspect codeigniter doesn t have quite as flexible a structure it s smaller and lighter than cakephp but a quick look at the cakephp manual to see how behaviors components helpers and the vendors folder may be helpful\n')
('cakephp', 'much more lighter', 'codeigniter', '', '14226938', 'in my view cakephp seems much more lighter then codeigniter but i never used either one so i can t judge\n')
('cakephp', 'newer more', 'codeigniter', '', '3015992', 'cakephp is newer more feature rich and heavier than codeigniter codeigniter is designed to have a much smaller footprint so you will most likely find yourself creating functionality in codeigniter to match cake s\n')
('cakephp', 'much more', 'codeigniter', '', '14226938', 'in my view cakephp seems much more lighter then codeigniter but i never used either one so i can t judge\n')
('cakephp', 'slower', 'codeigniter', '', '7222395', 'cakephp is considered slower than codeigniter but you can tweak it to enhance speed\n')
('cakephp', 'newer', 'codeigniter', '', '3015992', 'cakephp is newer more feature rich and heavier than codeigniter codeigniter is designed to have a much smaller footprint so you will most likely find yourself creating functionality in codeigniter to match cake s\n')
('codeigniter', 'lighter', 'cakephp', '', '6021229', 'i personally use codeigniter which probably falls in to the heavy framework category but is at least much lighter than cakephp and lighter than zend too i think\n')
('codeigniter', 'lower', 'cakephp', '', '3794813', 'codeigniter has the lower learning curve overall so i would recommend it over cakephp\n')
('codeigniter', 'lower learning', 'cakephp', '', '3794813', 'codeigniter has the lower learning curve overall so i would recommend it over cakephp\n')
('cakephp', 'harder', 'codeigniter', '', '6403035', 'why do people say cakephp is somewhat harder than codeigniter for people new to mvc\n')
('cakephp', 'heavier', 'codeigniter', '', '3015992', 'cakephp is newer more feature rich and heavier than codeigniter codeigniter is designed to have a much smaller footprint so you will most likely find yourself creating functionality in codeigniter to match cake s\n')
('cakephp', 'somewhat harder', 'codeigniter', '', '6403035', 'why do people say cakephp is somewhat harder than codeigniter for people new to mvc\n')
('cakephp', 'more complicated', 'codeigniter', '', '4095770', 'i have been reading about cakephp but it seems a bit more complicated than codeigniter\n')

concave	convex	3
('concave', 'hull far more difficult', 'convex', '', '6941020', 'but determining a concave hull is far more difficult than a convex hull\n')
('concave', 'hull far more', 'convex', '', '6941020', 'but determining a concave hull is far more difficult than a convex hull\n')
('convex', 'simpler', 'concave', '', '14583110', 'the check for convex polygons your triangle is simpler than for concave ones see first linked article\n')

quicksort	mergesort	62
('quicksort', 'more optimal', 'mergesort', '', '24173092', 'also note that quicksort is generally more optimal than mergesort see this as well which explains why it s taken advantage of when sorting primitives\n')
('mergesort', 'worse', 'quicksort', '', '7770477', 'this means that while the two underlying sorts it uses mergesort and insertion sort are both worse than quicksort for many kinds of data timsort only uses them when it is advantageous to do so\n')
('quicksort', 'faster', 'mergesort', 'algorithm comparisons specific', '30014574', 'to be specific the quicksort runs faster than mergesort in the first test case and loses badly in the following 9 tests\n')
('mergesort', 'simpler', 'quicksort', 'algorithm comparisons specific', '10955685', 'parallelizing mergesort is simpler than quicksort in-place\n')
('quicksort', 'less swaps', 'mergesort', '', '47536371', 'i do know though that quicksort has more compares but less swaps than mergesort which i learned from another stackoverflow discussion quicksort vs merge sort\n')
('quicksort', 'generally faster', 'mergesort', 'algorithm comparisons specific', '70440', 'it s because that quicksort is generally faster that people use it instead of mergesort\n')
('quicksort', 'faster', 'mergesort', 'algorithm comparisons specific', '30014574', 'for the 10 tests on the same list the results should be quite the same at least all showing that quicksort is faster than mergesort or vice vesa\n')
('mergesort', 'consistently faster', 'quicksort', 'algorithm comparisons specific', '35189561', 'mergesort - in general mergesort is consistently faster than quicksort however quicksort is done in place and doesn t require allocating memory unlike mergesort\n')
('quicksort', 'faster', 'mergesort', 'algorithm comparisons specific', '961662', 'in most cases quicksort will run faster than mergesort even though the worst-case execution time is longer\n')
('quicksort', 'worse', 'mergesort', 'worst complexity stable', '201171', 'quicksort is worse complexity than mergesort in the worst case.\n')
('quicksort', 'more sensitive', 'mergesort', '', '18427291', 'quicksort is more sensitive to input sortedness in a positive way than mergesort\n')
('quicksort', 'more', 'mergesort', 'algorithm comparisons specific', '14349085', 'interestingly quicksort performs more comparisons on average than mergesort - 1.44 n lg n expected for quicksort versus n lg n for mergesort\n')
('quicksort', 'faster', 'mergesort', 'algorithm comparisons specific', '29218730', 'it might be helpful to see why quicksort is usually faster than mergesort since if you understand the reasons you can pretty quickly find some cases where mergesort is a clear winner\n')
('quicksort', 'faster', 'mergesort', 'algorithm comparisons specific', '42767458', 'quicksort is approximately 40 faster than mergesort on random data because of fewer data movements\n')
('quicksort', 'better', 'mergesort', 'worst complexity stable', '35228495', 'for example locality of references has influence on cache hits or misses which is the reason why quicksort performs better than mergesort\n')
('quicksort', 'generally more', 'mergesort', '', '24173092', 'also note that quicksort is generally more optimal than mergesort see this as well which explains why it s taken advantage of when sorting primitives\n')
('mergesort', 'better time-behavior', 'quicksort', 'worst complexity stable', '4819756', 'technically mergesort has a better time-behavior √Æ nlogn worst and average cases than quicksort √Æ n 2 worst case √Æ nlogn average case\n')
('quicksort', 'worse', 'mergesort', 'algorithm comparisons specific', '29218500', 'scenarios when quicksort is worse than mergesort\n')
('quicksort', 'better', 'mergesort', 'algorithm comparisons specific', '13096603', 'i ve looked at the question at why is quicksort better than mergesort\n')
('quicksort', 'also more', 'mergesort', '', '680613', 'quicksort is also more complicated than mergesort especially if you want to write a really solid implementation and so if you re aiming for simplicity and maintainability merge sort becomes a promising alternative with very little performance loss\n')
('mergesort', 'more space', 'quicksort', 'worst complexity stable', '5784610', 'mergesort may use more space than quicksort i m not entirely sure and merge may be better for linkedlists\n')
('quicksort', 'better locality', 'mergesort', 'algorithm comparisons specific', '29218730', 'quicksort has better locality of reference than mergesort which means that the accesses performed in quicksort are usually faster than the corresponding accesses in mergesort\n')
('quicksort', 'faster', 'mergesort', 'algorithm comparisons specific', '70440', 'quicksort is usually faster than mergesort just because it s easier to code a tight implementation and the operations it does can go faster\n')
('quicksort', 'faster', 'mergesort', 'algorithm comparisons specific', '7818843', 'you can also see that for smaller collections quicksort is faster but then mergesort takes the lead but all of this is case specific so take your time to study all 4 algorithms\n')
('quicksort', 'also more complicated', 'mergesort', '', '680613', 'quicksort is also more complicated than mergesort especially if you want to write a really solid implementation and so if you re aiming for simplicity and maintainability merge sort becomes a promising alternative with very little performance loss\n')
('quicksort', 'faster', 'mergesort', 'algorithm comparisons specific', '8535540', 'i have read that quicksort is much faster than mergesort in practise and the reason for this is the hidden constant\n')
('quicksort', 'generally faster', 'mergesort', 'algorithm comparisons specific', '5070199', 'quicksort generally runs faster than mergesort but under some circumstances it can degrade to quadratic running time\n')
('mergesort', 'worse', 'quicksort', 'worst complexity stable', '487454', 'given that it is possible to vastly reduce the likelihood of the worst case of quicksort s time complexity via random selection of the pivot for example i think one could argue that mergesort is worse in all but the pathological case of quicksort\n')
('quicksort', 'generally more optimal', 'mergesort', '', '24173092', 'also note that quicksort is generally more optimal than mergesort see this as well which explains why it s taken advantage of when sorting primitives\n')
('quicksort', 'slower', 'mergesort', 'implementation callback function', '39156435', 'when comparison function is a callback function like in quicksort libc implementation quicksort is slower than mergesort by 15 on random input and 30 for already sorted array for 64 bit integers\n')
('quicksort', 'quicker', 'mergesort', '', '497794', 'i had been taught that quicksort is almost always quicker than mergesort and i understand that there is some debate on this topic but i at least expected it to be closer than this\n')
('mergesort', 'more natural', 'quicksort', '', '14807074', 'mergesort is more natural to implement for linked lists but you can do quicksort very nicely\n')
('quicksort', 'better', 'mergesort', 'worst complexity stable', '16943949', 'an interesting answer about this can be found at why is quicksort better than mergesort\n')
('mergesort', 'better', 'quicksort', '', '7372734', 'that s hard to say.the worst of mergesort is n log2n -n+1 which is accurate if n equals 2 k i have already proved this .and for any n it s between n lg n - n + 1 and n lg n + n + o lg n .but for quicksort its best is nlog2n also n equals 2 k .if you divide mergesort by quicksort it equals one when n is infinite.so it s as if the worst case of mergesort is better than the best case of quicksort why do we use quicksort\n')
('quicksort', 'not better', 'mergesort', 'worst complexity stable', '70627', 'quicksort is not better it is well suited for a different kind of application than mergesort\n')
('quicksort', 'better', 'mergesort', 'algorithm comparisons specific', '19853740', 'is quicksort always better than mergesort\n')
('mergesort', 'slower', 'quicksort', 'algorithm comparisons specific', '5608850', 'mergesort is slightly slower than quicksort but it does not have quicksort s susceptibility to pathological cases\n')
('quicksort', 'better', 'mergesort', 'algorithm comparisons specific', '497819', 'previously discussed on so why is quicksort better than mergesort\n')
('mergesort', 'better', 'quicksort', 'worst complexity stable', '36054413', 'i know mergesort is better since it is stable and doesn t have n 2 as worst case but i required to implement quicksort\n')
('quicksort', 'better', 'mergesort', 'algorithm comparisons specific', '77945', 'quicksort is not better than mergesort\n')
('mergesort', 'better', 'quicksort', 'worst complexity stable', '9023456', 'for instance quicksort can outperform mergesort although mergesort is provably better than quicksort in the worst case\n')
('quicksort', 'slower', 'mergesort', 'algorithm comparisons specific', '24290704', 'i have been testing the practicality of openmp gnu parallel sort algorithms in the c++ standard library and have found the parallel quicksort algorithm to be significantly slower than the mergesort algorithm\n')
('quicksort', 'faster', 'mergesort', 'algorithm comparisons specific', '90477', 'as many people have noted the average case performance for quicksort is faster than mergesort\n')
('mergesort', 'more', 'quicksort', '', '14807074', 'mergesort is more natural to implement for linked lists but you can do quicksort very nicely\n')
('quicksort', 'consistently less', 'mergesort', 'algorithm comparisons specific', '42183380', 'quicksort consistently has less recursive calls than mergesort\n')
('quicksort', 'faster', 'mergesort', 'algorithm comparisons specific', '4819185', 'from what i ve read i was expecting quicksort to be faster than mergesort but on my code it is not so i assume there must be a problem with my quicksort algorithm\n')
('quicksort', 'faster', 'mergesort', 'algorithm comparisons specific', '13096603', 'depending on where i look people say quicksort is faster than mergesort due to its locality of reference cache hits etc\n')
('quicksort', 'algorithm faster', 'mergesort', 'algorithm comparisons specific', '20811630', 'the quicksort algorithm is faster than mergesort which is what sorted will get you when called on a sequence of objects via java.util.arrays.sort\n')
('quicksort', 'better', 'mergesort', 'algorithm comparisons specific', '1527161', 'why is quicksort better than mergesort\n')
('quicksort', 'consistently faster', 'mergesort', 'implementation callback function', '23501734', 'when comparing my quicksort implementation with std sort on my compiler and my implementation of mergesort i noticed an odd pattern on large data sets when operating on 64 bit integers quicksort is consistently faster than mergesort\n')
('quicksort', 'faster', 'mergesort', 'algorithm comparisons specific', '16308408', 'normally quicksort is faster than mergesort which is faster than heapsort\n')
('quicksort', 'more', 'mergesort', '', '47536371', 'i do know though that quicksort has more compares but less swaps than mergesort which i learned from another stackoverflow discussion quicksort vs merge sort\n')
('mergesort', 'less comparisons', 'quicksort', 'algorithm comparisons specific', '29243439', 'mergesort uses about 30 less comparisons than quicksort\n')
('quicksort', 'better', 'mergesort', 'algorithm comparisons specific', '29218730', 'quicksort usually is better than mergesort for two reasons\n')
('mergesort', 'more efficient', 'quicksort', 'algorithm comparisons specific', '13096603', 'purely in terms of the number of comparisons performed is mergesort always more efficient than quicksort\n')
('quicksort', 'better', 'mergesort', '', '497967', 'the biggest difference that can be produced between the two of them will always be to quicksort s detriment and it involves lists that are already largely sorted or contain a large number of ties when quicksort does better than mergesort the difference will not be nearly so great\n')
('quicksort', 'quicker', 'mergesort', 'algorithm comparisons specific', '42183380', 'that way quicksort can reach recursive base case more quicker than mergesort\n')
('quicksort', 'slower', 'mergesort', 'algorithm comparisons specific', '23501734', 'however on smaller int sizes quicksort gets slower and mergesort gets faster\n')
('quicksort', 'more', 'mergesort', '', '18427291', 'quicksort is more sensitive to input sortedness in a positive way than mergesort\n')
('quicksort', 'faster', 'mergesort', 'algorithm comparisons specific', '4292700', 'quicksort is implemented well it is typically 2-3 times faster than mergesort or\n')
('quicksort', 'simpler', 'mergesort', 'algorithm comparisons specific', '33319313', 'i would say that the quicksort is simpler for parallelizing than the mergesort\n')
('quicksort', 'more complicated', 'mergesort', '', '680613', 'quicksort is also more complicated than mergesort especially if you want to write a really solid implementation and so if you re aiming for simplicity and maintainability merge sort becomes a promising alternative with very little performance loss\n')

altitude	distance	4
('distance', 'quite larger', 'altitude', '', '27203554', 'because most of the case zero-altitude distance is quite larger than altitude itself so normally you can ignore altitude\n')
('altitude', 'more', 'distance', '', '7121938', 'a negative verticalaccuracy signifies that altitude is invalid whereas normally a smaller but positive value of verticalaccuracy actually means that altitude is more precise since it s the vertical distance that it may be off by - i ll leave the discussion as to why this measure is called verticalaccuracy and not verticalinaccuracy for some other time\n')
('distance', 'larger', 'altitude', '', '27203554', 'because most of the case zero-altitude distance is quite larger than altitude itself so normally you can ignore altitude\n')
('altitude', 'more precise', 'distance', '', '7121938', 'a negative verticalaccuracy signifies that altitude is invalid whereas normally a smaller but positive value of verticalaccuracy actually means that altitude is more precise since it s the vertical distance that it may be off by - i ll leave the discussion as to why this measure is called verticalaccuracy and not verticalinaccuracy for some other time\n')

memcmp	strcmp	3
('memcmp', 'faster', 'strcmp', 'simpler places lengths', '1128221', 'if you always keep track of the lengths of your strings you can compare lengths and use memcmp which is faster than strcmp\n')
('memcmp', 'simpler', 'strcmp', 'simpler places lengths', '41420603', 'memcmp is simpler than strcmp and can be implemented even more efficiently in places where the strings are known to be properly aligned\n')
('strcmp', 'better', 'memcmp', '', '13095552', 'rest assured though that strcmp is better equipped in the general case for string comparisons than memcmp is\n')

aes	tripledes	3
('tripledes', 'weaker', 'aes', '', '15109802', 'but tripledes is older and weaker than aes\n')
('aes', 'more secure', 'tripledes', '', '3868099', 'i personally would use aes for my encryption as it is lighter and more secure than tripledes in fact i think it is the de facto algorithm at the moment\n')
('tripledes', 'older', 'aes', '', '15109802', 'but tripledes is older and weaker than aes\n')

repeater	gridview	9
('repeater', 'fewer templates', 'gridview', '', '7328194', 'repeater has fewer templates then gridview\n')
('repeater', 'better decision', 'gridview', '', '1123182', 'a repeater might be a better decision than a gridview as they are friendlier for using custom layouts\n')
('repeater', 'faster', 'gridview', 'difference big understanding', '21944601', 'the repeater is still faster than the gridview but the difference shouldn t be big if you code it right\n')
('repeater', 'fewer', 'gridview', '', '7328194', 'repeater has fewer templates then gridview\n')
('repeater', 'far better', 'gridview', '', '10578443', 'in simple words we can say performance of repeater is far better than gridview\n')
('gridview', 'lower level', 'repeater', '', '26385838', 'each button raises the correct event but the events never reach the gridview because they are handled at a lower level by the repeater\n')
('repeater', 'faster', 'gridview', 'difference big understanding', '38065946', 'in my understanding repeater is most suitable since it faster than gridview\n')
('repeater', 'better', 'gridview', '', '721563', 'maybe a repeater is better but you will be fine with a gridview if you are familiar with it\n')
('repeater', 'better', 'gridview', '', '10578443', 'in simple words we can say performance of repeater is far better than gridview\n')

memcpy	strcpy	19
('strcpy', 'more complicated', 'memcpy', '', '25303036', 'the reason for not having strcpy i m guessing is that strcpy can be replaced more efficiently with memcpy for constant strings and if the string is not constant strcpy is a bit more complicated than memcpy anyway so not as beneficial to make inline optimisations for\n')
('memcpy', 'faster', 'strcpy', 'variable faster check', '24966693', 'is memcpy usually faster than strcpy on most real platforms\n')
('memcpy', 'faster', 'strcpy', 'variable faster check', '33590309', 'notice that memcpy is faster than strcpy unless the source string is much smaller than the buffer s size which is rarely the case with ip addesses.\n')
('memcpy', 'faster', 'strcpy', '', '24990268', 'if size is known normally a non-naive implementation of memcpy is faster than strcpy since it takes profit of the cpu s data bus size\n')
('memcpy', 'more efficient', 'strcpy', 'performance difference efficient', '41749210', 'performance difference memcpy is usually more efficient than strcpy which must scan the data it copies\n')
('memcpy', 'rarely slower', 'strcpy', 'variable faster check', '23201978', 'memcpy is rarely slower than strcpy or strncpy and often significantly faster\n')
('memcpy', 'slower', 'strcpy', 'variable faster check', '24967980', 'for example for small amounts of data an memcpy optimised for large amounts of data may be significantly slower than a strcpy that wasn t optimised for large amounts of data\n')
('memcpy', 'usually faster', 'strcpy', 'variable faster check', '3942421', 'memcpy is usually faster than strcpy for longer strings\n')
('memcpy', 'faster', 'strcpy', 'variable faster check', '39286524', 'information - use memcpy as it s faster than strcpy and we know\n')
('memcpy', 'faster', 'strcpy', 'variable faster check', '25242721', 'memcpy is faster than strcpy and also enforces you to specify a buffer size\n')
('memcpy', 'more efficient', 'strcpy', '', '35394906', 'memcpy can be more efficient than strcpy since rep movs is highly optimized on intel cpus esp\n')
('memcpy', 'faster', 'strcpy', 'variable faster check', '24966865', 'on almost any platform memcpy is going to be faster than strcpy when copying the same number of bytes\n')
('memcpy', 'safer', 'strcpy', '', '27222337', 'your macro with memset and memcpy was not any safer than strcpy\n')
('strcpy', 'more time', 'memcpy', 'performance difference efficient', '30186543', 'memset behaves like strcpy but the difference is that memcpy copied the data as it is byte but strcpy copies the formatted string as well so takes more time than memcpy to execute\n')
('memcpy', 'slower', 'strcpy', '', '4361629', 'memcpy is not really any slower than strcpy\n')
('memcpy', 'slightly faster', 'strcpy', 'variable faster check', '23762261', 'because of the above replace strdup with strlen malloc memcpy memcpy is slightly faster than strcpy\n')
('memcpy', 'faster', 'strcpy', 'variable faster check', '24966693', 'so i feel that on x86 memcpy is faster than strcpy\n')
('memcpy', 'faster', 'strcpy', 'variable faster check', '15176895', 'we keep track of what cmd s length ought to be in a variable and copy the string with memcpy which is slightly faster than strcpy and does neither check string length nor copy the extra zero at end of string\n')
('memcpy', 'faster', 'strcpy', 'variable faster check', '9760567', 'but sometimes memcpy performs faster than strcpy because it moves blocks of memory at a time which allows it to perform some optimization i will not go into details here\n')

range	max	37
('range', 'greater', 'max', 'larger greater value', '43411471', 'it works like range so i need to pass it a number one greater than the max number in the current index\n')
('range', 'higher', 'max', 'larger greater value', '39502592', 'if you disable elastic axis and make sure you specify a range that is higher than the max value you can select the point\n')
('range', 'less', 'max', '', '36562247', 'take your large function and compare it to the max from your source range if it is less than max display none if otherwise have it display the max\n')
('max', 'length more likely', 'range', '', '27711026', 'a sample of visual inspections suggests that the max length is more likely in the 200 to 300 character range\n')
('range', 'greater', 'max', 'larger greater value', '20007371', 'keep in mind that the cast int d will not throw an exception if the value of d is outside the range of an int - if which is greater than the max value of an int the resultant cast will be -2147483648\n')
('max', 'greater', 'range', '', '46003981', 'issue here is i need to submit myform but because of min max attribute i get this tip value must be less than or equal to 20 or value must be greater than or equal to 10 for the inputs submitted lesser or greater than the range provided in min and max attributes respectively because of this my form does not get submitted\n')
('range', 'greater', 'max', 'larger greater value', '28488349', 'the question i have is i would like the calendar to only display the min and max date range for the from date and to date any thing greater than the max and anything less than the min should be greyed out\n')
('range', 'greater', 'max', 'larger greater value', '38423673', 'a larger range means a greater max value and a smaller min value than decimal\n')
('range', 'larger', 'max', 'larger greater value', '47389759', 'but with this the last range is larger than the max value\n')
('range', 'larger', 'max', 'larger greater value', '17068322', 'if you date range is larger than the two years displayed just drag the formulas down to expand the max range\n')
('range', 'much more', 'max', '', '24873884', 'figuring out the necessary exponent range is much more straightforward if you can describe the max and min possible absolute values of your input you can easily find suitable corresponding binary minimum and maximum exponent\n')
('range', 'greater', 'max', 'larger greater value', '35075746', 'i ve got a constant defined data_out range and cnt is incremented on clock and never reaches value greater than max range of data_out\n')
('max', 'smaller potential', 'range', '', '28844504', 'the recursive cte is troublesome because it is limited to a max size of 32 767 much smaller than potential range sizes and has the very real possibility of being very slow\n')
('range', 'greater', 'max', '', '27926019', 'since your container is sorted you can use std max_element on a range ending with the first element greater than your max use std find_if with a lambda or std lower_bound to get this range\n')
('range', 'larger', 'max', 'larger greater value', '2022693', 'basically if you know that your events are never larger than a given duration you can search for a bounded range that s larger than the max duration then add restrictions to get rid of the extra stuff that matched\n')
('max', 'larger', 'range', 'larger greater value', '18854408', 'i ll leave the rest up to you ov checking for error conditions such as more than 1 column passed in the range or range of unequal size or a max # of items returned being larger than the range size\n')
('max', 'bigger', 'range', '', '24089593', 'that occasional max threshold is actually bigger than the range of small instance\n')
('range', 'greater int', 'max', 'larger greater value', '41511932', 'the problem is it is overflowing therefore it works fine when the result returned is in int_max range 10 9 but negative value is show in case of value returned from function is greater than int max range\n')
('range', 'bigger', 'max', '', '17936725', 'a signed 64-bit integer range from √¢ÀÜ 2 63 to 2 63 √¢ÀÜ 1 the absolute value of 0x8000000000000000 or √¢ÀÜ 2 63 is 2 63 is bigger than the max 64-bit integer\n')
('range', 'less', 'max', '', '1386828', 'the range function produces a list of integers from 0 less than the max len s by step 3\n')
('range', 'higher', 'max', 'larger greater value', '30607810', 'i am trying to create a figure in which the colorbar will extend beyond the data range go higher than the max value of data\n')
('range', 'greater', 'max', 'larger greater value', '20943998', 'i want to validate a number as decimal up to two decimal and minimum range is greater than 0.00 and max range is up to 99.99\n')
('range', 'larger', 'max', 'larger greater value', '3567637', 'so if you re getting a step exceeds the specified range error i d guess that the default step value 1 is larger than the max of the range the result of .\n')
('range', 'larger', 'max', 'larger greater value', '29827603', 'in general you want to have a range slightly larger than x max - x min and then divide the range into the desired number of bins\n')
('range', 'less', 'max', 'valid walk lower', '13264779', 'if max z1 z2 range is less than or equal to table2 max value2 where table1.type table2.type\n')
('range', 'greater', 'max', 'larger greater value', '17885817', 'an automatically adjusted range will always be the next power of 10 greater than max value\n')
('range', 'less', 'max', '', '19947660', 'the python built-in range will make a series of values for you starting with adding k each time and stopping with the last multiple of k that is less than max x\n')
('range', 'higher', 'max', '', '8013367', 'at first i tried a solution using a where i would select every coordinate in range check if they were valid if they were i would call a from them to the center position and count the number of steps if they were higher than my max range i would just remove the coordinate from my list\n')
('range', 'smaller', 'max', 'larger greater value', '28482152', 'if you want to exlude a number 4 that means the range is smaller by 1 so use r.nextint 5 and if the result is the excluded number then return the max allowed which is 5 because it will never be generated because you used max - 1\n')
('max', 'length more', 'range', '', '27711026', 'a sample of visual inspections suggests that the max length is more likely in the 200 to 300 character range\n')
('max', 'threshold actually bigger', 'range', '', '24089593', 'that occasional max threshold is actually bigger than the range of small instance\n')
('range', 'much more straightforward', 'max', '', '24873884', 'figuring out the necessary exponent range is much more straightforward if you can describe the max and min possible absolute values of your input you can easily find suitable corresponding binary minimum and maximum exponent\n')
('range', 'lower', 'max', 'valid walk lower', '8013367', 'i have this grid each coordinate in the grid can be either closed or open i m tying to using an open coordinate find all the open coordinates around the first that are valid and the walk range between then is equal or lower than the max walk range\n')
('range', 'greater', 'max', 'larger greater value', '27101914', 'avoiding variables and functions cross join the table against some other table s to generate a range of rows where the range is greater than the max value of quantity\n')
('range', 'not greater', 'max', 'larger greater value', '45418162', '2 that the min range is not greater or equal to the max range.\n')
('range', 'greater', 'max', 'larger greater value', '43950275', 'third you initialised end to len lis2 this will give indexerror list index out of range if you are trying to search for an element which is not present in the list and is greater than the max element in the list say 23\n')
('max', 'smaller', 'range', 'larger greater value', '21562035', 'to create equal bins you can simply first define a min and max value which is slightly smaller than both range\n')

jtable	jlist	3
('jlist', 'better', 'jtable', '', '8598358', 'a jlist would probably be better than a jtable\n')
('jtable', 'better jcomponents', 'jlist', 'jcomponents tablecelleditor example', '6823252', 'i think jtable would be better jcomponents as jlist because there you can implements tablecelleditor maybe example with similair output here\n')
('jtable', 'better', 'jlist', 'jcomponents tablecelleditor example', '18589264', 'i don t really think that jtable will help you here anyhow better than jlist - it has the same rendering strategy\n')

putimagedata	drawimage	9
('drawimage', 'slower', 'putimagedata', 'earlier year old', '17406346', 'the only problem that as far as i know using drawimage is slower than using putimagedata and it was required in old browser versions like firefox 2 or such\n')
('drawimage', 'faster', 'putimagedata', 'faster function slower', '41723100', 'using drawimage canvas is much faster than using putimagedata\n')
('drawimage', 'faster', 'putimagedata', '', '37245491', 'using the clipping version of drawimage will be faster than putimagedata\n')
('putimagedata', 'slower', 'drawimage', 'earlier year old', '7074620', 'that beeing said putimagedata is much slower than drawimage at least when i tested them earlier this year\n')
('drawimage', 'faster', 'putimagedata', 'faster function slower', '13668442', 'drawimage seems to be much faster than putimagedata\n')
('putimagedata', 'slower', 'drawimage', 'faster function slower', '7380496', 'right now putimagedata is much slower than drawimage as you can see here\n')
('drawimage', 'much faster', 'putimagedata', 'faster function slower', '7722892', 'as of right now drawimage is much faster than putimagedata\n')
('putimagedata', 'more performant', 'drawimage', '', '22793378', 'is putimagedata ... more performant than drawimage ...\n')
('drawimage', 'function really faster', 'putimagedata', 'faster function slower', '14511199', 'i have seen that the drawimage function is really faster than the putimagedata\n')

bellman-ford	dijkstra	10
('bellman-ford', 'approach better', 'dijkstra', 'circumstances situation approach', '19482317', 'surely there is some situation in which the bellman-ford approach is better than the dijkstra approach\n')
('dijkstra', 'better choice', 'bellman-ford', 'circumstances situation approach', '40843559', 'however if g is guaranteed to have only non-negative weights g is non-positive weights then dijkstra s algorithm could be better choice over bellman-ford\n')
('bellman-ford', 'more similar', 'dijkstra', '', '30176723', 'in fact i think it is fair to say that bellman-ford is more similar to dijkstra because of its use of iterative relaxation\n')
('dijkstra', 'faster', 'bellman-ford', '', '36437805', 'since a proper implementation of dijkstra is faster than bellman-ford use dijkstra unless there are negative weight edges in the graph\n')
('dijkstra', 'algorithm more', 'bellman-ford', '', '19482317', 'after a lot of googling i ve found that most sources say that the dijkstra algorithm is more efficient than the bellman-ford algorithm\n')
('dijkstra', 'algorithm more efficient', 'bellman-ford', '', '19482317', 'after a lot of googling i ve found that most sources say that the dijkstra algorithm is more efficient than the bellman-ford algorithm\n')
('bellman-ford', 'more', 'dijkstra', '', '30176723', 'in fact i think it is fair to say that bellman-ford is more similar to dijkstra because of its use of iterative relaxation\n')
('bellman-ford', 'slower', 'dijkstra', '', '12665448', 'bellman-ford as suggested in your question tends to be slower than either dijkstra s or a - it is primarily used when there are negative edge-weights which there are not here\n')
('bellman-ford', 'slower', 'dijkstra', '', '20273939', 'the only issue with applying that technique for the single source shortest path problem is that reweighting with bellman-ford takes o mn time which is slower than dijkstra s o m log n\n')
('bellman-ford', 'better', 'dijkstra', 'circumstances situation approach', '19482317', 'but under what circumstances is the bellman-ford algorithm better than the dijkstra algorithm\n')

server-side	client-side	34
('server-side', 'far more', 'client-side', '', '47184617', 'how you handle things server-side is far more critical than client-side validation which can and will be ignored by malicious users\n')
('client-side', 'also faster', 'server-side', '', '5365998', 'as a general rule of thumb at least in security you should trust no user so i think it would be the wise choice to validate the data client-side it s also faster and then if the first validation passed validate it server-side to double-check or to have a safety net if the user has javascript turned off something you don t see that often\n')
('client-side', 'more', 'server-side', '', '26689582', 'in theory encoding client-side is no more dangerous than encoding server-side\n')
('client-side', 'javascript much more', 'server-side', '', '1322011', 'that said client-side javascript is much more common and if you were using server-side javascript you would probably know the answer to your question\n')
('client-side', 'shorter', 'server-side', '', '10490295', 'if getting these in sync is an issue make the client-side timer shorter than the server-side one\n')
('server-side', 'easier', 'client-side', '', '24469630', 'now if you aren t generating your html server-side and are instead writing it by hand you can make your life just a dash easier with a client-side transformation like this\n')
('server-side', 'way more', 'client-side', '', '33539901', 'the server-side way is more reliable and browser-independent while the client-side approach will decrease the amount of incoming traffic to server\n')
('server-side', 'far more critical', 'client-side', '', '47184617', 'how you handle things server-side is far more critical than client-side validation which can and will be ignored by malicious users\n')
('server-side', 'more valuable', 'client-side', '', '1141264', 'not all of the reasons given are necessarily valid but one important one is that unless you re google server-side cpu cycles are a lot more valuable than client-side cycles so it s easier to have the client compile optimize what is quite often dynamically generated html javascript rather than the server\n')
('server-side', 'better', 'client-side', '', '29544898', 'first vb.net can be used to perform this xslt transformation which is really simple as you said just applying the xslt stylesheet at server-side if it is considered better than at client-side or even just sending the processing instruction for that to the browser\n')
('client-side', 'faster', 'server-side', '', '1598764', 'while not really a console skulpt.org runs python code client-side with no plugins or anything which makes it a lot faster than a server-side prompt\n')
('server-side', 'better', 'client-side', '', '12896810', 'server-side checks are better than client-side\n')
('server-side', 'tabletools more', 'client-side', '', '18486205', 'since eventually i d have a button that runs some script on the smeow values and send it to a different request i had a look at the tabletools plugin but it doesn t really play well with server-side tabletools is more focused on the client-side source\n')
('server-side', 'more powerful', 'client-side', '', '1204968', 'my guess is that server-side implementation may turn out to be more flexible and more powerful than client-side as i can add functionality to the server easily as long as the client understands it\n')
('server-side', 'earlier', 'client-side', '', '18131172', 'the problem is that the server-side selectedindexchanged event triggers earlier than the client-side change event so the data never reaches the server-side\n')
('client-side', 'validation faster', 'server-side', 'validation faster place', '24450617', 'client-side validation is faster than server-side because the validation takes place on client side on browser and the networking time from client to server is saved\n')
('client-side', 'validation more responsive', 'server-side', '', '12484431', 'client-side validation is more responsive to the user but always back it up with proper server-side checks\n')
('server-side', 'validation more', 'client-side', '', '24450617', 'server-side validation is more secure than the client-side as the user cannot see the code even he does a view-source\n')
('server-side', 'more critical', 'client-side', '', '47184617', 'how you handle things server-side is far more critical than client-side validation which can and will be ignored by malicious users\n')
('client-side', 'better', 'server-side', '', '9174795', 'are client-side binding grids better than the server-side ones\n')
('server-side', 'validation more secure', 'client-side', '', '24450617', 'server-side validation is more secure than the client-side as the user cannot see the code even he does a view-source\n')
('client-side', 'more dangerous', 'server-side', '', '26689582', 'in theory encoding client-side is no more dangerous than encoding server-side\n')
('client-side', 'validation more', 'server-side', '', '12484431', 'client-side validation is more responsive to the user but always back it up with proper server-side checks\n')
('client-side', 'script way less secure', 'server-side', 'visitor browser script', '16814826', 'ps again i am aware that relying on client-side script is way less secure compared with handling all execution from within the server-side\n')
('client-side', 'script more', 'server-side', 'visitor browser script', '9866616', 'i am curious to know if detecting the visitor browser with client-side script is more reliable than server-side script\n')
('client-side', 'more responsive', 'server-side', '', '14265942', 'client-side will also be more responsive than server-side because there s no request-response but that s really only a perceived performance issue for high-latency connections\n')
('server-side', 'smaller', 'client-side', '', '42743255', 'since servers omit the working copy you should generally expect server-side bare repositories to be smaller than client-side non-bare repositories\n')
('client-side', 'javascript much more common', 'server-side', '', '1322011', 'that said client-side javascript is much more common and if you were using server-side javascript you would probably know the answer to your question\n')
('client-side', 'easier', 'server-side', '', '33536598', 'i think this method of manipulating the dom from the client-side is easier than using regex from a server-side language\n')
('server-side', 'slower', 'client-side', 'validation faster place', '9306245', 'since you don t want to repeat yourself it s very tempting to put all your validation on one side or the other but there are tradeoffs either way and it is true that server-side validation is going to be slower than client-side\n')
('server-side', 'way more reliable', 'client-side', '', '33539901', 'the server-side way is more reliable and browser-independent while the client-side approach will decrease the amount of incoming traffic to server\n')
('server-side', 'greater', 'client-side', '', '39749944', 'is there a way to load it in node.js or is there another proxy that can be used to monitor changes in array for server-side code that will work far greater than client-side code as it will be receiving yuge requests\n')
('server-side', 'probably more common', 'client-side', '', '12135445', 'storing that info on the server-side is probably more common with the client-side only given his the session cookie\n')
('server-side', 'probably more', 'client-side', '', '12135445', 'storing that info on the server-side is probably more common with the client-side only given his the session cookie\n')

subtraction	add	4
('subtraction', 'assignment lower procedure', 'add', '', '25073892', 'addition subtraction assignment has lower procedure than simply add operation\n')
('subtraction', 'assignment lower', 'add', '', '25073892', 'addition subtraction assignment has lower procedure than simply add operation\n')
('subtraction', 'worse', 'add', '', '16841814', 'addition and subtraction is worse as these have to be done in sequence of two operations and the second operation requires the first to have completed - this is not the case if the compiler is just producing two add operations on independent data\n')
('subtraction', 'lower procedure simply', 'add', '', '25073892', 'addition subtraction assignment has lower procedure than simply add operation\n')

eventlet	gevent	3
('eventlet', 'slower', 'gevent', '', '12669971', 'but this popular wsgi benchmark says eventlet is way slower than gevent\n')
('eventlet', 'way slower', 'gevent', '', '12669971', 'but this popular wsgi benchmark says eventlet is way slower than gevent\n')
('gevent', 'lower', 'eventlet', '', '45035647', 'the use of gevent is also a performant option but slightly lower than eventlet\n')

build.gradle	gradlew	3
('gradlew', 'better', 'build.gradle', '', '45317837', 'i naively assumed that gradlew is better than ivy then when i created my build.gradle the dependency management is even greater mess than of ivy s for the first look\n')
('build.gradle', 'higher priority', 'gradlew', '', '41408942', 'although build.gradle has a higher priority so the value in androidmanifest.xml will be ignored by gradlew while building your application\n')
('build.gradle', 'higher', 'gradlew', '', '41408942', 'although build.gradle has a higher priority so the value in androidmanifest.xml will be ignored by gradlew while building your application\n')

serializable	deserialization	9
('deserialization', 'code more', 'serializable', '', '19277574', 'i ve reworked it slightly so that the deserialization code looks more like its serializable counterpart\n')
('serializable', 'more control', 'deserialization', '', '3210800', 'you ll need to implement serializable to have java handle the serializable or externalizable if you need more control over the deserialization process\n')
('serializable', 'more options', 'deserialization', '', '20996013', 'side note check-out the json.net serializable which gives more options and better control over the deserialization process\n')
('serializable', 'longer equal', 'deserialization', '', '18810000', 'i have an issue with serializable in c# .net where if i serializable in one stream multiple references to a same object these references are no longer equal after deserialization\n')
('serializable', 'quicker', 'deserialization', '', '1092020', 'the serializable seems quicker but deserialization much slower and the app is doing more deserializing than serializing\n')
('serializable', 'better control', 'deserialization', '', '20996013', 'side note check-out the json.net serializable which gives more options and better control over the deserialization process\n')
('deserialization', 'harder', 'serializable', '', '3019036', 'deserialization is harder than serializable\n')
('serializable', 'more', 'deserialization', '', '20996013', 'side note check-out the json.net serializable which gives more options and better control over the deserialization process\n')
('deserialization', 'much faster', 'serializable', '', '12316966', 'if the taskproperty class is decorated with datacontract attribute and with datamember attribute for each property the deserialization is much faster than when it is decorated with serializable attribute\n')

opera	firefox	13
('firefox', 'even fewer', 'opera', '', '14056377', 'firefox has even fewer as far as i know and opera has none\n')
('opera', 'lower', 'firefox', '', '26089655', 'in opera it goes little bit lower than in firefox\n')
('opera', 'bigger', 'firefox', '', '17721821', 'on your screenshot div width in opera is bigger than in firefox and google-chrome\n')
('firefox', 'even worse', 'opera', 'framerates faster worse', '1451062', 'the problem with this code is that it doesn t quite work on firefox and works even worse on opera\n')
('opera', 'worse', 'firefox', '', '9978052', 'only firefox and opera seem to have this issue opera even worse than firefox but i don t care that much about opera\n')
('firefox', 'less such', 'opera', '', '19552846', 'for example in the classic browser share example if the firefox is at 45 i want to be rendered inside the pie distance -40 may be and where the slice is less such as opera at 6 - i want it to be shown outside with a connector\n')
('opera', 'slower', 'firefox', 'framerates faster worse', '1278273', 'for example i ve read that opera and ie will fix framerates slower than firefox\n')
('firefox', 'faster', 'opera', '', '19554859', 'but if firebug don√¢ t enabled after launch firefox √¢ time equal 2ms that faster than opera and google-chrome and difference between empty filled array disappears\n')
('opera', 'larger fonts', 'firefox', '', '2292967', 'update under linux gentoo amd64 it s the same - opera reneders slightly larger fonts than firefox but nothing that looks odd\n')
('firefox', 'significantly faster', 'opera', 'framerates faster worse', '17023332', 'it seems to be slower in google-chrome and firefox but is significantly faster in opera\n')
('firefox', 'just far more', 'opera', '', '3323922', 'firefox just provides far more access to its own internals and system to the extensions so its technically possible to do more with them than with opera widgets or google-chrome extensions\n')
('firefox', 'just far more access', 'opera', '', '3323922', 'firefox just provides far more access to its own internals and system to the extensions so its technically possible to do more with them than with opera widgets or google-chrome extensions\n')
('firefox', 'even fewer', 'opera', '', '42550103', 'firefox has even fewer as far as i know and opera has none\n')

subtract	multiplying	7
('subtract', 'faster', 'multiplying', '', '29260876', 'subtract is faster than multiplying\n')
('subtract', 'weaker', 'multiplying', '', '5269766', 'similarly if you skip the five first elements your loop takes o n-5 time but that too is the same as o n because adding or subtract a constant is even weaker than multiplying by a constant\n')
('subtract', 'more reliable', 'multiplying', '', '417342', 'adding and subtract logarithms of factorials then taking the exponential at the end is more reliable than multiplying and dividing factorials directly\n')
('subtract', 'faster', 'multiplying', '', '12977648', 'p is sometimes chosen to be 31 because not only is it prime but a compiler resolves it to a bitshift and a subtract which is much faster than a multiplying\n')
('multiplying', 'bigger', 'subtract', '', '38324792', 'the logic is multiplying by 2 whole number 0.1 2 0.2 and if it s bigger than 1 subtract and continue\n')
('subtract', 'greater', 'multiplying', '', '32910443', 'subtract first field from the other and if the value is not greater than 0 multiplying by -1\n')
('subtract', 'much faster', 'multiplying', '', '12977648', 'p is sometimes chosen to be 31 because not only is it prime but a compiler resolves it to a bitshift and a subtract which is much faster than a multiplying\n')

miglayout	gridbaglayout	4
('miglayout', 'probably easier', 'gridbaglayout', '', '12658326', 'edit for clarification miglayout is probably easier to use than gridbaglayout but if you get familiar with gridbaglayout it s not that hard to use and it doesn t require a download since it s part of the core java library\n')
('miglayout', 'much more convenient', 'gridbaglayout', '', '16595066', 'you can also check out the open-source miglayout which is much more convenient that gridbaglayout and also a bit more powerful\n')
('miglayout', 'much more', 'gridbaglayout', '', '16595066', 'you can also check out the open-source miglayout which is much more convenient that gridbaglayout and also a bit more powerful\n')
('miglayout', 'less difficult', 'gridbaglayout', '', '7514203', 'look at the quick start guide on the miglayout site it s a lot less difficult than gridbaglayout and much more powerful\n')

feed	rss	8
('feed', 'more', 'rss', '', '4832591', 'the specification of atom feed offers more value than the rss one with internationalization content types and other things and every modern feed reader supports it\n')
('rss', 'more', 'feed', '', '43525024', 'as you noticed yoou cannot create an rss campaign feeded by more than oone feed\n')
('feed', 'more', 'rss', '', '19577065', 'google does this because their feed api can parse more than rss\n')
('feed', 'string more', 'rss', '', '26399169', 'for example if your screen is 600 pixels wide and if the rss feed string takes more than 600 pixels to display you will not be able to see the end of your rss feed\n')
('feed', 'faster', 'rss', '', '37597683', 'the atom feed option seems to load faster than the rss one fwiw\n')
('rss', 'more', 'feed', '', '5235559', 'you d gain compatibility and durability because rss is more defined things will change less but if the feed doesn t include what you need it won t help you\n')
('feed', 'more value', 'rss', '', '4832591', 'the specification of atom feed offers more value than the rss one with internationalization content types and other things and every modern feed reader supports it\n')
('feed', 'easier', 'rss', '', '5462449', 'if your service already has an rss feed things are even easier with the rss reader integrated in the buzzbox api\n')

keyboard	mouse	11
('keyboard', 'more', 'mouse', '', '161193', 'for example do you use keyboard more than mouse\n')
('mouse', 'slower', 'keyboard', '', '6731523', 'this is a radical concept i know but the mouse is slower than keyboard shortcuts\n')
('keyboard', 'faster', 'mouse', 'slower faster', '414289', 'the keyboard is almost always faster than the mouse\n')
('keyboard', 'events more', 'mouse', '', '10389173', 'this approach using purely images screenshots and generating mouse and keyboard events is more similar to manual testing activities performed by real people which have just monitor mouse and keyboard\n')
('keyboard', 'much better', 'mouse', '', '3982894', 'it recommends using ctr cmd + 1 to use the keyboard this is much better than having to use the mouse but i m still looking for a just do the right thing most of the time automatic solution\n')
('keyboard', 'faster', 'mouse', '', '1295425', 'i prefer the command line because i have a shell window open in the source anyway to run builds and tests and along with file name completion using the keyboard is faster than using the mouse for me\n')
('keyboard', 'more important', 'mouse', '', '923190', 'also in this case keyboard input is essential and more important than mouse interaction\n')
('mouse', 'more accessible', 'keyboard', '', '35051381', 'i need to change my dropdown menu which works well with a mouse but i would like to make it more accessible with keyboard\n')
('mouse', 'slower', 'keyboard', '', '31884800', 'the last fallback is to go the snail way - to mouse over to click on the red close window button but any mouse movements are slower than a keyboard shortcut\n')
('mouse', 'much more', 'keyboard', 'slower faster', '45399198', 'doing it with mouse is much more slower than it can be done with keyboard\n')
('keyboard', 'events more similar', 'mouse', '', '10389173', 'this approach using purely images screenshots and generating mouse and keyboard events is more similar to manual testing activities performed by real people which have just monitor mouse and keyboard\n')

division	modulo	14
('modulo', 'slower', 'division', '', '27980441', 'so in simple terms this should give you a feel for why division and hence modulo is slower computers still have to do long division in the same stepwise fashion tha you did in grade school\n')
('modulo', 'really more', 'division', '', '10063634', 'python respects this definition whereas in most other programming language the modulo is really more like a reaminder after division operator\n')
('division', 'higher priority', 'modulo', '', '13440423', 'is the same as because division has higher priority than modulo\n')
('modulo', 'faster', 'division', 'wise operations slow', '27589182', 'if you compute modulo a power of two using bitwise and is simpler and generally faster than performing division\n')
('modulo', 'much faster', 'division', 'wise operations slow', '20258656', 'since bit wise operations can be done very fast and division operations are relatively slow this type of modulo is much faster than doing a division\n')
('modulo', 'better straight', 'division', 'number bits harder', '29476678', 'modulo gives you a remainder which is why it s better than straight division in situations where you re number of elements can change\n')
('modulo', 'much harder', 'division', 'number bits harder', '12786755', 'programmers like to use this property to speed up programs because it s easy to chop off some number of bits but performing a modulo is much harder it s about as hard as doing a division\n')
('modulo', 'more', 'division', '', '16247449', 'inverse modulo for 300 time take 1.422 seconde more than executing division sub and multiplication 10k time even the core of inverse modulo is build with same division and sub and multiplication functions and for this number it just do 150 time inside while help plz why\n')
('modulo', 'more', 'division', '', '31210691', 'modulo is more mathematical if you like while the remainder in the c-family is consistent with the common integer division satisfying and this is adopted from old fortran\n')
('division', 'higher', 'modulo', '', '13440423', 'is the same as because division has higher priority than modulo\n')
('modulo', 'slower computers', 'division', '', '27980441', 'so in simple terms this should give you a feel for why division and hence modulo is slower computers still have to do long division in the same stepwise fashion tha you did in grade school\n')
('modulo', 'more mathematical', 'division', '', '31210691', 'modulo is more mathematical if you like while the remainder in the c-family is consistent with the common integer division satisfying and this is adopted from old fortran\n')
('division', 'better', 'modulo', '', '8914667', 'using an extra variable to avoid the costly division and the resulting time was 18.9s so significantly better than the modulo with a statically known constant\n')
('division', 'faster', 'modulo', '', '48103', 'a side effect of many division routines is the modulo - so in few cases should division actually be faster than modulo\n')

diagram	entity-relationship	3
('diagram', 'more abstract', 'entity-relationship', '', '23722201', 'oo class diagram is more abstract and has more features than entity-relationship diagram\n')
('diagram', 'more features', 'entity-relationship', '', '23722201', 'oo class diagram is more abstract and has more features than entity-relationship diagram\n')
('diagram', 'more', 'entity-relationship', '', '23722201', 'oo class diagram is more abstract and has more features than entity-relationship diagram\n')

pom.xml	maven	11
('maven', 'deeper', 'pom.xml', '', '43611728', 'when maven is going deeper it falls back to normal pom.xml\n')
('maven', 'project more', 'pom.xml', '', '26857936', 'keep in mind that a maven project is more than just the pom.xml file it also conforms to the maven standard directory layout and more but that should get you started\n')
('maven', 'more', 'pom.xml', '', '28884953', 'converting to maven requires more work -- afaik there is no official tool or wizard that allows you to generate a full pom.xml configuration from an existing eclipse project\n')
('maven', 'more work', 'pom.xml', '', '28884953', 'converting to maven requires more work -- afaik there is no official tool or wizard that allows you to generate a full pom.xml configuration from an existing eclipse project\n')
('maven', 'classifier construct', 'pom.xml', '', '16450819', 'maven uses the classifier construct for artefacts build from the same pom.xml but differing in there content for example one for jdk1.6 or jdk1.7\n')
('pom.xml', 'easier', 'maven', '', '33131999', 'you would be able to circumvent this by first running mvn clean install on magnicompcommon s pom.xml then on model pom.xml but this is much easier done by invoking maven directly on the root pom.xml\n')
('pom.xml', 'more difficult', 'maven', '', '11371300', 'it has some downsides- namely working with both ant and maven so the actual pom.xml is more difficult to comprehend but it does allow for more flexibility than is otherwise possible with maven\n')
('maven', 'now more parsing', 'pom.xml', '', '14727072', 'once the set of projects has been validated maven now does some more parsing of those pom.xml files to construct the list of build extensions if any and the list of plugins\n')
('maven', 'classifier', 'pom.xml', '', '16450819', 'maven uses the classifier construct for artefacts build from the same pom.xml but differing in there content for example one for jdk1.6 or jdk1.7\n')
('pom.xml', 'more', 'maven', '', '11371300', 'it has some downsides- namely working with both ant and maven so the actual pom.xml is more difficult to comprehend but it does allow for more flexibility than is otherwise possible with maven\n')
('maven', 'now more', 'pom.xml', '', '14727072', 'once the set of projects has been validated maven now does some more parsing of those pom.xml files to construct the list of build extensions if any and the list of plugins\n')

sublimetext	vim	4
('sublimetext', 'easier', 'vim', '', '39787498', 'personally i m using sublimetext right now which i find easier than vim for searching and navigating the code but everyone has their taste\n')
('sublimetext', 'supposedly better', 'vim', '', '13118840', 'textmate isn t known to perform well on large files but sublimetext supposedly performs better than vim on large files and yet supports legacy textmate syntax parsers\n')
('sublimetext', 'better', 'vim', '', '13118840', 'textmate isn t known to perform well on large files but sublimetext supposedly performs better than vim on large files and yet supports legacy textmate syntax parsers\n')
('sublimetext', 'more accessible', 'vim', '', '32047973', 'sublimetext or webstorm are far more accessible than vim so it usually happens with their editor rather than mine\n')

orientdb	neo4j	8
('orientdb', 'faster', 'neo4j', 'ti faster depth', '45860902', 'using orientdb that is supposed ti be faster than neo4j for depth i m seeing a slow performance\n')
('neo4j', 'result way longer', 'orientdb', '', '26497068', 'as you can see the neo4j result is way longer then the one from orientdb\n')
('orientdb', 'slower', 'neo4j', 'ti faster depth', '14565718', 'i found that orientdb is too slow at least much slower than neo4j even on relatively small 150k datasets when searching records by text pattern despite the presence of indices\n')
('orientdb', 'more', 'neo4j', '', '23779937', 'orientdb looks more fancy and advanced but not as popular as neo4j and is not supported on heroku\n')
('neo4j', 'result way longer then', 'orientdb', '', '26497068', 'as you can see the neo4j result is way longer then the one from orientdb\n')
('orientdb', 'more fancy', 'neo4j', '', '23779937', 'orientdb looks more fancy and advanced but not as popular as neo4j and is not supported on heroku\n')
('orientdb', 'better', 'neo4j', '', '39445325', 'i read in some blog that orientdb performs at least as good if not better than neo4j while also offering more complex types like mongodb would\n')
('orientdb', 'lower', 'neo4j', '', '34219834', 'the number of requests orientdb could serve is consistently 3 to 5 times lower than neo4j\n')

h.264	mp4	4
('h.264', 'more', 'mp4', '', '11314411', 'h.264 is more often encapsulated in mp4 container and vp8 in mkv\n')
('h.264', 'more often', 'mp4', '', '11314411', 'h.264 is more often encapsulated in mp4 container and vp8 in mkv\n')
('h.264', 'better', 'mp4', 'free alternative platforms', '9734251', '- you can also consider using webm which is a free alternative to h.264 and has better support on some platforms than fragmented mp4\n')
('mp4', 'format better', 'h.264', 'free alternative platforms', '16599515', 'it doesn t support avi at the moment but imho mp4 format is better suited for h.264 anyway\n')

jsonb	hstore	3
('jsonb', 'more compact', 'hstore', '', '7934577', 'json jsonb fields support any json-encodable data type not just key value pairs but also tend to be faster and for jsonb more compact than hstore\n')
('hstore', 'much more expensive', 'jsonb', '', '42787991', 'i admit that gin index on hstore is much more expensive than its equivalent for jsonb but even then it is faster to just do seq scan on hstore than use index on jsonb\n')
('hstore', 'much more', 'jsonb', '', '42787991', 'i admit that gin index on hstore is much more expensive than its equivalent for jsonb but even then it is faster to just do seq scan on hstore than use index on jsonb\n')

acid	consistency	3
('acid', 'more', 'consistency', '', '45723184', 'however the isolation part of acid sounds more like consistency model in particular the sequential consistency model\n')
('acid', 'principles much more', 'consistency', '', '17914452', 'using a database system such as sqlite or mysql that follows the acid principles is much more easy as the database system guarantees consistency atomicity of the transactions isolation and durability\n')
('acid', 'principles much more easy', 'consistency', '', '17914452', 'using a database system such as sqlite or mysql that follows the acid principles is much more easy as the database system guarantees consistency atomicity of the transactions isolation and durability\n')

lodash	underscore.js	16
('lodash', 'better solution', 'underscore.js', 'better comment likely', '32372660', 'edit as pointed out in the comment lodash is likely to be a better solution than underscore.js\n')
('lodash', 'better', 'underscore.js', '', '45621592', 'i believe lodash is a better choice over underscore.js more details in this blog post\n')
('lodash', 'faster', 'underscore.js', 'faster stunned simple', '18300039', 'i am stunned right now seeing a lodash performing 100-150 faster than underscore.js in even simple native functions such as array.every in chrome\n')
('lodash', 'faster implementation', 'underscore.js', '', '17156415', 'lodash is another faster implementation of underscore.js that will provide a lot of utility methods for working wit arrays objects functions etc\n')
('lodash', 'better version', 'underscore.js', 'better comment likely', '43641416', 'if you re open to using lodash which is a better version of underscore.js imo this can be expressed fairly simply using flattendeep on each element of your multi-dimensional array\n')
('lodash', 'faster', 'underscore.js', '', '17156415', 'lodash is another faster implementation of underscore.js that will provide a lot of utility methods for working wit arrays objects functions etc\n')
('lodash', 'more modular', 'underscore.js', '', '33964991', 'lodash is more modular than underscore.js underscore.js around 5kb lodash around 17kb but is generally lighter because you only include the specific modules you need\n')
('lodash', 'more convoluted', 'underscore.js', '', '23922041', 'basically collections are things that implement some kind of iterable interface and they internally use the same iteration method though lodash source is a bit more convoluted than underscore.js\n')
('lodash', 'even more features', 'underscore.js', 'latest compatibility stable', '28931507', 'the easiest solution is to just replace underscore.js with lodash which has even more features than the latest underscore.js\n')
('lodash', 'faster', 'underscore.js', 'faster stunned simple', '21148491', 'if i remember correctly lodash argued they were faster than underscore.js because the use non-native functions for key operations\n')
('lodash', 'slower', 'underscore.js', '', '27342533', 'lodash is definitely not slower than underscore.js\n')
('lodash', 'better choice', 'underscore.js', '', '45621592', 'i believe lodash is a better choice over underscore.js more details in this blog post\n')
('lodash', 'faster', 'underscore.js', '', '20321282', 'the solution from charliefl is approximately 100x faster than underscore.js depending on browser in this case and lodash being up to 2x faster than underscore.js\n')
('lodash', 'more', 'underscore.js', '', '33964991', 'lodash is more modular than underscore.js underscore.js around 5kb lodash around 17kb but is generally lighter because you only include the specific modules you need\n')
('lodash', 'more frequently', 'underscore.js', 'latest compatibility stable', '13898916', 'because lodash is updated more frequently than underscore.js a lodash underscore.js build is provided to ensure compatibility with the latest stable version of underscore.js\n')
('lodash', 'more', 'underscore.js', '', '42076586', 'given that this is 4 years old and lodash has more or less taken the place of underscore.js i thought i would share this solution using lodash\n')

debian	linux	3
('linux', 'smaller base-image', 'debian', '', '46709154', 'it is widely used to have a separated tag with the postfix -alpine in it to indicate that alpine linux is used which is a much smaller base-image than the debian image\n')
('debian', 'worse', 'linux', '', '22438068', 'personally i develop on the windows but deploy on debian where couldn t find the scrapyd package at all at the time i was working on it and noticed that performance of scrapy is considerably worse than on linux box so you might reconsider your target\n')
('linux', 'older', 'debian', '', '43331973', 'if your system linux is older like debian wheezy for example your glibc version will be older than the required one\n')

move	drag	4
('drag', 'smaller', 'move', 'press release order', '24920106', 'it ends up in a state of confusion...you basically cannot release the drag of the table it keeps getting bigger and smaller as you move your mouse - but you can never let go and release it to get the size you want\n')
('move', 'more difficult', 'drag', '', '9984591', 'this is easy to implement with buttons select items click up or down buttons to move - just loop through and apply the move to each selected item but much more difficult with drag reordering\n')
('move', 'bigger parent', 'drag', 'press release order', '29649620', 'i reimplemented the mouse move press and release events for the inner widget in order to be able to move it inside its bigger parent with drag drop\n')
('drag', 'slower', 'move', '', '44699825', 'i got a draggable object done with jquery ui and when i drag it it s way slower than i move my mouse\n')

kerberos	ldap	3
('kerberos', 'far more', 'ldap', '', '46188971', 'in short as an authentication protocol kerberos is far more secure out of the box is de-centralized and will put less load on your directory authentication servers than ldap will\n')
('kerberos', 'far more secure', 'ldap', '', '46188971', 'in short as an authentication protocol kerberos is far more secure out of the box is de-centralized and will put less load on your directory authentication servers than ldap will\n')
('kerberos', 'more', 'ldap', '', '242546', 'one might want to define kerberos access to more than one ldap server\n')

pandas	seaborn	3
('pandas', 'more', 'seaborn', '', '24921847', 'for similar functionality that speaks pandas but has more flexible features you could use the facetgrid object from seaborn\n')
('pandas', 'more flexible', 'seaborn', '', '24921847', 'for similar functionality that speaks pandas but has more flexible features you could use the facetgrid object from seaborn\n')
('seaborn', 'much easier', 'pandas', '', '38947307', 'i also think working with seaborn is much easier using pandas dataframes and not numpy arrays\n')

memcached	apc	23
('apc', 'faster', 'memcached', 'faster in-memory slower', '9884780', 'in my case apc is 59 times faster than memcached\n')
('apc', 'faster', 'memcached', 'faster in-memory slower', '17118318', 'apc is faster on a single server - but memcached is distributed\n')
('memcached', 'faster', 'apc', '', '7465290', 'memcached is faster than apc as zend_cache backend but you still need apc extension installed even in development mode to get a great speedup of your code\n')
('apc', 'more functionality', 'memcached', '', '10135428', 'apc gives you some more functionality than memcached\n')
('apc', 'generally less memory', 'memcached', '', '10858440', 'the big caveat here is that apc generally has less memory available for storage though. default being 32mb memcached s big adavantage is that while still fast it s distributed so if you have multiple servers running they could share this data\n')
('memcached', 'more', 'apc', '', '1935264', 'memcached has more overhead since you have to use a tcp connection to access it versus just a function call for apc xcache shared objects\n')
('memcached', 'more overhead', 'apc', '', '1935264', 'memcached has more overhead since you have to use a tcp connection to access it versus just a function call for apc xcache shared objects\n')
('apc', 'much more faster', 'memcached', 'faster in-memory slower', '11584538', 'as you know apc is much more faster than memcached if we re fetching keys from a single server\n')
('apc', 'faster', 'memcached', '', '1825484', 'a quick googling says that apc is 5 times faster than memcached\n')
('apc', 'much faster', 'memcached', '', '18910135', 'please don t mention memcached i am already using it but it is not suitable as direct replacement of apc because i am doing many apc_fetch calls because apc is much faster than memcached for this purpose\n')
('memcached', 'slower', 'apc', 'faster in-memory slower', '1808814', 'memcached around 4-5 times slower than apc but run as a single process that can be touched everywhere in my environment\n')
('apc', 'faster', 'memcached', '', '18910135', 'please don t mention memcached i am already using it but it is not suitable as direct replacement of apc because i am doing many apc_fetch calls because apc is much faster than memcached for this purpose\n')
('memcached', 'slower', 'apc', 'faster in-memory slower', '17295791', 'memcached is in-memory too and a bit slower than apc\n')
('apc', 'generally less', 'memcached', '', '10858440', 'the big caveat here is that apc generally has less memory available for storage though. default being 32mb memcached s big adavantage is that while still fast it s distributed so if you have multiple servers running they could share this data\n')
('apc', 'more', 'memcached', 'caching database performance', '4999069', 'apc is more an opcode caching system than a key value memory database like memcached altough it can be greatly used for both purposes\n')
('apc', 'faster', 'memcached', '', '22253724', 'better use apc on apache server it will be much faster than memcached because you don t need to make a tcp ip call to connect to memcached\n')
('apc', 'less feature', 'memcached', '', '1825484', 'apc have less feature than memcached and is easly to use and optimize but this depends on your needs\n')
('memcached', 'more', 'apc', '', '1935264', 'memcached is more along the lines of a distributed object cache vs something like apc or xcache which stores php bytecode in memory so you avoid having to parse it each time\n')
('apc', 'faster', 'memcached', 'faster in-memory slower', '13751524', 'it s slower than apc but it s faster than memcached redis etc\n')
('apc', 'faster', 'memcached', 'faster in-memory slower', '1825484', 'my experience say that apc is nearly 7-8 times faster than memcached\n')
('memcached', 'more functionality', 'apc', 'faster in-memory slower', '1803139', 'memcached has more functionality but is intended for distributed environments while apc works on single servers only\n')
('memcached', 'more', 'apc', 'caching database performance', '15117742', 'memcached is more for caching database queries and improving performance in that regard while apc is more for improving performance of php code\n')
('apc', 'faster', 'memcached', 'faster in-memory slower', '2353190', 'apc access is a bit faster something like 5 times faster than memcached if i remember correctly as it s only local -- no network involved\n')

dsa	rsa	11
('dsa', 'faster', 'rsa', '', '5868759', 'a dsa signature generation could be somewhat faster than a rsa signature generation maybe up to twice faster\n')
('rsa', 'older', 'dsa', '', '10115891', 'i guess rsa is older and dsa is newer\n')
('rsa', 'slower', 'dsa', 'verification 10x testing', '24689036', 'this is why rsa is much slower than dsa\n')
('dsa', 'slower', 'rsa', 'verification 10x testing', '7911156', 'however dsa verification expect verification calls to be 100x issue is about 10x slower than rsa verification\n')
('dsa', 'keys much riskier', 'rsa', '', '43577180', 'that continued usage of 1024-bit prime field elgamal or dsa keys is much riskier than it is for 1024-bit rsa all are still commonly used because once a successful attack has been conducted against a single well-chosen prime field all users of that prime field may be affected at little additional effort.\n')
('dsa', 'smaller', 'rsa', '', '7911156', 'dsa has signature that is independent of key strength and is much smaller than rsa signature for equivalent security rsa 1024 1568 vs dsa 192\n')
('dsa', 'shorter', 'rsa', '', '2917821', 'dsa signatures are signficantly shorter than rsa ones\n')
('dsa', 'less', 'rsa', '', '16525310', 'however in this case dsa key size is less than rsa key size\n')
('dsa', 'more compact', 'rsa', '', '4599528', 'use dsa it tends to be more compact than rsa\n')
('rsa', 'better choice', 'dsa', '', '41289399', 'rsa is also a better choice than dsa because it has much better breadth of support for signatures still considered secure by nist\n')
('rsa', 'slower', 'dsa', 'verification 10x testing', '12594809', 'i have made some testing and it came out that rsa is lot slower than dsa\n')

trackpad	mouse	4
('mouse', '#inner', 'trackpad', '', '39257760', 'let s boil your trouble down to this if the mouse is over #inner you can t use the usual methods spacebar arrow keys trackpad wheel to scroll #outer up and down\n')
('trackpad', 'higher', 'mouse', '', '13442793', 'unfortunately the trackpad s scrolling deltas are orders of magnitude higher than a mouse s so the scroll speed is psychotically high\n')
('trackpad', 'much more sensitive', 'mouse', '', '32828353', 'the trackpad is much more sensitive and can get the breakpoint increment correctly but the mouse wheel ends up scrolling through the section much quicker without correctly keeping up with the proper frame rate so i never end up reach the final frame by the end of the section\n')
('trackpad', 'much more', 'mouse', '', '32828353', 'the trackpad is much more sensitive and can get the breakpoint increment correctly but the mouse wheel ends up scrolling through the section much quicker without correctly keeping up with the proper frame rate so i never end up reach the final frame by the end of the section\n')

width	margin	47
('margin', 'greater', 'width', 'greater div bigger', '5555847', 'a common solution is to float your fixed-width column left or right and give the other column a margin equal or greater than the width of the fixed-width column\n')
('margin', 'more', 'width', '', '45232082', 'but the margin is more difficult to include in the width because it is on the outside of the box\n')
('margin', 'more', 'width', 'greater div bigger', '13059986', 'you re negative margin is more than half the viewport width of an iphone therefore it is dragging it out of view\n')
('width', 'nicer', 'margin', 'css height directives', '604314', 'edit someone else suggested css and i believe that using the height and width directives from css will give you the same result as using the same attributes of the tag but doesn t limit you strictly to images and a will play nicer with any margin or padding directives you might use\n')
('margin', 'bigger', 'width', 'greater div bigger', '40405403', 'aside of the left floated div i have another div article with a margin a little bigger than the width of the floating div just usual for a two column layout\n')
('margin', 'bigger', 'width', 'greater div bigger', '9126839', 'anyway i just set the margin to a value a little bigger than the width of the image and overlap is eliminated only in the very specific case we want\n')
('margin', 'larger', 'width', 'greater div bigger', '30945014', 'the the main content div needs to have left margin larger than the width of your sidebar\n')
('margin', 'bigger', 'width', 'greater div bigger', '36665967', 'the reason why your website is x-scrollable on all devices is that you forgot to add to and the row inside it has 100 +15px left margin +15px right margin which is bigger than window width\n')
('margin', 'higher', 'width', 'greater div bigger', '41787489', 'now if the div with has margin 660px from the left it should be hidden because it s margin is higher than the maximum width of the main container\n')
('margin', 's more related', 'width', '', '45996349', 'margin using percent doesn t work cross browsers on flex items so if your margin s is more related to the viewport use viewport units vh or vw else you can combine px with css calc width calc 33.333 - 20px to match an equal gutter between the items\n')
('margin', 'greater', 'width', 'greater div bigger', '39685256', 'i just made the left margin of div2 greater than the width of div1 and it worked for me\n')
('margin', 'wider', 'width', 'greater div bigger', '16430191', 'another option is not to float the main content column but instead assuming it s the right column to give it a large left margin that is slightly wider than the width of the left column\n')
('width', 'more', 'margin', '', '15199420', '50 width is more than enough for the images to fit even with the image margin\n')
('margin', 'more difficult', 'width', '', '45232082', 'but the margin is more difficult to include in the width because it is on the outside of the box\n')
('margin', 'bigger', 'width', 'greater div bigger', '33567403', 'what i do not understand is why the size of the point and the text is not the same and why the margin can be bigger than the width of the figure\n')
('margin', 'greater', 'width', '', '15830195', 'i m using the function window .resize to detect if the total width of all open windows plus some margin is greater than the window s width then hide the first chat window or show the last one if there s space for more windows\n')
('margin', 's more', 'width', '', '45996349', 'margin using percent doesn t work cross browsers on flex items so if your margin s is more related to the viewport use viewport units vh or vw else you can combine px with css calc width calc 33.333 - 20px to match an equal gutter between the items\n')
('width', 'more div', 'margin', 'greater div bigger', '17188618', 'how to place 2 div side by side one div is of 75 width and the other is 25 width.one more div with margin 0 auto\n')
('margin', 'greater', 'width', 'greater div bigger', '1567157', 'give the sample text div a right margin greater than the width of the right-floated element\n')
('width', 'bigger', 'margin', 'greater div bigger', '28122212', 'but in general this wouldn t work because of the specified width is bigger than the real one and exceed it so there s no margin to auto it and center the content which found in div\n')
('margin', 'less', 'width', 'border next object', '17646403', 'this means they won t float next to one another unless you set the width of each so that the combined width + margin + border + padding of both blocks is equal to or less than the width of the container\n')
('width', 'clipping earlier', 'margin', '', '15982149', 'so it would also be possible to have all three textblock columns starsized but that means width clipping does occur earlier and there is more margin\n')
('margin', 'more', 'width', 'border next object', '25428575', 'and if they aren t next to eachother that means your padding and margin is more than the 5 width of total width so reduce them\n')
('margin', 'greater', 'width', 'greater div bigger', '5494802', 'the title goes in a h1 for example and the text in a p or div so set these two elements to have a left margin greater than the width of image a\n')
('width', 'larger', 'margin', 'greater div bigger', '28288003', 'when the screen width becomes larger than 500px the contents of the media query are ignored and the margin becomes 20\n')
('margin', 'greater', 'width', 'greater div bigger', '42291487', 'on release the drawer should slide open if its margin is greater than half its width and should close if its less\n')
('width', 'less', 'margin', '', '14087592', 'essentially my logic is when the window is re-sized and the width is less than 810px then remove all css styling and add margin top items 2 through infinity\n')
('margin', 'more', 'width', 'greater div bigger', '31236608', 'adding margin adds more width making the total width of the two elements and their margin greater than 100 pushing the elements onto separate lines\n')
('width', 'less', 'margin', 'greater div bigger', '29478000', 'if the content leads to a width that is less than 100 of the table s containing block then setting the left right margin to auto will center the table within the containing block\n')
('width', 'less', 'margin', 'css height directives', '38602970', 'i notice that when the arrow block is rendered when width is less than 296 px inside the carousal there is some space between the left border of the carousal and the arrow block even though i did not add padding or margin\n')
('margin', 'greater', 'width', 'greater div bigger', '39193574', 'you have given width of 50 with additional margin of 5 to each of the element which is greater than 100 width\n')
('margin', 'auto better', 'width', 'greater div bigger', '28907018', 'first one margin auto is better if you can know width of container list and you don t want centre content of this container\n')
('margin', 'lesser', 'width', 'greater div bigger', '27755071', 'one way of doing this is checking if left margin of the inner div is lesser than the width of sidebar and then only add class adjust\n')
('margin', 'bigger', 'width', 'greater div bigger', '26513621', 'when i launch it with firefox or internet explorer the box gets immediately to a huge distance from the margin much bigger than the width of the screen and now i noticed that if i run it with stackoverflow s snippet function the box does not move\n')
('margin', 'less', 'width', '', '22302383', 'instead of the reaching 100 width the margin is causing less width for them due to the 20px x 12\n')
('width', 'less', 'margin', 'greater div bigger', '35299571', 'the elements are sized relative to the entire viewport but the body width is less than this because of the default margin on body\n')
('margin', 'less', 'width', 'greater div bigger', '31763862', 'you have to take into consideration that borders take up width and that the margin of 1 of either side of the large container means that it can only be less than 100 width\n')
('margin', 'animation longer', 'width', '', '23095425', 'my guess is that they are technically happening simultaneously but that the margin animation takes longer to complete than the width animation\n')
('margin', 'greater', 'width', 'greater div bigger', '17308362', 'once the negative margin is equal or greater than the width of that element further negative margin has no effect\n')
('margin', 'greater', 'width', 'greater div bigger', '18518651', 'you can try giving an id to each one of the divs or style them for margin that is greater than or equal to the image width.assuming you image width is 50px this code shall work\n')
('margin', 'size greater content', 'width', '', '7190768', 'the first-child column has 10 pixels or whatever the margin size is greater content area width than it s siblings\n')
('margin', 'less', 'width', 'border next object', '19968815', 'just so you know you want the total width object width + padding + margin + border of both columns to be less than the width of the container\n')
('margin', 'larger', 'width', 'greater div bigger', '10486251', 'by giving the middle indicators div a left and right margin slightly larger than the width of the left and right button divs you allow it to float up between the two and take up as much space as possible\n')
('margin', 'size greater', 'width', '', '7190768', 'the first-child column has 10 pixels or whatever the margin size is greater content area width than it s siblings\n')
('margin', 'bigger', 'width', 'greater div bigger', '6746105', 'the box is never too small infact the margin of the adjacent div is bigger than the width of ul div\n')
('width', 'less', 'margin', 'greater div bigger', '37293218', 'but if the screen width is less than 200 then it will be from left view edge margin to right view edge margin.\n')
('width', 'more', 'margin', '', '30378885', 'if browser width is more than 768px then set a 110px margin\n')

orika	dozer	4
('orika', 'faster', 'dozer', 'close manual slower', '23957375', 'orika is way faster than dozer and quite close to manual mapping\n')
('orika', 'slower', 'dozer', 'close manual slower', '22939629', 'i tested orika and it was a lot faster but was slower than dozer with small collections\n')
('orika', 'better', 'dozer', '', '10046175', 'performance will depends on your application use cases basically orika perform better than dozer or other mapping reflection based frameworks because it use bytecode generation behind the scenes\n')
('orika', 'faster', 'dozer', '', '12161589', 'wel i have used both orika and dozer i can say orika is at least 10 times faster than dozer in my project after the replacement\n')

hash	md5	43
('hash', 'faster', 'md5', 'sha1 sha256 algorithm', '3737518', 'this generally uses a hash algorithm that is much faster than md5\n')
('hash', 'slower sha1', 'md5', 'sha1 sha256 algorithm', '25440325', 'also the hash algorithm itself is much slower than sha1 md5 sha1 md5 are made for speed - not a useful property when storing passwords\n')
('hash', 'cake more complex', 'md5', '', '9267163', 'the hash cake generates are more complex than md5\n')
('hash', 'faster other', 'md5', 'sha1 sha256 algorithm', '4025516', 'in that case some hash functions are somewhat faster than other md5 being one of the fast functions but md4 is faster and it is simple enough that its code can be included in any application without much hassle\n')
('hash', 'simply more expensive', 'md5', '', '8646550', 'crypt with hash is simply more expensive than md5\n')
('md5', 'much more', 'hash', 'secure value clear', '2718168', 'obviously md5 is much more difficult to reverse even in this anything that will hash to the right value sense then a simplistic algorithm like take the last two digits\n')
('md5', 'larger', 'hash', 'sha1 sha256 algorithm', '43414199', 'any hash function like md5 sha1 sha256 etc obviously cannot be 100 unique - because they have a fixed length and due to the there must necessarily be non-unique results for input content that is larger than the hash\n')
('hash', 'more expensive', 'md5', '', '8646550', 'crypt with hash is simply more expensive than md5\n')
('hash', 'longer', 'md5', '', '31445149', 'so i guess it s the md5 in the dump output cause the conflicts and the hash value is longer than md5 outputs\n')
('hash', 'cake more', 'md5', '', '9267163', 'the hash cake generates are more complex than md5\n')
('md5', 'actually less', 'hash', '', '18852096', 'double md5 hashing is actually less secure than a single hash with some attack vectors\n')
('md5', 'larger', 'hash', '', '38041702', 'hashing is one way you can prove this to yourself by taking an md5 or shasum of a large file since the file s size is larger than the hash output by pigeonhole principle hash can t be restored.\n')
('md5', 'implementation significantly more secure', 'hash', 'secure value clear', '10934748', 'the wrapper uses these in such a way that even the md5 implementation is significantly more secure than a simple hash\n')
('hash', 'slower', 'md5', 'secure value clear', '12183240', 'the fact that bcrypt produces hash slower than md5 because of security reasons is also clear for me\n')
('hash', 'stronger', 'md5', 'sha1 sha256 algorithm', '6879159', 'use hash and choose hashing algorithm that suits you well if possible something stronger than md5 but don t go all the way to sha512 either\n')
('hash', 'more compact', 'md5', '', '41795843', 'i would like to apply a hash code solution on my webpage which is more compact than md5 and sha-1 because i want to use them as keys in a json hash table\n')
('hash', 'less secure', 'md5', '', '44348142', 'if you want to compare you re better off putting your result through getstring and compare the much less secure hash even less secure than md5 already is\n')
('hash', 'longer', 'md5', 'sha1 sha256 algorithm', '9572031', 'because sha256 hash are much longer than md5 hash you can detect the hash algorithm by looking at the length of the hash\n')
('hash', 'better', 'md5', 'sha1 sha256 algorithm', '6046512', 'however if you want to use the sha256 hash alogorithm which is better than the md5 then here s a code sample\n')
('hash', 'simply more', 'md5', '', '8646550', 'crypt with hash is simply more expensive than md5\n')
('md5', 'no longer secure', 'hash', '', '13102496', 'md5 is no longer secure and it can be broken with a good gpu no typo you can use your graphics card to break a hash\n')
('md5', 'much more secure', 'hash', 'secure value clear', '2329664', 'with a salt md5 is much more secure than without but you re better off using one of the sha hash such as sha256managed\n')
('hash', 'less cryptographically', 'md5', '', '3837891', 'if you don t need the cryptographic properties then a non-cryptographic hash or a hash that is less cryptographically secure md5 being broken doesn t prevent it being a good hash nor still strong enough for some uses is likely to be more performant\n')
('hash', 'value longer', 'md5', '', '31445149', 'so i guess it s the md5 in the dump output cause the conflicts and the hash value is longer than md5 outputs\n')
('hash', 'better', 'md5', '', '3295996', 'or you could employ a request signing scheme in which certain request fields are hash together with the password of the user basically sending the password without sending the password similar to digest authentication but you can use something better than md5\n')
('hash', 'bigger', 'md5', 'sha1 sha256 algorithm', '12615409', 'it s like complaining that a sha256 hash is bigger than an md5 hash - yep it is but only one of them might slow the attacker down for a while\n')
('md5', 'larger', 'hash', 'sha1 sha256 algorithm', '19874443', 'the difference between crc32 and md5 is that md5 generates a larger hash that s harder to predict\n')
('hash', 'function more complex', 'md5', 'sha1 sha256 algorithm', '3153718', 'if the hash function is more complex and cryptographically strong md5 or sha1 then it is theoretically not possible\n')
('hash', 'better options', 'md5', '', '11420347', 'of course any hash algorithm is going to have some chance of collision but you have better options than md5 that would still satisfy the 1024-byte limit\n')
('hash', 'no longer', 'md5', '', '8704228', 'but if you still wish to figure out the phpbb password encryption hash it is no longer md5 in version 3.0 or higher and is a custom hash\n')
('md5', 'much more', 'hash', 'secure value clear', '134346', 'using a non-reversible hash such as md5 is much more secure and you can store the hash value as clear text\n')
('hash', 'worse', 'md5', 'proven breakable worse', '32569597', 'mac os x llvm gcc based crypt fuction is borked junk hardwired to only use des a proven breakable hash worse than md5\n')
('hash', 'stronger', 'md5', 'sha1 sha256 algorithm', '3759576', 'valid choices for hashing include sha1 or md5 although sha1 is preferable because it produces a larger hash and is considered cryptographically stronger than md5\n')
('md5', 'no longer', 'hash', '', '13102496', 'md5 is no longer secure and it can be broken with a good gpu no typo you can use your graphics card to break a hash\n')
('hash', 'less likely', 'md5', 'sha1 sha256 algorithm', '8822558', 'other hash functions such as sha-1 also have hash collisions although it is much less likely than md5\n')
('hash', 'more robust', 'md5', 'sha1 sha256 algorithm', '10798653', 'all hash functions have that problem but some are more robust than md5\n')
('hash', 'safer', 'md5', 'sha1 sha256 algorithm', '9935465', 'finally sha1 hash are safer than md5 i tell you that because you used the md5 tag in your post\n')
('hash', 'stronger', 'md5', '', '18105107', 'you can for example store a hash stored with something stronger than md5\n')
('hash', 'more complex', 'md5', '', '9267163', 'the hash cake generates are more complex than md5\n')
('hash', 'higher strength', 'md5', '', '1786428', 'it is likely that you could do an sha hash of 100kb in well less than 10 second though and though sha-1 is still theoretically flawed it is of higher strength than md5\n')
('md5', 'actually less secure', 'hash', '', '18852096', 'double md5 hashing is actually less secure than a single hash with some attack vectors\n')
('hash', 'less', 'md5', '', '3837891', 'if you don t need the cryptographic properties then a non-cryptographic hash or a hash that is less cryptographically secure md5 being broken doesn t prevent it being a good hash nor still strong enough for some uses is likely to be more performant\n')
('hash', 'more reliable', 'md5', 'proven breakable worse', '116739', 'sha-256 uses 64 characters in the database but with an index on the column that isn t a problem and it is a proven hash and more reliable than md5 and sha-1\n')

debugging	profiling	8
('profiling', 'more strict', 'debugging', '', '22792924', 'note that this usually happens under the release profiling which is more strict by default about errors than say debugging\n')
('debugging', 'easier', 'profiling', '', '3957154', 'of course you can only debugging the code to see the generated sql but it s easier with a profiling tool and you ll see how long time the query takes\n')
('debugging', 'more sql', 'profiling', '', '7207166', 'another thing to try is the excellent entity framework profiling - has saved us many headaches in debugging performance issues like these - gives you a lot more than sql profiling and you can see what queries objects are created per objectcontext and method source line etc -\n')
('profiling', 'client.assemblyattributes.cs newer', 'debugging', '', '11270565', 'corecompile input file c buildagent temp buildtmp.netframework version v4.0 profiling client.assemblyattributes.cs is newer than output file bin debugging dllname.xml\n')
('profiling', 'more', 'debugging', '', '22792924', 'note that this usually happens under the release profiling which is more strict by default about errors than say debugging\n')
('profiling', 'much easier', 'debugging', '', '22381797', 'the reason is that maybe like in my case the xcode bot was attempting to archive with the development profiling and development profiling is much easier to debugging than 4f96f173-7ebe-4892-b283-52489de2f409\n')
('profiling', 'probably better', 'debugging', '', '12081242', 'time spent learning a profiling is probably better spent than time writing and debugging micro-benchmarks\n')
('profiling', 'better', 'debugging', '', '40565757', 'this performance difference issue when doing profiling is better than debugging also has troubled me for a few hours i even tried to move code from web api to console application to test and console application has similar performance as good as when profiling web api\n')

tinyint	varchar	4
('varchar', 'less', 'tinyint', '', '36011861', 'using varchar is less efficient than using tinyint like aju john suggested in his comment but unless i m dealing with a really performance-critical or a huge table - i find it easier to deal with\n')
('varchar', 'less efficient', 'tinyint', '', '36011861', 'using varchar is less efficient than using tinyint like aju john suggested in his comment but unless i m dealing with a really performance-critical or a huge table - i find it easier to deal with\n')
('varchar', 'more', 'tinyint', '', '27714778', 'as varchar n takes spaces much more than tinyint and your main table is table2 so the second scenario is more optimize\n')
('tinyint', 'better', 'varchar', '', '10645605', 'i think tinyint is better than varchar in this case\n')

png	bmp	8
('png', 'smaller current', 'bmp', '', '44526267', 'rebuild a new png format in-memory data which is much more smaller than current bmp data and send the new png format data by socket to remote server\n')
('png', 'slower', 'bmp', 'slower faster', '20219087', 'jpg png is slower to draw than a bmp\n')
('png', 'format much more complex', 'bmp', '', '11533065', 'note that the png format is much more complex than bmp since it allows compression etc\n')
('png', 'smaller', 'bmp', '', '5756128', 'not only do png files have natural support for transparency they are also smaller than bmp files\n')
('bmp', 'faster', 'png', 'slower faster', '32483365', 'i have a sample wpf app here and wondering why bmp is loading faster than png\n')
('png', 'more complex', 'bmp', '', '11533065', 'note that the png format is much more complex than bmp since it allows compression etc\n')
('bmp', 'lower resolution', 'png', '', '13790064', 'is not simple scale or crop but to be able to rotate scale and crop every single sprite and draw it in the exactly order to compose the final hight resolution image in a backbuffer then save it in bmp and make some copies in lower resolution as png\n')
('png', 'format much more', 'bmp', '', '11533065', 'note that the png format is much more complex than bmp since it allows compression etc\n')

isotope	masonry	3
('isotope', 'more complete', 'masonry', 'better media-queried resizes', '17770459', 'they do this using a jquery plugin called isotope which is a more complete version of masonry you pay for\n')
('isotope', 'better', 'masonry', 'better media-queried resizes', '12500664', 'according to this answer the isotope plugin might work better than masonry for media-queried resizes\n')
('isotope', 'easier', 'masonry', '', '4917802', 'in its stead you can use isotope - which does filtering a lot easier than masonry\n')

pexpect	telnetlib	3
('pexpect', 'more flexible', 'telnetlib', '', '36830610', 'i got it to work by using a child process from pexpect which is much more flexible than telnetlib\n')
('pexpect', 'much more', 'telnetlib', '', '36830610', 'i got it to work by using a child process from pexpect which is much more flexible than telnetlib\n')
('pexpect', 'much more flexible', 'telnetlib', '', '36830610', 'i got it to work by using a child process from pexpect which is much more flexible than telnetlib\n')

grouping	sorting	10
('grouping', 'simpler', 'sorting', 'application simpler fields', '10211855', 'instead knowing that we want to grouping by these columns we can make the application code to do so simpler by sorting by these fields\n')
('sorting', 'more optimal', 'grouping', '', '35825126', 'if the database is sophisticated enough adding an explicit order by clause will hint that sorting is more optimal for the grouping operation as well as the sorting can then be re-used in the query execution pipeline\n')
('sorting', 'less sense', 'grouping', '', '31703782', 'your desired output does not reflect what you have as input if you want to grouping common sublists you can use itertools.groupby considering you want sorted output using a dict and then sorting makes less sense than just creating the grouping from the sorted list using groupby\n')
('grouping', 'looser', 'sorting', '', '16425985', 'grouping has looser constraints than sorting so in theory it could be marginally faster than sorting but unless you re dealing with a lot of data you re unlikely to see a speed difference\n')
('grouping', 'more efficient way', 'sorting', '', '38325709', 'of course ordering could be forced obj.gettype .tostring and using lexical order but since a strict order is not necessary only grouping i was wondering if there s a more efficient way than sorting\n')
('grouping', 'faster', 'sorting', '', '45599311', 'the reason being that sorting less elements which the grouping generally produces is going to be faster than sorting all input documents\n')
('sorting', 'less', 'grouping', '', '31703782', 'your desired output does not reflect what you have as input if you want to grouping common sublists you can use itertools.groupby considering you want sorted output using a dict and then sorting makes less sense than just creating the grouping from the sorted list using groupby\n')
('sorting', 'more', 'grouping', '', '35825126', 'if the database is sophisticated enough adding an explicit order by clause will hint that sorting is more optimal for the grouping operation as well as the sorting can then be re-used in the query execution pipeline\n')
('grouping', 'looser constraints', 'sorting', '', '16425985', 'grouping has looser constraints than sorting so in theory it could be marginally faster than sorting but unless you re dealing with a lot of data you re unlikely to see a speed difference\n')
('grouping', 'better', 'sorting', 'application simpler fields', '40069452', 'this way only a single int column needs to be sorted grouping which performs much better than sorting two text columns\n')

vba	vb6	5
('vba', 'more functionality', 'vb6', '', '5060785', 'vba is in fact a superset of vb6 not a subset -- vba has more functionality built in than vb6 itself\n')
('vb6', 'more', 'vba', '', '41372065', 'fortunately the vbide for vb6 has more classes and methods for working with vb projects than the vba version of vbide\n')
('vb6', 'more classes', 'vba', '', '41372065', 'fortunately the vbide for vb6 has more classes and methods for working with vb projects than the vba version of vbide\n')
('vba', 'more', 'vb6', '', '5060785', 'vba is in fact a superset of vb6 not a subset -- vba has more functionality built in than vb6 itself\n')
('vba', 'less', 'vb6', '', '3846475', 'vba being a whole lot less than vb6\n')

unicorn	puma	5
('puma', 'worse', 'unicorn', '', '34256764', 'puma will tend to optimize itself by spawning more threads and its performance should range from no worse than unicorn in the pure cpu case to being vastly better than unicorn in the case of an app that sleeps a lot\n')
('unicorn', 'more', 'puma', '', '19808270', 'it uses less resources than unicorn but has more requirements to your code it better be thread-safe because puma is a threaded server\n')
('unicorn', 'better choice', 'puma', '', '39574901', 'for example it looks like unicorn is a better choice on heroku than puma\n')
('unicorn', 'better', 'puma', '', '39574901', 'for example it looks like unicorn is a better choice on heroku than puma\n')
('unicorn', 'more requirements', 'puma', '', '19808270', 'it uses less resources than unicorn but has more requirements to your code it better be thread-safe because puma is a threaded server\n')

http	spdy	8
('spdy', 'better plain', 'http', '', '27117137', 'in fact with optimizations like spdy you might find that a tls-secured connection actually performs better than plain http\n')
('spdy', 'more', 'http', '', '19428874', 'spdy is a more efficient protocol than http\n')
('spdy', 'more efficient', 'http', '', '19428874', 'spdy is a more efficient protocol than http\n')
('http', 'even better', 'spdy', '', '35967374', 'http 2 is even better than spdy and check this article for a use case regarding spdy\n')
('http', 'better', 'spdy', '', '35967374', 'http 2 is even better than spdy and check this article for a use case regarding spdy\n')
('http', 'less equivalent', 'spdy', '', '8830628', 'anything that you do with http is more or less equivalent with spdy and neither is really anything but an implementation detail of your soa work\n')
('spdy', 'more efficient protocol', 'http', '', '19428874', 'spdy is a more efficient protocol than http\n')
('http', 'more', 'spdy', '', '8830628', 'anything that you do with http is more or less equivalent with spdy and neither is really anything but an implementation detail of your soa work\n')

yum	rpm	3
('yum', 'more', 'rpm', '', '24264078', 'i strongly suggest either of the first two options over the latter option as the latter option does not always play nicely with the way rpm and yum handle transactions when more than one rpm are involved\n')
('yum', 'bigger', 'rpm', '', '28535295', 'both commands works in the same way only difference is yum list installed output maybe bigger than rpm -qa because yum will show package dependencies also in its output\n')
('yum', 'easier', 'rpm', '', '6616998', 'yum makes it easier to maintain groups of machines without having to manually update each one using rpm\n')

free	malloc	16
('malloc', 'bigger', 'free', '', '4055322', 'presumably the mac malloc aligns to bigger boundaries and so it s spotting the pointer you re passing to free can t be correct since it has the wrong alignment\n')
('free', 'more', 'malloc', '', '38607797', 'if your .so are statically linked to c++ runtimes - you should free objects in the same module where they were allocated since new delete is something more than malloc free and need some extra info to work properly\n')
('free', 'quicker', 'malloc', '', '23442314', 'in this context free store is different and incompatible with heap because the new delete free store library is simpler and quicker than the malloc free realloc calloc heap library and thus provides huge memory usage gains to the c++ embedded programmer in a context where you have only 512 bytes of ram\n')
('malloc', 'more', 'free', '', '37316237', 'malloc finds 10 more free bytes and marks them as used\n')
('malloc', 'bigger buffer', 'free', '', '1920516', 'here is a solution which encapsulates the call to malloc allocates a bigger buffer for alignment purpose and stores the original allocated address just before the aligned buffer for a later call to free\n')
('malloc', 'more memory', 'free', '', '1464476', 'most likely malloc allocates more memory and puts so-called guard values that happen to contain null bytes or it puts some metadata to be used by free later and this metadata happens to contain a null byte right at that position\n')
('malloc', 'safer', 'free', '', '28527213', 'in addition to the previous answers the strncpy char pointer which seems unsafe for my opinion and the malloc which is safer but you need to remember to free it outside of the function and its inconsistent with the hierarchy of the program you can do the following\n')
('malloc', 'much easier', 'free', '', '26310115', 'malloc is much easier to implement if there is no free\n')
('malloc', 'bigger boundaries', 'free', '', '4055322', 'presumably the mac malloc aligns to bigger boundaries and so it s spotting the pointer you re passing to free can t be correct since it has the wrong alignment\n')
('free', 'more', 'malloc', '', '29995966', 'remember malloc is quite expensive action and free costs even much more than malloc\n')
('malloc', 'more memory', 'free', 'char p bytes', '42588652', 'one interesting experiment you can try is to try and malloc more memory after you free d that pointer\n')
('free', 'earlier', 'malloc', 'char p bytes', '8518769', 'how does free know how much memory to be free d which was earlier allocated by malloc or calloc\n')
('malloc', 'more', 'free', '', '1464476', 'most likely malloc allocates more memory and puts so-called guard values that happen to contain null bytes or it puts some metadata to be used by free later and this metadata happens to contain a null byte right at that position\n')
('free', 'more', 'malloc', 'char p bytes', '1111015', 'now if you free some values on the heap and allocate more with malloc you may be given back some of that dirtied memory that you scribbed on earlier\n')
('malloc', 'bigger', 'free', '', '1920516', 'here is a solution which encapsulates the call to malloc allocates a bigger buffer for alignment purpose and stores the original allocated address just before the aligned buffer for a later call to free\n')
('malloc', 'n more', 'free', 'char p bytes', '2336345', 'suppose char p malloc n assigns more than n say n bytes of memory are allocated and free p is used to free the memory allocated to p\n')

strtol	atoi	17
('strtol', 'more flexible', 'atoi', '', '4631310', 'i understand that strtol and strtof are preferred to atoi atof since the former detect errors and also strtol is much more flexible than atoi when it comes to non-base-10\n')
('strtol', 'better error', 'atoi', 'errno handling sscanf', '2428697', 'i would recommend strtol which provides better error handling than atoi or sscanf\n')
('strtol', 'better option', 'atoi', 'errno handling sscanf', '13328049', 'besides strtol is a better option than atoi as strtol can handle failures better\n')
('strtol', 'much better', 'atoi', 'errno handling sscanf', '2238063', 'the c function strtol is much better make it a habit to prefer that one to atoi\n')
('strtol', 'more', 'atoi', '', '36078280', 'i start off calling gets to fill the buffer then using strtol to convert the human-readable text in buffer to an actual computer int value - note that strtol is more powerful than atoi and uses long int instead of int as its declared type\n')
('strtol', 'more powerful', 'atoi', '', '36078280', 'i start off calling gets to fill the buffer then using strtol to convert the human-readable text in buffer to an actual computer int value - note that strtol is more powerful than atoi and uses long int instead of int as its declared type\n')
('strtol', 'better', 'atoi', 'errno handling sscanf', '10380364', 'use strtol it does better error reporting than atoi\n')
('strtol', 'better', 'atoi', 'errno handling sscanf', '46208863', 'if you want to accept a number rather than a digit and only a number strtol works much better than atoi as it allows you to check for failures\n')
('strtol', 'better', 'atoi', 'errno handling sscanf', '2461383', 'all have more or less cumbersome and non-obvious error checking involving errno strtol is way much better than atoi in any case so avoid using atoi\n')
('strtol', 'better', 'atoi', 'errno handling sscanf', '12420547', 'strtol is better than atoi with better error handling\n')
('strtol', 'much more', 'atoi', '', '4631310', 'i understand that strtol and strtof are preferred to atoi atof since the former detect errors and also strtol is much more flexible than atoi when it comes to non-base-10\n')
('strtol', 'obviously better', 'atoi', '', '27962961', 'you can also use strtol which is obviously better than atoi\n')
('strtol', 'better', 'atoi', '', '27962961', 'you can also use strtol which is obviously better than atoi\n')
('strtol', 'much more flexible', 'atoi', '', '4631310', 'i understand that strtol and strtof are preferred to atoi atof since the former detect errors and also strtol is much more flexible than atoi when it comes to non-base-10\n')
('strtol', 'better', 'atoi', 'errno handling sscanf', '36374418', 'for instance strtol is better than atoi and you should be checking each time whether strtok returns null\n')
('strtol', 'better', 'atoi', 'errno handling sscanf', '41887116', 'you can also look into strtol which is better than using atoi in terms of error checking\n')
('strtol', 'better', 'atoi', 'errno handling sscanf', '31982135', 'you need to error check strtol and ensure there are as many passed before using them -- strtol is better than atoi as helps detect errors\n')

multiplication	multiplying	10
('multiplication', 'slightly harder just', 'multiplying', '', '2198143', 'multiplication is slightly harder just multiplying two scaled numbers and then divide by your scale factor\n')
('multiplication', 'slightly harder', 'multiplying', '', '2198143', 'multiplication is slightly harder just multiplying two scaled numbers and then divide by your scale factor\n')
('multiplication', 'easier', 'multiplying', 'mistake compiler optimization', '27922709', 'implementing multiplication is easier if you remember an shl operation performs the same operation as multiplying the specified operand by two\n')
('multiplying', 'first probably simpler', 'multiplication', '', '14028965', 'multiplying first is probably simpler than using floating point if you only want an integer result and if you know that the multiplication will never overflow\n')
('multiplication', 'slightly more', 'multiplying', '', '79771', 'multiplication is slightly more complex as it needs an integer multiplying followed by a scale back such as 0.72 2 becomes 72 200 becomes 14400 becomes 144 scaleback becomes 1.44\n')
('multiplication', 'longer', 'multiplying', 'mistake compiler optimization', '9519571', 'if i make a mistake and multiplying a number by 1.0 instead of 1 and i do not use any compiler optimization then my multiplication will last much longer than multiplying a number by 1\n')
('multiplication', 'slightly more complex', 'multiplying', '', '79771', 'multiplication is slightly more complex as it needs an integer multiplying followed by a scale back such as 0.72 2 becomes 72 200 becomes 14400 becomes 144 scaleback becomes 1.44\n')
('multiplication', 'easier', 'multiplying', 'mistake compiler optimization', '9815550', 'multiplication is the easier of the tasks just remember to multiplying each block of one number with the other and carry the zeros\n')
('multiplication', 'easier', 'multiplying', '', '29875861', 'matrix multiplication is the easier one there are several matrix implementations with a multiplying method in packages org.apache.spark.mllib.linalg and org.apache.spark.mllib.linalg.distributed\n')
('multiplying', 'faster', 'multiplication', 'mistake compiler optimization', '12021618', 'mathematically left shifting is the same as multiplying a number by a power of 2 but as the operation is done only by shifting it is much faster than doing multiplication\n')

boost	allocator	5
('boost', 'intrusive_ptr better', 'allocator', '', '6603712', 'boost intrusive_ptr performs better than shared_ptr because it doesn t need a second allocator to hold the reference count\n')
('allocator', 'higher', 'boost', '', '26396293', 'to be able to use std allocate_shared with boost fast_pool_allocator as the allocator method using g++ 4.8 or higher with boost 1.56.0\n')
('boost', 'string_ref much faster still', 'allocator', '', '23439161', 'just to goof off a version using boost string_ref is much faster still due the reduced allocator\n')
('boost', 'string_ref much faster', 'allocator', '', '23439161', 'just to goof off a version using boost string_ref is much faster still due the reduced allocator\n')
('allocator', 'more', 'boost', '', '23855901', 'the latter doesn t do any dynamic memory allocator and is more than 10 times faster than std to_string on boost karma benchmarks\n')

xslt	xquery	13
('xquery', 'more strongly', 'xslt', '', '1908876', 'unless you are using the static typing feature xquery is no more strongly typed than xslt\n')
('xquery', 'better', 'xslt', 'amenable static analysis', '18728322', 'xquery works better than xslt for this because it s more amenable to static analysis as it lacks the polymorphism of xslt s template rules\n')
('xquery', 'more amenable', 'xslt', 'amenable static analysis', '40861476', 'xquery is more amenable to static analysis than xslt because it lacks the very dynamic template despatch mechanism\n')
('xslt', 'more expressive', 'xquery', 'kind processing expressive', '7610958', 'this kind of processing is most easily done with xslt which is more expressive than xquery\n')
('xslt', 'better', 'xquery', 'class problems dimitre', '1907942', 'as for whether to use xslt or xquery the proof is in the pudding xslt is better at transforms and xquery is better at queries\n')
('xquery', 'more', 'xslt', '', '1908876', 'unless you are using the static typing feature xquery is no more strongly typed than xslt\n')
('xslt', 'simpler', 'xquery', '', '10261092', 'if your output is going to be similar to your input with small changes then the xslt solution is often a lot simpler than the xquery solution\n')
('xquery', 'streaming better', 'xslt', '', '5689727', 'saxon-ee supports streaming of large xml documents using xslt or xquery streaming is better supported in xslt than in xquery\n')
('xslt', 'better', 'xquery', '', '16190637', 'generally i know it sounds banal xslt is better at transformation generating a new document from each source document while xquery is better at query extracting a small amount of information from each source document\n')
('xslt', 'much better', 'xquery', 'class problems dimitre', '25684670', 'i hate to answer a request for a solution in language a by suggesting a solution in language b but what you are doing here falls into the class of problems which xslt handles much better than xquery\n')
('xslt', 'much better', 'xquery', 'class problems dimitre', '5165338', 'as dimitre says xslt is much better at this class of problem than xquery\n')
('xslt', 'significantly more appropriate', 'xquery', 'kind processing expressive', '5849881', 'xslt is significantly more appropriate to use than xquery for such kind of tasks\n')
('xquery', 'better', 'xslt', '', '8375240', 'my usual rule-of-thumb is that xquery is better than xslt for simple tasks whereas xslt is better for complex tasks\n')

cpu	processors	28
('cpu', 'smarter', 'processors', '', '24367125', 'so whether or not method 5 or 6 is faster depends on the cpu i can only surmise this is because the branch prediction in the command processors of the cpu is smarter on the new processors but i m not really sure\n')
('cpu', 'cache much more', 'processors', '', '30826090', 'notice also the the cpu cache is much more important than processors registers today\n')
('cpu', 'vastly more', 'processors', '', '8859053', 'not only is it more expensive in terms of developer costs designing a cpu is vastly more difficult than writing user-space assembly code but it would increase the transistor count of the processors\n')
('processors', 'more time', 'cpu', '', '25954165', 'the difference you notice is very small but i think the multi-thread processors is spending more time because the concurrency for the cpu resources between the threads\n')
('cpu', 'more tasks', 'processors', 'cores different contention', '23300674', 'given that you re seeing extra tasks causing a slowdown you likely either have resource contention via locking or your tasks are cpu bound and having more tasks than processors cores will cause slowdowns\n')
('processors', 'more', 'cpu', 'computer logical core', '23935539', 'multicore refers to a computer or processors that has more than one logical cpu core and that can execute multiple instructions at the same time.\n')
('processors', 'smaller', 'cpu', '', '32394808', 'in general when used on single processors single core machine this should be sufficient assuming int size same or smaller than cpu word like 32bit int on 32bit cpu\n')
('cpu', 'usage higher', 'processors', '', '18330416', 'i find using system monitor that consistently 100 of one cpu is used when i run the program directly in terminal whereas when i run it in bash in a loop a maximum of 60 of cpu usage is recorded and seems to be linked to the longer completion time although the average cpu usage is higher over the 4 processors\n')
('cpu', 'cache much more important', 'processors', '', '30826090', 'notice also the the cpu cache is much more important than processors registers today\n')
('cpu', 'more important', 'processors', '', '30826090', 'notice also the the cpu cache is much more important than processors registers today\n')
('processors', 'more', 'cpu', '', '25954165', 'the difference you notice is very small but i think the multi-thread processors is spending more time because the concurrency for the cpu resources between the threads\n')
('cpu', 'more', 'processors', '', '360494', 'passive loadbalancing if a physical cpu is running more than one task the scheduler will attempt to run any new tasks on a second physical processors\n')
('cpu', 'more', 'processors', '', '7801957', 'to the operating system a single thread which i assume is what you mean by java process essentially cannot use cpu on more than one processors which may or may not mean a physical core-- see below simultaneously\n')
('processors', 'more', 'cpu', '', '15190198', 'binding threads to cores prevents the operating system from moving around threads between different processors cores which speeds up the executing especially on numa systems machines with more than one cpu sockets and separate memory controller in each socket where data locality is very important\n')
('processors', 'more', 'cpu', 'computer logical core', '11835474', 'multicore refers to a computer or processors that has more than one logical cpu core and that can physically execute multiple instructions at the same time\n')
('cpu', 'better', 'processors', '', '142240', 'some fancy compilers understand the un interrelatedness of instructions to a limited extent and will automatically interleave instruction flows probably over a longer window than the cpu sees to better utilise the processors\n')
('processors', 'more', 'cpu', '', '6769912', 'i have a quad core processors and the threadpoolexecutor is set to 4 core threads but when i submit my callables hundred or so to the threadpoolexecutor java never uses more than 25 cpu\n')
('processors', 'far more', 'cpu', 'data ram cache', '10332847', 'having data structures that start on 4 byte word alignment on cpus with 4 byte buses and processors is far more efficient when moving data around memory and between ram and the cpu\n')
('cpu', 'cheaper mainstream', 'processors', '', '4026163', 'one addition for embedded cpu architecture they have to be usually cheaper than mainstream processors so that they do not raise the product s life considerably\n')
('processors', 'much more effective', 'cpu', 'system resources process', '2443473', 'as soon as you go beyond single processors it s much more effective to add another cpu or two to system than to struggle with gpu calculations\n')
('cpu', 'more', 'processors', '', '11718006', 'if a task is cpu bound calcuating something making it multi threaded will only improve performance if you have more than one processors to run the calculations\n')
('cpu', 'cache physically closer', 'processors', 'data ram cache', '42436018', 'the point of this cache is to store data that the cpu is using quite regularly to speed up transfer time since the cpu cache is physically closer to the processors then ram is\n')
('cpu', 'vastly more difficult', 'processors', '', '8859053', 'not only is it more expensive in terms of developer costs designing a cpu is vastly more difficult than writing user-space assembly code but it would increase the transistor count of the processors\n')
('processors', 'more', 'cpu', 'cores different contention', '22638062', 'if that processors has more than one cpu can the interrupts run on different cpu cores at the same time\n')
('processors', 'more', 'cpu', '', '6297409', 'if the processors is loaded enough then my thread works fine but when the processors is more or less free i rich quickly my cpu limitation 50 and finally the pool terminates and needs to be recycled\n')
('cpu', 'more', 'processors', 'system resources process', '5924309', 'the operating system will give your program all the resources it needs the reason your process is not consuming all the cpu is probably because it s waiting for the io sub system more than the processors\n')
('cpu', 'indeed slower', 'processors', '', '1371975', 'the cpu is indeed slower on sparc 1.2ghz and as answered by one of the sun s engineers t2 is usualy 3 times slower for single-threaded application than modern intel processors\n')
('processors', 'more', 'cpu', '', '18559464', 'many current processors chips incorporate more than one cpu and a cpu may itself be able to interleave a couple of threads\n')

richfaces	primefaces	5
('richfaces', 'more developed', 'primefaces', '', '3403729', 'richfaces is more developed and tested generally since primefaces came out later than rf\n')
('richfaces', 'more', 'primefaces', '', '3403729', 'richfaces is more developed and tested generally since primefaces came out later than rf\n')
('primefaces', 'more components', 'richfaces', '', '4121333', 'primefaces has more components but lack combobox available in richfaces\n')
('primefaces', 'better', 'richfaces', '', '13392568', 'i haven t tried any of these in a jsf 2 application but i would recommend using the primefaces one at least the documentation is better than richfaces\n')
('primefaces', 'more', 'richfaces', '', '4121333', 'primefaces has more components but lack combobox available in richfaces\n')

ant	maven	51
('maven', 'less reliable', 'ant', '', '1010593', 'troubleshooting the build maven is less reliable than ant especially the non-core plugins\n')
('ant', 'less verbose', 'maven', '', '2812325', 'alternate build tools ant lots of configuration gradle conventions again less verbose than maven\n')
('maven', 'usage lower', 'ant', '', '1077627', 'maven usage is lower compared to ant but just how much lower is not really known\n')
('maven', 'slower', 'ant', '', '4373083', 'also note that while maven is no slower than ant for multi-module projects of this sort importing your maven project into an ide will generally result in far faster builds than maven can perform itself\n')
('ant', 'more freedom jacoco', 'maven', '', '45308097', 'in jacoco 0.7.9 there are jacoco ant tasks and in 0.8.0 there will be jacoco command line interface - both provide more freedom than jacoco maven plugin in specification of what should be included into report in particular can be used for arbitrary third-party jar files\n')
('maven', 'younger tool', 'ant', '', '1732320', 'first maven is a much younger tool than ant or make so you have to expect that its going to take time to get to the maturity level of those applications\n')
('maven', 'easier', 'ant', 'better dependencies system', '20756425', 'you can take a look on gradle which for me could provide more freedom than maven but is easier to use than ant\n')
('maven', 'really better job', 'ant', 'better dependencies system', '599070', 'and it turns out maven really does a better job of managing dependencies for ant build.xml files than does ivy\n')
('ant', 'simpler', 'maven', 'simpler default project', '31721251', 'ant is simpler and older and the default just called a java project maven is newer more powerful and flexible\n')
('maven', 'more', 'ant', '', '41064536', 'i guess that the maven version contains much more than the ant version\n')
('maven', 'more', 'ant', 'repo preferred respects', '4970153', 'but as i checked-out some example apps from spring source repo and it seems that maven is more preferred and powerful than ant\n')
('ant', 'more', 'maven', '', '183290', 'as you ve already said ant is more a replacement for gnu make while maven is primary a buildout dependency-management application\n')
('ant', 'clearer', 'maven', '', '989209', 'i find the ant one much clearer than the maven one\n')
('ant', 'more powerful', 'maven', 'repo preferred respects', '2850172', 'ant is much more powerful than maven in many respects but maven excels in dependency management and ease of deployment\n')
('ant', 'better', 'maven', 'better dependencies system', '13922438', 'i also find ant with ivy to be better documented than maven although that s not too difficult\n')
('maven', 'version much more', 'ant', '', '41064536', 'i guess that the maven version contains much more than the ant version\n')
('maven', 'better', 'ant', 'better dependencies system', '1190551', 'while i personally think maven is a better tool than ant in the long run our experience will make maven3 a better tool than maven2\n')
('maven', 'jar bigger then', 'ant', 'better dependencies system', '18609318', 'the size of maven jar is bigger then ant jar i don t know why help me please\n')
('ant', 'older', 'maven', '', '26651455', 'first of all ant is older than maven and therefore does not include core support for dependency management\n')
('maven', 'earlier', 'ant', 'better dependencies system', '23112507', 'can maven examine and resolve internal dependencies of non-mavenized jar library defined earlier by ant\n')
('maven', 'more', 'ant', '', '10834500', 'maven is more like a replacement for ant\n')
('ant', 'older', 'maven', 'number ground sophisticated', '28907043', 'ant is older and while it is still used in a number of projects it is rapidly losing ground to maven\n')
('ant', 'better', 'maven', 'better dependencies system', '13064741', 'if you want to stick to lower level basic file operations ant is better bet than maven\n')
('maven', 'more', 'ant', '', '5913844', 'maven is more of a meta-program that can use ant scripts and run your junit tests\n')
('maven', 'more then', 'ant', '', '39645836', 'did maven has achieved more then ant or ant is still alive\n')
('maven', 'more', 'ant', '', '10787570', 'maven is more or less an update concept of ant\n')
('maven', 'pretty easier', 'ant', 'better dependencies system', '16960689', 'i think updating dependencies with maven is pretty easier than dealing with ant but of course you could select the other way if you feel more conifrtable\n')
('maven', 'higher', 'ant', '', '31279766', 'maven is higher level than make makefile the classic c c++ build tool or ant build.xml\n')
('maven', 'better alternative', 'ant', 'better dependencies system', '47381263', 'maven is a better alternative as build system compared to ant\n')
('ant', 'script more .class', 'maven', 'script class files', '28597911', '1 - why ant script generates more .class files than maven\n')
('ant', 'better', 'maven', 'better dependencies system', '1347793', 'this question is similar in nature to whether ant is better than maven or c# better than java\n')
('maven', 'higher level', 'ant', '', '31279766', 'maven is higher level than make makefile the classic c c++ build tool or ant build.xml\n')
('maven', 'more powerful', 'ant', 'complex powerful', '31543494', 'i know maven is more powerful than ant\n')
('maven', 'better', 'ant', 'better dependencies system', '20756425', 'maven is better for managing dependencies but ant is ok with them too if you use ant+ivy and build artefacts\n')
('ant', 'more', 'maven', '', '33673358', 'since ant is more of a scripting tool and doesn t impose structure or lifecycle like maven and gradle you simply manually invoke ant when you want to use it\n')
('ant', 'more', 'maven', 'better dependencies system', '24474576', 'ant pre-dates more modern tools like maven and gradle that have this feature baked in\n')
('maven', 'more', 'ant', '', '2230024', 'the quotation you brought up just claim that maven does more than ant so that it s not fair to compare the two\n')
('maven', 'more', 'ant', 'simpler default project', '4970153', 'also maven projects come with a different directory structure and seems to be doing much more than what ant does in the spring source tutorial\n')
('maven', 'more', 'ant', '', '2435935', 'but maven and ant are so different that there is no real point at comparing them and maven is still much more than ant + dependency management\n')
('ant', 'simpler', 'maven', 'simpler default project', '13443342', 'so i suggest you build a p2 repository can be done in ant but seems simpler in maven tycho and split the projects to several repositories\n')
('maven', 'definitely better', 'ant', 'better dependencies system', '8742257', 'maven definitely has better integration with flex than ant\n')
('ant', 'more', 'maven', '', '413752', 'i d definitely use ant or maven - my preference is ant because it s more flexible and i think it would suit your development style more than maven as well\n')
('maven', 'more', 'ant', '', '39645836', 'did maven has achieved more then ant or ant is still alive\n')
('maven', 'better', 'ant', 'better dependencies system', '29234035', 'maven is definitely better than ant and well used for big projects\n')
('maven', 'better solution', 'ant', 'better dependencies system', '18851107', 'while you can munge together a solution with ant maven is a better solution for managing dependencies than ant\n')
('maven', 'more', 'ant', 'script class files', '6989690', 'maven can t be compared with ant as in maven vs ant maven is more than a build script than ant is\n')
('maven', 'better', 'ant', 'better dependencies system', '13496917', 'trust me i did this before for another job where the system architect decided that maven was better than ant and all of our projects must be converted from ant to maven\n')
('maven', 'less', 'ant', '', '1010593', 'troubleshooting the build maven is less reliable than ant especially the non-core plugins\n')
('ant', 'better', 'maven', 'better dependencies system', '304069', 'however some things ant handles better than maven and if there s not a maven plugin for it it may be difficult to handle in maven\n')
('maven', 'more sophisticated', 'ant', 'number ground sophisticated', '22056239', 'a hood technique is to tag milestone releases of your projects giving then a version number and then manage dependencies with maven or a similar tool a bit more sophisticated than ant\n')
('ant', 'more complex', 'maven', 'complex powerful', '2435935', 'does this make ant more complex than maven\n')

add	subtract	6
('add', 'closer', 'subtract', '', '40771438', 'we observe that for 7 nodes 1 2 3 5 6 8 9 we are getting further by 1 add 7 9-2 to the score for other 2 4 7 we are getting closer by 1 subtract 2\n')
('add', 'greater', 'subtract', 'string int value', '36934027', 'provided a string i want to convert the chars from the string to an int add a value from another method getkey to this number and if the result is greater than 26 subtract 26\n')
('subtract', 'less', 'add', 'string int value', '34110561', 'i need some help though i need each number in that list to be subtract from 27 then if the result is less than 33 add 94 then print the numbers as they were just with that sum completed how do i do this\n')
('add', 'less n', 'subtract', '', '32158492', 'to find all the pairs of integers x and y that sum to n when cubed set x to the largest integer less than the cube root of n set y to 0 then repeatedly add 1 to y if the sum of the cubes is less than n subtract 1 from x if the sum of the cubes is greater than n and output the pair otherwise stopping when x and y cross\n')
('add', 'greater', 'subtract', '', '25599703', 'look at it this way based on your logic while x is greater than 100 add 5 while it s greater than 500 subtract 5 .\n')
('add', 'greater 2pi', 'subtract', '', '13225126', 'just take the difference and if it s negative add 2pi and then if it s greater than 2pi subtract 2pi\n')

racket	scheme	6
('racket', 'closer', 'scheme', '', '4355037', 'racket is closer to scheme than to common lisp but you could dip your toes into the lisp family without the speed bump of the emacs style of development\n')
('racket', 'much more', 'scheme', '', '33678546', 'all of racket s languages can interoperate so your language of choice is up to you though the rnrs languages tend to go unused in the racket community #lang racket is much more useful for writing programs than any of the scheme implementations but they can be useful if you want to write programs that run on different scheme implementations\n')
('racket', 'much more useful', 'scheme', '', '33678546', 'all of racket s languages can interoperate so your language of choice is up to you though the rnrs languages tend to go unused in the racket community #lang racket is much more useful for writing programs than any of the scheme implementations but they can be useful if you want to write programs that run on different scheme implementations\n')
('racket', 'more advanced other', 'scheme', '', '3215428', 'on the side of using macros racket has always been more advanced than other scheme and lisp implementations\n')
('scheme', 'more specifically', 'racket', '', '4472281', 'i would suggest you start with scheme and more specifically with racket formerly plt scheme\n')
('scheme', 'more object-oriented', 'racket', '', '5372482', 'there are various object systems you can load as libraries when you want to do oop but integration with existing code heavily depends on the scheme dialect and its surrounding culture chicken scheme seems to be more object-oriented than racket for instance\n')

ntlm	kerberos	9
('ntlm', 'better', 'kerberos', 'performance ways better', '453751', 'in fact in some ways ntlm is better than kerberos\n')
('kerberos', 'faster', 'ntlm', '', '592640', 'kerberos is complex to set up and even though it generally is considered faster than ntlm this is only true when you reach a certain limit of simultanious users on your site\n')
('ntlm', 'less', 'kerberos', '', '2319001', 'but since ntlm is less secure than kerberos why isn t it the other way around\n')
('ntlm', 'less secure', 'kerberos', '', '2319001', 'but since ntlm is less secure than kerberos why isn t it the other way around\n')
('ntlm', 'more secure', 'kerberos', '', '17356806', 'but as i understand it ntlm disallows the more secure kerberos domain credentials if they re available\n')
('ntlm', 'more', 'kerberos', '', '17356806', 'but as i understand it ntlm disallows the more secure kerberos domain credentials if they re available\n')
('kerberos', 'better option', 'ntlm', 'performance ways better', '34309390', 'kerberos could be considered as a better option than ntlm\n')
('kerberos', 'slower', 'ntlm', '', '592640', 'for a low traffic site the huge tokens that kerberos send across the network actually makes it slower than ntlm\n')
('kerberos', 'better', 'ntlm', 'performance ways better', '5244202', 'i understand that kerberos has better performance than ntlm\n')

ram	disk	118
('disk', 'slower', 'ram', 'faster slower memory', '9163426', 'so even ignoring practical considerations like disk is slower than ram it will be slower\n')
('ram', 'more expensive', 'disk', 'data machine expensive', '21370836', 'but ram is volatile the data in ram is erased when the computer loses power and ram is far more expensive than disk per unit of storage\n')
('disk', 'slower', 'ram', '', '18708182', 'there are libraries that allow on-disk data structures comes to mind and another one whose name i can t recall at the moment but disk accesses are orders of magnitude slower than ram\n')
('disk', 'bigger', 'ram', 'smaller time table', '26281309', 'the table on disk is bigger than your ram\n')
('disk', 'more important', 'ram', 'data machine expensive', '18394009', 'if the hot data won t fit in ram on either machine then disk i o performance becomes more important than ram mostly random read i o and the fsync flush rate\n')
('disk', 'greater available', 'ram', '', '7381501', 'also keep in mind that once ram is exhausted your program will start running in virtual memory on disk which will probably cause far more disk i o activity than the program itself so if you re concerned about disk i o your best bet is probably to make sure that the batch of data you re working on in memory doesn t get much greater than available ram\n')
('disk', 'slower', 'ram', 'faster slower memory', '11832363', 'the initial read has to access the disk which is a lot slower than accessing ram\n')
('ram', 'more enough', 'disk', '4gb enough jboss', '7201179', 'this particular jboss runs in a vm with 4gb of ram and 2 cpu s and more than enough disk space it has never has less than 5gb free at any time\n')
('disk', 'cheaper', 'ram', 'cheaper storage persistence', '516941', 'disk space is probably always going to be cheaper than ram\n')
('ram', 'less', 'disk', '', '35076340', 'any db tech is fine with me as long it does not need lots of ram and uses less disk\n')
('ram', 'faster', 'disk', 'faster slower memory', '16427006', 'ram is always faster than disk\n')
('disk', 'slower', 'ram', '', '35918591', 'caching and buffering are quite important since disk are just so much slower than ram and ram is much slower than the cpu\n')
('disk', 'much slower', 'ram', 'faster slower memory', '23316098', 'changing it will require a reboot. that will slow things down a bit as the swap file on disk is much slower than ram\n')
('ram', 'faster', 'disk', '', '35685853', 'i would say that probably yes as long as we have enough of ram which is faster that virtual memory in case we need to access something from the disk which is extremely slow... but also i know that some applications just require having paging\n')
('disk', 'larger', 'ram', 'available larger varnish', '8654903', 'so while the writes my be sequential on disk for datasets larger than ram these random reads will quickly become the bottle neck\n')
('disk', 'access much more', 'ram', '', '3211989', 'i m sure there are other holes like that too - but the code above will work on any system which supports paging and where disk access is much more expensive than ram access\n')
('disk', 'slower', 'ram', 'faster slower memory', '1706506', 'disk io - even ssd - is many orders of magnitude slower than the ram that the hashing is going though\n')
('disk', 'slower', 'ram', 'system mb potential', '18457435', 'once you re out of ram and the system starts swapping - disk access is thousands times slower than ram so any potential benefits of 64-bit code are flying out of window\n')
('disk', 'slower', 'ram', '', '45615135', 'if lob-storage isn t in ram at the time of a query execution then we need to read it from a disk which is of course much slower than from ram\n')
('disk', 'slower', 'ram', 'faster slower memory', '6282736', 'that means that without caching a hit against disk will be 200 times slower than accessing ram\n')
('ram', 'much faster', 'disk', '', '6433744', 'just wanted to weigh in my two cents what serialworm and thephpdeveloper said share the fact that memory ram is much faster than any disk io bound operation you come up with\n')
('disk', 'access much slower', 'ram', '', '36956097', 'using multiprocessing is probably not going to speed up reading data from disk since disk access is much slower than ram access or calculations\n')
('disk', 'slower memory', 'ram', '', '28661841', 'because hard disk have a much slower memory than ram virtual private server performance may slow down considerably\n')
('ram', 'smaller', 'disk', '', '30568341', 'in this case the latter is likely to cause trouble because the insertion of a name hits a random node in the tree i.e the name insertion doesn t follow a pattern and your ram is smaller than the index chances are high that the destination must be fetched from disk\n')
('ram', 'much faster', 'disk', 'faster slower memory', '21918245', 'obviously reading a block from cache is much more efficient than reading it off the disk since ram is much faster than disk\n')
('disk', 'slower', 'ram', '', '27458977', 'however be aware of this to cache pixels to disk is several orders of magnitude slower than using ram\n')
('disk', 'slower', 'ram', 'faster slower memory', '24217960', 'ssd disk are good but they are still much slower than ram\n')
('ram', 'more enough', 'disk', '4gb enough jboss', '45343069', 'for this reason i deployed a 2 cores 4gb ram and more than enough disk to run through the getting started example of the enterprise integrator\n')
('disk', 'more expensive', 'ram', '', '3211989', 'i m sure there are other holes like that too - but the code above will work on any system which supports paging and where disk access is much more expensive than ram access\n')
('disk', 'slower system', 'ram', 'system page operating', '10350034', 'there exist battery-backed packages of ram modules which can act as an ultra-fast hdd substitute but if they attach via sata scsi or other typical disk interface the still are slower than system ram\n')
('disk', 'slower', 'ram', '', '17899469', 'make sure you have enough ram so that your data set fits with ram atleast your index should fit inside the ram coz each time a data fetched from disk is 10 times slower than ram\n')
('disk', 'io extremely slower then', 'ram', '', '10243816', 'when the data is in memory - you can do anything much faster on it since disk io is extremely slower then ram so sorting it and reading it multiple times is expected to be much slower then manipulating the data on memory\n')
('disk', 'slower', 'ram', 'faster slower memory', '13921423', 'as disk is 1000s of times slower than ram this problem can grind the machine down to a practical halt\n')
('disk', 'io way slower', 'ram', 'faster slower memory', '21040937', 'but you should consider that disk io is way slower than ram\n')
('ram', 'faster', 'disk', 'faster slower memory', '25408923', 'for this reason it seemed natural to me to initially load the file into memory and interpret it later at my leisure since reading from ram is supposed to be much faster than from disk\n')
('disk', 'io extremely slower', 'ram', '', '10243816', 'when the data is in memory - you can do anything much faster on it since disk io is extremely slower then ram so sorting it and reading it multiple times is expected to be much slower then manipulating the data on memory\n')
('ram', 'much faster', 'disk', '', '32908530', 'accessing the main memory ram is much faster than reading values from the hard disk\n')
('disk', 'space cheaper', 'ram', 'cheaper storage persistence', '16308547', 'this approach will radically reduce heap space usage - disk space is cheaper then ram too\n')
('ram', 'always faster', 'disk', '', '21009952', 'saving information to a variable and therefore to ram is always faster than direct to disk\n')
('disk', 'larger available', 'ram', 'available larger varnish', '969709', 'in future these lists may be read from disk and larger than available ram\n')
('ram', 'faster', 'disk', 'faster slower memory', '472333', 'ram is much faster than disk\n')
('ram', 'less', 'disk', '', '42524485', 'and at worst impossible at all ram size is usually much less than disk size\n')
('disk', 'vastly slower', 'ram', '', '20283122', 'remember the tuples are saved into the disk which is vastly slower to access than things in ram\n')
('ram', 'usually faster', 'disk', '', '1192201', 'but becuase reading from ram is usually faster than from other kind of memory storage divice os copy the program from disk on ram and start executing program from there\n')
('ram', 'faster', 'disk', 'faster slower memory', '1204121', 'loosely speaking ram is 1000 or more times faster than disk and cpu is faster still\n')
('disk', 'slower', 'ram', 'ssd alot subsequent', '30592276', 'the first load involves reading alot from the hard disk which is slow even ssd is slower than ram subsequent loads should be faster though 3 seconds on the ssd seem to be odd\n')
('ram', 'faster', 'disk', 'faster slower memory', '3520281', 'no trivial support for cache accessing ram is faster than accessing disk\n')
('ram', 'more', 'disk', 'cheaper storage persistence', '5049314', 'basically ram is more expensive than the disk storage\n')
('ram', 'faster', 'disk', '', '19457886', 'ram is a lot faster than disk so reads and writes are temporarily stored until the data is requested by the code or the disk is able to receive it\n')
('disk', 'slower', 'ram', 'faster slower memory', '41349090', 'disk even ssd are orders of magnitude slower than ram\n')
('disk', 'bigger', 'ram', '', '1156709', 'disk is bigger than ram\n')
('disk', 'faster', 'ram', '', '20704516', 'so my question is how to move this database into ram where i can access it via sqlite3_open or if my idea is bullshit and leaving the database on disk is faster than moving it into ram via mapping\n')
('disk', 'slower', 'ram', 'faster slower memory', '15467085', 'this is relatively slow since reading from the hard disk is slower than reading from ram\n')
('disk', 'slower', 'ram', 'faster slower memory', '40588290', 'if too much memory is consumed it might swap to disk which is slower than ram\n')
('ram', 'faster', 'disk', 'faster slower memory', '30961271', '1 yes there is a obvious benefit reading from ram is faster than reading from disk\n')
('disk', 'slower', 'ram', 'faster slower memory', '47603770', 'which will lead to performance issue all programs will be work slower because read info from disk is slower than from ram\n')
('disk', 'slower', 'ram', 'faster slower memory', '16312981', 'disk i o is about 100 000 times slower than ram\n')
('ram', 'less', 'disk', '', '33856372', 'if the amount of ram is less you ll have a lot of swapping to disk which is a lot more time consuming\n')
('ram', 'bandwidth much higher', 'disk', '', '28897569', 'also ram bandwidth is much higher than disk or ssd or network bandwidth and the ram latency is much lower too\n')
('ram', 'higher', 'disk', '', '28897569', 'also ram bandwidth is much higher than disk or ssd or network bandwidth and the ram latency is much lower too\n')
('disk', 'slower cpu', 'ram', '', '32743075', 'query speed is mainly limited by disk i o speed which is at least 1000 times slower than cpu ram speed\n')
('ram', 'alway faster', 'disk', '', '565933', 'buy as much memory as you can afford ram is alway faster than io from disk\n')
('disk', 'much slower then', 'ram', 'faster slower memory', '10243816', 'only one disk read - since the disk is much slower then ram -\n')
('ram', 'typically more expensive', 'disk', '', '14328119', 'however they may be cheaper to operate depending on how much data you are expecting to store with each session key holding large quantities of data in ram is typically more expensive than storing on disk\n')
('disk', 'slower', 'ram', 'faster seek nanoseconds', '21370836', 'a disk seek takes about 10 000 000 nanoseconds of course some disk are faster but the best of them are still thousands of times slower than ram\n')
('disk', 'slower', 'ram', 'faster slower memory', '10949313', 'disk access is much slower than ram\n')
('disk', 'access much slower then', 'ram', '', '13396579', 'however if this is indeed the case - and the data does not fit ram and you cannot use map-reduce i suspect sorting and iterating - though will be o nlogn will be more efficient using external sort - because the number of disk accesses will be minimized and disk access is much slower then ram access\n')
('disk', 'storage cheaper', 'ram', 'cheaper storage persistence', '18718208', 'always favor disk persistence disk storage is cheaper than ram\n')
('disk', 'slower', 'ram', 'faster slower memory', '8741427', 'remember disk is 1000s of times slower than ram\n')
('ram', 'faster', 'disk', 'faster slower memory', '46452799', 'i understand that ram is typically thousands of times faster than disk but i o speed is not the only code running\n')
('disk', 'slower', 'ram', '', '16181839', 'or if there is too much intermediate output to be shuffled your job will become slow as you will need disk based shuffle in such a case which will be slower than ram based shuffle\n')
('disk', 'slower', 'ram', '', '6922874', 'it won t do anything to change the fact that disk io is orders of magnitude slower than ram\n')
('disk', 'slower', 'ram', '', '36959985', 'as sven marnach wrote in the comments your problem is most likely i o bound since disk access is orders of magnitude slower than ram access\n')
('ram', 'faster', 'disk', 'faster slower memory', '31332082', 'ram is a lot faster than disk\n')
('ram', 'always faster', 'disk', '', '5113033', 'for the stand of file operations writing to memory ram is always faster than writing to the file on the disk directly\n')
('disk', 'larger available', 'ram', 'available larger varnish', '14280134', 'it is needed for a lookup of repetitions in disk files much larger than available ram\n')
('disk', 'larger', 'ram', 'swap processes fragmentation', '24240326', 'it uses swap space on disk to allow for processes much larger than ram\n')
('disk', 'much slower', 'ram', 'faster slower memory', '42893433', 'as you run queries it has to fetch data from disk which is much slower than ram\n')
('disk', 'read slower', 'ram', 'faster seek nanoseconds', '44453468', 'pros of objects faster disk read is slower than ram lesser dependencies of the system s state\n')
('ram', 'much faster', 'disk', 'faster slower memory', '26475024', 'the ram is much faster than the hard disk\n')
('ram', 'much faster', 'disk', '', '28297171', 'reading audio files from ram is much faster than reading audio files from hard disk\n')
('disk', 'slower', 'ram', 'system mb potential', '7504168', 'in other words the operating system is using some of your hard disk space to satisfy your 13 mb allocation request at great expense of speed since the hard disk is much much slower than ram\n')
('disk', 'larger', 'ram', 'smaller time table', '38472387', 'this is well within disk space but far larger than ram\n')
('disk', 'slower', 'ram', 'faster slower memory', '42698909', 'anyway you will have a huge performance loss due to the fact that your disk is way slower than your ram\n')
('ram', 'much faster', 'disk', '', '40904075', 'the idea is to get the library and application loaded from ram into ram which is much faster than loading from disk\n')
('disk', 'slower', 'ram', 'faster slower memory', '20095562', 'disk io will be slower than ram\n')
('ram', 'smaller', 'disk', 'smaller time table', '21370836', 'so even if your ram is much smaller than your disk you could assume you can read data that s already in ram 90 of the time or more\n')
('disk', 'slower', 'ram', 'faster slower memory', '14571358', 'i think it is because the disk is slower than ram\n')
('disk', 'slower', 'ram', 'system page operating', '28817103', 'this is slow because your hard disk is significantly slower than ram and at 7gb there will be a lot of data being read from your hard disk put into ram then moved back to your page file the file on disk your operating system uses to store data that has been copied out of ram\n')
('disk', 'slower', 'ram', '', '13148304', 'disk files are of course an order of magnitude slower than ram and thrashing your virtual memory system could actually be worse than that depending on your access patterns\n')
('disk', 'slower', 'ram', 'faster slower memory', '9456024', 'if the worker processes do other things than just calulations read from or write to disk they will have to wait a lot since a disk is a lot slower than ram\n')
('disk', 'slower', 'ram', '', '44384670', 'since your disk even if it s an ssd is several orders of magnitude slower than ram the systems gets unresponsive\n')
('disk', 'access much slower', 'ram', '', '13396579', 'however if this is indeed the case - and the data does not fit ram and you cannot use map-reduce i suspect sorting and iterating - though will be o nlogn will be more efficient using external sort - because the number of disk accesses will be minimized and disk access is much slower then ram access\n')
('ram', 'less', 'disk', 'access', '2465473', 'more ram means less disk access\n')
('disk', 'slower', 'ram', 'faster slower memory', '17869058', 'run the following to sort the data on disk this is slower than pulling it into ram sorting and then writing to disk\n')
('ram', 'slower', 'disk', '', '848572', 'memory is a bottleneck to performance ram runs slower than the cpu and if you re paging to disk than it s really slow\n')
('disk', 'much slower', 'ram', 'data machine expensive', '14873969', 'reloading pages data or program code from disk which is much slower does not usually happen very often as long as the program is actually running and as long as the machine is not desperately low on ram\n')
('ram', 'more space', 'disk', '', '41373116', 'data in ram can take a lot more space than on disk\n')
('disk', 'slower', 'ram', '', '36956097', 'using multiprocessing is probably not going to speed up reading data from disk since disk access is much slower than ram access or calculations\n')
('ram', 'faster', 'disk', '', '18437355', 'since using ram is faster than using disk zram allows linux to make more use of ram when swapping paging is required especially on older computers with less ram installed\n')
('disk', 'slower', 'ram', 'faster slower memory', '30478460', 'disk is 100x slower than ram\n')
('ram', 'memory faster', 'disk', '', '31322336', 'we all know that the access to ram memory is faster than access to hard disk\n')
('ram', 'access much more fast', 'disk', 'access', '41195702', 'and ram access is much more fast than disk access\n')
('disk', 'access much more expensive', 'ram', '', '3211989', 'i m sure there are other holes like that too - but the code above will work on any system which supports paging and where disk access is much more expensive than ram access\n')
('ram', 'faster', 'disk', '', '6433744', 'just wanted to weigh in my two cents what serialworm and thephpdeveloper said share the fact that memory ram is much faster than any disk io bound operation you come up with\n')
('ram', 'typically more', 'disk', '', '14328119', 'however they may be cheaper to operate depending on how much data you are expecting to store with each session key holding large quantities of data in ram is typically more expensive than storing on disk\n')
('disk', 'slower', 'ram', '', '9057271', 'that s basically possible but it would take hours as hard disk access is so much slower than accessing ram caches\n')
('disk', 'slower', 'ram', 'ssd alot subsequent', '1356125', 'another option is to spend a bit of cash on a 15000 rpm disk or a ssd solid state disk although that ll be slower than a ram disk\n')
('disk', 'slower', 'ram', 'faster slower memory', '8741427', 'as disk is 1000s of times slower than ram as the memory usage increases your machine grinds more and more closer to a halt\n')
('disk', 'larger available', 'ram', 'available larger varnish', '7314774', 'alternatively you can use an ssd with file storage in varnish to reduce disk io bottlenecks when using an object cache larger than available ram\n')
('ram', 'much faster', 'disk', 'faster slower memory', '7548458', 'ram is much faster then disk io\n')
('disk', 'not larger', 'ram', 'available larger varnish', '1896687', 'edit true the file on disk is not larger than ram but the in-memory representation can easily become much larger than available ram\n')
('disk', 'slower', 'ram', '', '5353574', 'because disk access is orders of magnitude slower than ram access\n')
('disk', 'slower', 'ram', '', '1829072', 'as disk i o is orders of magnitude slower than ram i o this can cause a very significant difference in query execution times\n')
('disk', 'lower', 'ram', '', '9429223', 'at any rate disk speeds are orders of magnitude lower than the ram speed and i wouldn t be too much concerned about the mode here unless of course it turns out that caching is different in the two modes\n')
('ram', 'faster', 'disk', 'faster slower memory', '10429777', 'ram is 100 thousand times faster than disk for database access from\n')
('ram', 'more', 'disk', 'data machine expensive', '44453468', 'you lose two benefits of data base consistency data persists after a crash and you need more ram which is more expensive and scarce than disk flash\n')
('disk', 'more memory available', 'ram', 'swap processes fragmentation', '28231912', 'the os heap uses the cpu s virtual memory hardware and is free from fragmentation issues and can even effectively use the disk s swap space allowing you to allocate more memory than available ram\n')

mvp	presenter	8
('mvp', 'pattern more', 'presenter', '', '17432822', 'also this way mvp pattern becomes more testable as you can mock the view with fake object and test your presenter in unit tests\n')
('mvp', 'greater', 'presenter', '', '4676970', 'mvp offers greater seperation as your presenter have no knowledge of web centric concepts\n')
('presenter', 'cleaner', 'mvp', '', '34595834', 'since the flow of logic is still basically a loop but the api boundaries of the presenter is a cleaner boundary than view in mvp which helps decouple v and m in mvp than is possible in mvc\n')
('presenter', 'closer', 'mvp', '', '39627887', 'the use of a presenter is closer to mvp and gets away from the dependency injection model advocated by apple mvc\n')
('mvp', 'more', 'presenter', '', '2411687', 'i have been searching on the net and i made a couple of examples of both of them but i m even more confused because in some sample web pages mvp uses more than 2 interfaces to communicate the presenter with the view layer some ones even have completely blank interfaces only declarated but in other ones it only takes two interfaces to transport data from presenter to view\n')
('mvp', 'pattern more testable', 'presenter', '', '17432822', 'also this way mvp pattern becomes more testable as you can mock the view with fake object and test your presenter in unit tests\n')
('presenter', 'cleaner boundary', 'mvp', '', '34595834', 'since the flow of logic is still basically a loop but the api boundaries of the presenter is a cleaner boundary than view in mvp which helps decouple v and m in mvp than is possible in mvc\n')
('mvp', 'greater seperation', 'presenter', '', '4676970', 'mvp offers greater seperation as your presenter have no knowledge of web centric concepts\n')

division	multiplying	13
('multiplying', 'faster', 'division', 'note dshin faster', '35264675', 'note that i ve incorporated dshin s comment that multiplying is faster than division however the performance improvement is about 90 removing the binary search 10 multiplication vs\n')
('division', 'much more accurate', 'multiplying', '', '38342154', 'perhaps it s the case that division is much more accurate than reciprocal plus multiplying\n')
('multiplying', 'faster', 'division', '', '6056262', 'these can be compared to multiplying by 2 x left-shift or divinding by 2 x right-shift but it should be noted that a binary shift is much faster than a division operation\n')
('division', 'slower', 'multiplying', 'decimal number single', '38342154', 'according to agner s instruction tables a single fp division is slower than a single reciprocal op and a single multiplying op\n')
('multiplying', 'more', 'division', '', '35845566', 'i read about python following pemdas that is precedence of multiplying is more than division\n')
('division', 'slower', 'multiplying', 'note dshin faster', '4301621', 'sure that s probably compiled or jit d away but you should avoid division in performance critical code it s far slower than multiplying\n')
('division', 'much more concise', 'multiplying', '', '11588693', 'but determining the digit and the carry by division is much more concise and for the larger factors also much more efficient when multiplying a digit by 100 the result is on average 450 requiring 45 subtractions but two divisions are sufficient for all factors\n')
('multiplying', 'better', 'division', '', '10420573', 'but in normal case it takes n 2 comparison so you half the height of tree but you multiplying each merge with two so total running time is not better than division to 2 part\n')
('division', 'more', 'multiplying', '', '13148266', 'division of quaternion a by quaternion b is nothing more than multiplying a by the multiplicative inverse of b\n')
('division', 'much more', 'multiplying', '', '38342154', 'perhaps it s the case that division is much more accurate than reciprocal plus multiplying\n')
('division', 'slower', 'multiplying', 'decimal number single', '15712237', 'i presume that you know that using a division is a lot slower than multiplying by decimal number 5 is always slower than 0.2\n')
('division', 'much more', 'multiplying', '', '11588693', 'but determining the digit and the carry by division is much more concise and for the larger factors also much more efficient when multiplying a digit by 100 the result is on average 450 requiring 45 subtractions but two divisions are sufficient for all factors\n')
('division', 'better', 'multiplying', '', '7945958', 'while working with integer division it s better to multiplying first and divide later to minimize the rounding error\n')

pdfbox	itext	5
('itext', 'longer', 'pdfbox', '', '26335506', 'i have noticed that content extraction is faster in itext but searching words using regex in the content extracted by itext takes longer time than pdfbox\n')
('pdfbox', 'better', 'itext', '', '584198', 'start with pdfbox as it s text extraction abilities are better than itext s\n')
('pdfbox', 'less mature', 'itext', '', '10496107', 'on the downside pdfbox is less mature than itext so it has less features and documentation available\n')
('pdfbox', 'less', 'itext', '', '10496107', 'on the downside pdfbox is less mature than itext so it has less features and documentation available\n')
('itext', 'longer time', 'pdfbox', '', '26335506', 'i have noticed that content extraction is faster in itext but searching words using regex in the content extracted by itext takes longer time than pdfbox\n')

elixir	erlang	4
('elixir', 'less farmiliar', 'erlang', '', '33960957', 'i m doing a comparison of erlang haskell elixir and es6 and i m less farmiliar with erlang and elixir but i want to represent all of these languages fairly so is this good erlang code\n')
('erlang', 'steeper learning', 'elixir', '', '37966947', 'erlang has a steeper learning curve compared to elixir\n')
('elixir', 'more verbose', 'erlang', '', '20304284', 'i agree some mechanisms in elixir are slightly more verbose than erlang function definitions being my personal pet peeve and vice-versa\n')
('erlang', 'steeper', 'elixir', '', '37966947', 'erlang has a steeper learning curve compared to elixir\n')

enumerate	xrange	8
('enumerate', 'also more appropriate', 'xrange', '', '7975182', 'enumerate is also more appropriate than xrange\n')
('enumerate', 'more pythonic', 'xrange', '', '9594107', 'enumerate is more pythonic but xrange is fine here too\n')
('enumerate', 'also more', 'xrange', '', '7975182', 'enumerate is also more appropriate than xrange\n')
('enumerate', 'slower', 'xrange', '', '1352497', 'why is enumerate slower than xrange + lst i\n')
('enumerate', 'more', 'xrange', '', '9594107', 'enumerate is more pythonic but xrange is fine here too\n')
('enumerate', 'faster', 'xrange', '', '1352521', 'if you measure properly you ll see there s essentially no difference enumerate is microscopically faster than xrange in this example but well within noise\n')
('enumerate', 'more appropriate', 'xrange', '', '7975182', 'enumerate is also more appropriate than xrange\n')
('enumerate', 'microscopically faster', 'xrange', '', '1352521', 'if you measure properly you ll see there s essentially no difference enumerate is microscopically faster than xrange in this example but well within noise\n')

angular	ionic	3
('ionic', 'higher', 'angular', '', '37372204', 'i think your code has no problem except that angular has deprecated legacy promise methods success and error of http after version 1.4.4 you should use standard then method instead if your ionic depends on higher angular version\n')
('angular', 'slower plain', 'ionic', '', '31505527', 'i ve only done one experiment with angular material myself and i wasn t experiencing any real performance issues at the time but i did read some people writing about it being slower than plain ionic\n')
('ionic', 'less intimidating', 'angular', '', '37466169', 'the docs for ionic 2 are clear user-friendly and much less intimidating than angular 2 docs\n')

svn	perforce	9
('perforce', 'more advanced', 'svn', '', '1768520', 'perforce offers more advanced branching and merging capabilities than svn\n')
('perforce', 'more', 'svn', '', '1768520', 'perforce offers more advanced branching and merging capabilities than svn\n')
('perforce', 'better', 'svn', 'network checkout faster', '44752', 'make sure you re using a source control system that supports branching and merging i ve had experience with perforce and svn and while perforce is better svn is free\n')
('perforce', 'more comfortable', 'svn', '', '26851', 'perforce does have support for many other oses but our non-windows devs feel more comfortable with svn too\n')
('perforce', 'faster', 'svn', 'network checkout faster', '2794083', 'perforce is soooo much faster than svn because all the check-outs are stored on the server so it doesn t have to check every file on an update\n')
('perforce', 'less examples', 'svn', '', '15797795', 'if you want to a little bit further you can imagine use more powerfull scm clearcase perforce ... but maven integration is fewer not well documented and community provide less examples than svn or git\n')
('svn', 'much better', 'perforce', 'network checkout faster', '2794083', 'svn works much better when disconnected from the network - with perforce you have to tell the server when you ve done a checkout\n')
('perforce', 'much nicer', 'svn', '', '3969786', 'if you have the money ericgorr is right perforce is much nicer to work with then svn\n')
('svn', 'more intuitive', 'perforce', '', '26851', 'if anything i find working with svn easier and more intuitive than perforce\n')

boost	stl	9
('stl', 'better', 'boost', 'project better exceptions', '548848', 'once you re past the basics with c++ learning how to use parts of stl and then how it works will be better than tackling boost\n')
('boost', 'less standard', 'stl', 'libraries mature standard', '548827', 'boost libraries are generally less mature and less standard than stl\n')
('stl', 'better', 'boost', 'project better exceptions', '8231535', 'c++ s stl is getting better and better yet it s not nearly as huge as boost and is not intended to\n')
('boost', 'more modern', 'stl', '', '1577097', 'while boost is more modern c++ it also harder to use for non trivial tasks - and without a modern c++ experience and deep stl knowledge it is difficult to use correctly\n')
('boost', 'better solution', 'stl', '', '3024677', 'boost s io stream might be a better solution than stl s own stream\n')
('stl', 'much richer', 'boost', 'libraries mature standard', '4778449', 'as for not reinventing the wheel like many have said already make sure to first explore the possibilities in the standard template library stl which is much richer than you might think and then look at boost www.boost.org which has libraries for a lot of diverse purposes and they are extremely high quality and some are just works of art like spirit proto lambda and mpl\n')
('boost', 'better', 'stl', 'project better exceptions', '277306', 'i ve used both for the same project boost is better integrated with the stl and especially c++ exceptions\n')
('boost', 'greater mastery', 'stl', '', '8222708', 'i don t want to use boost because that s a library i haven t used extensively yet and i m doing this partly as an exercise to gain greater mastery over the stl\n')
('boost', 'more', 'stl', '', '1577097', 'while boost is more modern c++ it also harder to use for non trivial tasks - and without a modern c++ experience and deep stl knowledge it is difficult to use correctly\n')

pascal	delphi	3
('pascal', 'easier', 'delphi', '', '26573650', 'in free and turbo pascal file handling is much more easier than in delphi in pascal we have assign instead of assignfile and close instead of closefile\n')
('pascal', 'code more', 'delphi', '', '10146882', 'from my pov the object pascal paradigm used with fpc object pascal dialect which can coexist with the default object pascal code is more advanced lightweight and integrated than the interface-based plumbing of delphi xe2 compiler with on-the-fly marshalling using rtti\n')
('pascal', 'code more advanced', 'delphi', '', '10146882', 'from my pov the object pascal paradigm used with fpc object pascal dialect which can coexist with the default object pascal code is more advanced lightweight and integrated than the interface-based plumbing of delphi xe2 compiler with on-the-fly marshalling using rtti\n')

redmine	mantis	3
('mantis', 'less project', 'redmine', '', '30459072', 'i ve read that mantis contains less project management tools than redmine\n')
('mantis', 'less', 'redmine', '', '30459072', 'i ve read that mantis contains less project management tools than redmine\n')
('redmine', 'better', 'mantis', '', '10654685', 'i have been trying out redmine to see if i like it better than mantis\n')

gyroscope	accelerometer	6
('gyroscope', 'more', 'accelerometer', '', '39996315', 'gyroscope consumes more power than accelerometer based on my analysis its 4-6 times higher\n')
('gyroscope', 'more power', 'accelerometer', '', '39996315', 'gyroscope consumes more power than accelerometer based on my analysis its 4-6 times higher\n')
('gyroscope', 'better', 'accelerometer', '', '28369430', 'i want to use accelerometer but i learnt that gyroscope is better option to calculate the accelerometer\n')
('gyroscope', 'better option', 'accelerometer', '', '28369430', 'i want to use accelerometer but i learnt that gyroscope is better option to calculate the accelerometer\n')
('gyroscope', 'sensor more accurate', 'accelerometer', 'function sensor accurate', '16760584', 'so after googling this i found that using gyroscope sensor is more accurate than the accelerometer\n')
('gyroscope', 'more accurate', 'accelerometer', 'function sensor accurate', '16772950', 'also i have tried the accelerometer sensor and it worked but i m asking to check whether the gyroscope is more accurate to this function or the accelerometer\n')

lemmatization	stemming	4
('lemmatization', 'relatively more', 'stemming', '', '22454669', 'lemmatization is relatively more complicated as compare to stemming that is why it s harder to find some ready and free solution\n')
('stemming', 'simpler version', 'lemmatization', '', '32527650', 'you can also user a stemming which is a simpler version of lemmatization\n')
('lemmatization', 'better results', 'stemming', '', '41796551', 'lemmatization should lead to better results than stemming source\n')
('stemming', 'simpler', 'lemmatization', '', '32527650', 'you can also user a stemming which is a simpler version of lemmatization\n')

sctp	tcp	3
('sctp', 'better', 'tcp', 'different better', '32988229', 'sctp is not better than tcp in any way but it does something different\n')
('tcp', 'higher latency', 'sctp', '', '33657007', 'as i understand websockets are on top of tcp and have higher latency than sctp that underlies webrtc when for example sending binary data between server and browser that also could be 2 peers in webrtc\n')
('sctp', 'better', 'tcp', 'different better', '32986662', 'how sctp is better then tcp\n')

cappuccino	sproutcore	4
('cappuccino', 'probably more freeform', 'sproutcore', '', '3286643', 'like bruz says cappuccino is probably more freeform at the data layer than sproutcore\n')
('cappuccino', 'probably more', 'sproutcore', '', '3286643', 'like bruz says cappuccino is probably more freeform at the data layer than sproutcore\n')
('sproutcore', 'better', 'cappuccino', 'use bindings data', '4289512', 'sproutcore makes use of bindings better than cappuccino currently does\n')
('sproutcore', 'better data', 'cappuccino', 'use bindings data', '4289512', 'sproutcore has a better data store api than the one cappuccino has\n')

integer	floating-point	33
('floating-point', 'slower', 'integer', '', '5069643', 'on somewhat limited processors like those in high-end cell phones floating-point may be somewhat slower than integer but it s generally within an order of magnitude or better so long as there is hardware floating-point available\n')
('integer', 'simpler', 'floating-point', 'today units combinations', '141340', 'but integer arithmetic arguably is inherently simpler than floating-point\n')
('floating-point', 'more general', 'integer', '', '32813065', 'floating-point solves the more general problem of representing some real numbers that aren t integers and some real numbers that are larger than the maximum integer up to which all integers are representable here 16777216 all with a nearly uniform relative accuracy at least 1 2 precision\n')
('integer', 'faster', 'floating-point', 'today units combinations', '25898877', 'integer math is often much faster than floating-point so such a function could be a major performance win\n')
('floating-point', 'less', 'integer', '', '46047474', 'since the floating-point value is slightly less than the integer you rounded to thanks to .nextdown the integer part is going to be one less than that integer\n')
('floating-point', 'larger range', 'integer', '', '34164029', 'floating-point types have a larger range than the integer types so\n')
('integer', 'math faster', 'floating-point', 'today units combinations', '5069628', 'generally integer math is faster than floating-point math\n')
('floating-point', 'faster', 'integer', 'today units combinations', '1900794', 'depending on context floating-point code may be as fast as or faster than integer code or it may be four times slower\n')
('integer', 'faster', 'floating-point', 'today units combinations', '30311819', 'there are lots of cpu gpu combinations where a 32b integer multiply is faster than a 32b floating-point multiply on cpu and vice-versa on gpu\n')
('floating-point', 'slower', 'integer', 'today units combinations', '26227821', 'floating-point may be somewhat slower than integer but it s generally\n')
('floating-point', 'divide faster', 'integer', 'today units combinations', '2149859', 'floating-point divide is faster than integer fewer bits to divide assuming your cpu has floating-point unit\n')
('floating-point', 'less exact', 'integer', '', '28182934', 'however due to unpredictable floating-point precision issues it is sometimes little less than exact integer and in this case it is rounded down too much\n')
('integer', 'greater', 'floating-point', '', '798046', 'i know c++ have functions that return largest or smallest integer that is greater or lower than a like ceil or floor.is there a function that implement digit limitation of floating-point variable\n')
('floating-point', 'faster', 'integer', 'today units combinations', '3042066', 'today s floating-point units are pretty fast and may actually divide faster than an integer unit\n')
('integer', 'coarser', 'floating-point', 'today units combinations', '44682117', 'you re performing integer division which is coarser than floating-point division\n')
('floating-point', 'value slightly less', 'integer', '', '46047474', 'since the floating-point value is slightly less than the integer you rounded to thanks to .nextdown the integer part is going to be one less than that integer\n')
('floating-point', 'longer', 'integer', '', '4178780', 'an individual floating-point division instruction will take longer than an integer one\n')
('integer', 'faster', 'floating-point', 'today units combinations', '288727', 'which uses all integer arithmetic is usually faster than its floating-point equivalent likely significantly faster in the case of a floating-point type equivalent to t-sql s decimal type\n')
('floating-point', 'slower', 'integer', 'today units combinations', '5069643', 'historically floating-point could be much slower than integer arithmetic\n')
('floating-point', 'better results', 'integer', '', '16154311', 'i did this very successfully with scipy.ndimage in the floating-point domain way better results than integer image processing like this\n')
('floating-point', 'division typically faster', 'integer', 'today units combinations', '25024535', 'floating-point division is typically faster than integer division on the cpu\n')
('floating-point', 'higher rank', 'integer', '', '10221622', 'because the floating-point value is of a higher rank than an integer it will promote the integer to a float\n')
('integer', 'faster', 'floating-point', 'today units combinations', '38034768', 'it s even possible that you could implement pong using only integer arithmetic which is likely to be faster than floating-point -- but the difference is unlikely to be critical\n')
('floating-point', 'variables much more', 'integer', '', '24415732', 'floating-point representation in memory can t add third link - because floating-point variables is much more strange than integer ones\n')
('floating-point', 'variables much more strange', 'integer', '', '24415732', 'floating-point representation in memory can t add third link - because floating-point variables is much more strange than integer ones\n')
('floating-point', 'more complicated', 'integer', 'today units combinations', '12982942', 'floating-point arithmetics is by far more complicated than integer arithmetics\n')
('floating-point', 'slower', 'integer', 'today units combinations', '26227821', 'historically floating-point could be much slower than integer\n')
('floating-point', 'math slower', 'integer', 'today units combinations', '514184', 'they take up more space and floating-point math is slower than integer math\n')
('floating-point', 'slower', 'integer', 'today units combinations', '18883825', 'as a rule of thumb floating-point is about 2x slower than integer on\n')
('floating-point', 'bigger numbers', 'integer', '', '14995249', 'nsdecimalnumber and the floating-point types may be able to store bigger numbers than the integer types though with decreasing precision\n')
('floating-point', 'more', 'integer', '', '32813065', 'floating-point solves the more general problem of representing some real numbers that aren t integers and some real numbers that are larger than the maximum integer up to which all integers are representable here 16777216 all with a nearly uniform relative accuracy at least 1 2 precision\n')
('integer', 'faster', 'floating-point', 'today units combinations', '9236157', 'but another added benefit of this approach is that it could make your program run faster since fixed-point integer arithmetic is much faster than floating-point arithmetic\n')
('floating-point', 'more strange', 'integer', '', '24415732', 'floating-point representation in memory can t add third link - because floating-point variables is much more strange than integer ones\n')

splinter	selenium	4
('splinter', 'simpler', 'selenium', 'easier simpler', '38908865', 'splinter simpler than selenium\n')
('splinter', 'simpler webdriver', 'selenium', '', '9028251', 'consider taking a look at splinter which is a simpler webdriver api than selenium\n')
('splinter', 'simpler', 'selenium', '', '9028251', 'consider taking a look at splinter which is a simpler webdriver api than selenium\n')
('splinter', 'easier', 'selenium', 'easier simpler', '37666683', 'splinter makes it easier to use selenium plus\n')

random	prng	4
('prng', 'more', 'random', '', '16537763', 'but a large period prng takes up more memory for maintaining the internal state and also takes more time for generating a random number due to complex transitions and post processing\n')
('prng', 'more memory', 'random', '', '16537763', 'but a large period prng takes up more memory for maintaining the internal state and also takes more time for generating a random number due to complex transitions and post processing\n')
('random', 'behaviour more', 'prng', 'non-random behaviour reflection', '41412930', 'the non-random random behaviour is more a reflection on the quality of the rand prng √¢ it is often not very good\n')
('random', 'less', 'prng', 'non-random behaviour reflection', '7480271', 'then you use it as seed in random which is less good that one is a non-cryptographic prng and its output may exhibit some structure which will not register in a statistical measurement tool but might be exploited by an intelligent attacker\n')

fgetc	fread	4
('fgetc', 'slower', 'fread', '', '14003138', 'the fgetc loop variant was consistently 45x slower than the fread loop\n')
('fgetc', 'version simpler', 'fread', '', '30387301', 'you might have even noticed the fgetc version is simpler than the fread version\n')
('fgetc', 'simpler', 'fread', '', '30387301', 'you might have even noticed the fgetc version is simpler than the fread version\n')
('fgetc', 'much slower', 'fread', '', '32013831', 'doing things like 1000 successive fgetc is much slower than doing one single fread of 1000 bytes\n')

libav	ffmpeg	3
('libav', 'more compatible', 'ffmpeg', '', '24395383', 'ubuntu 12.04 ships with the ffmpeg fork libav in version 0.8 which is more compatible with ffmpeg 1.0+ or even later ffmpeg versions iirc\n')
('ffmpeg', 'more recent', 'libav', '', '40391836', 'not to be confused ffmpeg is more recent and libav was used in some distributions of linux\n')
('ffmpeg', 'more', 'libav', '', '40391836', 'not to be confused ffmpeg is more recent and libav was used in some distributions of linux\n')

spi	i2c	15
('i2c', 'more complex', 'spi', '', '37053641', 'communication via i2c is more complex that with uart or spi solution\n')
('i2c', 'more complex', 'spi', '', '42320267', 'i know i2c is more complex slow than spi uart etc. but it s a constrain\n')
('i2c', 'more complex slow', 'spi', '', '42320267', 'i know i2c is more complex slow than spi uart etc. but it s a constrain\n')
('spi', 'not less', 'i2c', '', '40765245', 'spi is not less limited than i2c in this case\n')
('i2c', 'way more', 'spi', '', '41093145', 'first bit banging i2c is way more complicated than bit banging spi\n')
('spi', 'not less limited', 'i2c', '', '40765245', 'spi is not less limited than i2c in this case\n')
('spi', 'better', 'i2c', '', '40757207', 'how is spi better than i2c at these temperatures\n')
('i2c', 'more', 'spi', '', '42320267', 'i know i2c is more complex slow than spi uart etc. but it s a constrain\n')
('spi', 'faster', 'i2c', 'post faster', '21848629', 'i wanted to know that what makes spi faster than i2c\n')
('i2c', 'bus slower', 'spi', 'research last control', '42818805', 'on top of that the i2c bus is slower than spi because there are control data exchanged\n')
('i2c', 'way more complicated', 'spi', '', '41093145', 'first bit banging i2c is way more complicated than bit banging spi\n')
('spi', 'less limited', 'i2c', '', '40765245', 'spi is not less limited than i2c in this case\n')
('i2c', 'more', 'spi', '', '37053641', 'communication via i2c is more complex that with uart or spi solution\n')
('spi', 'faster', 'i2c', 'research last control', '46550567', 'i have done some research about them and it seems to be that spi is faster than i2c but the last one ensures more control and error detection over the first one\n')
('spi', 'faster', 'i2c', 'post faster', '43422643', 'post explaining why spi is faster than i2c\n')

nunit	mbunit	6
('nunit', 'more', 'mbunit', '', '3678783', 'from what i have read on here i here that nunit is more popular over mbunit\n')
('nunit', 'more popular', 'mbunit', '', '3678783', 'from what i have read on here i here that nunit is more popular over mbunit\n')
('nunit', 'more', 'mbunit', '', '2089364', 'nunit is more widespread mbunit has the most features but mstest has more manpower behind it\n')
('nunit', 'more widespread', 'mbunit', '', '2089364', 'nunit is more widespread mbunit has the most features but mstest has more manpower behind it\n')
('nunit', 'more popular', 'mbunit', '', '3681067', 'nunit is more popular because it was there first therefore more articles about it on the web and better tooling and because most programmers don t care about or need the advanced features that mbunit offers\n')
('nunit', 'more', 'mbunit', '', '3681067', 'nunit is more popular because it was there first therefore more articles about it on the web and better tooling and because most programmers don t care about or need the advanced features that mbunit offers\n')

imageview	textview	20
('textview', 'higher', 'imageview', '', '20312493', 'in this case if textview is higher then imageview imageview aspect ratio should be intact with max width possible and if imageview i higher then textview again width should be maximal and parent should have height as imageview\n')
('imageview', 'higher', 'textview', 'smaller larger bigger', '29874834', 'i want to set imageview and textview on same line in linearlayout but the imageview is always higher than the textview\n')
('imageview', 'smaller', 'textview', 'smaller larger bigger', '21051095', 'however the imageview has a smaller width than the textview\n')
('textview', 'text longer', 'imageview', '', '37507337', 'when the textview text is longer than cardview length it shows against the imageview and i don t want that\n')
('textview', 'smaller', 'imageview', 'smaller larger bigger', '44346113', 'i also tried to do spacing from imageview to textview but then if the textview is smaller than the imageview the spacing will be wrong again\n')
('textview', 'higher', 'imageview', 'smaller larger bigger', '44346113', 'i tried constraints spacing each imageview with xdp it is ok if all textview are not higher than the imageview but if a textview is higher than a imageview it will overlap\n')
('imageview', 'bigger', 'textview', 'smaller larger bigger', '7799656', 'i have an imageview that is bigger than a textview and i want to center the textview on top of the imageview both vertically and horizontally\n')
('imageview', 'greater', 'textview', 'smaller larger bigger', '32205371', 'for api 18 and earlier the margin is being applied after the alignment so if the margin in the imageview is greater than 0 you will get your textview moved\n')
('imageview', 'higher', 'textview', 'lower higher', '37540133', 'i try to align my imageview and my textview but the imageview is higher than my textview\n')
('textview', 'higher then', 'imageview', '', '20312493', 'in this case if textview is higher then imageview imageview aspect ratio should be intact with max width possible and if imageview i higher then textview again width should be maximal and parent should have height as imageview\n')
('imageview', 'bigger', 'textview', '', '36741971', 'add layout_weight properties to sub views as well.assign 3 to imaveview and 1 for textview now imageview always will be bigger than textview 3times and textview can not invade imagevies s space\n')
('imageview', 'more priority', 'textview', '', '37294062', 'how could i make the imageview have more priority than textview\n')
('imageview', 'larger', 'textview', 'smaller larger bigger', '27327422', 'this should work as long as the imageview is larger than the textview in all dimensions\n')
('textview', 'length less', 'imageview', '', '17632868', 'i want to have another textview underneath these two but i am having a problem when the textview length is less than the imageview\n')
('textview', 'less', 'imageview', '', '17632868', 'i want to have another textview underneath these two but i am having a problem when the textview length is less than the imageview\n')
('imageview', 'bigger', 'textview', 'smaller larger bigger', '24720677', 'assuming the imageview is always bigger than the textview it ll drive the parent height\n')
('textview', 'lower', 'imageview', 'lower higher', '34694309', 'make textview lower than imageview\n')
('textview', 'taller', 'imageview', 'bottom taller subtitle', '44232501', 'i have a button that is bottom constrained to the bottom of the imageview however should be top constrained to the bottom of the subtitle textview if subtitletextview is taller than imageview\n')
('textview', 'smaller height', 'imageview', 'smaller larger bigger', '44346113', 'in the image the square represents a fixed size imageview the rectangle is a textview which can 1 line smaller height than imageview or multiline height is larger than imageview\n')
('imageview', 'taller', 'textview', 'bottom taller subtitle', '6869485', 'the imageview is bit taller than the textview and so what i do is add padding margins to the bottom of textview to get it align and look like the imageview and textview horizontal centers are aligned\n')

postgresql	mysql	150
('postgresql', 'more standard', 'mysql', '', '2489451', 'for example pyqt is already available for python 3 as well as 2 and you can use postgresql a splendid open-source sql database engine much more standard than mysql via py-postgresql\n')
('mysql', 'better db', 'postgresql', 'better large reputation', '26232186', 'anyways mysql is bad and on longterm especially if you are enough good for java i suggest you to use some better db with postgresql you were really satisfied i think\n')
('postgresql', 'specifically easier', 'mysql', 'easier features tendency', '36525504', 'postgresql specifically has gotten easier to manage while mysql has lost some of the simplicity that gave it an advantage without picking up enough features that really matter\n')
('postgresql', 'faster', 'mysql', 'better data unicode', '1373625', 'postgresql is faster than mysql s innodb\n')
('postgresql', 'more advanced', 'mysql', '', '22307627', 'postgresql is worth learning and much more advanced than mysql\n')
('postgresql', 'more', 'mysql', 'better large reputation', '13155314', 'the query optimizer in postgresql is more advanced than in mysql and copes with complicated statements much better especially when it comes to sub-selects\n')
('mysql', 'more', 'postgresql', 'easier features tendency', '1311750', 'mysql is more widely supported and a little easier to use but postgresql has some very cool features and functionality that s worth taking a gander at\n')
('postgresql', 'more reliable', 'mysql', '', '13155314', 'as for reliability i think that postgresql is more reliable especially when compared to mysql using myisam - innodb is a lot better here\n')
('postgresql', 'much more', 'mysql', 'better large reputation', '1338597', 'postgresql is much more complete and solid and will much better support complex queries and their optimization while mysql may shine in terms of retrieval speed for extremely simple queries\n')
('postgresql', 'better', 'mysql', 'better data unicode', '8748476', 'postgresql has better support but the support by mysql depends on the used storage engine\n')
('postgresql', 'slower', 'mysql', 'slower select tuning', '2797107', 'do you find rails with postgresql is slower than mysql knowing that it produce more query on the background\n')
('postgresql', 'more', 'mysql', 'compliant comfortable looks', '1769414', 'postgresql is more sql compliant than mysql\n')
('mysql', 'worse', 'postgresql', 'better data unicode', '2694299', 'in other words is mysql better or worse than postgresql to handle unicode etc\n')
('postgresql', 'more', 'mysql', '', '15270642', 'following the first answer it appears that postgresql is more compliant to sql standard than mysql so it needs a group by clause for each selected column you want to display with your aggregated function\n')
('mysql', 'more resistant', 'postgresql', 'stricter error sql', '2221787', 'the question is is mysql somehow more resistant than postgresql to sql injection attack under the perl dbi and why might this be the case\n')
('postgresql', 'more sane', 'mysql', '', '761581', 'since postgresql is a lot more sane than mysql there are not that many tricks to report on\n')
('postgresql', 'fewer surprises', 'mysql', 'fewer security issues', '4074875', 'i would recommend postgresql for a beginner as it has far fewer surprises than mysql\n')
('postgresql', 'fewer', 'mysql', 'better large reputation', '1374694', 'and postgresql has fewer experienced administrators than the big databases and mysql which i believe contributes to the reputation\n')
('postgresql', 'more', 'mysql', '', '953814', 'postgresql has more established support for this but mysql has played catch up in the last year or so and has a working method of this in the latest versions\n')
('mysql', 'faster', 'postgresql', 'slower select tuning', '205364', 'mysql i am told can be optimized to do faster reads than postgresql but both are pretty ridiculously fast in terms of # transactions sec they support and it doesn t sound like that s your problem\n')
('postgresql', 'better', 'mysql', 'better data unicode', '21216225', 'the other question is that what i am hearing from our group leader is that postgresql is better than mysql when working with coordinates\n')
('postgresql', 'stricter', 'mysql', 'stricter error sql', '7214433', 'but in mysql it is ok and in postgresql it is wrong and ask for the other fields besides site_id either in a group by clause or in a aggregation function i know that postgresql is stricter on sql than mysql so i must select the site_id in the query object of msg_published but in pure sqlalchemy i can do like this\n')
('postgresql', 'much more', 'mysql', '', '18931156', 'postgresql is much more similar to oracle than mysql is\n')
('postgresql', 'better', 'mysql', 'better data unicode', '2756807', 'in my cases postgresql was better than mysql mysql do not completely support unicode\n')
('postgresql', 'more advanced', 'mysql', 'easier features tendency', '8749161', 'however postgresql s sql features are far more advanced than mysql s and mysql has a tendency to silently ignore things you tell it to do - especially in a default installation and if you rely on a foreign key to be created that might be a very unpleasant surprise\n')
('postgresql', 'more compliant', 'mysql', 'compliant comfortable looks', '6751367', 'looks like postgresql is a little more compliant than mysql so try this instead\n')
('postgresql', 'better', 'mysql', 'better data unicode', '4394406', 'postgresql is better than mysql in many ways\n')
('postgresql', 'more', 'mysql', '', '24603749', 'if you are looking for location based queries in relational databases postgresql is more matured compared to mysql\n')
('postgresql', 'better', 'mysql', 'better data unicode', '16679371', 'i d also recommend postgresql over mysql if you are going to have nested comments as postgresql does hierarchical querying better than mysql\n')
('postgresql', 'faster', 'mysql', '', '3994593', 'some recent tests we did showed that postgresql does perform faster than mysql and we believe the table partitioning feature in postgresql will be very important with a table in our database we foresee to grow into 100 million rows and more in production\n')
('mysql', 'faster', 'postgresql', 'better large reputation', '953814', 'mysql s version is apparently marginally faster than postgresql but lacks some of the more advanced spatial features therefore it s pretty much limited to finding records that match a certain range of coordinates\n')
('postgresql', 'better', 'mysql', 'better data unicode', '9879578', 'i really like postgresql s indexes which are far better than mysql s\n')
('postgresql', 'older', 'mysql', '', '2277052', 'postgresql is older than mysql so it might have influenced them\n')
('mysql', 'higher pdo', 'postgresql', '', '12656101', 'drupal 7 mysql 5.0.15 or higher with pdo postgresql 8.3 or higher\n')
('mysql', 'more popular', 'postgresql', 'popular web instagram', '4394406', 'though mysql is more popular than postgresql but instagram is using postgresql maybe due to these reasons\n')
('postgresql', 'better', 'mysql', '', '4343455', 'this is a weak point that iirc postgresql can handle better but with mysql you have to work around that by reverting the changes yourself in case of rollbacks\n')
('mysql', 'larger user', 'postgresql', '', '3316770', 'while mysql has a larger user base postgresql is gaining more an more popularity ever since implementing several crucial features that were missing in earlier versions\n')
('postgresql', 'better', 'mysql', 'better data unicode', '7999353', 'postgresql is way better than mysql in nearly every respect\n')
('postgresql', 'better', 'mysql', 'better data unicode', '2447484', 'is postgresql better than mysql for such purpose\n')
('postgresql', 'slower', 'mysql', 'slower select tuning', '1162395', 'postgresql is already slower than mysql up to a certain point it is actually faster when you have a ridiculously large database\n')
('mysql', 'worse', 'postgresql', 'worse timings mariadb', '52179', 'i just checked the timings using mysql 5 and they are slightly worse than postgresql\n')
('postgresql', 'much better performance', 'mysql', 'better data unicode', '201950', 'postgresql gets much better performance and this is coming from a former mysql partisan\n')
('postgresql', 'better option', 'mysql', 'better data unicode', '8262827', 'is postgresql a better option than mysql for partitioning tables by date\n')
('postgresql', 'slower', 'mysql', 'slower select tuning', '27443', 'in most regards postgresql is slower than mysql especially when it comes to fine tuning in the end\n')
('postgresql', 'better', 'mysql', 'better large reputation', '2324076', 'given postgresql s reputation for doing things better than mysql or at least as good as i daresay that postgresql would demonstrate similar performance if properly used\n')
('postgresql', 'less time', 'mysql', '', '5598904', 'may be postgresql takes less time than mysql\n')
('postgresql', 'slower', 'mysql', 'slower select tuning', '30008388', 'i did a simple performance test and i noticed postgresql is slower than mysql\n')
('postgresql', 'slower', 'mysql', 'slower select tuning', '1841772', 'i ve found that postgresql is in my expirience is slower as mysql\n')
('postgresql', 'more', 'mysql', '', '3776914', 'does that mean perhaps rails team favor postgresql slightly more than mysql\n')
('postgresql', 'better', 'mysql', 'better large reputation', '7587624', 'if you want to use sql i strongly reccommend postgresql it seems to deal with large databases and frequent writes a lot better than mysql\n')
('postgresql', 'better handling', 'mysql', '', '442181', 'i also personally believe that postgresql has better handling of complex queries that include sub-selects and the like which most mysql users used to avoid\n')
('postgresql', 'way more', 'mysql', '', '1630987', 'explain in postgresql is way more useful than in mysql\n')
('postgresql', 'smarter', 'mysql', '', '3008890', 'ps you can also migrate to postgresql it s smarter than mysql when choosing right indexes\n')
('postgresql', 'more popular', 'mysql', 'popular web instagram', '11642511', 'it s a shame postgresql isn t more popular than mysql since it supports exactly this feature out-of-the-box you d only have to share one sequence object between tables.\n')
('postgresql', 'much better', 'mysql', 'better data unicode', '11365372', 'the only reason i was considering postgresql was that some research suggested postgresql has much better support for changing schemas along the way than mysql\n')
('postgresql', 'much better', 'mysql', 'better data unicode', '13155314', 'then postgresql is much better than mysql\n')
('postgresql', 'much faster', 'mysql', '', '9062987', 'with django it is easy to use postgresql instead of mysql so i tried it with the same query and same data in db postgresql is much faster that mysql x10 more faster while using inner join analyse shows it uses indexes unlike mysql\n')
('postgresql', 'more compliant', 'mysql', 'compliant comfortable looks', '259460', 'postgresql is more compliant but if you re comfortable with mysql and you re using an orm you should probably use that\n')
('postgresql', 'better', 'mysql', 'better data unicode', '8137020', 'and a wiki for why postgresql is better than mysql\n')
('postgresql', 'more', 'mysql', '', '586834', 'i had mentioned that in our rails application all select queries dropped below 100ms after switching to postgresql whereas some of the complex joins generated by activerecord would occasionally take as much as 15s or more with mysql 5.1 because of nested loops with inner table scans even when indices were available\n')
('postgresql', 'more compliant', 'mysql', '', '15270642', 'following the first answer it appears that postgresql is more compliant to sql standard than mysql so it needs a group by clause for each selected column you want to display with your aggregated function\n')
('postgresql', 'better', 'mysql', 'better data unicode', '47067702', 'postgresql seem to better than mysql in terms of speed\n')
('postgresql', 'more robust', 'mysql', 'robust powerful free', '3563373', 'there is also postgresql its a bit more robust than mysql and is free just the same\n')
('postgresql', 'more tricks', 'mysql', 'better large reputation', '957655', 'in general postgresql knows more tricks for how to optimize complicated queries than the mysql optimizer does but it also relies heavily on your having given the optimizer enough data to work with\n')
('postgresql', 'more', 'mysql', 'fewer security issues', '6475228', 'i d have said that postgresql is more security aware than mysql supporting roles more authentication methods ... but that the database itself has generally a very limited impact on the security of an application\n')
('mysql', 'better', 'postgresql', '', '32748006', 'in fact this presentation which still refers to an older incomplete version of mysql s opengis support suggests that with proper indexing some mysql geospatial actions may actually perform better than postgresql postgis though i m sure that s up for debate\n')
('postgresql', 'more', 'mysql', '', '1270393', 'postgresql supports some more security features than mysql for example integration with gssapi or kerberos for logins last i checked mysql didn t have these\n')
('postgresql', 'more powerful', 'mysql', 'robust powerful free', '259517', 'i cannot propose any db not knowing your specific needs but if you want to use a free software which excludes oracle and you re not already experienced with mysql you should try postgresql which is more powerful than mysql\n')
('postgresql', 'much better', 'mysql', 'better data unicode', '45528333', 'postgresql is much better suited for data warehousing compared to mysql\n')
('postgresql', 'better', 'mysql', 'better data unicode', '4394622', 'generally speaking i find postgresql lends itself to 24 7 operations better than mysql\n')
('postgresql', 'better', 'mysql', 'better data unicode', '1467079', 'if you need spatial data capabilities postgis with postgresql is better than mysql\n')
('postgresql', 'better option', 'mysql', 'better data unicode', '34851450', 'in your case postgresql may be a better option than mysql because your query is going to likely be against secondary indexes\n')
('postgresql', 'less', 'mysql', 'popular web instagram', '14197739', 'while postgresql is less popular than mysql most of the serious web hosting supports it\n')
('postgresql', 'cleaner', 'mysql', 'easier features tendency', '3485121', 'however people often argue that postgresql is cleaner and easier to use that mysql\n')
('postgresql', 'performance probably better', 'mysql', '', '846356', 'as i said postgresql is far superior and i hate mucking with mysql s bizarre bugs and i think that overall postgresql performance is probably better than mysql for any even slightly complicated query\n')
('postgresql', 'slower', 'mysql', 'slower select tuning', '36927941', 'unfortunately in postgresql select count is often slower than mysql to which it often get s compared to\n')
('mysql', 'much better', 'postgresql', 'better data unicode', '14322003', 'some say mysql is much better for bigger projects while others think just go with postgresql\n')
('mysql', 'more forgiving', 'postgresql', '', '45400424', 'it seems mysql is more forgiving with this than postgresql but in every case you use a reserved word you should escape it\n')
('postgresql', 'much more mature', 'mysql', 'robust powerful free', '4394406', 'i feel postgresql is much more mature and robust than mysql\n')
('postgresql', 'more established', 'mysql', '', '953814', 'postgresql has more established support for this but mysql has played catch up in the last year or so and has a working method of this in the latest versions\n')
('postgresql', 'more flexible indexing', 'mysql', 'table ancedotal servers', '12495775', 'not only does postgresql have a far more flexible indexing than mysql but the table approaches are very different also meaning the appropriate indexing strategies are as different as the tactics are\n')
('postgresql', 'more robust', 'mysql', 'robust powerful free', '4135236', 'i hear postgresql is more robust and doesn t crash like mysql does in these situations\n')
('postgresql', 'much smarter', 'mysql', '', '10337106', 'if you want open source postgresql is much smarter than mysql as well\n')
('postgresql', 'faster', 'mysql', '', '22418916', 'i wonder why postgresql s single insert statement is completely faster than mysql s when autocommit is turned on\n')
('postgresql', 'way more useful', 'mysql', '', '1630987', 'explain in postgresql is way more useful than in mysql\n')
('postgresql', 'more mature', 'mysql', '', '15937377', 'i know postgresql could be considered more mature than mysql with regards to locking thanks to mvcc - can i use row-locking or some other feature in postgresql instead of the token field\n')
('postgresql', 'faster', 'mysql', 'better large reputation', '30113392', 'according to my own experience postgresql run much faster than mysql especially handling big tables 1.4 gb lineitem table in my case\n')
('postgresql', 'better choice', 'mysql', 'better data unicode', '33402831', 'i was told that postgresql is a better choice than mysql for displaying hierarchical data so i installed postgresql and i m ready to go\n')
('postgresql', 'more logical', 'mysql', 'easier features tendency', '3553940', 'you might look at postgresql as i find it a bit easier to manage and maintain as i feel some aspects are more logical than mysql\n')
('mysql', 'implementation less', 'postgresql', 'stricter error sql', '8373087', 'i totally understand the error and assume that the mysql implementation is less sql conform than the postgresql implementation\n')
('mysql', 'safer bet', 'postgresql', '', '18648399', 'if i were able to upgrade the server s versioning of mysql to 5.5 would innodb be a safer bet than postgresql\n')
('postgresql', 'more', 'mysql', '', '13155314', 'as for reliability i think that postgresql is more reliable especially when compared to mysql using myisam - innodb is a lot better here\n')
('postgresql', 'better', 'mysql', 'better data unicode', '1373566', 'some people were saying that postgresql is better for security purposes whereas mysql is becoming more feature rich.\n')
('postgresql', 'better', 'mysql', 'better data unicode', '14759864', 'i just recently switched databases to postgresql which has given me a slew of problems although i must admit i like it a lot better than mysql\n')
('postgresql', 'more mature', 'mysql', 'robust powerful free', '2452926', 'postgresql will always be a little bit more mature than mysql\n')
('mysql', 'slower', 'postgresql', 'slower select tuning', '34148481', 'in my personal openion mysql is slower than postgresql and mongo db\n')
('postgresql', 'better', 'mysql', 'better data unicode', '74931', 'with correct locking for safety reasons and heavy concurrent use postgresql performed better than mysql\n')
('postgresql', 'slower', 'mysql', 'better large reputation', '30010645', 'for these ultra simple queries postgresql can be slower than mysql - postgresql has richer planner that works better on more complex queries but on trivial queries is slower\n')
('postgresql', 'easier', 'mysql', 'better data unicode', '3162419', 'postgresql supports recursive queries in the form of recursive common table expressions which make querying heirarchical data easier than in mysql and also give better performance\n')
('postgresql', 'much more similar', 'mysql', '', '18931156', 'postgresql is much more similar to oracle than mysql is\n')
('mysql', 'more', 'postgresql', '', '10320676', 'poor performance from mysql has more to do with it not being smart and automatically creating an optimized plan like sql server postgresql or oracle would\n')
('mysql', 'more permissive', 'postgresql', 'stricter error sql', '10775695', 'mysql is more permissive and allows the non-standard use of distinct but postgresql throws an error\n')
('postgresql', 'better', 'mysql', '', '10079942', 'postgresql with the optional hstore module might be better than mysql at this.\n')
('postgresql', 'better', 'mysql', '', '1144979', 'fyi postgresql scales better than mysql on multi-processor overlapping requests from a review i was reading a few months back sorry no link\n')
('postgresql', 'more security', 'mysql', '', '1270393', 'postgresql supports some more security features than mysql for example integration with gssapi or kerberos for logins last i checked mysql didn t have these\n')
('postgresql', 'better', 'mysql', 'better data unicode', '1016512', 'honestly though postgresql scales much better than mysql\n')
('mysql', 'faster', 'postgresql', 'slower select tuning', '30008388', 'mysql run 4x faster than postgresql\n')
('postgresql', 'more restrictive', 'mysql', 'robust powerful free', '1717152', 'postgresql is a bit more restrictive than mysql\n')
('postgresql', 'more capable', 'mysql', '', '32821716', 'why postgresql is more capable than others mysql etc. on django\n')
('mysql', 'larger', 'postgresql', '', '3316770', 'while mysql has a larger user base postgresql is gaining more an more popularity ever since implementing several crucial features that were missing in earlier versions\n')
('postgresql', 'pickier', 'mysql', 'slower select tuning', '9759899', 'postgresql is picky pickier than mysql -- all fields in the select list when using distinct must be present in the order_by and group_by clauses\n')
('mysql', 'more', 'postgresql', '', '45400424', 'it seems mysql is more forgiving with this than postgresql but in every case you use a reserved word you should escape it\n')
('postgresql', 'better capabilities', 'mysql', 'better data unicode', '26188200', 'i found that postgresql 9.3 has better capabilities for json than the mysql versions i am using\n')
('postgresql', 'less troublesome', 'mysql', 'table ancedotal servers', '4394396', 'this is ancedotal but the postgresql servers i ve managed have always been much less troublesome than mysql which likes to randomly crash once in a while occasionally corrupting a table on the way down\n')
('postgresql', 'stricter', 'mysql', 'stricter error sql', '22927557', 'postgresql is stricter about conversions than mysql is and generally will throw an error rather than try to convert a string to an integer if it doesn t look like one\n')
('postgresql', 'better', 'mysql', 'better data unicode', '8749161', 'there are workloads where postgresql is better and there are workloads where mysql is better\n')
('mysql', 'mariadb slightly worse', 'postgresql', 'worse timings mariadb', '40083672', 'mysql mariadb is slightly worse than postgresql\n')
('mysql', 'probably more', 'postgresql', 'robust powerful free', '13557296', 'mysql is probably more often offered by shared hosting providers postgresql is probably a little more powerful\n')
('postgresql', 'stricter', 'mysql', 'stricter error sql', '4078839', 'postgresql is stricter to the sql standard than mysql is\n')
('postgresql', 'much more acid', 'mysql', '', '7238724', 'all that said postgresql is much more acid compliant than mysql it handles fks just as you re needing and i would generally recommend it based on what you ve expressed in your post\n')
('postgresql', 'far more powerful', 'mysql', 'robust powerful free', '8052193', 'postgresql is far more powerful and scalable and doesn t have mysql s silly limitations and gotchas\n')
('postgresql', 'fulltext 10-100x faster', 'mysql', 'better large reputation', '5926886', 'i did some benchmarking 3 years ago may be stale... which showed that on large datasets basically postgresql fulltext is 10-100x faster than mysql and xapian 10-100x faster than postgresql but not integrated\n')
('postgresql', 'more proven', 'mysql', 'better data unicode', '32023224', 'either postgresql more proven than mysql for such huge data\n')
('mysql', 'easier', 'postgresql', 'better data unicode', '2193943', 'mysql is easier than postgresql but it doesn t really matter either way\n')
('postgresql', 'better', 'mysql', 'better data unicode', '7997125', 'i would need a scalable database so probably postgresql would be better than mysql\n')
('mysql', 'better', 'postgresql', 'better data unicode', '21073787', 'an efficiently configured mysql is better than a badly configured postgresql and vice-versa\n')
('postgresql', 'less', 'mysql', '', '5598904', 'may be postgresql takes less time than mysql\n')
('postgresql', 'better imo', 'mysql', 'better data unicode', '4916041', 'postgresql is also a lot better imo than mysql and is the recommended database to use with django according to a lot of the people close to django\n')
('postgresql', 'fewer security', 'mysql', 'fewer security issues', '1270393', 'traditionally postgresql has had fewer security issues than mysql but they are both doing very well on that\n')
('mysql', 'more famous', 'postgresql', 'better data unicode', '46270070', 'while mysql is more famous for serious enterprise-quality database where preserving your data is critical i recommend postgresql\n')
('postgresql', 'more simple', 'mysql', '', '1546912', 'postgresql license bsd is undoubtedly more simple than mysql s\n')
('postgresql', 'more capable', 'mysql', 'easier features tendency', '12873077', 'i suggest postgresql it s more capable has more features and better support for complex queries and datatypes than mysql and has a lot of tuning options\n')
('postgresql', 'more', 'mysql', 'better data unicode', '8928034', 'i am using postgresql btw which can do more than mysql incase that changes things\n')
('postgresql', 'generally better', 'mysql', 'better data unicode', '1795117', 'now i m not sure if i d say postgresql is generally better than mysql -- there are certainly things that mysql does much better and so it certainly has its uses -- but these are a few things i absolutely love about it\n')
('postgresql', 'more', 'mysql', 'slower select tuning', '1162378', 'postgresql requires more tuning than mysql to achieve optimal performance\n')
('postgresql', 'better', 'mysql', '', '442181', 'i also personally believe that postgresql has better handling of complex queries that include sub-selects and the like which most mysql users used to avoid\n')
('mysql', 'not less', 'postgresql', '', '1922486', 'mysql is not less complicated that postgresql -- they re the same thing\n')
('mysql', 'higher pdo', 'postgresql', '', '12546596', 'drupal 7 mysql 5.0.15 or higher with pdo postgresql 8.3 or higher\n')
('postgresql', 'more correct', 'mysql', 'stricter error sql', '27439', 'from how i understand it postgresql is a more correct database implementation while mysql is less correct less compliant but faster\n')
('postgresql', 'harder', 'mysql', 'better data unicode', '25197871', 'does this affect postgresql harder than mysql\n')
('mysql', 'more', 'postgresql', '', '1140923', 'mysql is more than capable of serving your needs as well as alex s suggestion of postgresql\n')
('postgresql', 'bigger', 'mysql', '', '1926885', 'b use indexes - postgresql has bigger repertoar of indexes then mysql so use it - there are gist gin indexes\n')
('postgresql', 'bigger repertoar', 'mysql', '', '1926885', 'b use indexes - postgresql has bigger repertoar of indexes then mysql so use it - there are gist gin indexes\n')
('postgresql', 'more', 'mysql', '', '32821716', 'why postgresql is more capable than others mysql etc. on django\n')
('postgresql', 'better', 'mysql', 'better data unicode', '21215884', 'what i am hearing from our group leader is that postgresql is better than mysql when working with coordinates\n')
('postgresql', 'more strict', 'mysql', '', '2685687', 'postgresql is a little more strict than mysql about type conversion and does not let you implicitly cast convert between numbers and strings\n')
('postgresql', 'more complex', 'mysql', '', '47470338', 'triggers in postgresql have a syntax a bit more complex than mysql because they execute procedures as the action\n')
('postgresql', 'stricter', 'mysql', 'stricter error sql', '3512286', 'i am aware that postgresql interpretation of the sql standard is stricter than mysql and that consequently this type of query won t work...and have read a number of posts on stackoverflow and elsewhere on the subject - but none of them seem to be the definitive answer on this subject\n')
('postgresql', 'better', 'mysql', 'better data unicode', '2000205', 'also you might take the time to compare postgresql and see if there is something about it that meets your needs as well or better than mysql\n')
('postgresql', 'much more', 'mysql', '', '7238724', 'all that said postgresql is much more acid compliant than mysql it handles fks just as you re needing and i would generally recommend it based on what you ve expressed in your post\n')

button	checkbox	26
('checkbox', 'better radio', 'button', 'radio better uncheck', '42163991', 'using checkbox to check uncheck is better than radio button\n')
('checkbox', 'more useful', 'button', '', '20774279', 'i saw he used checkbox which to seems much more useful than button since you can take multiple objects out at a time\n')
('checkbox', 'values greater', 'button', '', '37568827', 'i have created a php form with multiple checkbox and there is a script that controls if the sum sum of all checkbox values is greater than a specific number.if yes a sweetalert box appears.the problem is that when i click the ok button on the sweetalert i want to remove the last checked attribute and to remove that value from the sum to execute the script again and display the right results.i cannot figure this out..any ideas will be helpful\n')
('button', 'more', 'checkbox', 'page status error', '31329662', 'i have an asp page where the status of a list is approved by selecting checkbox and then pressing approve button however when i select more than one checkbox it throws the error index was out of range\n')
('button', 'more', 'checkbox', 'able next disable', '45560870', 'as image shows below i want to make next button enabled only if more than one checkbox get checked\n')
('button', 'disabled.after', 'checkbox', 'able next disable', '42948202', 'initially the value of button is disable because value of button is true so the button is disabled.after selecting the checkbox now the button should be able to click\n')
('checkbox', 'better fit', 'button', '', '38365898', 'checkbox may be a better fit than button here\n')
('button', 'bigger', 'checkbox', '', '44543142', 'in both cases plus minus same except in case where is the small checkbox the button is bigger on width maybe it is related with space for checkbox\n')
('checkbox', 'more column', 'button', 'able next disable', '23243749', 'currently i am able to generate checkbox in column what i need is one more column with button same as checkbox in each row\n')
('button', 'better idea', 'checkbox', 'radio better uncheck', '21157659', 'if it s only one colour you want selecting you can use a radio button instead which would be a better idea than a checkbox\n')
('button', 'more', 'checkbox', 'able next disable', '3591491', 'i can verify that by unchecking the checkbox it does flip the value because i enable disable the next button depending on the myproperty value - i have more than one checkbox btw\n')
('checkbox', 'more', 'button', '', '15964168', 'when i reload my html pages its button select and checkbox are goes added more and more.because all the html data fetch from a data base and after added new things in the page i store all the html of the page in data base and when i display this page agiain becuase of jquery mobile its button select and checkbox are increased check here visit jsfiddle.net sharma9853 gbe6p 7\n')
('checkbox', 'more sense', 'button', '', '26847897', 'obviously for something like show hide functionality a checkbox makes more sense than a button\n')
('checkbox', 'more', 'button', '', '43656806', 'but works fine if more than 6 checkbox are selected then reduced to 6 with more than one button click\n')
('button', 'more', 'checkbox', '', '27614816', 'checkall and uncheckall on single button is worked if there is more than one checkbox present.but it will not worked for single checkbox\n')
('button', 'more', 'checkbox', '', '38006288', 'i have a form with multiple checkbox and a button by default the button will be disable but after checking at least 2 or more than 2 checkbox the button should become active\n')
('checkbox', 'more', 'button', '', '26847897', 'obviously for something like show hide functionality a checkbox makes more sense than a button\n')
('button', 'larger', 'checkbox', '', '43553253', 'what i d like to do is make the button images slightly larger than the checkbox and have the text checkbox and both button on the same line\n')
('button', 'more', 'checkbox', '', '42227507', 'i have group of checkbox each of this checkbox associated to a li tag which contain a query result i have also button so i want when i check more than one checkbox and after that click on button i want to display text of li tag for each selected checkobox\n')
('button', 'more', 'checkbox', 'radio better uncheck', '11662905', 'unlike radio button the user can select more than one checkbox at once or select none of them at all\n')
('button', 'more suitable rather', 'checkbox', 'radio better uncheck', '15388986', 'if you want the users to select only one option perhaps a dropdown or radio button list is more suitable rather than checkbox\n')
('button', 'better', 'checkbox', 'custom hidden field', '30116307', 'you ll want to have multiple radio button each with it s own value to set some property to although this is weird for a yes no you are better off with a checkbox but if you had multiple values this is how radio button work\n')
('button', 'more', 'checkbox', 'radio better uncheck', '40849763', 'one more thing i also want select only one radio button when i have selected more than 2 checkbox\n')
('button', 'more', 'checkbox', 'page status error', '4808581', 'how to restrict user to select not more than 10 asp.net checkbox on button click event if user select more than 10 checkbox then alert box will pop up that you can not select more than 10 checkbox\n')
('button', 'better', 'checkbox', 'radio better uncheck', '14786816', 'actually i found out why using two radio button with same names and different values true and false is better than checkbox\n')
('checkbox', 'better choice', 'button', 'custom hidden field', '42560476', 'so i think a custom checkbox is the better choice here but if you really want to use a button i would use a hidden checkbox field and apply onclick functions to the button to change the value of a hidden checkbox field\n')

war	jar	8
('war', 'more', 'jar', '', '7628932', 'i recently got this error with tomcat 7.0.21 on windows 7 when a war contained jars which had duplicate class definitions a class was defined in more than 1 jar within the war s web-inf lib directory\n')
('jar', 'file not longer', 'war', '', '43719081', 'i tried to do it in server s pom.xml file and i set the impl module to provided scope so the jar file is not longer contained in war but now the tests are failing as after unpacking the war file used for running the tests does not contain the impl jar file which is required for that\n')
('war', 'more packaging', 'jar', '', '10373580', 'i set up a maven multi module project one with packaging war two more with packaging jar\n')
('jar', 'really thinner', 'war', '', '41872831', 'if your client jar is really thinner for example only the interfaces having the war s reference the client jar effectively disallows them to access to ejb implementations which is always a good idea\n')
('jar', 'better embedded', 'war', '', '37590402', 'is embedded jar better than embedded war file\n')
('war', 'easier', 'jar', '', '39713145', 'so in my practice using war app easier than jar to manage and re-configure\n')
('war', 'more common', 'jar', '', '28736014', '5 a war file can be runnable executable though this is more common with jar files\n')
('jar', 'more', 'war', '', '36870332', 'keeping your business logic in ejb jar will pay off when you ll need more than one war in your ear different security realms etc.\n')

multiplying	modulo	3
('multiplying', 'less expensive', 'modulo', '', '17397158', 'also integer multiplying is less expensive so you may just do the divide first and calculate the modulo 10\n')
('multiplying', 'less', 'modulo', '', '17397158', 'also integer multiplying is less expensive so you may just do the divide first and calculate the modulo 10\n')
('multiplying', 'greater', 'modulo', '', '46939903', 'more generally you can always just try multiplying the base by itself a number of times no greater than the modulo and you are bound to find a cycle\n')

webkit	gecko	10
('webkit', 'probably better', 'gecko', '', '6186726', 'so the easiest way is to use one either webkit or gecko webkit has probably better support for svg these days plus i can t find package of gecko right now\n')
('gecko', 'slower', 'webkit', '', '4107879', 'anyway i just prefer not to use it because gecko is slower then webkit\n')
('webkit', 'stricter', 'gecko', '', '1078466', 'webkit is stricter than gecko\n')
('webkit', 'less', 'gecko', '', '20306381', 'it s called web audio api and is currently a draft but is well supported by webkit you ll need to use prefixes and a little less by gecko\n')
('webkit', 'better', 'gecko', '', '18404543', 'somehow webkit seems to do better than gecko on the html5 single-page spec scripts and i can t figure out why at this point\n')
('gecko', 'slower then', 'webkit', '', '4107879', 'anyway i just prefer not to use it because gecko is slower then webkit\n')
('webkit', 'quicker', 'gecko', '', '14398961', 'i m developing with canvas too and have found that webkit based browsers in general handle canvas operations quicker than gecko in most cases\n')
('gecko', 'more', 'webkit', '', '11043798', 'gecko seems to like anti-aliasing more than webkit\n')
('webkit', 'smaller', 'gecko', '', '184381', 'my understanding is webkit is pretty good smaller than gecko\n')
('gecko', 'less memory', 'webkit', '', '16970359', 'gecko is often considered to consume less memory than webkit but this depends a lot on how the browser is implemented\n')

spdy	ssl	4
('spdy', 'connection worse', 'ssl', '', '11399413', 'if we assume that you live in a poor coverage area and your phone and your tower are constantly dropping the signal then re-establishing a spdy connection is no worse off than re-establishing a tcp connection modulo ssl handshake\n')
('spdy', 'more common', 'ssl', '', '9803224', 'plus once spdy becomes more common ssl slow down won t really account for anything much\n')
('ssl', 'handshake more', 'spdy', '', '14248891', 'i m using keep-alive so i think the ssl handshake is more or less totally out but i hope to move to spdy soon so i don t really know how that helps after the initial handshake\n')
('spdy', 'more', 'ssl', '', '9803224', 'plus once spdy becomes more common ssl slow down won t really account for anything much\n')

auto	decltype	3
('decltype', 'significantly more', 'auto', '', '21369252', 'decltype is significantly more versatile that auto and can always be used in place of it\n')
('decltype', 'significantly more versatile', 'auto', '', '21369252', 'decltype is significantly more versatile that auto and can always be used in place of it\n')
('auto', 'more concise', 'decltype', '', '12084124', 'in the cases where auto can be used it is more concise than decltype as you don t need to provide the expression from which the type will be inferred\n')

laravel	yii	5
('laravel', 'much more', 'yii', '', '44506698', 'according to my experience yii is easy to use but it has some pros and cons too every framework has but i used laravel on some projects and i think laravel is much more better than yii\n')
('laravel', 'larger community', 'yii', '', '38303403', 'developers community it might seem that laravel has a larger community of developers but during my career with yii i ve found no bottleneck of having a question without an answer\n')
('laravel', 'much more better', 'yii', '', '44506698', 'according to my experience yii is easy to use but it has some pros and cons too every framework has but i used laravel on some projects and i think laravel is much more better than yii\n')
('laravel', 'larger', 'yii', '', '38303403', 'developers community it might seem that laravel has a larger community of developers but during my career with yii i ve found no bottleneck of having a question without an answer\n')
('laravel', 'better', 'yii', '', '44506698', 'according to my experience yii is easy to use but it has some pros and cons too every framework has but i used laravel on some projects and i think laravel is much more better than yii\n')

jxtable	jtable	3
('jxtable', 'more', 'jtable', '', '3231289', 'use swing-x components there is a jxtable which is more powerful than jtable\n')
('jxtable', 'more powerful', 'jtable', '', '3231289', 'use swing-x components there is a jxtable which is more powerful than jtable\n')
('jxtable', 'better', 'jtable', '', '5796139', 'also is jxtable better than jtable for such an application\n')

coalesce	isnull	38
('isnull', 'better', 'coalesce', '', '18274020', 'on the subject of performance on sql server isnull often performs better than coalesce but the latter is ansi compliant if that is important to you\n')
('coalesce', 'better', 'isnull', 'faster lesser implementation', '31327603', 'you will find that coalesce works better than isnull here\n')
('coalesce', 'better', 'isnull', 'faster lesser implementation', '39027665', 'an example of why coalesce is better than isnull\n')
('isnull', 'better', 'coalesce', 'faster lesser implementation', '40413888', 'isnull performs better than the generic coalesce and better than having another and\n')
('coalesce', 'more levels', 'isnull', '', '15523066', 'in this case i would use coalesce which provides more levels than isnull rather than the case stement\n')
('isnull', 'better option', 'coalesce', 'faster lesser implementation', '44962212', 'edit based on the tests done by multiple people and by theory isnull seems to be a better option over coalesce\n')
('coalesce', 'more cross-compatible', 'isnull', '', '1037788', 'coalesce is more cross-compatible than isnull or nvl it works on mssql oracle mysql derby et al.\n')
('isnull', 'comparatively faster', 'coalesce', 'faster lesser implementation', '18085646', 'you can use isnull also in place of coalesce as isnull is comparatively faster than coalesce\n')
('coalesce', 'better', 'isnull', '', '38028245', 'using coalesce is better option than isnull or case..when for this problem since the input values for the coalesce expression can be evaluated multiple times\n')
('isnull', 'faster', 'coalesce', 'faster lesser implementation', '18828904', 'isnull is faster than coalesce\n')
('coalesce', 'more', 'isnull', '', '15523066', 'in this case i would use coalesce which provides more levels than isnull rather than the case stement\n')
('coalesce', 'more', 'isnull', '', '7305245', 'coalesce is the more standard alternative of isnull\n')
('isnull', 'quicker', 'coalesce', 'null value quicker', '2287642', 'i understand the difference between these functions but my question is when checking for a single null value would isnull be any quicker than using coalesce\n')
('isnull', 'better', 'coalesce', 'faster lesser implementation', '29170770', 'in most cases it has reviled indexes that needed to be add and in most cases the indexes improved the queries the most but after thet have been added the isnull and dynamic still perform better than the coalesce\n')
('coalesce', 'better', 'isnull', '', '5024166', 'sql server is probably smart enough to translate isnull into the equivalent sarg expression but if you are bent on using a function then coalesce is a better choice because it is part of the sql standard allows for multiple values instead of just two with isnull and avoids using quite possibly the most confusing function name microsoft ever devised in isnull\n')
('coalesce', 'more values', 'isnull', 'null value quicker', '41830025', 'i tend to use coalesce only when i need to get the first non-null value from a set of 3 or more values as isnull only supports two parameters\n')
('coalesce', 'more', 'isnull', '', '16697158', 'you can also use coalesce which is the more general form of isnull and is actually part of the sql standard\n')
('coalesce', 'more portable code', 'isnull', 'null value quicker', '30082807', 'coalesce will go through the listed values and choose the first one that isn t null it s more portable code than isnull or ivnl etc\n')
('coalesce', 'more', 'isnull', '', '1037788', 'coalesce is more cross-compatible than isnull or nvl it works on mssql oracle mysql derby et al.\n')
('isnull', 'often better', 'coalesce', '', '18274020', 'on the subject of performance on sql server isnull often performs better than coalesce but the latter is ansi compliant if that is important to you\n')
('isnull', 'better then', 'coalesce', 'faster lesser implementation', '6186100', 'isnull is better then coalesce because of how datatypes are handled\n')
('coalesce', 'better choice', 'isnull', '', '5024166', 'sql server is probably smart enough to translate isnull into the equivalent sarg expression but if you are bent on using a function then coalesce is a better choice because it is part of the sql standard allows for multiple values instead of just two with isnull and avoids using quite possibly the most confusing function name microsoft ever devised in isnull\n')
('coalesce', 'better', 'isnull', 'faster lesser implementation', '35307117', 'but depending on the answers to those questions i m guessing that coalesce might do the trick for you better than isnull\n')
('coalesce', 'less', 'isnull', '', '13366686', 'i ve been told that coalesce is less costly than isnull but research doesn t indicate that\n')
('coalesce', 'more standard', 'isnull', '', '7305245', 'coalesce is the more standard alternative of isnull\n')
('isnull', 'faster', 'coalesce', 'faster lesser implementation', '25415130', 'this is pretty much the ifloop answer but isnull is slightly faster than coalesce\n')
('coalesce', 'more correct', 'isnull', '', '10668170', 'coalesce is more correct of course you could just embed isnull over and over and over... but put that under a performance microscope and coalesce may just win\n')
('isnull', 'faster', 'coalesce', 'faster lesser implementation', '6152611', 'isnull is marginally faster than coalesce\n')
('coalesce', 'less costly', 'isnull', '', '13366686', 'i ve been told that coalesce is less costly than isnull but research doesn t indicate that\n')
('isnull', 'faster', 'coalesce', 'faster lesser implementation', '2287656', 'isnull will be faster i think because it has lesser function code implementation for itself making it faster than coalesce\n')
('coalesce', 'better', 'isnull', 'faster lesser implementation', '46306155', 'is the performance of coalesce field constant better than isnull\n')
('isnull', 'faster', 'coalesce', 'faster lesser implementation', '18828697', 'isnull can only have one input however it s been shown to be slightly faster than coalesce\n')
('isnull', 'more efficient', 'coalesce', '', '2287673', 'to prefer isnull over coalesce when given the choice is that isnull tends to produce query plans that are more efficient than coalesce\n')
('isnull', 'faster', 'coalesce', 'faster lesser implementation', '13174599', 'in some circumstances isnull is faster than case or coalesce\n')
('coalesce', 'better option', 'isnull', '', '38028245', 'using coalesce is better option than isnull or case..when for this problem since the input values for the coalesce expression can be evaluated multiple times\n')
('coalesce', 'more general', 'isnull', '', '16697158', 'you can also use coalesce which is the more general form of isnull and is actually part of the sql standard\n')
('coalesce', 'more portable', 'isnull', '', '5537484', '- coalesce should be more portable than isnull\n')
('coalesce', 'more', 'isnull', '', '10668170', 'coalesce is more correct of course you could just embed isnull over and over and over... but put that under a performance microscope and coalesce may just win\n')

show	hide	16
('show', 'more details', 'hide', '', '12538109', 'ironically enough its object model show more details than it hide - good for learning but bad for abstraction\n')
('show', 'longer', 'hide', '', '2374164', 'it displays things normally on the screen of course but when you go to print preview in ie7 the only thing that show is longer description. so in other words it hide that first column and it also hide the second column\n')
('show', 'more', 'hide', '', '30593267', 'can anyone help me to hide it onload and show when is more than delta and hide on scroll up when is before delta\n')
('hide', 'higher', 'show', 'status level functionality', '34135102', 'to hide action bar invoke hide method using getsupportactionbar getactionbar in case of minsdkversion is 11 or higher as show below\n')
('hide', 'more appropriate', 'show', '', '28083229', 'term hide is more appropriate for run-time dynamic show hide\n')
('hide', 'more', 'show', '', '46596817', 'show less will be hide and load more button will be show .thanks\n')
('show', 'better', 'hide', '', '26862127', 'also as mentioned elsewhere show is a better option to css visibility as hide sets display none and not visibility\n')
('hide', 'less', 'show', '', '21408336', 'it doesn t show at all if hide is called less than 0.5s after show and it show for at least 0.5s this prevents very fast flickering stuff that you might see with naive implementations\n')
('hide', 'more button', 'show', '', '46596817', 'show less will be hide and load more button will be show .thanks\n')
('hide', 'faster', 'show', '', '15525831', 'i suppose it is because you hide them faster than you show them so for a slight second the overal page height is shorter than it should\n')
('show', 'better option', 'hide', '', '26862127', 'also as mentioned elsewhere show is a better option to css visibility as hide sets display none and not visibility\n')
('show', 'higher', 'hide', 'status level functionality', '28936603', 'you can hide show the status bar on android 4.1 api level 16 and higher by using hide show functionality\n')
('hide', 'more', 'show', '', '31707816', 'if you re simply looking to hide the value from your cross table you shouldn t need anything more than the show hide items menu\n')
('show', 'longer description.', 'hide', '', '2374164', 'it displays things normally on the screen of course but when you go to print preview in ie7 the only thing that show is longer description. so in other words it hide that first column and it also hide the second column\n')
('hide', 'more', 'show', '', '28083229', 'term hide is more appropriate for run-time dynamic show hide\n')
('hide', 'more columns', 'show', '', '39886197', 'the issue is that if i scroll to the right and click on say column index 20 really any index that hide indices on the left it will freeze all columns below that index which causes the table to snap back to index 0 and not allowing me to scroll because more columns than show are frozen\n')

dir	folder	4
('dir', 'more', 'folder', '', '38641779', 'it iterates through the most recent folder returned by the dir command each returned on one line and after it encounters the 4th it stops if there are more than 4 folder\n')
('dir', 'less', 'folder', '', '4225772', 'calculates the size of the first 5 folder in your home dir should work on all platforms fails with an arrayindexoutofboundexception if there are less than five folder in your home dir\n')
('folder', 'slower', 'dir', '', '6112701', 'things like cmd c dir don t know why - and yes i do cmd c dir in cases i am in some kind of shared network folder with thousands of files and ls is significantly slower than dir\n')
('dir', 'more', 'folder', '', '12606175', 'any ideas how to use the command dir to more than 1 folder in one command\n')

treemap	linkedhashmap	4
('linkedhashmap', 'faster', 'treemap', '', '21198223', 'linkedhashmap is faster for insertion because it won√¢ t have to unnecessarily compare values while inserting like treemap as stated by ejp\n')
('treemap', 'more', 'linkedhashmap', '', '9061732', 'a treemap costs a lot more than a linkedhashmap and adds nothing to your project if you only need to keep original insertion order\n')
('linkedhashmap', 'faster', 'treemap', '', '22710394', 'however a linkedhashmap is faster as seen here treemap has o log n performance for containskey get put and remove according to the javadocs while linkedhashmap is o 1 for each.\n')
('treemap', 'slower', 'linkedhashmap', '', '27675156', 'it sounds like you need a treemap which has iteration which is not much slower than linkedhashmap and does what you really want\n')

submit	submission	5
('submit', 'more', 'submission', '', '41151330', 'i suspect this will submit the right form data but may not be acceptable if your button is calling js and is doing more than submission form data\n')
('submit', 'better', 'submission', '', '25568874', 'you should treat submit as what happens after you ve done any pre-processing so binding to click events then conditionally raising the submit is better than always submission but conditionally stopping the submit\n')
('submit', 'loader image', 'submission', '', '39402164', 'i am wondering if i can submit the paramaters to via ajax show a loader image after submission it but once the file is complete return the file for download\n')
('submit', 'better always', 'submission', '', '25568874', 'you should treat submit as what happens after you ve done any pre-processing so binding to click events then conditionally raising the submit is better than always submission but conditionally stopping the submit\n')
('submit', 'more', 'submission', '', '15577279', 'so i have a form that submit to a database and i want to prevent more than one submission if the user clicks the submit button more than once...with a little research this seems easily enough done however none of the solutions i found worked for me as i am using the jquery validationengine plugin to validate the form client side\n')

alarmmanager	timertask	4
('alarmmanager', 'much better', 'timertask', '', '17273214', 'hence the alarmmanager which runs much better than a java timertask thingy\n')
('alarmmanager', 'lesser battery', 'timertask', '', '12974736', 'alarmmanager consumes lesser battery power than timertask or thread\n')
('alarmmanager', 'more efficient', 'timertask', '', '17065295', 'alarmmanager should also be more efficient than timertask\n')
('alarmmanager', 'lesser', 'timertask', '', '12974736', 'alarmmanager consumes lesser battery power than timertask or thread\n')

uiviewcontroller	uinavigationcontroller	4
('uiviewcontroller', 'smaller', 'uinavigationcontroller', '', '7813178', 'the framespace for the uiviewcontroller becomes smaller because uinavigationcontroller manipulates the view by adding a uinavigationbar which is 44.0f in size\n')
('uinavigationcontroller', 'more', 'uiviewcontroller', '', '9389913', 'the app uses a uinavigationcontroller that never has more than 1 uiviewcontroller on it s stack\n')
('uinavigationcontroller', 'more', 'uiviewcontroller', '', '16219524', 'the uinavigationcontroller is more of a behind-the-scenes organizer for holding and displaying other uiviewcontroller s\n')
('uinavigationcontroller', 'better rotations', 'uiviewcontroller', '', '13298254', 'the uinavigationcontroller class seems to handle better rotations than uiviewcontroller\n')

nginx	lighttpd	6
('nginx', 'faster', 'lighttpd', '', '3475275', 'nginx seems to be the webserver getting the majority of the buzz lately it may be able to serve faster than lighttpd maybe not\n')
('nginx', 'faster', 'lighttpd', '', '3436202', 'shortly put running some benchmarks on a page doing some database operations and serving static dynamic content has shown that plain cherrypy was twice as fast than nginx and memcached and about half faster than lighttpd\n')
('nginx', 'even more', 'lighttpd', '', '803700', 'it s simple and nginx is even more ridiculously fast and lightweight than lighttpd\n')
('nginx', 'better', 'lighttpd', '', '2711216', 'according to this benchmark nginx is a little bit better than lighttpd for serving bigger static contents so nginx would be a good choice for static flv video contents\n')
('nginx', 'even more ridiculously', 'lighttpd', '', '803700', 'it s simple and nginx is even more ridiculously fast and lightweight than lighttpd\n')
('nginx', 'easier', 'lighttpd', '', '3726590', 'i actually found the setup of nginx much easier than lighttpd not to mention that you can install a macport of nginx port install nginx +ssl that does not contain the ssl-breaking bug that lighttpd suffers from here\n')

cos	sin	6
('sin', 'bigger', 'cos', '', '29446008', '3.14 is pretty close but a little smaller than pi and sin 3.14 is thus pretty close but a little bigger than 0 cos 3.14 is thus pretty close but a little smaller in absolute terms than -1 so tan 3.14 is a little less than 0\n')
('cos', 'faster', 'sin', '', '16432028', 'so if we have a vector and want to calculate a component-wise function over it say sin and cos it is faster to use vvsincos from accelerate because it will pipeline the calculations of sin and cos for all the entries in the vector which is faster than using a for-loop over the vector\n')
('cos', 'slower', 'sin', 'performance std slower', '6977614', 'after reading a question related with the performance of sin cos why is std sin and std cos slower than sin and cos\n')
('cos', 'better', 'sin', '', '14175641', 'cos itself seems to be consistently a tick 0 01 better than sin but the case distinction to reconstruct the sign has an extra test\n')
('cos', 'cheaper', 'sin', '', '18793975', 'if i want to calculate a sin and a cos is it cheaper to calculate a sin and a cos or calculate a sin then a sqrt 1-sin 2 to get the cos\n')
('sin', 'faster', 'cos', 'performance std slower', '18602020', 'or maybe flip them on my machine sin seems faster than cos\n')

pow	sqrt	4
('pow', 'faster fast', 'sqrt', 'fast implementation accurate', '11810686', 'my question is is fast implementation of pow x 0.5f faster than fast sqrt x\n')
('sqrt', 'more accurate', 'pow', 'fast implementation accurate', '16882012', 'first of all sqrt x should be faster and more accurate than pow x 0.5 why do you think it s in the library\n')
('sqrt', 'better', 'pow', '', '34198617', 'and as tom karzes mentioned sqrt is also better than using pow for calculating square roots\n')
('sqrt', 'also better', 'pow', '', '34198617', 'and as tom karzes mentioned sqrt is also better than using pow for calculating square roots\n')

sorcery	devise	3
('sorcery', 'more', 'devise', '', '23384179', 'check out sorcery it s more lightweight and less obscure than devise\n')
('sorcery', 'less obscure', 'devise', '', '23384179', 'check out sorcery it s more lightweight and less obscure than devise\n')
('sorcery', 'more lightweight', 'devise', '', '23384179', 'check out sorcery it s more lightweight and less obscure than devise\n')

emacs	vim	22
('emacs', 'easier', 'vim', '', '39891929', 'personally i m using emacs right now which i find easier than vim for searching and navigating the code but everyone has their taste\n')
('emacs', 'more powerful', 'vim', '', '9603048', 'i am starting to understand that even though emacs is more powerful than vim vim is at least 10 times easier to use less keystrokes and requires way less modifications\n')
('emacs', 'easier', 'vim', '', '6079323', 'for example emacs s macro shortcut f3 and f4 is easier than vim s qq and q\n')
('emacs', 'more powerful', 'vim', '', '977462', 'emacs is more powerful than vim it s scripting engine is far more flexible and there are far more scripts modes and the likes built around emacs\n')
('vim', 'less', 'emacs', '', '39374358', 'that said modifier keys are important in vim even if less than in emacs\n')
('vim', 'far more', 'emacs', '', '1786996', 'on today s machines that s a non-issue but if you ever find yourself dealing with older gear it s my experience that vim is far more likely to work on a wonky terminal than emacs is\n')
('emacs', 'easier', 'vim', '', '21159279', 'you might want to try emacs - it has an inbuilt tutorial and some people like me find it easier over vim no flames pls\n')
('vim', 'much more difficult', 'emacs', '', '25873737', 'in vim it s much more difficult to run a subprocess than it is in emacs so in vim you need to have a separate running idris repl\n')
('emacs', 'better', 'vim', '', '977462', 'maybe not productive in the same way - i d say vim is quicker for editing files emacs is better at doing everything else again i would personally say things like flymake-mode vcs bindings are such are quicker to use than the vim equivalent\n')
('emacs', 'better', 'vim', 'external editors editing', '1020038', 'it is worth learning both because emacs is better than vim at editing certain languages and doing certain tasks and vice versa\n')
('vim', 'weaker', 'emacs', '', '2153892', 'i ve used vim for 10+ years but never really into vim scripting always subjectively beliving that this was one area where vim was weaker than emacs\n')
('vim', 'faster', 'emacs', '', '1430434', 'and i tend to think that after a moderate amount of customisation of either one vim will still start up faster than emacs\n')
('vim', 'more steps', 'emacs', '', '1430939', 'cut and paste in vim takes more steps than in emacs iirc\n')
('emacs', 'more', 'vim', '', '977462', 'emacs is more powerful than vim it s scripting engine is far more flexible and there are far more scripts modes and the likes built around emacs\n')
('emacs', 'more', 'vim', '', '9603048', 'i am starting to understand that even though emacs is more powerful than vim vim is at least 10 times easier to use less keystrokes and requires way less modifications\n')
('emacs', 'slower', 'vim', '', '23619870', 'i realized that emacs would load slower than vim but this seems ridiculous for a fresh install\n')
('vim', 'quicker', 'emacs', '', '977462', 'maybe not productive in the same way - i d say vim is quicker for editing files emacs is better at doing everything else again i would personally say things like flymake-mode vcs bindings are such are quicker to use than the vim equivalent\n')
('emacs', 'better', 'vim', 'external editors editing', '11520215', 'there are definitely some advantages using external editors however emacs is ten million times better than vim\n')
('emacs', 'much older', 'vim', '', '551342', 'since emacs is much older than the extensible vim as opposed to the relatively non-extensible vi it has a much larger collection of extension modes covering almost any purpose you can imagine\n')
('vim', 'much more', 'emacs', '', '25873737', 'in vim it s much more difficult to run a subprocess than it is in emacs so in vim you need to have a separate running idris repl\n')
('vim', 'far more likely', 'emacs', '', '1786996', 'on today s machines that s a non-issue but if you ever find yourself dealing with older gear it s my experience that vim is far more likely to work on a wonky terminal than emacs is\n')
('vim', 'more', 'emacs', '', '1430939', 'cut and paste in vim takes more steps than in emacs iirc\n')

subtraction	multiplication	12
('multiplication', 'faster', 'subtraction', 'operations addition harder', '46505901', 'as in title why is multiplication much faster than subtraction in this example\n')
('multiplication', 'more costlier', 'subtraction', '', '18877408', 'in general multiplication is more costlier than subtraction right\n')
('multiplication', 'costlier', 'subtraction', '', '18877408', 'in general multiplication is more costlier than subtraction right\n')
('subtraction', 'more', 'multiplication', 'operations addition harder', '44479506', 'the addition and subtraction are much more than multiplication and division\n')
('subtraction', 'faster', 'multiplication', 'operations addition harder', '15668718', 'subtraction operations and usually significantly faster than multiplication and division\n')
('subtraction', 'harder', 'multiplication', 'operations addition harder', '9714461', 'for floating point operations addition and subtraction are harder than multiplication and division so they may be slower or not again it depends on how much transistor real estate there is dedicated to the fpu\n')
('subtraction', 'lower', 'multiplication', 'unary priority lower', '30191894', 'in t-sql unary minus is made to be the same priority as subtraction which is lower than multiplication\n')
('multiplication', 'slower', 'subtraction', '', '32477335', 'multiplication is slower than subtraction\n')
('multiplication', 'more', 'subtraction', '', '18877408', 'in general multiplication is more costlier than subtraction right\n')
('multiplication', 'higher', 'subtraction', 'unary priority lower', '23612128', 'since multiplication has a higher precedence than subtraction you should subtract 0 to your digit character before multiplying it\n')
('subtraction', 'cheaper', 'multiplication', '', '698780', 'addition subtraction for the rectangular bound calculation is cheaper than multiplication\n')
('subtraction', 'higher precedence', 'multiplication', 'unary priority lower', '29579783', 'this subtraction operator occurs within the second brackets and so has a higher precedence than the multiplication\n')

wordpress	joomla	7
('joomla', 'more time', 'wordpress', '', '26309282', 'yes joomla takes more time in cooking the resulting html when compared to wordpress\n')
('wordpress', 'better', 'joomla', 'menu better', '2350402', 'imho wordpress is better do work and customize than joomla\n')
('wordpress', 'more popular', 'joomla', '', '1361077', 'i seem to be getting the impression that wordpress is more popular than joomla nowadays\n')
('wordpress', 'more', 'joomla', '', '1361077', 'i seem to be getting the impression that wordpress is more popular than joomla nowadays\n')
('wordpress', 'menu better', 'joomla', 'menu better', '15242168', 'if that will solved later than wordpress menu is better than joomla\n')
('joomla', 'more', 'wordpress', '', '26309282', 'yes joomla takes more time in cooking the resulting html when compared to wordpress\n')
('joomla', 'easier', 'wordpress', '', '7258066', 'imho creating templates for joomla is the easier than most other cms i know typo wordpress modx as you simply have to replace parts of the static version with joomla tags menu content etc. it still needs some time to get used to the system but its not that hard\n')

calloc	malloc	25
('calloc', 'larger blocks', 'malloc', '', '12555911', 'those answers was that calloc can allocate larger blocks than malloc can and etc\n')
('malloc', 'faster', 'calloc', 'speed likely page', '45860610', 'it would be better to use malloc over calloc unless we want the zero-initialization because malloc is faster than calloc\n')
('malloc', 'faster', 'calloc', '', '15379960', 'malloc is faster than calloc reason is that malloc processed single dimensional array to pointer format whereas calloc takes double dimensional array and before processed it converts to single dimensional array then to pointer format\n')
('calloc', 'faster', 'malloc', 'speed likely page', '3393412', 'calloc is faster than malloc + memset because calloc knows that the mmap d pages are pre-zeroed and memset forces the allocation of physical ram\n')
('calloc', 'slower', 'malloc', 'speed likely page', '3449169', 'calloc itself is slower than malloc because you have to spend some time to clear the contents of allocated memory\n')
('calloc', 'more', 'malloc', '', '8811894', 'edit i m not a java expert but i think that in java members of new array are initialized to 0 or null so calloc is more correct than malloc in my code\n')
('malloc', 'less arguments', 'calloc', '', '38093082', 'g_new and g_new0 both take the same arguments unlike malloc that takes less arguments than calloc\n')
('calloc', 'still faster', 'malloc', 'speed likely page', '2688522', 'if end up using the memory anyway calloc is still faster than malloc and memset but the difference is not quite so ridiculous\n')
('malloc', 'closer', 'calloc', '', '25242094', 'actually calling memset after malloc is closer to calling calloc than the option you suggest\n')
('calloc', 'bigger blocks', 'malloc', '', '4083946', 'for this reason since calloc uses two arguments of type size_t it can allocate bigger blocks than malloc will ever be able to since malloc takes only one argument of type size_t\n')
('malloc', 'far more', 'calloc', '', '41279714', 'malloc is far more common in c code than calloc\n')
('calloc', 'better', 'malloc', 'speed likely page', '28882237', 'it takes a page off of the free_page_list updates mem_map zeroes the page and returns the physical address of the page. here s another post that explains it well and also explains why using calloc is better than malloc + memset\n')
('malloc', 'far more common', 'calloc', '', '41279714', 'malloc is far more common in c code than calloc\n')
('calloc', 'faster', 'malloc', 'speed likely page', '37555852', 'it s conceivable that calloc could return address of memory location that is already pre-initialized with zeros thus it may be faster than malloc + memset combo\n')
('calloc', 'more correct', 'malloc', '', '8811894', 'edit i m not a java expert but i think that in java members of new array are initialized to 0 or null so calloc is more correct than malloc in my code\n')
('calloc', 'faster', 'malloc', 'speed likely page', '10696511', 'in terms of speed calloc is likely to be faster than malloc + memset if memory needs to be zeroed out\n')
('malloc', 'better', 'calloc', '', '40852858', 'as written malloc would be better than calloc but the question used calloc and it would not be hard to make it sensible for use with this code too for example a conditional assignment in set_matrix such as\n')
('calloc', 'slower', 'malloc', 'speed likely page', '27354796', 'i remember somewhere i have read that calloc is slower than malloc because calloc performs initialization to zero after performing memory allocation\n')
('calloc', 'slower', 'malloc', 'speed likely page', '9213578', 'also calloc is slower than malloc from operating system memory allocation perspective\n')
('calloc', 'faster', 'malloc', 'speed likely page', '32919551', 'this means calloc can potentially be faster than calling malloc followed by memset since it can skip the memset if it knows it will already by zeroed\n')
('malloc', 'alone faster', 'calloc', 'speed likely page', '28882355', 'and is as far as i know faster than the combination of malloc and memset on the other hand malloc alone is faster than calloc\n')
('malloc', 'less', 'calloc', '', '38093082', 'g_new and g_new0 both take the same arguments unlike malloc that takes less arguments than calloc\n')
('malloc', 'faster', 'calloc', 'speed likely page', '3449073', 'malloc is faster since calloc initializes the allocated memory to contain all zeros\n')
('calloc', 'faster', 'malloc', 'speed likely page', '2688522', 'this is an enormous amount of extra work and explains why calloc is faster than malloc and memset\n')
('calloc', 'longer', 'malloc', 'speed likely page', '2076025', 'calloc does take longer than malloc because it has to zero out all the memory you asked for before giving it to you\n')

clob	xmltype	5
('xmltype', 'stricter', 'clob', '', '28741356', 'xmltype is being stricter about the validity than clob\n')
('clob', 'safer way', 'xmltype', '', '11264861', 'a clob is a safer way to handle the soap request than an xmltype because the data returned may be longer than 32767 bytes\n')
('xmltype', 'more', 'clob', '', '34787180', 'if you are storing varchar type data you should really be using one of the latter two types clob if you are storing various varchar data and xmltype which is a more specific type of clob anyway if you are storing strictly xml data\n')
('clob', 'safer', 'xmltype', '', '11264861', 'a clob is a safer way to handle the soap request than an xmltype because the data returned may be longer than 32767 bytes\n')
('xmltype', 'more specific', 'clob', '', '34787180', 'if you are storing varchar type data you should really be using one of the latter two types clob if you are storing various varchar data and xmltype which is a more specific type of clob anyway if you are storing strictly xml data\n')

mdpi	hdpi	11
('hdpi', 'bigger', 'mdpi', 'computer monitor resources', '7454181', 'ideally the hdpi version of your button should be 1.5 times bigger than the mdpi baseline version\n')
('hdpi', 'larger', 'mdpi', 'computer monitor resources', '25173899', 'example if using dp unit hdpi device will have 1.5 240 160 times larger than mdpi\n')
('mdpi', 'less', 'hdpi', '', '4292392', 'first of all if you anyhow provide a hdpi graphic adding an mdpi and ldpi graphic which both are less than the hdpi graphic in size there is approximately 3 4 6 scaling ratio will increase the size but far from triple it more close to double\n')
('hdpi', 'larger', 'mdpi', 'computer monitor resources', '24055780', 'and you know your image at hdpi folder so its 1.5 larger than the mdpi\n')
('mdpi', 'smaller', 'hdpi', 'pixel sizes smaller', '29697132', 'layout-sw320dp-land will pick up drawable from hdpi folder whereas layout-sw720dp-land is mdpi device so it will pick up drawables from mdpi folder which will be smaller than hdpi\n')
('mdpi', 'closer', 'hdpi', '', '32094915', 'the system will pick the closest match and mdpi is closer to hdpi than to xxhdpi\n')
('mdpi', 'exponentially smaller', 'hdpi', 'pixel sizes smaller', '46668634', 'ldpi assets will look bad on high density screens but are exponentially smaller than mdpi which is exponentially smaller than hdpi etc\n')
('mdpi', 'less', 'hdpi', 'computer monitor resources', '30125058', 'as mdpi is less than hdpi so it will take the values from the folder which is least below it in you case it is values which is applicable to all\n')
('hdpi', 'larger', 'mdpi', 'computer monitor resources', '21759315', 'for example mdpi is basically 72dpi as your computer monitor hdpi resources should be around 1.5 times larger than mdpi resources and so forth\n')
('mdpi', 'smaller images', 'hdpi', 'pixel sizes smaller', '18303913', 'images in these different folders should have different physical pixel sizes mdpi has smaller images than hdpi but the images pixel densities aren t used\n')
('hdpi', 'smaller', 'mdpi', 'pixel sizes smaller', '7313024', 'when you put images into hdpi folder their appearance is smaller than from mdpi and ldpi\n')

onchange	onblur	3
('onchange', 'better', 'onblur', '', '7561657', 'onchange is a better choice than onblur or focusout because blur and focusout also fire when the contents of the text field hasn t changed\n')
('onchange', 'better choice', 'onblur', '', '7561657', 'onchange is a better choice than onblur or focusout because blur and focusout also fire when the contents of the text field hasn t changed\n')
('onchange', 'more appropriate', 'onblur', '', '10363584', 'edit you probably only want to validate when the value changes and field loses focus that s why imo the onchange event would be more appropriate than onblur not onblure\n')

jedit	notepad++	3
('jedit', 'better plugins', 'notepad++', '', '5705341', 'i have found that jedit has better plugins for providing some of the more ide-oriented capabilities but like boltclock said notepad++ is really just a powerful text editor and does not try to be a one-stop-shop ide\n')
('jedit', 'better', 'notepad++', '', '5705341', 'i have found that jedit has better plugins for providing some of the more ide-oriented capabilities but like boltclock said notepad++ is really just a powerful text editor and does not try to be a one-stop-shop ide\n')
('jedit', 'better', 'notepad++', '', '5681684', 'i think jedit is equal to or better than notepad++\n')

realloc	memcpy	3
('memcpy', 'always slower', 'realloc', '', '39562813', 'as we can see copying manually with memcpy is always slower than realloc because in this scenario malloc is guaranteed to allocate new memory and you re forced to copy the data in every allocation which shows us that realloc is indeed reusing the same address and enlarging the block size in some cases\n')
('realloc', 'consistently faster', 'memcpy', '', '19826688', 'as you can see from the above tests realloc is consistently faster compared to memalloc memcpy and free\n')
('memcpy', 'slower', 'realloc', '', '39562813', 'as we can see copying manually with memcpy is always slower than realloc because in this scenario malloc is guaranteed to allocate new memory and you re forced to copy the data in every allocation which shows us that realloc is indeed reusing the same address and enlarging the block size in some cases\n')

hide	fadeout	3
('hide', 'slightly faster', 'fadeout', '', '10718309', 'according to this test - hide is slightly faster then fadeout since it doesn t use animations\n')
('hide', 'slightly faster then', 'fadeout', '', '10718309', 'according to this test - hide is slightly faster then fadeout since it doesn t use animations\n')
('fadeout', 'simpler', 'hide', '', '19911956', 'fadeout is simpler because it will hide it for you automatically when it is done so you can save that code and it automatically waits for the animation to be done before hiding the element something your current code was not doing\n')

paperclip	carrierwave	5
('carrierwave', 'newer gem', 'paperclip', '', '8425110', 'carrierwave is a newer gem than paperclip and it looks a lot more flexible\n')
('carrierwave', 'more popularity', 'paperclip', '', '9404822', 'carrierwave seems to be gaining more popularity than paperclip but most people seem to be on paperclip\n')
('carrierwave', 'newer', 'paperclip', '', '8425110', 'carrierwave is a newer gem than paperclip and it looks a lot more flexible\n')
('paperclip', 'more', 'carrierwave', '', '6050820', 'seems like paperclip is more file oriented and carrierwave is more object oriented\n')
('carrierwave', 'better', 'paperclip', '', '9966327', 'new to carrierwave already loving it so much better than paperclip\n')

actionscript	mxml	6
('mxml', 'module slightly larger', 'actionscript', '', '3762592', 'i can see that my skeleton mxml module is slightly larger than my actionscript module 66kb vs\n')
('actionscript', 'quicker', 'mxml', '', '19421336', 'actionscript is quicker than mxml but for what you re going to do you re trading speed for convenience - mxml comes with all the different ui classes list scrollbars etc already there\n')
('mxml', 'larger', 'actionscript', '', '3762592', 'i can see that my skeleton mxml module is slightly larger than my actionscript module 66kb vs\n')
('actionscript', 'nicer', 'mxml', '', '2479042', 'what s the deal i thought actionscript would be nicer than mxml\n')
('actionscript', 'less convenient', 'mxml', 'convenient framework hood', '10743806', 'so yes it can be used with flash or rather pure actionscript but it is a little less convenient than with mxml where everything is set up by the framework because it takes more under the hood configuration to be able to run all the necessary parts for remoting\n')
('actionscript', 'better', 'mxml', 'convenient framework hood', '814811', 'i would say pure actionscript is better for programming whether you use flash ide or flex ide is not that relevant and mxml is better for non-programmers to combine the components programmed in as\n')

wildfly	jboss	3
('wildfly', 'more lightweight', 'jboss', '', '46903143', 'is it because request response handling on wildfly is kind of more lightweight than the jboss 4.2.3\n')
('wildfly', 'more', 'jboss', '', '38708122', 'everything is set as default for sure the server is up and listening to port 9990 trying to compare both wildfly and jboss eap standalone.xml but they aren t exactly the same wildfly is more evoluated compared to jboss eap which is more stable\n')
('wildfly', 'more evoluated', 'jboss', '', '38708122', 'everything is set as default for sure the server is up and listening to port 9990 trying to compare both wildfly and jboss eap standalone.xml but they aren t exactly the same wildfly is more evoluated compared to jboss eap which is more stable\n')

ienumerable	icollection	2
('ienumerable', 'more generic', 'icollection', 'simple properties better', '1268518', 'secondly i did not use ienumerable because it is more generic than icollection and does not even have simple properties like count\n')
('ienumerable', 'more generic', 'icollection', 'simple properties better', '34689546', 'a better way to do that instead is taking in an ienumerable which is more generic than icollection since icollection implements ienumerable and simply checking it for null and else returning any from linq s operators\n')

translation	transliteration	3
('transliteration', 'better', 'translation', '', '38796725', 'for removal and transliteration there is a better tool called tr translation or delete characters\n')
('translation', 'more', 'transliteration', '', '7975143', 'the issue here is that an automatic translation from sql to linq will often have to perform more transliteration than translation - generating examples of how not to write linq queries\n')
('transliteration', 'better tool', 'translation', '', '38796725', 'for removal and transliteration there is a better tool called tr translation or delete characters\n')

openmpi	mpich	4
('openmpi', 'more connection', 'mpich', '', '19742014', 'while openmpi supports more connection protocols there is an infiniband-enabled version of mpich called mvapich\n')
('openmpi', 'better', 'mpich', '', '42542582', 'it seems openmpi has better support for assigning ranks than mpich but setting up slurm and mpich wasn t trivial due to the cluster setup so i m hesitant to start over with openmpi\n')
('openmpi', 'better support', 'mpich', '', '42542582', 'it seems openmpi has better support for assigning ranks than mpich but setting up slurm and mpich wasn t trivial due to the cluster setup so i m hesitant to start over with openmpi\n')
('openmpi', 'more', 'mpich', '', '19742014', 'while openmpi supports more connection protocols there is an infiniband-enabled version of mpich called mvapich\n')

mgcv	gam	4
('mgcv', 'more popular', 'gam', '', '39042343', 'mgcv and gam does not depend on each other but since mgcv is more popular than gam many packages has dependency on mgcv for example car\n')
('mgcv', 'more flexible', 'gam', '', '40184092', 'i try to fit a gam using the gam package i know mgcv is more flexible but i need to use gam here\n')
('mgcv', 'more', 'gam', '', '39042343', 'mgcv and gam does not depend on each other but since mgcv is more popular than gam many packages has dependency on mgcv for example car\n')
('mgcv', 'more', 'gam', '', '40184092', 'i try to fit a gam using the gam package i know mgcv is more flexible but i need to use gam here\n')

d3.js	raphael	5
('raphael', 'older brother', 'd3.js', 'place fallback browsers', '22607139', 'this should be possible maybe be aware snap.svg isn t so compatible with older browsers in which case you could look at raphael which is snaps older brother d3.js is very well established as well\n')
('d3.js', 'much harder', 'raphael', '', '15222464', 'd3.js is much harder to learn than raphael but in both cases you will also have to learn svg to be able to create better animations\n')
('raphael', 'older versions', 'd3.js', 'place fallback browsers', '17030537', 'the only place where raphael defeats d3.js is fallback raphael supports older versions of ie where as d3.js is based on current web standards ie 9\n')
('d3.js', 'better', 'raphael', '', '15222464', 'as it stands d3.js is not just better than raphael and processing in many cases but is also a viable replacement for jquery underscore.js and other frameworks\n')
('raphael', 'older', 'd3.js', 'place fallback browsers', '17949657', 'raphael supports older versions of ie whereas d3.js is based on current web standards\n')

wicket	vaadin	7
('wicket', 'better', 'vaadin', '', '4853850', 'this is only a guess and is not based on actual performance testing probably wicket will be doing better than vaadin\n')
('wicket', 'probably more', 'vaadin', '', '4853850', 'wicket probably has more resources than vaadin\n')
('vaadin', 'easier', 'wicket', '', '4865721', 'i would say vaadin would be easier over wicket as the default ui elements look really good\n')
('wicket', 'easier', 'vaadin', '', '3559475', 'with this in mind customizing the css of a wicket app is significantly easier than vaadin for the simple reason that you control the markup\n')
('wicket', 'more resources', 'vaadin', '', '4853850', 'wicket probably has more resources than vaadin\n')
('wicket', 'probably more resources', 'vaadin', '', '4853850', 'wicket probably has more resources than vaadin\n')
('wicket', 'app significantly easier', 'vaadin', '', '3559475', 'with this in mind customizing the css of a wicket app is significantly easier than vaadin for the simple reason that you control the markup\n')

unsigned	integer	17
('integer', 'bigger size', 'unsigned', '', '36503877', 'both of following types are semantically equivalent minimum 64bit integer without sign and with equal or bigger size than unsigned long int\n')
('integer', 'division much faster', 'unsigned', 'faster useful value', '4890490', 'in case of unsigned integer division this problem does not arise which is why generally integer division works much faster for unsigned types than for signed types\n')
('unsigned', 'int no better', 'integer', 'int larger promotions', '2892573', 'as far as the compiler is concerned the conversion from integer 0 to unsigned int is no better than the conversion from integer 0 to pointer\n')
('integer', 'always bigger', 'unsigned', 'bigger guarentee data', '41058221', 'i do have the guarentee that the signed integer is always bigger or equal than the unsigned integer in bytes so no data should be lost due to lack of space\n')
('integer', 'larger', 'unsigned', '', '22287228', 'the problem is that the input integer is larger than what would fit in an unsigned long long\n')
('integer', 'smaller int', 'unsigned', 'int larger promotions', '37356295', 'instead default argument promotions take place which means that any integer type smaller than int unsigned int gets converted to one of those -- that s not the only promotion but the only one relevant here -- and which also means that there is no automatic conversion to whatever type you specify with va_arg\n')
('integer', 'wider', 'unsigned', 'bigger guarentee data', '23837701', 'it can only disappoint you if your compiler has an integer type wider than unsigned long long and you use it\n')
('integer', 'rank less', 'unsigned', 'int larger promotions', '19274392', 'an object with an integer type other than int and signed int whose integer rank is less than or equal to the rank of int and unsigned int a bit field of type _bool int signed int or unsigned int\n')
('integer', 'more useful', 'unsigned', 'faster useful value', '18604489', 'furthermore signed integer types just tend to be more useful than unsigned types\n')
('integer', 'wider int', 'unsigned', 'int larger promotions', '41254784', 'pedantic note when printing integer types that might wider than int unsigned insure the final computed result matches the specifier\n')
('unsigned', 'larger', 'integer', 'int larger promotions', '46960509', '1 as chux has noted in a comment if unsigned is larger than uint32_t arithmetic on uint32_t goes through the usual integer promotions and if not it stays as uint32_t\n')
('integer', 'faster', 'unsigned', 'faster useful value', '25778917', 'the idea here is threefold readability using operator functions with compatible left and right arguments as well as return value and the use of integer multiplying operators being faster than unsigned operators\n')
('integer', 'constant larger', 'unsigned', 'int larger promotions', '30336462', 'error integer constant is larger than the largest unsigned integer type\n')
('unsigned', 'bigger', 'integer', 'bigger guarentee data', '12572736', 'an implementation that has no such unsigned type say because pointers are bigger than any integer type won t provide it\n')
('unsigned', 'int apparently larger', 'integer', 'int larger promotions', '40380083', 'on your system unsigned int is apparently larger than uint16_t int is a greater ranked integer type than short in the standard 6.3.1.1 even if they are of the same size\n')
('integer', 'more', 'unsigned', 'int larger promotions', '20982292', 'according the books the variations of type integer occupy more or less bytes of memory depending on the architecture however the type unsigned short values √¢ √¢ can get up to 65 535 since the type unsigned long 4 294 967 295\n')
('integer', 'constant larger', 'unsigned', 'int larger promotions', '28358323', 'going too high gives the error integer constant is larger than the largest unsigned integer type\n')

haskell	scheme	4
('scheme', 'perhaps more', 'haskell', '', '3363108', 'scheme is perhaps more approachable than haskell however\n')
('scheme', 'more approachable', 'haskell', '', '3363108', 'scheme is perhaps more approachable than haskell however\n')
('haskell', 'earlier', 'scheme', '', '392733', 'some background i m learning haskell now having earlier worked with scheme and cl and a little foray into clojure\n')
('scheme', 'perhaps more approachable', 'haskell', '', '3363108', 'scheme is perhaps more approachable than haskell however\n')

mergesort	heapsort	4
('mergesort', 'slower', 'heapsort', 'quicksort assumption reason', '41665863', 'what baffles me is that my mergesort seems to be slower than heapsort in both of the languages\n')
('heapsort', 'slower', 'mergesort', 'quicksort assumption reason', '22386409', 'heapsort tends to be slower than mergesort for the same reason.\n')
('mergesort', 'slower', 'heapsort', 'quicksort assumption reason', '18386733', 'typically mergesort is slower than heapsort and quicksort but that s usually under the assumption that comparisons are fast\n')
('mergesort', 'faster', 'heapsort', '', '16308408', 'normally quicksort is faster than mergesort which is faster than heapsort\n')

bower	npm	11
('npm', 'wider user', 'bower', '', '40925142', 'what i meant to ask is it can be argued that npm has a wider user base than bower some even argue that we should stop using bower altogether like here and here\n')
('bower', 'more available versions', 'npm', '', '41185678', 'on the project i m using bower to manage dependencies because i found that it has way more available versions than npm does\n')
('bower', 'more sense', 'npm', 'reading sense package', '40594230', 'my codebase is front-end only so after doing a little reading i thought bower would make more sense than npm\n')
('npm', 'better', 'bower', '', '25938890', 'even if you can handle them with npm it s better to use bower since it s optimized for this purpose no deep dependencies among other things\n')
('npm', 'harder', 'bower', 'reading sense package', '44058348', 'using npm package is a little bit harder than using bower package\n')
('bower', 'simpler', 'npm', '', '34181070', 'bower packages are simpler than npm equivalents and don t have subfolders with module dependencies\n')
('bower', 'more similar', 'npm', '', '24767574', 'bower is more similar to npm than to component\n')
('npm', 'wider', 'bower', '', '40925142', 'what i meant to ask is it can be argued that npm has a wider user base than bower some even argue that we should stop using bower altogether like here and here\n')
('bower', 'more', 'npm', '', '43513137', 'bower is more focused on browser libraries and css while npm is more for server-sided stuff using node.js\n')
('bower', 'more', 'npm', '', '24767574', 'bower is more similar to npm than to component\n')
('bower', 'better fit', 'npm', '', '34455513', 'is bower a better fit than npm for asp .net 5 projects with separation of source and build files and if not what s the recommended way of doing it purely with npm\n')

qwindow	qwidget	3
('qwindow', 'more', 'qwidget', '', '23931807', 'qwindow is more low level than qwidget\n')
('qwindow', 'more low level', 'qwidget', '', '23931807', 'qwindow is more low level than qwidget\n')
('qwindow', 'more low', 'qwidget', '', '23931807', 'qwindow is more low level than qwidget\n')

sinon	jasmine	3
('sinon', 'better choice', 'jasmine', '', '37573358', 'the thing that makes sinon a better choice than jasmine spies is that it is capable of programming spies expectations withargs ... .called.\n')
('sinon', 'many more features', 'jasmine', '', '43398750', 'it should be mentioned that sinon provides many more features for smart stubs spies than jasmine so both can be used together\n')
('sinon', 'many more', 'jasmine', '', '43398750', 'it should be mentioned that sinon provides many more features for smart stubs spies than jasmine so both can be used together\n')

mouseout	mouseleave	3
('mouseout', 'better choice', 'mouseleave', 'text better', '6667203', 'there can be times when mouseout is a better choice than mouseleave\n')
('mouseleave', 'better', 'mouseout', 'text better', '14359122', 'also see i ve replaced mouseout with mouseleave which should work better than mouseout text will not jump up and down\n')
('mouseleave', 'more accurate', 'mouseout', '', '7477202', 'some browsers implement the mouseenter mouseleave events that i ve noticed are more accurate than mouseout\n')

org.json	gson	2
('org.json', 'better such', 'gson', 'better jackson', '33804715', 'or switch from org.json to something that performs better such as gson or jackson\n')
('org.json', 'better', 'gson', 'better jackson', '38062608', 'quick takeaway of the benchmark jackson performs 5 to 6 times better than org.json and more than twice better than gson\n')

rtf	doc	3
('rtf', 'more concise', 'doc', '', '8007466', 'there s a post on the subject on the birt world blog here specifically relating to xls emitters although the tribix emitters mentioned should also enable output to rtf a microsoft format readable by word that is much more concise than doc\n')
('rtf', 'easier', 'doc', '', '813984', 'if the latter is what you want you could use rtf which is somewhat easier than the doc format\n')
('rtf', 'somewhat easier', 'doc', '', '813984', 'if the latter is what you want you could use rtf which is somewhat easier than the doc format\n')

bazaar	git	10
('bazaar', 'imho easier', 'git', '', '77883', 'bazaar is imho easier to learn than git\n')
('bazaar', 'slower', 'git', 'stuff articles mercurial', '1372564', 'a lot of articles about bazaar will tell you it is a lot slower than git or mercurial\n')
('bazaar', 'slower', 'git', 'balling numbers 2-4x', '706457', 'an incredibly rough eye balling of the numbers they posted showed bazaar to be 2-4x slower than either git or mercurial in the use cases tested\n')
('bazaar', 'slower', 'git', 'stuff articles mercurial', '706428', 'i hear all this stuff about bazaar being slower than git\n')
('git', '10x more', 'bazaar', '', '11664386', 'i would not mind changing to for example bazaar or git if needed i am a bit afraid of git to be honest everything i read about git seems 10x more technical than anything i read about mercurial or bazaar and installing it on windows seems to imply installing all sorts of secondary software it seems but that is another matter\n')
('bazaar', 'more powerful', 'git', '', '35349309', 'note most recently i have been using bazaar and hg with fully powerful regexps so may be looking for stuff more powerful than git provides\n')
('bazaar', 'slower', 'git', 'balling numbers 2-4x', '897862', 'mercurial is significantly faster than bazaar it s slower than git though by a much smaller difference\n')
('bazaar', 'easier', 'git', '', '1011950', 'bazaar is easier to extend in an api way git is easier to extend in a unix way pipes\n')
('git', '10x more technical', 'bazaar', '', '11664386', 'i would not mind changing to for example bazaar or git if needed i am a bit afraid of git to be honest everything i read about git seems 10x more technical than anything i read about mercurial or bazaar and installing it on windows seems to imply installing all sorts of secondary software it seems but that is another matter\n')
('git', 'better', 'bazaar', '', '16159369', 'it works fine and fits all my needs but recently i found that git works better than bazaar so i decided to use it but i face a problem with git usability because most git s gui not user friendly as bazaar explorer so i want your advice based on a practical experience which best git s gui user friendly or which one is most similar to bazaar explorer\n')

hmac	hash	5
('hmac', 'algorithm less susceptible', 'hash', '', '26049758', 'the structure of the hmac algorithm makes it less susceptible to attacks on properties of the underlying hash algorithm\n')
('hmac', 'algorithm less', 'hash', '', '26049758', 'the structure of the hmac algorithm makes it less susceptible to attacks on properties of the underlying hash algorithm\n')
('hmac', 'much faster', 'hash', '', '20265257', 'after looking it s seems that hmac is much faster and better in term of security even if the underlying hash function sha1 is broken which is not the case when using rsa-sha1\n')
('hmac', 'better', 'hash', '', '1757465', 'hmac is better than a plain hash because it is not vulnerable to hash length extension attacks\n')
('hash', 'more efficient', 'hmac', '', '30081512', 'in some cases on embedded platforms where a fast hash function may not be available these may be more efficient than hmac\n')

strncmp	strcmp	9
('strncmp', 'safer', 'strcmp', '', '24359293', 'the only case where strncmp would be safer than strcmp is when you re comparing two character arrays as strings you re certain that both arrays are at least n bytes long the 3rd argument passed to strncmp and you re not certain that both arrays contain strings contain a 0 null character terminator\n')
('strncmp', 'safer', 'strcmp', '', '4069941', 'strncmp is a little bit safer than strcmp because you specify how many comparisons will be made at most\n')
('strncmp', 'safer', 'strcmp', 'strings words slower', '30190966', 'in few words strncmp is safer then strcmp but it is slower too\n')
('strncmp', 'safer version', 'strcmp', 'strings words slower', '39110395', 'also have a look at strncmp which is safer version of strcmp\n')
('strcmp', 'slower', 'strncmp', '', '39154525', 'is strcmp slower than strncmp as one can give pre-calculated string length to it but strcmp does not receive such information\n')
('strncmp', 'more secure', 'strcmp', '', '30190628', 'strncmp is more secure than strcmp\n')
('strncmp', 'safer', 'strcmp', 'strings words slower', '29420623', 'note strncmp is safer than strcmp\n')
('strncmp', 'safer', 'strcmp', 'strings words slower', '33513971', 'you should use strncmp to compare your strings it s safer than strcmp\n')
('strncmp', 'more', 'strcmp', '', '30190628', 'strncmp is more secure than strcmp\n')

unsigned	short	9
('short', 'narrower', 'unsigned', 'char value bigger', '38251710', 'alignment may fail as unsigned short can be narrower than unsigned int\n')
('short', 'much slower', 'unsigned', '', '4996740', 'btw on some processors unsigned short is much slower than unsigned int because the c standard requires that operations on unsigned types wrap\n')
('short', 'wider', 'unsigned', 'char value bigger', '26403076', 'if size_type is defined as unsigned short and int is wider than unsigned short the lhs of your addition will be converted to the rhs and you rely on the addition being performed in the lhs s type\n')
('short', 'wider', 'unsigned', 'char value bigger', '34981236', 'so if you tell it to expect an unsigned short for example then it will actually expect either an int if int is wider than unsigned short or unsigned int if int and short are the same size\n')
('short', 'smaller', 'unsigned', 'char value bigger', '19336046', 'as unsigned short int is in some implementations smaller than unsigned int\n')
('short', 'smaller', 'unsigned', '', '46776297', 'but i wrote this code to check if we compared an signed int x 0xdeadbeef and unsigned short y 0xffff then after converting the unsigned short to int we should have 0x0000ffff in y at the comparison which should be smaller than the unsigned value of x\n')
('short', 'slower', 'unsigned', '', '4996740', 'btw on some processors unsigned short is much slower than unsigned int because the c standard requires that operations on unsigned types wrap\n')
('short', 'narrower', 'unsigned', 'char value bigger', '39964651', 'the rule for performing arithmetic operations in c c++ is that if the type such as short is narrower than int then it gets widened to int if all values can fit or unsigned int otherwise\n')
('unsigned', 'bigger', 'short', 'char value bigger', '4337684', 'an unsigned char is an unsigned value which is typically smaller than and is guaranteed not to be bigger than a short\n')

cufft	fftw	3
('cufft', 'slower', 'fftw', 'experiments discussion batched', '18069017', 'in the experiments and discussion below i find that cufft is slower than fftw for batched 2d ffts\n')
('cufft', 'slower cpu', 'fftw', '', '6684918', 'i am working on a code which needs to be time efficient and thus using cufft for this purpose but when i try to compute fft of a very large data in parallel it is slower than cpu fftw and the reason i find after finding the time for every line of code using high precision timing code is that cudamalloc taking around 0.983 sec while the time for rest of the lines of code is around 0.00xx sec which is expected ..\n')
('cufft', 'slower', 'fftw', 'experiments discussion batched', '18069017', 'however for a variety of fft problem sizes i ve found that cufft is slower than fftw with openmp\n')

ironpython	ironruby	7
('ironruby', 'team smaller', 'ironpython', '', '2778756', 'also i believe the ironruby team is smaller than the ironpython team\n')
('ironpython', 'more time', 'ironruby', '', '1972630', 'ironpython has had more time to focus on performance improvements but ironruby has made significant performance improvements as of late\n')
('ironruby', 'smaller', 'ironpython', '', '2778756', 'also i believe the ironruby team is smaller than the ironpython team\n')
('ironpython', 'better performance', 'ironruby', '', '1670651', 'however as things stand right now ironpython is much more mature and has much better performance than ironruby so you may prefer to use that\n')
('ironpython', 'much more', 'ironruby', '', '1670651', 'however as things stand right now ironpython is much more mature and has much better performance than ironruby so you may prefer to use that\n')
('ironpython', 'much more mature', 'ironruby', '', '1670651', 'however as things stand right now ironpython is much more mature and has much better performance than ironruby so you may prefer to use that\n')
('ironpython', 'more', 'ironruby', '', '1972630', 'ironpython has had more time to focus on performance improvements but ironruby has made significant performance improvements as of late\n')

yii	codeigniter	8
('codeigniter', 'better', 'yii', '', '8396571', 'so latest codeigniter 2.0 is better than yii according to this benchmarks\n')
('yii', 'higher learning', 'codeigniter', '', '4515976', 'yii has a higher learning curve than say codeigniter and cakephp\n')
('yii', 'more structured', 'codeigniter', '', '6385419', '2 yii a bit more structured than codeigniter but you have a basic app up within 10 mins and if your familiar with mvc design its a great way to develop portals incredibly quickly\n')
('codeigniter', 'faster', 'yii', '', '8396521', 'i have found one benchmark in which yii is faster than codeigniter and another benchmark in which codeigniter is faster than yii\n')
('yii', 'more complex', 'codeigniter', '', '24941354', 'i am currently looking at yii and while its more complex than codeigniter the documentation is much more informative and therefore understandable than cakephp s\n')
('yii', 'higher', 'codeigniter', '', '4515976', 'yii has a higher learning curve than say codeigniter and cakephp\n')
('yii', 'more', 'codeigniter', '', '6385419', 'personally i d say yii might have the edge as it encourages convention more than codeigniter would\n')
('yii', 'faster', 'codeigniter', '', '8396521', 'i have found one benchmark in which yii is faster than codeigniter and another benchmark in which codeigniter is faster than yii\n')

svn2git	git-svn	4
('svn2git', 'better results', 'git-svn', '', '840730', 'using svn2git might produce better results than git-svn if you have tags or branches.\n')
('git-svn', 'worse', 'svn2git', 'easier flexibility worse', '44700064', 'you see there are many reasons why git-svn is worse and the kde svn2git is superior\n')
('git-svn', 'worse', 'svn2git', 'easier flexibility worse', '42090702', 'there are many reasons why git-svn is worse and the kde svn2git is superior\n')
('git-svn', 'easier', 'svn2git', 'easier flexibility worse', '41875707', 'even though git-svn is easier to start with here are some further reasons why using the kde svn2git instead of git-svn is superior besides its flexibility\n')

google-chrome	safari	44
('safari', 'diff2 faster', 'google-chrome', '', '3478660', 'conclusion diff1 is faster in firefox opera and safari diff2 is faster in ie and google-chrome\n')
('google-chrome', 'better job', 'safari', 'api site error', '35663133', 'google-chrome also is susceptible to this same issue although it does a significantly better job than safari at getting the realtime api re-connected\n')
('safari', 'bolder', 'google-chrome', '', '24101663', 'safari renders open sans bolder than in google-chrome so you would need to apply a lighter font weight for safari open sans google web fonts rendering in google-chrome\n')
('safari', 'more funny', 'google-chrome', '', '10271789', 'safari is more funny than google-chrome i can easily make google-chrome cache my page but safari does not\n')
('safari', 'ios more', 'google-chrome', '', '41102298', 'okay safari ios is more strict than google-chrome android when it comes to this all fine but it still needs to enable me to allow the connection through\n')
('safari', 'better', 'google-chrome', 'better huge numbers', '8566225', 'i guess firefox and safari handle huge numbers of elements better than google-chrome\n')
('google-chrome', 'harder', 'safari', '', '20360593', 'dus anyone knows if there is something wrong with my json or if google-chrome is harder to get than safari\n')
('safari', 'less noticeable', 'google-chrome', '', '7138980', 'the safari controller bar is the quicktime bar which is smaller and dark so the movement is less noticeable than google-chrome which has a big blue progress bar\n')
('safari', 'larger', 'google-chrome', 'smaller makes child', '39526896', 'safari makes child block s height larger than google-chrome\n')
('safari', 'smoother', 'google-chrome', '', '10793683', 'safari 5.1 still renders smoother than google-chrome but it is now clear that google has done much improvement\n')
('google-chrome', 'also earlier', 'safari', 'version webkit current', '179520', 'google-chrome also uses an earlier version of webkit than the current safari so pages should be checked in both browsers\n')
('safari', 'more', 'google-chrome', '', '5093790', 'i read somewhere that safari has more stringent requirements on cross domain scripting - it and google-chrome share the same code base\n')
('google-chrome', 'slower mobile', 'safari', 'slower ipad pc', '11364222', 'the one used by google-chrome and is slower than mobile safari s nitro javascript engine\n')
('safari', 'smaller', 'google-chrome', 'smaller makes child', '4835787', 'safari will display fonts without a specified size significantly smaller than in google-chrome\n')
('safari', 'larger', 'google-chrome', '', '4465683', 'total width of button in safari web inspector 6px larger than in google-chrome web inspector\n')
('safari', 'slower', 'google-chrome', 'slower ipad pc', '10400859', 'my ipad 1 safari js benchmarked 38 times slower than google-chrome on my pc\n')
('safari', 'more', 'google-chrome', '', '15194990', 'so if something works on safari it s more likely to work straightaway on google-chrome more than it is on firefox - but that s just a family resemblance at the end of the day you ll still have to test each as every webkit browser product and version still uses a different version of webkit\n')
('google-chrome', 'more forgiving', 'safari', '', '41959925', 'from testing this in google-chrome and safari it seems google-chrome is more forgiving in that it parses the style string and puts the right style in place for you but safari does not\n')
('safari', 'way more consistently', 'google-chrome', '', '19182824', 'the browser does not matter though safari gets way more consistently working results than google-chrome\n')
('safari', 'more secure', 'google-chrome', '', '19977926', 'safari is more secure than ie or google-chrome\n')
('safari', 'more stringent', 'google-chrome', '', '5093790', 'i read somewhere that safari has more stringent requirements on cross domain scripting - it and google-chrome share the same code base\n')
('safari', 'wider', 'google-chrome', '', '21788551', 'in safari the background of my menu navigation drop-down menu s is much wider than in google-chrome firefox\n')
('google-chrome', 'more ios', 'safari', '', '43278201', 'ios google-chrome is more ios safari than google-chrome itself\n')
('safari', 'more', 'google-chrome', '', '10271789', 'safari is more funny than google-chrome i can easily make google-chrome cache my page but safari does not\n')
('safari', 'better', 'google-chrome', 'better huge numbers', '7138980', 'i think safari renders the moves better than google-chrome\n')
('safari', 'more likely', 'google-chrome', '', '15194990', 'so if something works on safari it s more likely to work straightaway on google-chrome more than it is on firefox - but that s just a family resemblance at the end of the day you ll still have to test each as every webkit browser product and version still uses a different version of webkit\n')
('google-chrome', 'newer version', 'safari', 'version webkit current', '8073648', 'it s not even a webkit issue unless google-chrome s got a newer version than safari\n')
('safari', 'smaller', 'google-chrome', 'smaller makes child', '24042145', 'safari 5.1.10 6534.59.10 middle handles a smaller viewport but in sort order with a smaller viewport computes new image sizes even smaller than google-chrome\n')
('safari', 'ios more strict', 'google-chrome', '', '41102298', 'okay safari ios is more strict than google-chrome android when it comes to this all fine but it still needs to enable me to allow the connection through\n')
('safari', 'way more', 'google-chrome', '', '19182824', 'the browser does not matter though safari gets way more consistently working results than google-chrome\n')
('google-chrome', 'more', 'safari', '', '19264379', 'google-chrome has more of the market than safari not and invitation for flame wars just a personal opinion without any weight -\n')
('google-chrome', 'older version', 'safari', 'version webkit current', '45875146', 'it also gets broken even more in ios google-chrome which is an older version of safari\n')
('safari', 'slower', 'google-chrome', 'slower ipad pc', '42985566', 'if i try to do a google search for website loading slower in google-chrome than in safari i get a lot of results about how safari is slower than google-chrome\n')
('google-chrome', 'more', 'safari', '', '2305116', 'in any case vorbis clearly has the most coverage google-chrome has more of the market than safari now opera is about half of safari and obviously firefox is huge and it doesn t really have the strong opposition that theora has\n')
('google-chrome', 'worse', 'safari', '', '33721616', 'google-chrome is worse than safari\n')
('google-chrome', 'more', 'safari', '', '41814737', 'a lot of people use iphones ipads and safari is literally the only option even google-chrome is more like safari in disguise... so it s quite a portion of users who are suffering from this issue\n')
('google-chrome', 'main.v8.js', 'safari', '', '4332352', 'i also have .js files being redirected to javascript engines as well for main.js in google-chrome it tries main.v8.js in safari main.nitro.js in firefox main.gecko.js\n')
('safari', 'faster', 'google-chrome', 'api site error', '6688552', 'this seems to me like a bandwidth error or something like that originally i ve got the error when i played with the html 5 audio api and if i loaded the audio file 10-15 times sequentially then i ve got the error but now i ve discovered that i get the error without the audio api too just by reloading the site a lots of times also safari gives me the error much faster than google-chrome wtf\n')
('safari', 'better', 'google-chrome', 'better huge numbers', '8173799', 'safari comes in at just under 41ms performing better than google-chrome but still not great\n')
('google-chrome', 'more', 'safari', '', '41959925', 'from testing this in google-chrome and safari it seems google-chrome is more forgiving in that it parses the style string and puts the right style in place for you but safari does not\n')
('safari', 'still older version', 'google-chrome', 'version webkit current', '19180704', 'safari still uses the older version while google-chrome uses a more current one\n')
('safari', 'more strict', 'google-chrome', '', '41102298', 'okay safari ios is more strict than google-chrome android when it comes to this all fine but it still needs to enable me to allow the connection through\n')
('google-chrome', 'more', 'safari', '', '43278201', 'ios google-chrome is more ios safari than google-chrome itself\n')
('safari', 'more', 'google-chrome', '', '19977926', 'safari is more secure than ie or google-chrome\n')

android-emulator	bluestacks	5
('bluestacks', 'less', 'android-emulator', '', '45340271', '2 if your host machine laptop doesn t have more ram then you might want to find alternative android-emulator like genymotion bluestacks which takes less memory than android-emulator\n')
('bluestacks', 'less memory', 'android-emulator', '', '45340271', '2 if your host machine laptop doesn t have more ram then you might want to find alternative android-emulator like genymotion bluestacks which takes less memory than android-emulator\n')
('android-emulator', 'better', 'bluestacks', '', '35022155', 'this android-emulator works better than bluestacks\n')
('bluestacks', 'more possibilities', 'android-emulator', '', '13373733', 'yes some functionality possible only on device but you can try also bluestacks app player which has more possibilities than android-emulator\n')
('android-emulator', 'better', 'bluestacks', '', '10101698', 'in xda-forums i read about memu - most powerful android-emulator for pc better than bluestacks\n')

np-hard	np-complete	3
('np-hard', 'harder', 'np-complete', '', '27576988', 'if there exists a np-hard problem that is not in np to the best of my knowledge no such problem has been proved to fall in this category at this moment of time such problem is harder than np-complete problems\n')
('np-hard', 'problem not harder', 'np-complete', '', '25288133', 'as i understand it an np-hard problem is not harder than an np-complete problem\n')
('np-hard', 'harder', 'np-complete', '', '25288133', 'as i understand it an np-hard problem is not harder than an np-complete problem\n')

switching	screens	16
('switching', 'bigger', 'screens', '', '19079736', 'the point of such an architecture is because i have news with some text between which i want to be able to switching with paging effect but the news text can be bigger than the screens\n')
('switching', 'more frequent', 'screens', '', '36684777', 'and would the answer be different in a case where screens switching is more frequent like between an overworld screens and a battle screens in a game like final fantasy or pokemon\n')
('screens', 'longer', 'switching', '', '36792786', 'when the screens resizes the longer elements in my navbar switching to two lines to take up less space\n')
('screens', 'size smaller i', 'switching', 'mobile landscape desktop', '47344039', 'when the screens size is smaller i have it switching flex-direction to column which works well except i cannot figure out how to make the 2nd row trending down start where the trending up stops where ever that may be\n')
('switching', 'less', 'screens', 'mobile landscape desktop', '38781058', 'but then i noticed after changing a mobile to landscape it would switching back to the desktop mode due to the width of the media query being less than the screens landscape width\n')
('switching', 'lower normal', 'screens', '', '33295770', 'after switching to windows 10 i ve noticed that when selecting a lower than normal screens resolution the panel fit mode will default to maintain aspect ratio meaning black bars appear\n')
('switching', 'no longer', 'screens', '', '11488206', 'at this point there is nothing i can do since the switching is no longer there... the external screens is just a blank screens for the sake of the exercise\n')
('switching', 'taller', 'screens', '', '3909833', 'however when i switching to landscape mode the listview is taller than the screens\n')
('switching', 'larger', 'screens', 'swipe right images', '5442712', 'i ve already built a view that can take a drawable can use focused pinch-zoom and drag can auto-scale images can switching images dynamically and takes images larger than the screens\n')
('switching', 'better compatability', 'screens', '', '8791721', 'switching to 2.2 framework which has better compatability with screens resolutions and densities\n')
('screens', 'smaller', 'switching', 'mobile landscape desktop', '31657992', 'the panels must be side by side for a large screens but they must be responsive and as the screens gets smaller and switching to vertical orientation\n')
('switching', 'more', 'screens', '', '36684777', 'and would the answer be different in a case where screens switching is more frequent like between an overworld screens and a battle screens in a game like final fantasy or pokemon\n')
('switching', 'bigger', 'screens', '', '1959842', 'when the switching gets bigger than a couple of screens full split it into functions that handle each state using a state table to look up the function directly\n')
('screens', 'longer elements', 'switching', '', '36792786', 'when the screens resizes the longer elements in my navbar switching to two lines to take up less space\n')
('screens', 'smaller', 'switching', 'mobile landscape desktop', '9591286', 'but when the screens is smaller than 900px we switching from fixed to liquid via media query switching to a liquid width will allow our images to scale down our text to wrap and a whole bunch of other great things\n')
('switching', 'larger', 'screens', 'swipe right images', '14789361', 'i am using view flipper to show bunch on images like a slider where i implemented the functionality of swipe left and right to switching images now some of my images are larger than the screens size in terms of height are getting hidden\n')

llvm	clang	3
('llvm', 'code faster', 'clang', '', '4628751', 'llvm compiles code faster than gcc may create code that runs faster and the clang frontend provides more accurate error messages than gcc √¢ so there are definitely reasons for switching\n')
('clang', 'better standard', 'llvm', '', '30585310', 'first fiber won t compile with apple clang because of the use of thread_local which apple does not support according to what i found online they think they can implement it better than standard llvm and don t want to introduce it only to break abi later\n')
('llvm', 'more compatible', 'clang', '', '30608407', 'good options are llvm libc++ static library fewer features more compatible with clang and gnu stl static library more features i had an issue that required me to turn the clang optimizer to -oz to prevent a segfault\n')

scheme	lisp	17
('scheme', 'better common', 'lisp', 'common uniform radical', '170948', 'here is a solution in scheme because i know that better than common lisp and have an interpreter for checking my work\n')
('scheme', 'smoother access', 'lisp', 'common uniform radical', '4587918', 'however gambit scheme has smoother access to c c++ code libraries which far outnumber common lisp s libraries\n')
('lisp', 'approach more conservative', 'scheme', 'common uniform radical', '16651843', 'i ve noticed that the common lisp approach is more conservative than the approach scheme has\n')
('lisp', 'many more characters', 'scheme', 'common uniform radical', '11683143', 'i noted that while in languages like c variable identifiers can only be alphanumberics and underscores common lisp allows many more characters to be used like and at least scheme does\n')
('scheme', 'somewhat simpler not', 'lisp', 'common uniform radical', '563472', 'it s popular it s actively developed it has many libraries offering the features of a modern programming environment and scheme is somewhat simpler not to say better just simpler than common lisp\n')
('scheme', 'less memory', 'lisp', '', '2741553', 'for a counterexample i think scheme programs ran faster and used less memory than the lisp programs that preceded them mdash\n')
('lisp', 'more verbose', 'scheme', 'common uniform radical', '19383232', 'common lisp has a separate namespace for functions which makes operation like this more verbose than with scheme\n')
('lisp', 'more', 'scheme', '', '3526596', 'my impression common lisp is more for getting stuff done scheme is more for education and fun\n')
('scheme', 'better other', 'lisp', '', '29022844', 't s purpose is to test the thesis developed by steele and sussman in their series of papers about scheme that scheme may be used as the basis for a practical programming language of exceptional expressive power and that implementations of scheme could perform better than other lisp systems and competitively with implementations of programming languages such as c and bliss which are usually considered to be inherently more efficient than lisp on conventional machine architectures\n')
('scheme', 'simpler language common', 'lisp', 'common uniform radical', '5691342', 'i don t see why sbcl should be so fast - scheme is a far simpler language than common lisp\n')
('lisp', 'more uniform', 'scheme', 'common uniform radical', '5372482', 'overall common lisp is much more uniform than scheme and more radical language experiments if done at all are usually embedded as a portable library rather than defining a whole new language dialect\n')
('scheme', 'fewer libraries common', 'lisp', 'common uniform radical', '4587918', 'scheme has fewer libraries than common lisp\n')
('scheme', 'fewer batteries', 'lisp', 'common uniform radical', '4587918', 'that said it is a scheme which has fewer batteries included as compared to common lisp\n')
('scheme', 'more user-friendly', 'lisp', 'ides user-friendly good', '2115070', 'i ve also found scheme ides much more user-friendly than lisp s plt scheme is a good one\n')
('scheme', 'older common', 'lisp', 'common uniform radical', '13225458', 'scheme is older than common lisp\n')
('scheme', 'intentionally more compact', 'lisp', 'common uniform radical', '3041805', 'scheme is intentionally more compact than common lisp and you ll find that you can learn the language very quickly\n')
('scheme', 'smaller', 'lisp', 'ides user-friendly good', '2973943', 'scheme is also a good language for that purpose and it is simpler smaller than lisp\n')

mongodb	bson	11
('mongodb', 'more flexible', 'bson', '', '4276683', 'mongodb stores everything in memory anyway and works in a similar vein being a key-value based system however i believe mongodb is more flexible as it allows for storing bson objects within themselves\n')
('bson', 'even more', 'mongodb', '', '33718403', 'the bson becomes even more annoying to work with when exporting data from mongo to another db platform this is the case when dealing with big data that is collected and you want to merge it with some properties from the back office mongodb this means a lot of pain you need to transform the binary objectid to a string in order to join with the id in different platforms that do not use bson representation\n')
('mongodb', 'more', 'bson', 'document nesting documents', '39535583', 'mongodb supports no more than 100 levels of nesting for bson documents\n')
('mongodb', 'more', 'bson', '', '10763863', 'a document in mongodb is more or less like a json structure bson to be specific\n')
('mongodb', 'more', 'bson', '', '30155258', 'the distinction between int64 and int32 in mongodb is more about bson storage size\n')
('mongodb', 'more', 'bson', 'document nesting documents', '34703648', 'basically mongodb supports no more than 100 levels of nesting for bson documents\n')
('bson', 'even more annoying', 'mongodb', '', '33718403', 'the bson becomes even more annoying to work with when exporting data from mongo to another db platform this is the case when dealing with big data that is collected and you want to merge it with some properties from the back office mongodb this means a lot of pain you need to transform the binary objectid to a string in order to join with the id in different platforms that do not use bson representation\n')
('mongodb', 'more', 'bson', '', '4276683', 'mongodb stores everything in memory anyway and works in a similar vein being a key-value based system however i believe mongodb is more flexible as it allows for storing bson objects within themselves\n')
('mongodb', 'more', 'bson', '', '33088282', 'mongodb supports no more than 100 levels of nesting for bson\n')
('bson', 'larger', 'mongodb', '', '43101666', 'so if your document bson is larger than 16 mb mongodb throws exception\n')
('mongodb', 'more', 'bson', 'document nesting documents', '19052828', 'mongodb supports no more than 100 levels of nesting for bson document.\n')

qtoolbutton	qpushbutton	4
('qtoolbutton', 'smaller', 'qpushbutton', '', '38580502', 'qtoolbutton has smaller default internal margins than qpushbutton\n')
('qtoolbutton', 'much more complex', 'qpushbutton', '', '38580502', 'qtoolbutton is much more complex under the hood than qpushbutton\n')
('qtoolbutton', 'much more', 'qpushbutton', '', '38580502', 'qtoolbutton is much more complex under the hood than qpushbutton\n')
('qtoolbutton', 'smaller default', 'qpushbutton', '', '38580502', 'qtoolbutton has smaller default internal margins than qpushbutton\n')

geddy	connect	3
('geddy', 'not better', 'connect', '', '10828487', 'geddy is not better than connect express the big thing that differs is the structure of it\n')
('geddy', 'better', 'connect', '', '10828487', 'geddy is not better than connect express the big thing that differs is the structure of it\n')
('geddy', 'better', 'connect', '', '10826795', 'so what makes geddy significantly better than connect\n')

unicorn	thin	4
('unicorn', 'faster', 'thin', '', '8022554', 'i m running unicorn which is about 40 faster than thin on celadon cedar\n')
('unicorn', 'better performance', 'thin', '', '15755155', 'in production it is much better to use a more sophisticated server like phusion passenger or unicorn since they have better performance than thin mongrel or webrick\n')
('unicorn', 'better choice', 'thin', '', '21745505', 'jruby support - unicorn s a better choice than thin but it doesn t support jruby\n')
('unicorn', 'better', 'thin', '', '21745505', 'jruby support - unicorn s a better choice than thin but it doesn t support jruby\n')

font-size	width	6
('font-size', 'wider', 'width', 'value increment element', '8490195', 'i initialize the loop with this value and increment the font-size with 1 until the string is wider than the width of the containing element\n')
('font-size', 'larger', 'width', '', '15319528', 'as you can see the font-size of the text is bit larger than the width of the noisy lines\n')
('font-size', 'greater', 'width', '', '24730789', 'when you are using fittext at that time if the font-size is greater than 100px than you have to set the exact width as per your font-size\n')
('width', 'less', 'font-size', '', '31454005', 'the first media query says that if the screen width is less than 992px the h2 in the item class should have a font-size of 3rem should be red and should have an underline\n')
('width', 'smaller', 'font-size', '', '39202362', 'you can remove the transform s and the margin-left and add a width set as 0 here smaller than the font-size 16px here to the get the effect\n')
('width', 'wider', 'font-size', 'value increment element', '9526369', 'from there on the width slowly increases again as the part of the string still on line 1 linearly gets wider as the font-size increases\n')

testng	junit	25
('testng', 'better', 'junit', 'better easier', '6216983', 'isn t testng supposed to a better than junit\n')
('junit', 'more popular', 'testng', '', '3412814', 'to be perfectly honest i junit is way more popular than testng at least here where i work and live\n')
('junit', 'easier', 'testng', 'better easier', '24033060', 'i know this can be achieved with junit but in my experience it is easier with testng\n')
('testng', 'more capabilities', 'junit', '', '6738770', 'testng has more capabilities and can be helpful with integration tests junit is more focused on unit tests\n')
('testng', 'more configurable', 'junit', '', '6671', 'testng strives to be much more configurable than junit but in the end they both work equally well\n')
('junit', 'better results', 'testng', '', '26423195', 'firstly i am not sure how to properly use multi-thread with junit last time i tried i had no success anyway i have had better results with testng\n')
('testng', 'more flexible', 'junit', '', '430883', 'testng is more flexible than junit and have multiple advantages like support for parallel testing for example\n')
('junit', 'more direct', 'testng', '', '1686834', 'junit is more direct and simpel to use if you start to learn java testng has more features but maybe is more complex\n')
('testng', 'bigger', 'junit', '', '34398541', 'in case if you have flexibility to choose another testing framework you can try with testng which has bigger feature set than junit\n')
('junit', 'more', 'testng', '', '3411768', 'edit it seems junit has more printed books as references compared to testng on amazon\n')
('testng', 'better option', 'junit', '', '6349659', 'if you re doing non-unit testing testng might be a better option than junit\n')
('testng', 'more', 'junit', '', '430883', 'testng is more flexible than junit and have multiple advantages like support for parallel testing for example\n')
('testng', 'more options', 'junit', '', '10596592', 'testng offers you more options and possibilites how to run your tests and in which order especially something junit can t\n')
('testng', 'more', 'junit', '', '1823057', 'if you have to do a lot of this honestly testng is more flexible but you can absolutely get it done in junit\n')
('testng', 'bigger feature', 'junit', '', '34398541', 'in case if you have flexibility to choose another testing framework you can try with testng which has bigger feature set than junit\n')
('junit', 'better solution', 'testng', '', '913928', 'if there is a junit extension or similar framework that provides a better solution than testng then please let me know\n')
('testng', 'more', 'junit', '', '10596592', 'testng offers you more options and possibilites how to run your tests and in which order especially something junit can t\n')
('junit', 'more', 'testng', '', '1686834', 'junit is more direct and simpel to use if you start to learn java testng has more features but maybe is more complex\n')
('testng', 'more flexible', 'junit', '', '1823057', 'if you have to do a lot of this honestly testng is more flexible but you can absolutely get it done in junit\n')
('testng', 'much friendlier', 'junit', '', '811937', 'testng is much friendlier to this paradigm than junit though\n')
('testng', 'more contrived', 'junit', '', '6726758', 'here is what it would look like with testng it s a little more contrived with junit since you can t pass parameters directly to test functions\n')
('junit', 'way more', 'testng', '', '3412814', 'to be perfectly honest i junit is way more popular than testng at least here where i work and live\n')
('junit', 'easier', 'testng', 'better easier', '11842853', 'if you are familiar of using junit it is easier to switch into testng\n')
('junit', 'way more popular', 'testng', '', '3412814', 'to be perfectly honest i junit is way more popular than testng at least here where i work and live\n')
('testng', 'more', 'junit', '', '6738770', 'testng has more capabilities and can be helpful with integration tests junit is more focused on unit tests\n')

webclient	webrequest	10
('webrequest', 'just more', 'webclient', '', '18410138', 'webrequest just offers you more functonality than webclient\n')
('webclient', 'simpler', 'webrequest', 'simpler easier', '449918', 'webclient is simpler to use than webrequest\n')
('webclient', 'simplier api', 'webrequest', '', '27555959', 'to get the html instead of hardcoding it as above use the webclient class since it has a simplier api than webrequest\n')
('webclient', 'more', 'webrequest', '', '1726749', 'update i ve created a webhelper class that takes the place of webclient but provides more access to the necessary features of the underlying webrequest\n')
('webrequest', 'more functonality', 'webclient', '', '18410138', 'webrequest just offers you more functonality than webclient\n')
('webclient', 'shorter', 'webrequest', '', '7688412', 'webclient is a shorter and more concise syntax but behind the scenes it uses a webrequest so in terms of performance it won t be faster it will be equivalent\n')
('webrequest', 'just more functonality', 'webclient', '', '18410138', 'webrequest just offers you more functonality than webclient\n')
('webclient', 'sometimes easier', 'webrequest', 'simpler easier', '91317', 'webclient is sometimes easier to use than webrequest\n')
('webclient', 'more access', 'webrequest', '', '1726749', 'update i ve created a webhelper class that takes the place of webclient but provides more access to the necessary features of the underlying webrequest\n')
('webclient', 'easier', 'webrequest', 'simpler easier', '7779848', 'a webclient is much easier than a webrequest\n')

udp	tcp	215
('udp', 'faster', 'tcp', 'simple faster set', '47929', 'udp is faster than tcp and the simple reason is because its nonexistent acknowledge packet ack that permits a continuous packet stream instead of tcp that acknowledges a set of packets calculated by using the tcp window size and round-trip time rtt\n')
('tcp', 'much better', 'udp', 'better specific surprising', '4416038', 'tcp is much better than udp in terms of reliability\n')
('tcp', 'slower', 'udp', 'faster reliable slower', '42298194', 'tcp has to do a lot of error checking to ensure that your packets don t get dropped and so tcp is much slower than udp\n')
('udp', 'more', 'tcp', 'better specific surprising', '7400055', 'udp is more popular in nat punching because provides much better results than tcp\n')
('tcp', 'socket even more likely', 'udp', 'work likely socket', '6527310', 'tcp socket is even more likely than udp socket but both work\n')
('udp', 'higher', 'tcp', 'higher subject latencies', '5561668', 'so assess the situation the development cost of a udp transport is higher to significantly higher than tcp and to some degree you are re-inventing tcp\n')
('udp', 'connection faster', 'tcp', 'faster reliable slower', '46038937', 'i know that in practice this would only happen with a great amount of connection given that processing time of an udp connection is faster than tcp but it could potentially happen\n')
('tcp', 'connections more', 'udp', '', '9047315', 'it may be that the kernel heuristics for servering tcp connections is more aggressive than for udp sockets since tcp connections require more state and more continuous processing than do udp sockets\n')
('tcp', 'windowing more', 'udp', '', '1930483', 'tcp windowing is more expensive than raw udp but if you use udp to go faster and add a custom loss-recovery or seqno ack resend manager then that may slow you down again\n')
('udp', 'faster', 'tcp', 'faster reliable slower', '34408250', 'i know udp is faster than tcp for various reason\n')
('tcp', 'slower', 'udp', 'faster reliable slower', '8813553', 'tcp is slower assures data arrival udp is faster data corruption may be possible\n')
('udp', 'simpler protocol', 'tcp', 'simpler traversal nat', '2576102', 'udp is simpler protocol than tcp and you can still simulate features of tcp using udp\n')
('tcp', 'higher level', 'udp', 'higher subject latencies', '16388203', 'actually we could say that tcp is a higher level protocol compared to udp because tcp includes some advanced features which might be useful .\n')
('udp', 'faster', 'tcp', 'faster reliable slower', '19019042', 'we propose to use udp over tcp since udp is faster than tcp\n')
('udp', 'lower latency', 'tcp', '', '10624972', 'like matzi suggested udp gives you lower latency and lower packet overhead as the header is smaller than tcp but on the downside the delivery of the packet to the destination is never guaranteed ie\n')
('udp', 'easier structured', 'tcp', 'faster reliable slower', '8059790', 'udp packets are easier structured than tcp packets but sacrifice security for their size\n')
('tcp', 'way better', 'udp', 'better specific surprising', '14199053', 'tcp is way better then udp for that\n')
('tcp', 'more', 'udp', 'complex implementation instructions', '1100868', 'some protocols are more complex because what s needed are some but not all of the features of tcp but more than what udp provides\n')
('udp', 'lower overhead', 'tcp', 'overhead lower recipient', '8783507', 'udp sockets have much lower overhead than tcp because packets are not acknowledged by the recipient\n')
('udp', 'connectionless more', 'tcp', '', '1442901', 'a heartbeat is by nature a connectionless contrivance so it goes that udp connectionless is more relevant here than tcp connection-oriented\n')
('tcp', 'less helpful', 'udp', '', '24101612', 'tcp streaming for audio can be less helpful than udp rtp as you d have to turn off nagling\n')
('tcp', 'more reliable', 'udp', 'faster reliable slower', '1898944', 'what i have thought of so far is that tcp is going to be more reliable than udp and in rmi corba we want network reliability\n')
('udp', 'more', 'tcp', '', '36464786', 'i ve considered that udp is more suitable for sending a series of discrete data sets but i need the reliability of tcp\n')
('udp', 'more efficient', 'tcp', '', '44406907', 'it seems like udp will more efficient than tcp\n')
('udp', 'less', 'tcp', 'overhead lower recipient', '36116201', 'generally speaking udp has less overhead than tcp allowing you to receive more data but this is not a strict rule and is almost negligible in this context\n')
('udp', 'much better just', 'tcp', 'better specific surprising', '17652027', 'instead of implementing all these over udp it is much better just to switch to tcp\n')
('udp', 'knottier', 'tcp', '', '3541790', 'normally a server wouldn t need to know the client s address beforehand but udp s knottier than tcp the more usual stream-oriented approach to socket communication in many ways\n')
('tcp', 'more reliable', 'udp', '', '4551201', 'you could get them to do a udp multicast within a lan environment to identify the programs using protocol messages then have a stored cache of each other s identity and then use tcp to connect and do main exchanging of messages which is more reliable than udp\n')
('tcp', 'slower', 'udp', 'faster reliable slower', '21729285', 'try to increase timeout value tcp is slower than udp\n')
('udp', 'faster', 'tcp', 'faster packets connection', '18660445', 'use socket for tcp and datagram for udp its a lot faster than tcp but less connection oriented\n')
('udp', 'less reliable', 'tcp', 'faster reliable slower', '4884364', 'and there are no handshakings required udp are pretty much faster but less reliable than tcp\n')
('tcp', 'far better', 'udp', 'better specific surprising', '3918611', 'tcp is far better at transferring large quantities of data but when the network fails it s more likely that udp will get through\n')
('udp', 'faster', 'tcp', 'faster reliable slower', '8110762', 'i don t think you should make the assumption that udp is faster than tcp\n')
('udp', 'less reliable', 'tcp', 'faster reliable slower', '17310250', 'udp is way lighter and faster but somewhat less reliable than tcp\n')
('udp', 'more', 'tcp', '', '27706980', 'the downsides are that it is unreliable messages can be dropped or corrupted therefore you may want to add some safety and that some isp may restrict udp more than tcp test yourself to be sure but usually there is no problems\n')
('udp', 'better', 'tcp', 'better specific surprising', '16924212', '-- does udp always perform better than tcp\n')
('udp', 'less overhead', 'tcp', 'faster reliable slower', '799142', 'udp has less overhead than tcp and is therefore faster\n')
('udp', 'less costly', 'tcp', '', '20753875', 'also if you have very limited memory processing resources it is worth bearing in mind that udp is a less costly protocol as it avoids a lot of the overheads tcp incurs due to its inbuilt connection management\n')
('tcp', 'slower', 'udp', 'faster reliable slower', '9627280', 'because of tcp requires connection and provides security it is slower than udp and therefore it should not be preffered during a video streaming\n')
('udp', 'generally faster', 'tcp', 'faster reliable slower', '5862704', 'udp is generally faster than tcp as it does not have to do the overhead checking of consistency that tcp must deal with\n')
('udp', 'far more appropriate', 'tcp', '', '1946932', 'btw i concur that udp is far more appropriate than tcp in this case\n')
('udp', 'less', 'tcp', '', '9287416', 'udp is less reliable on a wide area network but in a closed environment of a vm talking to its host you can safely skip all the tcp reliability stuff\n')
('tcp', 'slower', 'udp', 'faster reliable slower', '9952101', 'that among other things is why tcp is considered more reliable but slower than udp\n')
('tcp', 'slower', 'udp', 'faster reliable slower', '11455687', 'tcp is slower than udp and you ll have to mitigate that in realtime multiplayer\n')
('tcp', 'better', 'udp', 'better specific surprising', '28819659', 'it is worth nothing that in a link where udp and tcp are sharing the bandwidth tcp is better behaved than udp in that it will try to limit itself to avoid congestion\n')
('tcp', 'more reliable', 'udp', 'faster reliable slower', '5431991', 'tcp is certainly going to be more reliable than udp since udp doesn t guarantee packet delivery which is probably why you application is hanging on the receive\n')
('tcp', 'much slower', 'udp', '', '13245606', 'please note however that this architecture implements tcp which is much slower than udp and will not work for any type of fast-paced data intensive games but should accomplish your goals given your description above\n')
('udp', 'smaller', 'tcp', 'bigger smaller issues', '26496961', 'the package is bigger than udp s package but smaller than tcp s package\n')
('udp', 'less reliable', 'tcp', '', '9287416', 'udp is less reliable on a wide area network but in a closed environment of a vm talking to its host you can safely skip all the tcp reliability stuff\n')
('tcp', 'more accurate', 'udp', '', '22241001', 'i m aware of the differences in general the facts like tcp is more accurate while udp is more fast\n')
('udp', 'smaller latency', 'tcp', 'bigger smaller issues', '41563268', 'udp gives smaller latency with many many issues to discuss here of course tcp gives bigger latency\n')
('tcp', 'more secure', 'udp', 'faster packets connection', '22152967', 'the decision on yours the tcp protocol used for connection oriented network that is more secure than udp\n')
('tcp', 'better', 'udp', 'better specific surprising', '26325721', 'for some requirements tcp is better for some udp\n')
('udp', 'less complex', 'tcp', 'complex implementation instructions', '12082396', 'in my experience udp based code is generally less complex than tcp based code\n')
('udp', 'faster', 'tcp', 'faster reliable slower', '33426807', 'udp is not always faster than tcp\n')
('tcp', 'header more', 'udp', 'header connection size', '45039592', 'you will notice that the tcp header has more fields than the udp header and many of those fields will be populated by information from the handshake\n')
('tcp', 'connections more aggressive', 'udp', '', '9047315', 'it may be that the kernel heuristics for servering tcp connections is more aggressive than for udp sockets since tcp connections require more state and more continuous processing than do udp sockets\n')
('udp', 'harder', 'tcp', 'harder sequence events', '5869634', 'udp port scanning is possible but it is harder than tcp scanning\n')
('udp', 'significantly easier', 'tcp', 'better specific surprising', '3568783', 'udp is significantly easier do you really need tcp btw\n')
('udp', 'less', 'tcp', 'header connection size', '39079959', 'why the header size of udp is less than tcp\n')
('udp', 'faster', 'tcp', 'faster packets connection', '37632320', 'i am using udp because it is much faster than tcp but sometimes i need the know for sure if the packet reached to the other side in my program i can not use tcp at all so i am sending ack packets\n')
('tcp', 'more reliable', 'udp', '', '47535739', 'tldr tcp ip is more reliable than udp but not a 100 iron-clad guarantee that nothing will ever go wrong\n')
('udp', 'lower performance', 'tcp', '', '33396509', 'if you were attempting to beat the performance of tcp by shifting to udp keep in mind that part of the reason you get lower performance with tcp is because tcp tracks and redelivers the lost packets for you\n')
('udp', 'faster', 'tcp', 'faster reliable slower', '12045089', 'don t think of it as udp is faster and tcp is slower because that s just wrong\n')
('udp', 'faster', 'tcp', 'faster reliable slower', '18811601', 'because there is no confirmation on udp packets it s slightly faster than tcp\n')
('udp', 'really faster', 'tcp', 'simple faster set', '12530442', 'udp is really faster than tcp and the simple reason is because it s non-existent acknowledge packet ack that permits a continuous packet stream instead of tcp that acknowledges a set of packets calculatd by using the tcp window size and round-trip time rtt .\n')
('udp', 'worse', 'tcp', '', '5485831', 'also note that it is easy to implement your own stack on top of udp that performs worse than tcp\n')
('udp', 'faster', 'tcp', 'faster reliable slower', '35262131', 'udp is extremely faster than tcp which is suitable to stream a user s voice input\n')
('udp', 'lower', 'tcp', '', '10624972', 'like matzi suggested udp gives you lower latency and lower packet overhead as the header is smaller than tcp but on the downside the delivery of the packet to the destination is never guaranteed ie\n')
('udp', 'lower overhead', 'tcp', 'overhead lower recipient', '584128', 'udp has a much lower overhead than tcp\n')
('udp', 'more appropriate', 'tcp', '', '1946932', 'btw i concur that udp is far more appropriate than tcp in this case\n')
('udp', 'lighter', 'tcp', 'lighter', '19535121', 'yes udp is much much lighter than tcp\n')
('tcp', 'better', 'udp', 'better specific surprising', '9235592', 'for this particular application sending simple data chunk to the client from an index given by the client tcp will not perform any better than udp\n')
('tcp', 'more', 'udp', 'overhead lower recipient', '27732495', 'moreover tcp has more processing overhead than udp\n')
('udp', 'faster', 'tcp', 'high faster reliability', '28675216', 'there is a perception that udp is faster than tcp but i think it depends on the situation - take a look at this discussion for some further discussion on speed reliability etc between udp and tcp go down through all the high scored answers\n')
('udp', 'better', 'tcp', 'better specific surprising', '16924492', 'does udp always perform better than tcp\n')
('udp', 'much easier', 'tcp', 'simpler traversal nat', '20769240', 'as such traversing a nat through udp is much easier than tcp\n')
('tcp', 'slower', 'udp', 'faster reliable slower', '4086350', 'with tcp its slightly slower than udp and has more features\n')
('tcp', 'better', 'udp', 'better specific surprising', '32270156', 'we know tcp is better suited for this but the hardware development decided it s got to be udp\n')
('udp', 'faster', 'tcp', 'faster reliable slower', '5978352', 'the reason udp is faster than tcp is because there is no form of flow control or error correction\n')
('udp', 'faster', 'tcp', '', '1514244', 'theoretically udp should be be 30-50 faster than tcp because it s missing the extra trip for the ack and has a smaller header overhead however in reality there are many cases where tcp would outperform udp just because of congestion control\n')
('udp', 'easier', 'tcp', 'simpler traversal nat', '7374426', 'keep in mind that implementing udp traversal is easier than tcp\n')
('tcp', 'more', 'udp', '', '22241001', 'i m aware of the differences in general the facts like tcp is more accurate while udp is more fast\n')
('tcp', 'slower', 'udp', '', '37656151', 'i was going through internet and so and understood that web sockets are encapsulations to tcp which by itself is slower than udp ofcourse at the cost of reliability but i couldnt find much info if websockets or udp would be ideal to implement such a server\n')
('tcp', 'more generally', 'udp', 'simpler traversal nat', '31235299', 'as far as tcp goes i think tcp is more generally used protocol for more data-centric requests like chat or things that require packet integrity udp tolerates packet loss to lower latency\n')
('udp', 'better performance', 'tcp', 'better specific surprising', '16442504', 'udp will almost always provide better performance than tcp at the cost of reliability\n')
('tcp', 'better', 'udp', 'better specific surprising', '16924212', 'i used iperf on two linux machines to send data using both udp and tcp i found that tcp performs better than udp average 65 better\n')
('udp', 'faster', 'tcp', 'faster packets connection', '42887950', 'in a congested network yes udp will send its packets faster than tcp this is because tcp takes then congestion into account using a mechanism called congestion control\n')
('udp', 'simpler', 'tcp', 'simpler traversal nat', '14297743', 'also sending receiving data over udp is much simpler than over tcp and it does not require any connections\n')
('udp', 'simpler', 'tcp', 'faster reliable slower', '3424324', 'a udp stack is considerably simpler than a tcp stack\n')
('udp', 'faster', 'tcp', 'faster reliable slower', '47079177', 'udp is faster and requires less bandwidth than tcp\n')
('udp', 'faster', 'tcp', 'faster reliable slower', '24726976', 'only when packets can be discarded unordered can udp be faster than tcp\n')
('udp', 'faster', 'tcp', 'faster reliable slower', '7603776', 'from experience i can tell you udp is about 10-15 faster than tcp on dedicated and udp-tuned networks\n')
('udp', 'easier', 'tcp', 'simpler traversal nat', '33116934', 'but with the udp protocol in particular this is easier than for tcp\n')
('tcp', 'faster', 'udp', 'faster reliable slower', '16589674', 'i was expecting that udp would be faster but tcp is on average two times faster than udp\n')
('udp', 'simpler', 'tcp', 'simpler traversal nat', '45200423', 'first of udp s datagram is simpler than tcp s one\n')
('udp', 'better', 'tcp', '', '17509301', 'i did some research and found that udp may be more suitable in this case because udp hole punching works much better than tcp hole punching\n')
('tcp', 'ip more', 'udp', '', '47535739', 'tldr tcp ip is more reliable than udp but not a 100 iron-clad guarantee that nothing will ever go wrong\n')
('udp', 'less network', 'tcp', 'overhead lower recipient', '39556790', 'while udp has less network overhead than tcp it generally relies on you the developer to come up with your own mechanisms for flow control fragmentation handling lost packets etc.\n')
('udp', 'less', 'tcp', '', '20753875', 'also if you have very limited memory processing resources it is worth bearing in mind that udp is a less costly protocol as it avoids a lot of the overheads tcp incurs due to its inbuilt connection management\n')
('tcp', 'bigger', 'udp', '', '9047258', 'the problem is that tcp creates bigger packages of data while udp uses 8 kb of data blocks\n')
('udp', 'better', 'tcp', 'better specific surprising', '11338428', 'short answer if you can tolerance with any packet loss udp is better otherwise tcp\n')
('tcp', 'windowing more expensive', 'udp', '', '1930483', 'tcp windowing is more expensive than raw udp but if you use udp to go faster and add a custom loss-recovery or seqno ack resend manager then that may slow you down again\n')
('udp', 'higher performance', 'tcp', 'higher subject latencies', '8796401', 'as an additional note my suspicion is that you d need to indulge yourself in some pretty sophisticated benchmarks before you could conclude that udp is actually going to have higher performance than tcp for web services\n')
('tcp', 'slower', 'udp', 'faster reliable slower', '8143223', 'tcp is a bit slower than udp but more failsafe\n')
('udp', 'far more', 'tcp', '', '1946932', 'btw i concur that udp is far more appropriate than tcp in this case\n')
('tcp', 'much more', 'udp', '', '31849345', 'for example tcp has much more flags window-length syn ack etc - and also starts and ends a connection in a very stable way - the three way handshake - while all udp has is source ip dest ip length source port dest port and checksum\n')
('tcp', 'slower', 'udp', 'faster reliable slower', '32354639', 'the reason i asking this is because i read tcp is slower than udp because tcp ensures order of packets\n')
('udp', 'absolutely faster', 'tcp', 'high faster reliability', '21363292', 'if the network between the two point have a very high quality udp is absolutely faster than tcp but in some other case such as the gprs network tcp may been faster and more reliability than udp\n')
('tcp', 'better', 'udp', '', '23080381', 'in practice this means that tcp is better suited for continuous transmission of data whereas the more lightweight udp can be used when reliability isn t important\n')
('tcp', 'much more complicated', 'udp', 'simpler traversal nat', '10861938', 'it was introduced since the nat traversal for tcp is much more complicated than udp\n')
('udp', 'slower', 'tcp', 'faster reliable slower', '9300555', 'maybe one of you guys already sees a problem in the code snippets or have any other suggestion or hint for me why my udp transmission is slower than tcp\n')
('udp', 'better', 'tcp', 'better specific surprising', '35549074', 'if you care a lot about efficiency or really need tens of thousands of connections then implementing your specific protocol in udp will always be better than tcp\n')
('udp', 'faster', 'tcp', '', '18107414', 'as a general rule udp is faster than tcp due to less protocol overhead\n')
('udp', 'less chatty', 'tcp', 'simpler traversal nat', '29499218', 'in gaming especially fpss udp tends to be the chosen protocol because it s much less chatty than tcp\n')
('udp', 'more suitable', 'tcp', '', '36464786', 'i ve considered that udp is more suitable for sending a series of discrete data sets but i need the reliability of tcp\n')
('tcp', 'slower', 'udp', 'faster reliable slower', '11890330', 'tcp is much slower than udp but when the two machines are not on the same lan udp is not reliable\n')
('tcp', 'better', 'udp', '', '44155229', 'note that there are exceptions to the above - for example tcp generally traverses firewalls better than udp which may be blocked due to security to traffic policy reasons so voip speech may sometimes be sent over tcp for part of its journey at least\n')
('tcp', 'socket much harder', 'udp', 'harder sequence events', '6437427', 'when writing your server bear in mind that the sequence of events for a tcp socket is much harder than for a udp socket since as well as the normal socket and bind calls you also have to listen and accept\n')
('tcp', 'slower', 'udp', 'simple faster set', '21942178', 'apart from that tcp packets by themselves are not slower than udp packets and data transfer with a simple tcp connection can be faster than with a simple udp connection because flow control and reliable transfer is already integrated and you don t have to reinvent everything again and often worse\n')
('udp', 'smaller', 'tcp', '', '10624972', 'like matzi suggested udp gives you lower latency and lower packet overhead as the header is smaller than tcp but on the downside the delivery of the packet to the destination is never guaranteed ie\n')
('udp', 'faster', 'tcp', 'simple faster set', '12855045', 'in a native application i would use udp for the most data player position ... because it s way faster than tcp and it s uncritical when it is lost\n')
('tcp', 'faster', 'udp', 'faster reliable slower', '33911237', 'i read in a case where a stream of 300 byte packets was being sent over ethernet 1500 byte mtu and tcp was 50 faster than udp\n')
('udp', 'less stringent', 'tcp', '', '2588997', 'instead you can use udp and implement your own scheme for verification of data that is less stringent than tcp\n')
('udp', 'better choice', 'tcp', 'better specific surprising', '8587512', 'the key question was related to what kind of situations would udp be the better choice over tcp\n')
('tcp', 'bigger packages', 'udp', '', '9047258', 'the problem is that tcp creates bigger packages of data while udp uses 8 kb of data blocks\n')
('tcp', 'better', 'udp', 'better specific surprising', '7329214', 'but when i used iperf on two linux machines to send data using both udp and tcp i found that tcp performs better than udp for 10mb of data\n')
('tcp', 'slower', 'udp', 'faster packets connection', '31891715', 'if the data is critical you should go for tcp which is slower as compared to udp which in fact doesn t guarantee the packets will arrive in order or even if they d arrive or not\n')
('udp', 'simpler', 'tcp', 'simpler traversal nat', '4701184', 'you can use udp as well but if you are dealing with firewalls it is probably going to be simpler with tcp\n')
('udp', 'faster', 'tcp', 'faster reliable slower', '4147351', 'udp protocol is unreliable but much much faster than tcp which is most commonly used for communication\n')
('udp', 'significantly faster', 'tcp', 'faster reliable slower', '3424324', 'udp is significantly faster than tcp and is why it is or was used for video and various things back in the day\n')
('tcp', 'higher throughput', 'udp', '', '36317272', 'what is that key feature in tcp that makes it have much much higher throughput than udp\n')
('udp', 'better', 'tcp', 'better specific surprising', '25287117', 'since loosing some packets doesn t matter but speed latency is crucial udp is much better than tcp\n')
('tcp', 'more overhead', 'udp', 'overhead lower recipient', '5520735', 'certainly tcp has more overhead than udp\n')
('tcp', 'more processing', 'udp', '', '5978352', '2 tcp needs more processing at network interface level where as in udp it√¢ s not\n')
('udp', 'slower', 'tcp', 'faster reliable slower', '36317272', 'i suppose this is one of the reasons for the misconception that udp is slower than tcp\n')
('udp', 'faster', 'tcp', 'faster reliable slower', '27193974', 'tcp as you know udp is faster than tcp even if udp may miss some\n')
('udp', 'faster', 'tcp', 'faster reliable slower', '13413608', 'this is the reason why udp is much faster than tcp\n')
('udp', 'better', 'tcp', 'better specific surprising', '16924212', 'this was surprising for me as i expected udp to perform better than tcp\n')
('tcp', 'higher latencies', 'udp', 'higher subject latencies', '5423061', 'tcp is subject to higher latencies than udp as it requires the client to send back packet confirmations\n')
('udp', 'connectionless more relevant', 'tcp', '', '1442901', 'a heartbeat is by nature a connectionless contrivance so it goes that udp connectionless is more relevant here than tcp connection-oriented\n')
('tcp', 'ip more reliable', 'udp', '', '47535739', 'tldr tcp ip is more reliable than udp but not a 100 iron-clad guarantee that nothing will ever go wrong\n')
('tcp', 'better option', 'udp', 'better specific surprising', '6104661', 'if you can t afford lost packets then tcp is probably a better option than udp since it provides that guarantee out of the box\n')
('udp', 'more', 'tcp', 'bigger iot domain', '44773502', 'but there are some cases especially in iot domain udp is more popular than tcp for its bigger transport overheads\n')
('udp', 'connection less', 'tcp', 'header connection size', '4533720', 'udp is connection less but at the same level as tcp\n')
('udp', 'less latency', 'tcp', '', '20769240', 'udp lends itself to real-time less latency than tcp\n')
('udp', 'faster', 'tcp', 'faster reliable slower', '47127660', 'udp should be much faster than tcp because there are no acknowledge and congestion detection\n')
('udp', 'better', 'tcp', 'better specific surprising', '7329214', 'scenario where udp is better than tcp\n')
('tcp', 'more reliable', 'udp', 'faster reliable slower', '31179758', 'tcp ip is supposed to be more reliable than udp ip see this comparison\n')
('tcp', 'slower', 'udp', 'faster reliable slower', '19081574', 'in doing so the tradefoff is that tcp becomes slower compared to udp\n')
('tcp', 'generally firewalls better', 'udp', '', '44155229', 'note that there are exceptions to the above - for example tcp generally traverses firewalls better than udp which may be blocked due to security to traffic policy reasons so voip speech may sometimes be sent over tcp for part of its journey at least\n')
('tcp', 'more reliable', 'udp', 'faster reliable slower', '584131', 'tcp mounts are more reliable and you know you have a network problem much faster than with udp\n')
('tcp', 'slower', 'udp', 'faster reliable slower', '7287150', 'the problem with using tcp is obviously that it is a lot slower than udp\n')
('tcp', 'much more flags', 'udp', '', '31849345', 'for example tcp has much more flags window-length syn ack etc - and also starts and ends a connection in a very stable way - the three way handshake - while all udp has is source ip dest ip length source port dest port and checksum\n')
('udp', 'faster', 'tcp', 'faster reliable slower', '5594213', 'udp is faster than tcp because packets are sent without guarantee of delivery nor order\n')
('udp', 'more', 'tcp', 'faster reliable slower', '27344909', 'note that udp is more difficult to work with than tcp because packets are not always guaranteed to be delivered\n')
('udp', 'less', 'tcp', 'simpler traversal nat', '39079959', 'the fact that udp s header size is less than tcp s is because is a simpler protocol that needs less header space that s all there is to it\n')
('udp', 'more relevant here', 'tcp', '', '1442901', 'a heartbeat is by nature a connectionless contrivance so it goes that udp connectionless is more relevant here than tcp connection-oriented\n')
('udp', 'better', 'tcp', 'better specific surprising', '14749840', 'i think udp will perform better than tcp gcdasyncsocket in your case video transfer\n')
('udp', 'better', 'tcp', 'better specific surprising', '7329214', 'this was surprising for me as it is well known fact that udp performs better than tcp\n')
('tcp', 'faster', 'udp', 'faster reliable slower', '44746784', 'for example i read an experiment in which a stream of 300 byte packets was being sent over ethernet 1500 byte mtu and tcp was 50 faster than udp\n')
('udp', 'faster reliable communication', 'tcp', 'faster reliable slower', '4361953', 'http is an application layer protocol which could be encapsulated with a protocol that uses udp providing arguably faster reliable communication than tcp\n')
('udp', 'faster', 'tcp', 'faster reliable slower', '2280675', 'also see this other so answer about the misconception that udp is always faster than tcp\n')
('tcp', 'harder', 'udp', 'simpler traversal nat', '10491782', 'but it sounds like you want to do nat traversal over tcp which is a harder problem than udp\n')
('udp', 'less', 'tcp', 'header connection size', '39079245', 'getting much more information is needed in the packet header for connection less like udp but why the header size of udp is less than tcp\n')
('tcp', 'slower', 'udp', 'faster reliable slower', '2290873', 'tcp is reliable but slower than udp while udp is not safe and i have to implement my own fault-handling codes\n')
('udp', 'lighter', 'tcp', 'lighter', '38817314', 'if you can do everything with udp it is lighter than tcp\n')
('udp', 'faster', 'tcp', 'faster packets connection', '9286808', 'for instance zeromq can leverage udp multicast to run faster than any tcp protocol but the application programmer doesn t need to learn a new api\n')
('tcp', 'slower', 'udp', 'faster reliable slower', '41901995', '4 tcp is a slower than udp\n')
('udp', 'better', 'tcp', 'better specific surprising', '16924492', 'or is there any specific scenario where udp is better than tcp\n')
('udp', 'less overhead', 'tcp', 'faster reliable slower', '1099695', 'most importantly you can easily supplement udp with some reliable delivery hand-shaking that s less overhead than tcp\n')
('udp', 'faster', 'tcp', 'faster reliable slower', '39323928', 'if i d directly say that udp is faster comparatively than tcp that it is used for such applications\n')
('tcp', 'worse', 'udp', '', '25587789', 'if your client connections are more or less permanent and not too many clients are connected at the same time tcp is only slightly worse than udp\n')
('udp', 'more', 'tcp', 'header connection size', '19350736', 'udp is more of a fire and forget whereas tcp maintains a connection state\n')
('tcp', 'faster', 'udp', 'faster reliable slower', '9552483', 'what s currently baffling me is in my results tcp finishes almost 2x faster than udp\n')
('tcp', 'better', 'udp', 'better specific surprising', '30156943', 'i know tcp is better to send file but i have a homework about sending file via udp protocol\n')
('udp', 'quicker', 'tcp', 'faster reliable slower', '28679224', 'udp is quicker than tcp but if you re using quickfix you ll be using tcp\n')
('udp', 'slower', 'tcp', 'faster reliable slower', '9300555', 'i assumend that the transmission using udp have to be much faster than using tcp but in fact my tests proved that the udp transmission is about 7 to 8 times slower than using tcp\n')
('tcp', 'safer choice', 'udp', '', '28038806', 'i know tcp is a safer choice but let s assume i can only use udp and i need to ensure i can send packets over at a high rate with no missing packets what should i do\n')
('tcp', 'more reliable protocol', 'udp', 'faster reliable slower', '31849345', 'tcp is a slower more reliable protocol than udp is\n')
('tcp', 'better', 'udp', '', '24411213', 'hello to all i am developing an application that needs to send a image via the udp socket.i know that tcp is a better protocol but playing with kryonet in java i have learnt that udp is better for this type of application.i have this small class that i have made\n')
('udp', 'faster', 'tcp', 'faster reliable slower', '8947847', 'in that sense reliable udp cannot be faster than tcp\n')
('tcp', 'bigger payload', 'udp', 'bigger iot domain', '3156544', 'tcp sockets- guaranteed delivery bigger payload than udp cumbersome to setup for web based solutions\n')
('tcp', 'slower', 'udp', '', '13245606', 'please note however that this architecture implements tcp which is much slower than udp and will not work for any type of fast-paced data intensive games but should accomplish your goals given your description above\n')
('udp', 'better', 'tcp', '', '43107922', 'if you re more interested in latency and small amounts of data then something udp based could be better than tcp but you d need to build extra logic for ordering the messages and retrying the lost ones\n')
('tcp', 'faster', 'udp', 'faster packets connection', '1581034', 'at my company we have found memory mapped files to be much faster than loopback tcp ip for communication on the same box so i m assuming it would be faster than udp too\n')
('tcp', 'bigger', 'udp', 'bigger smaller issues', '10315535', 'i am confused why tcp throughput is bigger than udp\n')
('udp', 'simpler', 'tcp', 'simpler traversal nat', '24559909', 'c++ is not my first language and this is small part of code i can t figure out i ve chosen udp because it is always much simpler than tcp\n')
('udp', 'faster', 'tcp', 'faster reliable slower', '25350887', 'one often finds the argument that udp is faster then tcp\n')
('udp', 'better', 'tcp', 'better specific surprising', '3918611', 'udp is actually expected to work better than tcp in lossy networks or congested networks\n')
('tcp', 'safer', 'udp', '', '28038806', 'i know tcp is a safer choice but let s assume i can only use udp and i need to ensure i can send packets over at a high rate with no missing packets what should i do\n')
('tcp', 'simpler', 'udp', 'simpler traversal nat', '4220469', 'you ve struck lucky with the requirements - because you re going from udp - tcp it s actually a lot simpler than doing udp - udp\n')
('udp', 'much faster', 'tcp', 'faster reliable slower', '28290012', 'udp is much faster then tcp but tcp has flow control and guaranteed delivery\n')
('tcp', 'more', 'udp', '', '5978352', '2 tcp needs more processing at network interface level where as in udp it√¢ s not\n')
('tcp', 'more reliable', 'udp', 'faster reliable slower', '33455053', 'tcp - more reliable than udp but this comes with some overhead there is a distinct connection a better match for games which require less frequent data transmission such as turn based games as is your game\n')
('tcp', 'bigger overhead', 'udp', '', '24881403', 'tcp has bigger overhead than udp because it needs to add more data to your payload but you are guaranteed that your data will be received in it s destination in the order you sent it and not corrupted\n')
('tcp', 'better', 'udp', 'better specific surprising', '2935622', 'in general the tcp protocol manages the available network bandwidth better than the udp protocol\n')
('tcp', 'bigger', 'udp', '', '24881403', 'tcp has bigger overhead than udp because it needs to add more data to your payload but you are guaranteed that your data will be received in it s destination in the order you sent it and not corrupted\n')
('tcp', 'better protocol', 'udp', '', '24411213', 'hello to all i am developing an application that needs to send a image via the udp socket.i know that tcp is a better protocol but playing with kryonet in java i have learnt that udp is better for this type of application.i have this small class that i have made\n')
('udp', 'communication much less', 'tcp', 'overhead lower recipient', '12082396', 'udp communication requires much less overhead than tcp due to the number of messages exchanged\n')
('udp', 'less hungry', 'tcp', '', '29083422', 'alternatively it can be used over udp which is less hungry than tcp\n')
('udp', 'lower overhead', 'tcp', 'faster reliable slower', '24880258', 'one can say udp has a lower overhead than tcp because its packets have a smaller header and therefore take less bandwidth to send the payload the data\n')
('udp', 'better', 'tcp', 'better specific surprising', '16924212', '-- in which scenario configuration would i get udp to perform better than tcp\n')
('udp', 'faster', 'tcp', 'faster reliable slower', '28701982', 'i though that udp was faster than tcp but do you think that tcp will be faster due to the congestion\n')
('tcp', 'faster better throughput', 'udp', 'faster reliable slower', '44746784', 'in some applications tcp is faster better throughput than udp\n')
('tcp', 'much more', 'udp', 'complex implementation instructions', '9235592', '+ consider that the implementation of tcp stack is much more complicated than udp more instructions are executed there\n')
('udp', 'also more', 'tcp', 'work likely socket', '2364616', 'udp is also more work than tcp if you need reliability which is built in to tcp\n')
('udp', 'better', 'tcp', 'better specific surprising', '11406148', 'udp scales better than tcp because of reduced states that need to be maintained in the operating system\n')
('tcp', 'faster', 'udp', 'faster packets connection', '8930717', 'is sending packets via an established tcp connection after all hand shaking has been done a method to be faster than udp\n')
('udp', 'faster', 'tcp', 'faster reliable slower', '31398082', 'i m trying to avoid tcpclient because udp is faster but would this work in tcp since it s streamed\n')
('udp', 'communication connection less', 'tcp', 'header connection size', '2896525', 'udp communication is connection less as compared to tcp which need a connection\n')
('tcp', 'more overhead', 'udp', 'overhead lower recipient', '11428762', 'if they are connected over the internet you could try to use the examples for tcp but tcp has more overhead than udp\n')
('udp', 'less', 'tcp', '', '29083422', 'alternatively it can be used over udp which is less hungry than tcp\n')
('tcp', 'more', 'udp', '', '14649005', 'also remember that dns requests can use tcp if the request or response would need more than 1 udp packet\n')
('udp', 'just smaller', 'tcp', 'overhead lower recipient', '9409379', 'udp just has a smaller overhead than tcp but that comes at the cost of reliability\n')

screens	tablet	35
('tablet', 'higher', 'screens', 'smaller mobile desktop', '24642555', 'i know that obviously a tablet has a higher screens resolution than a phone because it has more pixels dots on the screens from what ive been reading tablet also have a higher dpi dots per inch than phones as well\n')
('tablet', 'less full', 'screens', '', '20360940', 'as an example my android tablet s stock video player app has a feature that allows it to be less than full screens\n')
('screens', 'higher', 'tablet', 'smaller mobile desktop', '23728938', 'screens resolution i.e higher than tablet i.e col-md and col-lg in bootstrap language should only cover 11 grid with offset of 1\n')
('screens', 'smaller', 'tablet', 'smaller mobile desktop', '24329917', 'twitter desktop accomodates screensizes from around 1048px wide when you are on a screens that is smaller then that you are probably on a tablet or smartphone and if you open twitter from a browser on your phone you are instantly redirected to and prompted to download the twitter app\n')
('screens', 'higher resolution', 'tablet', 'size resolution contrast', '28366729', 'i can t use screens size because of devices like galaxy note with huge screens and some phones have higher resolution than some tablet same with dpi i think\n')
('screens', 'bigger', 'tablet', 'smaller mobile desktop', '26487177', 'my aim is to use a bootstrap 3 dropdown to display links at mobile screens size and use a list to display the same links when the screens is bigger desktop and tablet size\n')
('screens', 'always smaller', 'tablet', 'smaller mobile desktop', '13551919', 'that hopefully explains why a typical 320dp phone screens is always smaller than a 720dp tablet screens although the smaller screens can have more pixel than the larger\n')
('screens', 'wider', 'tablet', 'smaller mobile desktop', '33235334', 'you could make your css mobile-first meaning that all properties are optimized for mobile then as the screens gets wider you apply tablet and desktop optimized css for elements\n')
('tablet', 'more', 'screens', 'smaller mobile desktop', '40697207', 'i have been working on this page that works fine in desktop devices and tablet but not on phones because the width of the page is more than the screens width i need to make this width responsive to have the page with height-only scroll\n')
('screens', 'width smaller', 'tablet', 'smaller mobile desktop', '22564398', 'this will only be added if the screens width is smaller than 480px else the tablet version would show the mobile version\n')
('screens', 'smaller', 'tablet', 'smaller mobile desktop', '35498315', 'based on my understanding i hope that is because the size of the tablet screens which is smaller than the desktop that makes the strokes to get hidden inside the area that was not visible on the tablet however the area is visible in desktop\n')
('tablet', 'bigger', 'screens', 'green background yellow', '46184983', 'this tablet has a bigger screens yet is still showing only 2 child views in the row\n')
('tablet', 'more room', 'screens', 'available space fonts', '30422496', 'it simply comes down to the space available a tablet gives more room to developers thus allowing developers to put more on one screens\n')
('screens', 'smaller', 'tablet', 'smaller mobile desktop', '23130737', 'splitactionbar works only on phones because the screens size is much smaller than tablet and it takes space at the bottom for extra space for your action items\n')
('screens', 'bigger', 'tablet', 'green background yellow', '18123310', 'if the screens is bigger than 1024px it should be green my tablet screens is but the background stays yellow\n')
('tablet', 'simply more', 'screens', 'available space fonts', '23608495', 'you will also notice that the fonts are not scaling as the 7 tablet simply has more screens space available vs the 4 phone\n')
('tablet', 'more centimeter', 'screens', 'smaller mobile desktop', '47318184', 'they are for example too big in a phone and too small in a tableth because the screens of tablet has more centimeter than the pone screens\n')
('screens', 'size smaller', 'tablet', 'size resolution contrast', '18287856', 'basically my layout has 1200px grid width but i figured that there will be a problem with 1024px screens resolution 20 of the population bla bla so i created media queries when the screens size is smaller than 1199px the grid to change its width to 960px and so on for tablet phones etc..\n')
('screens', 'size smaller', 'tablet', 'smaller mobile desktop', '43424851', 'for example when the screens size becomes smaller to a tablet or mobile you could do this as an example\n')
('screens', 'smaller', 'tablet', 'smaller mobile desktop', '32098658', 'this only happens when the window is on a computer in full screens mode but when the screens is made smaller to a phone tablet size the divs function how they should\n')
('tablet', 'less', 'screens', 'smaller mobile desktop', '31435985', 'on a tablet or phone which may have less than 750px screens width it will go off the viewport\n')
('screens', 'smaller', 'tablet', 'smaller mobile desktop', '17474847', 'what i would like to do is use css media queries to have the title be above the tabs when the screens gets smaller or on a tablet or iphone\n')
('screens', 'much smaller', 'tablet', 'smaller mobile desktop', '24184394', 'the screens is much smaller so you can not present your app the same way as you can on a tablet\n')
('screens', 'diagonal greater', 'tablet', '', '30998774', 'to determine device is tablet or mobile i use criteria if device s screens diagonal is greater than 7 iches the device is tablet\n')
('screens', 'less', 'tablet', 'smaller mobile desktop', '41948896', 'the issue is that the phone screens height in landscape mode is likely much less than a tablet or pc\n')
('screens', 'wider', 'tablet', 'smaller mobile desktop', '33175892', 'when viewed on a screens wider than a tablet to be responsive according to the smaller screens size like this\n')
('tablet', 'often lower', 'screens', 'smaller mobile desktop', '18306525', 'this is because that tablet often has a lower density of screens pixels\n')
('screens', 'width larger', 'tablet', 'smaller mobile desktop', '46595075', 'in my actual code i ve set the display to none if the screens width is larger than tablet size because that s the only time i feel like i need the button\n')
('tablet', 'larger standard', 'screens', '', '40848484', 'in fact when a tablet has a larger than standard screens size the tablet with detachable keyboards available these days mobile versions of the site can look over-optimised for space which is the reason why browsers allow tablet users to opt to display sites in desktop mode\n')
('screens', 'size reasonable bigger', 'tablet', 'size resolution contrast', '29104954', 'having different ones based upon screens size is reasonable bigger margins on tablet though the mix then would be something like res values dimens.xml and res values-sw720dp values.xml\n')
('tablet', 'larger', 'screens', '', '40848484', 'in fact when a tablet has a larger than standard screens size the tablet with detachable keyboards available these days mobile versions of the site can look over-optimised for space which is the reason why browsers allow tablet users to opt to display sites in desktop mode\n')
('tablet', 'much smaller', 'screens', 'smaller mobile desktop', '28425758', 'however the number of people using these giant tablet is much smaller than the number of people with small screens laptops\n')
('tablet', 'more', 'screens', 'available space fonts', '43912613', 'a tablet offers more screens space than a phone\n')
('tablet', 'higher actual', 'screens', 'size resolution contrast', '14034137', 'by contrast a nexus 7 tablet has higher actual screens resolution than an ipad mini but it reports to your web page a smaller screens size\n')
('screens', 'smaller', 'tablet', 'smaller mobile desktop', '40391766', 'inside the container i have a panel with the text set to left but when the screens gets smaller then a tablet to something like a phone i want the text in the panel to center\n')

html5lib	lxml	5
('html5lib', 'better job', 'lxml', 'better job html.parser', '37009855', 'html5lib parser does a better job than lxml or html.parser handling the debate element in this case\n')
('lxml', 'faster parser', 'html5lib', '', '34370585', 'lxml is the faster parser and can handle broken html quite well html5lib comes closest to how your browser would parse broken html but is a lot slower\n')
('lxml', 'faster', 'html5lib', '', '34370585', 'lxml is the faster parser and can handle broken html quite well html5lib comes closest to how your browser would parse broken html but is a lot slower\n')
('html5lib', 'slower rate', 'lxml', '', '29017860', 'the standard html.parser option handles broken html less well than other options while the html5lib option is closest to how a modern browser would handle broken html albeit at a slower rate than lxml would handle html parsing\n')
('lxml', 'parser generally faster', 'html5lib', 'better job html.parser', '37933417', 'lxml parser is generally faster html5lib is the most lenient one - this kind of difference would be relevant if you have a broken or non-well-formed html to parse\n')

tostring	string.format	3
('tostring', 'marginally more', 'string.format', '', '12319077', 'for formatting a single numeric value tostring is marginally more efficient than string.format because string.format has a bunch of overhead to parse the format string out of the curly braces and then pass it to tostring\n')
('tostring', 'marginally more efficient', 'string.format', '', '12319077', 'for formatting a single numeric value tostring is marginally more efficient than string.format because string.format has a bunch of overhead to parse the format string out of the curly braces and then pass it to tostring\n')
('tostring', 'more efficient', 'string.format', '', '12319077', 'for formatting a single numeric value tostring is marginally more efficient than string.format because string.format has a bunch of overhead to parse the format string out of the curly braces and then pass it to tostring\n')

web.py	django	5
('web.py', 'more suitable', 'django', '', '18149831', 'i m new to sever-side programming.some people told me that web.py is more suitable for beginners like me than django\n')
('web.py', 'easier', 'django', '', '4759565', 'web.py has a templating language of it s own it looks easier than django s\n')
('web.py', 'more', 'django', '', '18149831', 'i m new to sever-side programming.some people told me that web.py is more suitable for beginners like me than django\n')
('web.py', 'more', 'django', '', '11982403', 'web.py is more low-level comparing with django\n')
('web.py', 'more low-level', 'django', '', '11982403', 'web.py is more low-level comparing with django\n')

addition	exponent	3
('addition', 'smaller', 'exponent', '', '34136689', 'since fp addition shifts the smaller operand s mantissa until both operands have the same exponent you can add a certain magic number to force it\n')
('addition', 'smaller operand', 'exponent', '', '34136689', 'since fp addition shifts the smaller operand s mantissa until both operands have the same exponent you can add a certain magic number to force it\n')
('addition', 'clearer', 'exponent', '', '3284371', 'in addition for doing powers of two bitshifting is usually a little clearer than doing exponent though choose whatever works for you\n')

liblinear	libsvm	7
('liblinear', 'more', 'libsvm', '', '13275267', 'you can also try sklearn.linear_model.logisticregression and sklearn.svm.linearsvc both implemented using liblinear that is more scalable than libsvm albeit less memory efficients than other linear models in scikit-learn\n')
('liblinear', 'faster', 'libsvm', '', '11508788', 'and how do the differences make liblinear faster than libsvm\n')
('liblinear', 'faster linear', 'libsvm', '', '22134252', 'liblinear is considered faster than linear libsvm and often used for large scale data set\n')
('liblinear', 'far faster more', 'libsvm', '', '44401270', 'and i ve read that using liblinear is far faster more memory efficient for such tasks as such i ve ported my libsvm classifier to accord net like so\n')
('liblinear', 'more scalable', 'libsvm', '', '13275267', 'you can also try sklearn.linear_model.logisticregression and sklearn.svm.linearsvc both implemented using liblinear that is more scalable than libsvm albeit less memory efficients than other linear models in scikit-learn\n')
('liblinear', 'far faster', 'libsvm', '', '44401270', 'and i ve read that using liblinear is far faster more memory efficient for such tasks as such i ve ported my libsvm classifier to accord net like so\n')
('liblinear', 'faster', 'libsvm', '', '22134252', 'liblinear is considered faster than linear libsvm and often used for large scale data set\n')

ubuntu	linux	15
('ubuntu', 'much easier', 'linux', '', '34846588', 'also i would recommend doing a dual boot to ubuntu it s much easier to work with opencl in a linux cli fashion\n')
('linux', 'more familiar', 'ubuntu', '', '34131232', 'i am new at a firm and i was given a project that was on amazon linux ami now we need to transfer project on another server and because i am more familiar with ubuntu than with amazon linux ami i was wondering if there much difference and will project work perfectly\n')
('ubuntu', 'closer', 'linux', '', '68674', 'ubuntu is getting closer but there are still numerous things with linux that will keep the grandmothers of the world from using it\n')
('linux', 'much easier', 'ubuntu', '', '39520120', 'even if you re on linux it s much easier to get a precompiled version sudo apt install r-cran-rgl on ubuntu if you have the appropriate cran repositories set up\n')
('ubuntu', 'fuser -n', 'linux', '', '4925111', 'one one ubuntu distro fuser -n tcp 3000 will report a process if i own the process yet on another linux distro i think centos it won t report the process even if i own it\n')
('linux', 'better', 'ubuntu', '', '42328333', 'you can use alpine linux docker image it is very light and is better than both ubuntu and centos image to be used as the docker\n')
('linux', 'however less', 'ubuntu', '', '38578513', 'linux however is less forgiving and has a filesystem that is case sensitive at least my dev ubuntu version does but i guess it is the default for linux\n')
('linux', 'slower', 'ubuntu', '', '38866429', 'i don t know why arch linux is slower than ubuntu on your machine\n')
('linux', 'simpler', 'ubuntu', '', '39281563', 'see but if you are using a linux distro there may be shortcut instructions that make it simpler under ubuntu for example there are shortcuts in\n')
('ubuntu', 'faster', 'linux', '', '46994413', 'i m testing some simple benchmarking calculations on win7 and linux ubuntu 16 to compare the timings and being wonder win appears to be much faster than linux\n')
('linux', 'things worse', 'ubuntu', '', '46774580', 'also very particular that this should be done on centos or amazon linux which makes things worse for me as i have been on ubuntu for long\n')
('ubuntu', 'easier other', 'linux', '', '1383228', 'although if you aren t interested in using adobe cs you can use ubuntu distro which is easier than other linux distro and quiet popular so you won t have any problem finding solution\n')
('ubuntu', 'fuser', 'linux', '', '4925111', 'one one ubuntu distro fuser -n tcp 3000 will report a process if i own the process yet on another linux distro i think centos it won t report the process even if i own it\n')
('linux', 'distribution far more', 'ubuntu', '', '3281759', 'sometimes a linux distribution contains far more than an operating system but is informally referred to by a single name such as ubuntu and so the line between what the operating system is the linux kernel and standard libraries perhaps and the applications that merely ship with that operating system the gnome and kde environments on linux is pretty gray\n')
('linux', 'however less forgiving', 'ubuntu', '', '38578513', 'linux however is less forgiving and has a filesystem that is case sensitive at least my dev ubuntu version does but i guess it is the default for linux\n')

salt	md5	4
('salt', 'more secure', 'md5', '', '29353379', 'using sha256 with a salt will be much more secure than md5\n')
('salt', 'more fancy', 'md5', '', '1459923', 'decode the passwords yourself and re-encode them with a salt i recommend something a little more fancy than md5\n')
('salt', 'slower', 'md5', '', '7063356', 'bcrypt is considered the most secure way to implement password hashing with salt because it is slow - much slower than an md5\n')
('salt', 'stronger', 'md5', '', '9542772', 'encrypt the passwords with one-way encryption algorithm with a random salt like the common opinion√Ø¬º≈° sha-256 is stronger than md5\n')

filtering	grouping	8
('filtering', 'more', 'grouping', '', '14151083', '2 i used link1 and link2 to filtering out duplicate users existing in more than one grouping\n')
('filtering', 'more', 'grouping', '', '29776048', 'unfortunately this not possible using openldap because your filtering is returning more than 1 object multiple grouping each with a unique dn\n')
('filtering', 'faster', 'grouping', '', '34719319', 'from my experience collapse filtering is much faster than grouping\n')
('filtering', 'much faster', 'grouping', '', '34719319', 'from my experience collapse filtering is much faster than grouping\n')
('filtering', 'more', 'grouping', '', '43834645', 'solr - the collapsingqparser is really a post filtering that provides more performant field collapsing than solr s standard approach when the number of distinct grouping in the result set is high\n')
('grouping', 'greater', 'filtering', 'acct result clause', '43574945', 'i am using groupby on tickets then filtering my dataframe to those records where the count in that ticket grouping is greater than 1 using filtering\n')
('grouping', 'greater', 'filtering', 'acct result clause', '23948347', 'grouping that by acct to do the count by acct and when the result is greater than 1 filtering it using a having clause\n')
('filtering', 'more performant', 'grouping', '', '43834645', 'solr - the collapsingqparser is really a post filtering that provides more performant field collapsing than solr s standard approach when the number of distinct grouping in the result set is high\n')

aes	des	21
('aes', 'encryption less vulnerable', 'des', '', '3929325', 'which steps of aes encryption makes it less vulnerable than des\n')
('aes', 'better speedup', 'des', '', '21886363', 'if you used aes then you might see a better speedup over the des 3des observations\n')
('aes', 'more secure', 'des', '', '21082690', 'also see why aes is more secure than des\n')
('aes', 'faster result', 'des', 'faster 3des default', '9052760', 'aes will indeed yield a considerably faster result than des\n')
('des', 'slower', 'aes', 'slower current requirements', '7007053', 'des is usually substantially slower than aes on modern hardware and has keys that are far too short for modern use\n')
('aes', 'less vulnerable', 'des', '', '3929325', 'which steps of aes encryption makes it less vulnerable than des\n')
('aes', 'faster', 'des', 'faster 3des default', '25612825', 'this shows that the timings are sensitive to buffering and that aes is faster than des\n')
('aes', 'rijndael-128 more', 'des', 'triple size secure', '29881041', 'according to this analysis aes rijndael-128 is more than twice as fast as des 3des with a bigger key size more secure\n')
('aes', 'larger', 'des', 'triple size secure', '13404970', 'note that the effective key size of aes is larger than triple des\n')
('des', 'generally slower', 'aes', '', '10282754', 'though it s unrelated to your actual question des is generally slower than aes at least in software so unless you really need to keep the key small aes is almost certainly a better choice\n')
('des', 'slower', 'aes', 'slower current requirements', '35037543', 'des turned out to be even slower than aes but for my current requirements a much simpler algorythm rc4 is sufficient\n')
('aes', 'more', 'des', '', '17019046', 'turns out this was a hardware failure the aes commands need more power than the des crypto1 ones 50 more which the antenna failed to deliver at the reading range i was testing with\n')
('aes', 'faster', 'des', 'faster 3des default', '9928310', 'if aes is negotiated it s faster than des and 3des used by default by older applications\n')
('aes', 'more', 'des', '', '21082690', 'also see why aes is more secure than des\n')
('des', 'faster', 'aes', 'faster 3des default', '10282566', 'using des assuming it s a little faster than aes and requires a smaller key and\n')
('aes', 'faster', 'des', 'faster 3des default', '29881041', 'aes can be even much faster than des or 3des when the cpu supports aes-ni\n')
('des', 'less secure', 'aes', '', '38488337', 'edit 3des is better than des in the sense that it s significantly more secure but still less secure than aes but its performance is of necessity significantly worse than aes des or twofish because you re essentially applying des three times\n')
('aes', 'more power', 'des', '', '17019046', 'turns out this was a hardware failure the aes commands need more power than the des crypto1 ones 50 more which the antenna failed to deliver at the reading range i was testing with\n')
('aes', 'encryption less', 'des', '', '3929325', 'which steps of aes encryption makes it less vulnerable than des\n')
('des', 'slower', 'aes', '', '10282754', 'though it s unrelated to your actual question des is generally slower than aes at least in software so unless you really need to keep the key small aes is almost certainly a better choice\n')
('aes', 'encryption more secure', 'des', 'triple size secure', '11269211', 'i ve read that aes encryption is more secure than the triple des encryption ms is using in their example above\n')

qgraphicsscene	qgraphicsview	3
('qgraphicsscene', 'larger', 'qgraphicsview', 'default necessary scroll', '8881046', 'by default when you scale a qgraphicsscene larger than the qgraphicsview in which it is displayed it will show the necessary scroll bars\n')
('qgraphicsscene', 'better connection', 'qgraphicsview', '', '32891725', 'generaly qgraphicsscene better using with connection qgraphicsview\n')
('qgraphicsscene', 'larger', 'qgraphicsview', 'default necessary scroll', '17923539', 'if i set a pixmap to a qgraphicsscene that is larger that the window it will add scrollbars so is it possible to get what is displayed in the qgraphicsview\n')

exponent	modulo	12
('exponent', 'smaller', 'modulo', 'rsa shorter operations', '5377967', 'i must also add that designing the rsa key so that the private exponent is substantially shorter than the modulo to speed up operations is a security risk if the exponent is smaller than 29 of the modulo length then the key can be cracked\n')
('exponent', 'normally shorter', 'modulo', '', '23875419', 'little wonder you get errors the exponent is normally shorter than the modulo which is always the same size as the key size\n')
('exponent', 'smaller', 'modulo', 'bit large number', '6662179', 'in rsa signing a message m means exponentiation with the private exponent d the result r is the smallest integer 0 and smaller than the modulo n so that\n')
('exponent', 'smaller', 'modulo', 'rsa shorter operations', '2927816', 'the private exponent is always smaller than the modulo so you should be able to encrypt it using the raw rsa operation if you make sure to remove the prepended zero\n')
('exponent', 'shorter', 'modulo', '', '23875419', 'little wonder you get errors the exponent is normally shorter than the modulo which is always the same size as the key size\n')
('exponent', 'smaller', 'modulo', 'rsa shorter operations', '2927816', 'edit as gregs points out in the comments you cannot be sure that the private exponent of the key you want to encrypt is smaller than the modulo of the key you want to use to encrypt with\n')
('modulo', 'value faster', 'exponent', '', '31221104', 'using the pow function and passing a modulo value is faster than computing the full exponent and then taking the modulo because the modulo can be applied to the partial products at each stage of the calculation which stops the value from getting too large 10 6 to the power of 10 6 has 6 million decimal digits with a modulo applied at each step the values never have to grow larger than the size of the modulo - about 13 digits in this example\n')
('modulo', 'better', 'exponent', 'rsa shorter operations', '15114205', 'so no choice of the public exponent for this modulo is better than 19 using the public exponent to decrypt will work for at least half of the messages when e√¢¬≤ 9 16 and in many cases for almost all the messages when e√¢¬≤ 1 16\n')
('exponent', 'shorter', 'modulo', 'rsa shorter operations', '35015694', 'the rsa private exponent may actually be shorter than the modulo\n')
('exponent', 'lower', 'modulo', 'bit large number', '25461270', '1024 bit private exponent large number lower than the modulo\n')
('exponent', 'longer', 'modulo', 'rsa shorter operations', '7835481', 'the private exponent must not be longer than the modulo\n')
('exponent', 'always less', 'modulo', 'rsa shorter operations', '26422542', 'when i generate rsa key pairs by openssl it seems like private key private exponent is always less than public key modulo\n')

uicontrol	uibutton	4
('uicontrol', 'more', 'uibutton', '', '15008437', 'a solution i ve used is a simple subclass of uicontrol which allows more customization than subclassing uibutton and less hassle than nsattributedstring et al\n')
('uicontrol', 'more customization', 'uibutton', '', '15008437', 'a solution i ve used is a simple subclass of uicontrol which allows more customization than subclassing uibutton and less hassle than nsattributedstring et al\n')
('uibutton', 'cleaner', 'uicontrol', '', '12469991', 'instead of working around the 1 label and image you get in a uibutton it s cleaner to start from scratch with a uicontrol and create your tiles\n')
('uicontrol', 'finer control', 'uibutton', '', '4895037', 'sounds like you want to use some of the inherited uicontrol methods such as sendaction to forevent this offers even finer control than with uibutton\n')

cassini	iis	7
('cassini', 'better', 'iis', 'integrated pipeline purpose', '26091712', 'cassini was much better than iis express but doesn t properly support the integrated pipeline\n')
('cassini', 'slower', 'iis', 'integrated pipeline purpose', '1082128', 'for my webapp the integrated visual studio server cassini ist much slower than iis\n')
('iis', 'better', 'cassini', 'integrated pipeline purpose', '11386063', 'iis express is a web server albeit better than cassini iis express is not your problem\n')
('cassini', 'much more', 'iis', '', '10254781', 'what i would suggest is to make sure you are using visual studio 2010 sp1 then install iis express which is an upgrade to cassini and is much more like real iis and then switch your project to use iis express and see if you get the same exception\n')
('iis', 'better performance', 'cassini', '', '1849455', 'while iis does give us better performance than cassini we would still like to be able to hit f5 to run our application from within visual studio\n')
('iis', 'server better', 'cassini', 'integrated pipeline purpose', '31310823', 'from this question i found out that iis server is better than cassini for my purpose but i don t know how to check the default server of my website\n')
('iis', 'slower', 'cassini', '', '12954150', 'what could be the reason that makes iis slower than cassini\n')

macports	homebrew	9
('macports', 'luckier', 'homebrew', '', '13467237', 'it may be that macports doesn t help i have been luckier with homebrew than macports when installing cgal\n')
('homebrew', 'newer', 'macports', '', '12184308', 'i m using homebrew as it s newer than macports and i don t know enough to choose between them\n')
('macports', 'more packages', 'homebrew', '', '18254617', 'overriding choice for me is macports as it has many more packages than homebrew and it puts its stuff in opt local to stay out of the way of other programs\n')
('homebrew', 'less', 'macports', '', '21198888', 'homebrew has less of a stranglehold on your machine doesn t require as much reading as macports\n')
('macports', 'many more packages', 'homebrew', '', '24198365', 'currently macports has many more packages 18.6 k than there are homebrew formulae 3.1k owing to its maturity\n')
('macports', 'more software', 'homebrew', '', '6541578', 'con you can encounter issues related to library versions and dependencies macports has more software than homebrew\n')
('homebrew', 'nicer', 'macports', '', '11704224', 'homebrew is generally a bit nicer than macports as it doesn t require lots of sudo action\n')
('macports', 'more', 'homebrew', '', '6541578', 'con you can encounter issues related to library versions and dependencies macports has more software than homebrew\n')
('macports', 'many more', 'homebrew', '', '24198365', 'currently macports has many more packages 18.6 k than there are homebrew formulae 3.1k owing to its maturity\n')

apache	lighttpd	8
('lighttpd', 'less ram', 'apache', 'webserver fewer resources', '23856324', 'nginx or lighttpd in fastcgi mode use less ram than apache and they can handle more concurrent connections\n')
('lighttpd', 'more suitable', 'apache', '', '6608307', 'this is my first experience setting up lighttpd as i thought it would be more suitable than apache in this case\n')
('lighttpd', 'less', 'apache', 'webserver fewer resources', '12411541', 'it may even use a different server software say nginx or lighttpd that has less overhead than the traditional apache setup\n')
('apache', 'more powerful', 'lighttpd', '', '172177', 'the benefit of both apache is more powerful and extensible useless if you don t need that power but anyway... and lighttpd is faster at static content\n')
('lighttpd', 'even faster', 'apache', '', '371821', 'for instance in some benchmarks lighttpd is even faster at serving static resources than apache\n')
('lighttpd', 'fewer resources', 'apache', 'webserver fewer resources', '3946868', 'since you ve switched to lighttpd the webserver itself is going to use fewer resources than apache would but apache is rarely the bottleneck unless you ve run out of ram or seriously misconfigured it\n')
('apache', 'more', 'lighttpd', '', '172177', 'the benefit of both apache is more powerful and extensible useless if you don t need that power but anyway... and lighttpd is faster at static content\n')
('lighttpd', 'faster', 'apache', '', '2769643', '- if you move towards more static content or go the fastcgi way lighttpd is faster than apache\n')

uiview	subviews	11
('subviews', 'version definitely faster', 'uiview', '', '22545659', 'the subviews version is definitely faster since having the controls loose on the uiview took more like 2 seconds to update\n')
('uiview', 'taller', 'subviews', '4px larger object', '38314415', 'the uiview is taller than the screen so in ib i pulled it out of the scroll view so i could see it all but i never moved it back to being a subviews of the scroll view\n')
('uiview', 'smaller frame', 'subviews', '4px larger object', '1361527', 'i want to add a uiview of smaller frame as subviews to parental view but i am not getting the needed\n')
('uiview', '4px larger', 'subviews', '4px larger object', '3357911', 'do i just create a new uiview that is 4px larger than the selected object and and make the selected view a subviews of it\n')
('uiview', 'smaller', 'subviews', '', '19924321', 'though earlier uiview and uiscrollview have the same area after keyboard shown the blue uiview becomes smaller but its subviews button text fields is outside its area\n')
('uiview', 'smaller', 'subviews', '', '41592606', 'because the uiview is smaller it is going to crop out the larger subviews\n')
('uiview', 'less', 'subviews', '', '16751084', 'the issue is that once the alpha of the uiview is less than 1.0 i can see all the subviews sides and the one that gets me the most is the outline of an uiimageview can be seen that would otherwise not as it is the same colour as the uiview\n')
('uiview', 'more memory', 'subviews', '', '11065866', 'you are seeing a noticeable jump in interface response because subviews do in fact consume quite a bit of memory uiview are very expensive compared to their underlying calayers and as such calling -removesubview not only unloads stress from the gpu but also frees up more memory as the subviews is usually released afterwards\n')
('uiview', 'more', 'subviews', '', '6756801', 'change the contentsize of your scrollview.your uiview size and uiscrollview size is same if the uiscrollview contentsize is more than its subviews size then scroll will happen change the line overviewscroll setcontentsize cgsizemake screenframe.size.width screenframe.size.height-25\n')
('uiview', 'more', 'subviews', '', '6275623', 'of course uiscrollview can have more than one content view just as any uiview can have more than one subviews and this case it will be more difficult to render its layer\n')
('uiview', 'bigger', 'subviews', '4px larger object', '11452372', 'when using embed in - uiview the new view will be a bit bigger than the subviews\n')

uiview	calayer	9
('uiview', 'more', 'calayer', '', '3911370', 'does that mean the the view controller has multiple uiview or that the uiview has more than one calayer\n')
('uiview', 'even more', 'calayer', '', '24280489', 'in fact each uiview has even more than 1 corresponding calayer\n')
('uiview', 'more', 'calayer', '', '36186311', 'a uiview is no more than a wrapper for an underlying calayer\n')
('calayer', 'worse performance', 'uiview', 'worse better performance', '34019830', 'i noticed calayer had worse performance than uiview\n')
('calayer', 'smaller', 'uiview', '', '15638505', 'i want to add a calayer inside an uiview and this calayer will be smaller than the uiview\n')
('calayer', 'lighter', 'uiview', '', '5538394', 'i am using calayer s because as suggested in documentation calayer s are lighter than uiview and i have hundreds of them\n')
('calayer', 'better', 'uiview', 'worse better performance', '4882069', 'is calayer better than uiview in terms of performance\n')
('calayer', 'lighter', 'uiview', '', '33563019', 'this is better than using a second view a bit larger as a calayer is lighter than a uiview and you don t have do modify the frame of myview which is good for instance if myview is a uiimageview\n')
('uiview', 'more', 'calayer', '', '36827987', 'a uiview is no more than a fancy wrapper for a calayer √¢ bringing uiresponder events animation conveniences among many other things\n')

execute	prepare	3
('execute', 'more', 'prepare', '', '39779542', 'my question is how can i execute more than 1 prepare statement\n')
('prepare', 'execution faster', 'execute', '', '3553157', 'prepare execution is faster than direct execution for statements execute more than three or four times because the statement is compiled only once while statements execute directly are compiled each time they are execute\n')
('execute', 'statement', 'prepare', '', '1363067', 'any execute statement becomes prepare sooner or later it need to be parsed optimized compiled and then execute\n')

keras	tensorflow	5
('keras', 'more', 'tensorflow', 'gpu memory equivalent', '45092008', 'is keras consumes more gpu memory than equivalent tensorflow model training\n')
('keras', 'faster', 'tensorflow', 'gpu memory equivalent', '46210187', 'more than this methodology i would suggest to you to do the training directly in keras as it claimed that keras optimizers are 5-10 times faster than tensorflow s optimizers\n')
('keras', 'slower', 'tensorflow', 'gpu memory equivalent', '47484573', 'is keras faster slower than tensorflow during training\n')
('keras', 'simpler quicker', 'tensorflow', '', '45411755', 'keras provides a simpler quicker way to build and train models in tensorflow at no performance cost since the models are still being run by the same tensorflow engine\n')
('keras', 'simpler', 'tensorflow', '', '45411755', 'keras provides a simpler quicker way to build and train models in tensorflow at no performance cost since the models are still being run by the same tensorflow engine\n')

activemq	rabbitmq	4
('activemq', 'way more', 'rabbitmq', '', '333440', 'apache activemq which is way more popular than qpid or rabbitmq - or indeed any jms provider would work just fine\n')
('rabbitmq', 'worse', 'activemq', 'sense easy worse', '7044157', 'what does rabbitmq do better or worse than activemq\n')
('activemq', 'way more popular', 'rabbitmq', '', '333440', 'apache activemq which is way more popular than qpid or rabbitmq - or indeed any jms provider would work just fine\n')
('activemq', 'better', 'rabbitmq', 'sense easy worse', '23815467', 'it seems activemq is better than rabbitmq in the sense that it is easy to set up and maintenance for cluster\n')

128bit	64bit	8
('128bit', 'larger', '64bit', 'number prime factor', '1434405', 'and i ll just add to previous comment if 128bit number has prime factor larger than 64bit then it certainly has a factor less than 64bit\n')
('128bit', 'faster', '64bit', '', '34476509', 'in a benchmark test the 128bit intrinsic function performs faster than the 64bit intrinsic\n')
('128bit', 'larger', '64bit', 'number prime factor', '1433909', 'i ll just add that if the 128bit number is prime or has a prime factor larger than 64bit then there will be no solution to your problem\n')
('128bit', 'more', '64bit', '', '1464230', 'perhaps 128bit distributed-system internet-wide pointers but no more than 64bit in a system call or perhaps even a legacy 32-bit limit\n')
('128bit', 'faster', '64bit', 'transactions faster bit', '27018111', '128bit transactions tend to be faster than 64bit which tend to be faster than 32 bit\n')
('128bit', 'math faster', '64bit', '', '9318444', 'in a few more years there might be an architecture where 128bit math is faster than 64bit but i don t think any exists today\n')
('128bit', 'faster', '64bit', 'transactions faster bit', '32549371', 'actually on intel sandybridge-family at least mul imul 64bit 64bit 128bit is faster than imul mul 32bit 32bit 64bit\n')
('128bit', 'slower', '64bit', '', '17645369', 'so a 128bit adder will be slower than a 64bit add\n')

super	extends	6
('super', 'lower', 'extends', '', '4343237', 'super is a lower bound and extends is an upper bound\n')
('extends', 'more', 'super', '', '26528384', 'no java prevents a class from directly extends more than one super class\n')
('extends', 'more common', 'super', '', '44317988', 'it s useful to know that extends bound is much more common than super\n')
('super', 'more barely', 'extends', '', '44554369', 'here the content for the length item is this is a super duper long snippet because we need to see how labels behave when they more than barely extends onto multiple lines. the content for the power cycle item is have you tried turning it off and back on again\n')
('extends', 'much more', 'super', '', '44317988', 'it s useful to know that extends bound is much more common than super\n')
('extends', 'much more common', 'super', '', '44317988', 'it s useful to know that extends bound is much more common than super\n')

seam	jsf	6
('seam', 'more', 'jsf', '', '7062618', 'seam is more powerful with jsf but not necessarily richfaces or icefaces for they mostly just extend the component set which is anyway fall down to standard html components when rendered by jsf\n')
('seam', 'more general', 'jsf', '', '1252126', 'jsf is a web ui framework whereas seam is a more general web application framework that integrates not just jsf but conversational contexts workflow jbpm and object persistance preferably ejb3\n')
('seam', 'more powerful', 'jsf', '', '7062618', 'seam is more powerful with jsf but not necessarily richfaces or icefaces for they mostly just extend the component set which is anyway fall down to standard html components when rendered by jsf\n')
('jsf', 'better', 'seam', 'file uploads plain', '6377582', 'well for that you ll need jsf that is better integrated with seam and jsf does not handle file uploads that actually everyone use so you have to put also icefaces that actually are better managed by maven that you currenty are not using... neverending story\n')
('seam', 'certainly far better', 'jsf', 'file uploads plain', '1253366', 'seam certainly is far better than using plain jsf refer the link posted by damo a couple of answers above\n')
('seam', 'more', 'jsf', '', '1252126', 'jsf is a web ui framework whereas seam is a more general web application framework that integrates not just jsf but conversational contexts workflow jbpm and object persistance preferably ejb3\n')

tensorflow	theano	7
('theano', 'still faster', 'tensorflow', '', '44823584', 'theano is still faster than tensorflow in many respects and supports a wider range of operations\n')
('tensorflow', 'better', 'theano', 'long-time market computational', '44823584', 'tensorflow is better at marketing itself than long-time players of the open-source market like torch and theano\n')
('theano', 'much faster', 'tensorflow', '', '45300440', 'it theano runs much faster than tensorflow\n')
('tensorflow', 'slower', 'theano', '', '38229175', 'in my testing the slow-down from using tensorflow ranges from about 1.5-3.0 times slower than using theano but its performance will depend on your application\n')
('theano', 'faster', 'tensorflow', '', '44823584', 'theano is still faster than tensorflow in many respects and supports a wider range of operations\n')
('tensorflow', 'better', 'theano', 'long-time market computational', '44823584', 'tensorflow has better computational graph visualizations than theano and torch\n')
('theano', 'faster', 'tensorflow', '', '45300440', 'it theano runs much faster than tensorflow\n')

subclassing	superclass	40
('subclassing', 'weaker access', 'superclass', 'arguments init method', '31177870', 'the subclassing overridden method cannot have weaker access than superclass method\n')
('superclass', 'more stringent', 'subclassing', '', '20306151', 'the superclass has a more stringent constraint on a property content blank false than the subclassing content nullable true and i am using tableperhierarchy false\n')
('subclassing', 'narrower', 'superclass', 'arguments init method', '15037922', 'however if the subclassing returns a narrower subtype of the superclass method return this is called a covariant return type and is allowed in java since jdk 1.5\n')
('superclass', 'more sense', 'subclassing', '', '13079329', 'here having a superclass makes more sense or at least having a realnumber subclassing of number\n')
('subclassing', 'more specific', 'superclass', '', '22031943', 'for example you want to use abstract-class in such a case that each of the subclassing is a more specific type of its abstract superclass fruit apple orange banana grape strawberries etc. and you want to use non-abstract superclass in a relationship such as dad and son\n')
('subclassing', 'bigger interface', 'superclass', 'smaller complex bigger', '933047', 'you can t cast a superclass in a subclassing because the subclassing may have a bigger interface than the superclass means the subclassing can have functions like getunixtimestamp that the superclass doesn t have\n')
('subclassing', 'more', 'superclass', 'arguments init method', '488946', 'if the subclassing is more specific then it might fill in all by 2 of the arguments to its superclass __init__ method\n')
('subclassing', 'weaker reference', 'superclass', 'arguments init method', '40404884', 'so i inspected the compiled firebasemessagingservice which was the subclassing of com.google.firebase.iid.zzb and had zzae intent method as private but its subclassing firebasemessagingservice had protected access i know that subclassing cannot have weaker reference than its superclass so i guess there is something wrong with firebasemessagingservice library\n')
('superclass', 'bigger', 'subclassing', 'smaller complex bigger', '12938232', 'in this case superclass is bigger than subclassing that s why the second statement is correct\n')
('subclassing', 'presumably more', 'superclass', 'smaller complex bigger', '20343870', 'if new member fields are declared in the subclassing then yes a subclassing presumably uses more memory since it has all the fields declared in the superclass plus all the fields declared in the subclassing\n')
('superclass', 'more', 'subclassing', '', '20306151', 'the superclass has a more stringent constraint on a property content blank false than the subclassing content nullable true and i am using tableperhierarchy false\n')
('superclass', 'more', 'subclassing', '', '13079329', 'here having a superclass makes more sense or at least having a realnumber subclassing of number\n')
('subclassing', 'more', 'superclass', 'arguments init method', '41011604', 'in other words if a subclassing is more accessible than its superclass then the access modifier of the superclass loses effect\n')
('subclassing', 'less arguments', 'superclass', 'arguments init method', '36196748', 'if you subclassing has less arguments than a superclass and you could make them optional in the superclass just add placeholders in the subclassing\n')
('subclassing', 'actually more', 'superclass', '', '15635368', 'even in your original post the subclassing is actually more restrictive than the superclass so doing something like\n')
('subclassing', 'fewer arguments', 'superclass', 'arguments init method', '31996234', 'with explicit superclass calling your subclassing can accept more or fewer arguments than its superclass and can decide itself what to pass when calling the superclass\n')
('superclass', 'more', 'subclassing', '', '17820307', 'watch out you can t query a superclass if you have more than 1 subclassing then something like in jql\n')
('subclassing', 'less classes', 'superclass', '', '10137483', 'hence your subclassing is accepting less classes than the superclass contract promises\n')
('subclassing', 'more flexible', 'superclass', 'smaller complex bigger', '6694223', 'a subclassing is more flexible and is treated as an entire object which responds to all superclass methods plus it s own\n')
('subclassing', 'more', 'superclass', 'arguments init method', '23594257', 'shouldn t a subclassing interfaced be able to take in more than the superclass interfacec and use the same method\n')
('subclassing', 'more', 'superclass', 'arguments init method', '13144639', 'if we are creating an object of a subclassing and invoking the method of superclass and if subclassing extends more than one class which superclass method should be called\n')
('subclassing', 'no longer', 'superclass', '', '22727300', 'this breaks the inherited and the subclassing is no longer an instance of the superclass\n')
('subclassing', 'more', 'superclass', 'smaller complex bigger', '4523120', 'however they are not the same because the subclassing has more specific functions and data members that accomplish a more specific task that the superclass\n')
('superclass', 'smaller', 'subclassing', 'smaller complex bigger', '8469968', '2 since superclass is smaller than subclassing one should use memory object carefully\n')
('subclassing', 'less methods', 'superclass', '', '16097420', 'you cannot have a subclassing with less methods than a superclass\n')
('subclassing', 'more selective', 'superclass', '', '4872117', 'the fact that the subclassing is more selective only actually writes about what it writes is new functionality especially in light of the fact that the superclass promises nothing\n')
('subclassing', 'more', 'superclass', 'smaller complex bigger', '29938056', 'the general problem is that the subclassing is more specific than the superclass\n')
('subclassing', 'less', 'superclass', '', '10137483', 'hence your subclassing is accepting less classes than the superclass contract promises\n')
('subclassing', 'less acts', 'superclass', 'arguments init method', '6113785', 'these relations naturally arise when you impose restrictions on what you can handle--then if a subclassing means that the method can handle less acts as a superclass of since can handle everything that the subclassing can handle and more\n')
('subclassing', 'more', 'superclass', '', '34829663', 'in enhanced er modelling subclassing inheriting from more than 1 superclass is called multiple inherited\n')
('superclass', 'lower visibility', 'subclassing', '', '11190974', 'still you cannot inherited from a as superclass cannot have a lower visibility than subclassing\n')
('superclass', 'more', 'subclassing', 'smaller complex bigger', '34325101', 'superclass defines more general features of the objects of its subclassing\n')
('subclassing', 'more', 'superclass', '', '22031943', 'for example you want to use abstract-class in such a case that each of the subclassing is a more specific type of its abstract superclass fruit apple orange banana grape strawberries etc. and you want to use non-abstract superclass in a relationship such as dad and son\n')
('subclassing', 'more values', 'superclass', '', '41760105', 'so what this says is that provided your subclassing doesn t have any more values than the superclass used to determine ordering implementing is reasonable\n')
('subclassing', 'actually more restrictive', 'superclass', '', '15635368', 'even in your original post the subclassing is actually more restrictive than the superclass so doing something like\n')
('subclassing', 'more', 'superclass', '', '17098610', 'take note of this there is no way to subclassing more than one superclass at a time\n')
('subclassing', 'higher altitudes', 'superclass', '', '5527347', 'yes but if you think of your diagram as a topographic map the subclassing have higher altitudes than the superclass\n')
('subclassing', 'more', 'superclass', '', '4872117', 'the fact that the subclassing is more selective only actually writes about what it writes is new functionality especially in light of the fact that the superclass promises nothing\n')
('superclass', 'always smaller less', 'subclassing', 'smaller complex bigger', '839664', 'for my understanding the superclass is always smaller less complex then the subclassing\n')
('subclassing', 'more', 'superclass', 'arguments init method', '45940822', 'subclassing must allow more than the superclass not less and going from an argument being optional to not optional is allowing less\n')

antialiasing	transparent	3
('antialiasing', 'much better however', 'transparent', '', '1445339', 'and it seems working fine antialiasing is much better however this beats the idea of a transparent background in the process\n')
('antialiasing', 'much better', 'transparent', '', '1445339', 'and it seems working fine antialiasing is much better however this beats the idea of a transparent background in the process\n')
('antialiasing', 'less', 'transparent', '', '23305649', 'minus doesn t truly work for antialiasing less than 100 transparent pixels\n')

profiling	instrumentation	3
('profiling', 'template better', 'instrumentation', '', '29622159', 'paulw11 s comment helped--the time profiling template is better suited for this task than the system trace instrumentation\n')
('profiling', 'better', 'instrumentation', '', '12452402', 'if you re writing a mac app the opengl profiling tool profiling opengl code better than instrumentation\n')
('profiling', 'more info', 'instrumentation', '', '6131971', 'so my question is beyond instrumentation and the profiling using memory leaks which tells you the location of creation of the leaky object but not the root cause are there any other tools i could run that could give me any more info than instrumentation re tracking down the root cause point\n')

ceil	floor	5
('ceil', 'greater', 'floor', 'greater possible works', '1719752', 'the floor times the ceil are greater than the floor xy...that s very much possible\n')
('floor', 'higher', 'ceil', '', '31774804', 'now if floor is higher than 0 or ceil is lower than 0 on any axis it means that there just as many tiles outside of the camera scoop\n')
('ceil', 'always higher', 'floor', 'fractions direction higher', '39355314', 'on the other hand if what you want to do is not rounding but elimination of fractions into one direction then you have std ceil that goes always higher and std floor that always goes lower\n')
('ceil', 'greater', 'floor', 'greater possible works', '30812908', 'works because ceil a b is always one greater than floor a b except when a b is a whole number\n')
('floor', 'idx lower element', 'ceil', 'fractions direction higher', '18961058', 'so floor idx is the lower element and ceil idx is the higher\n')

memmove	memcpy	23
('memmove', 'faster', 'memcpy', 'none similiar functions', '35210091', 'on some arm platform im working on memmove was 3 times faster than memcpy for short unalligned load\n')
('memmove', 'more', 'memcpy', '', '9161130', 'note that memmove has more overhead than memcpy because it has to determine which direction of copying is safe\n')
('memcpy', 'more', 'memmove', '', '41071676', 'memcpy is more efficient than memmove. in general use memmove only if you have to\n')
('memmove', 'slower', 'memcpy', 'slower 2x server', '1201337', 'this means that memmove might be very slightly slower than memcpy as it cannot make the same assumptions\n')
('memmove', 'slower std', 'memcpy', 'slower 2x server', '44970454', 'std memmove may be very slightly slower than std memcpy emphasis added because it has to first check whether the source and target ranges overlap\n')
('memmove', '2x faster', 'memcpy', 'slower 2x server', '22793669', 'edit memmove is 2x faster than memcpy on the server\n')
('memcpy', 'faster', 'memmove', 'none similiar functions', '19585930', 'so in what platform and how memcpy can be significantly faster than memmove if there is none why providing two similiar functions instead of just memmove and lead to a lots of bug\n')
('memcpy', 'more efficient', 'memmove', '', '41071676', 'memcpy is more efficient than memmove. in general use memmove only if you have to\n')
('memmove', 'greater', 'memcpy', '', '8205192', 'it is entirely possible that in most implementations the cost of a memmove function call will not be significantly greater than memcpy in any scenario in which the behavior of both is defined\n')
('memmove', 'more overhead', 'memcpy', '', '9161130', 'note that memmove has more overhead than memcpy because it has to determine which direction of copying is safe\n')
('memcpy', 'faster', 'memmove', '', '4480146', 'if you know buffers cannot overlap memcpy is fine and may in any given library use optimizations that allow it to be faster than memmove\n')
('memcpy', 'slower', 'memmove', 'slower 2x server', '41963723', 'why is memcpy so much slower than memmove or hand rolled copy on the server\n')
('memcpy', 'faster', 'memmove', 'slower 2x server', '18176857', 'from reading other so questions such as this or this gives the impression that memcpy should work faster than memmove and intuitively this should be so\n')
('memcpy', 'slower', 'memmove', 'slower 2x server', '18176857', 'why does memcpy perform slower than memmove on my system\n')
('memmove', 'slower', 'memcpy', 'slower 2x server', '22793669', 'bad news is that the asmlib version of memmove is slower than the glibc version it is now running at the 300ms mark on par with the glibc version of memcpy\n')
('memmove', 'slower', 'memcpy', 'slower 2x server', '44966288', 'and it said memmove might be very slightly slower than memcpy\n')
('memcpy', 'more efficient', 'memmove', 'memory answers sophisticated', '6283024', 'as an aside my c c++ is rusty but is not memcpy more efficient than memmove if you know you don t have overlapping memory\n')
('memcpy', 'slower', 'memmove', 'slower 2x server', '28623895', 'memcpy is still a little bit slower than memmove\n')
('memmove', 'slower', 'memcpy', '', '22793669', 'memmove on the laptop runs slower than memcpy but oddly enough runs at the same speed as the memmove on the server\n')
('memmove', 'slower', 'memcpy', '', '17552734', 'while memmove will be only slightly slower than memcpy due to the assumptions it needs to make about the source and destination in memcpy they cannot overlap it should still be far superior to any standard loop\n')
('memcpy', 'faster', 'memmove', 'slower 2x server', '19585930', 'the question is about is there really any platform where memcpy is faster than memmove\n')
('memmove', 'cache friendlier', 'memcpy', '', '28623895', 'in addition as mats petersson said memmove is cache friendlier than memcpy\n')
('memmove', 'more sophisticated', 'memcpy', 'memory answers sophisticated', '36731330', 'as already pointed out in other answers memmove is more sophisticated than memcpy such that it accounts for memory overlaps\n')

tiff	png	7
('png', 'larger', 'tiff', 'approach smaller compression', '44229626', 'the resulting png compression may produce a file size larger than your tiff compression\n')
('png', 'much more', 'tiff', '', '34695038', 'today png is much more popular than tiff so if you re writing files outside of your own data store png would be a more common choice and you d need to work through nsimagerep to get there\n')
('png', 'approach smaller', 'tiff', 'approach smaller compression', '32949970', 'the resulting file from this png approach is smaller in size than a tiff file and i guess may rescale better\n')
('tiff', 'better', 'png', 'approach smaller compression', '4362006', 'tiff √¢ any bit depth any compression lossy or lossless everything including the kitchen sink √¢ and no better than png\n')
('png', 'smaller', 'tiff', '', '9806763', 'jpg or png should get you smaller than tiff\n')
('png', 'much more popular', 'tiff', '', '34695038', 'today png is much more popular than tiff so if you re writing files outside of your own data store png would be a more common choice and you d need to work through nsimagerep to get there\n')
('png', 'more popular', 'tiff', '', '34695038', 'today png is much more popular than tiff so if you re writing files outside of your own data store png would be a more common choice and you d need to work through nsimagerep to get there\n')

struct	typedef	7
('typedef', 'better', 'struct', '', '32624293', 'also i think typedef is a better choice when you want to define a struct\n')
('struct', 'clearer', 'typedef', '', '16279245', 'one camp most notably the linux kernel people thinks that struct a is clearer than the typedef\n')
('struct', 'foo easier', 'typedef', '', '8422898', 'struct foo is easier to parse then typedef d foo as the name-lookup is simpler\n')
('typedef', 's incredibly longer', 'struct', '', '41018933', 'you can verify with a simple objdump symbols objfile.obj that the length of decorated symbols by using typedef s is incredibly longer than their similar counterparts split into struct s microsoft compilers have historically used a proprietary name mangling scheme\n')
('typedef', 'better choice', 'struct', '', '32624293', 'also i think typedef is a better choice when you want to define a struct\n')
('struct', 'more', 'typedef', '', '31443691', 'this is a good example of a time to know the basics - i think understanding the ins and outs of struct is more helpful than typedef since you can do so much more with it\n')
('struct', 'more helpful', 'typedef', '', '31443691', 'this is a good example of a time to know the basics - i think understanding the ins and outs of struct is more helpful than typedef since you can do so much more with it\n')

sum	aggregate-functions	4
('aggregate-functions', 'more general', 'sum', 'version answer general', '5653498', 'as an added answer there is also the aggregate-functions which is more general than sum\n')
('sum', 'more consistent', 'aggregate-functions', '', '3323081', 'i changed out total for sum which is more consistent with other databases sqlite aggregate-functions\n')
('sum', 'more', 'aggregate-functions', '', '3323081', 'i changed out total for sum which is more consistent with other databases sqlite aggregate-functions\n')
('aggregate-functions', 'more', 'sum', 'version answer general', '10256374', 'aggregate-functions is more general version of sum\n')

openrasta	wcf	5
('openrasta', 'simpler', 'wcf', '', '2288413', 'building restful services with openrasta is much simpler than with wcf in my experience\n')
('openrasta', 'better', 'wcf', '', '6487982', 'is openrasta better than wcf\n')
('openrasta', 'much simpler', 'wcf', '', '2288413', 'building restful services with openrasta is much simpler than with wcf in my experience\n')
('openrasta', 'more mature', 'wcf', 'api mature web', '6227193', 'though openrasta looks more mature than wcf web api i m still a bit confused\n')
('openrasta', 'much more mature', 'wcf', 'api mature web', '6227583', 'openrasta is much more mature than wcf web api\n')

filesystems	fat	5
('fat', 'easier', 'filesystems', '', '8219726', 'granted fat is an easier problem but they claim to support many filesystems and it would be my first choice\n')
('filesystems', 'more likely', 'fat', '', '7419841', 'since the filesystems is more than likely fat or fat32 protecting it permission based way would be more convoluted\n')
('fat', 'easier problem', 'filesystems', '', '8219726', 'granted fat is an easier problem but they claim to support many filesystems and it would be my first choice\n')
('filesystems', 'more complex', 'fat', '', '2398216', 'most modern filesystems are also considerably more complex than fat which would add further difficulty to the implementation\n')
('filesystems', 'more', 'fat', '', '7419841', 'since the filesystems is more than likely fat or fat32 protecting it permission based way would be more convoluted\n')

fixed-point	floating-point	7
('fixed-point', 'more exact', 'floating-point', '', '3737403', 'fixed-point can be much more exact than floating-point as long as the number s exponents remain in range\n')
('fixed-point', 'more precision ieee', 'floating-point', '', '9581376', 'it s not necessarily true that the matlab fixed-point arithmetic provides less precision it can be used to provide more precision than ieee floating-point types\n')
('fixed-point', 'arithmetic less precision', 'floating-point', '', '9581376', 'it s not necessarily true that the matlab fixed-point arithmetic provides less precision it can be used to provide more precision than ieee floating-point types\n')
('fixed-point', 'faster software', 'floating-point', '', '14769407', 'anthony williams fixed-point maths library provides a complete analogue of the standard maths library for a fixed data type that is typically around 5 times faster than software floating-point on the same target\n')
('fixed-point', 'arithmetic less', 'floating-point', '', '9581376', 'it s not necessarily true that the matlab fixed-point arithmetic provides less precision it can be used to provide more precision than ieee floating-point types\n')
('fixed-point', 'faster', 'floating-point', '', '13997412', 'armv7 is usually better but for arm fixed-point arithmetic is usually a lot faster than floating-point implementations\n')
('floating-point', 'more expensive time-wise', 'fixed-point', '', '30960317', 'floating-point calculations are more expensive time-wise than fixed-point which is why fixed-point remains popular in microcontrollers and embedded systems\n')

trinidad	richfaces	3
('richfaces', 'more', 'trinidad', '', '2402860', 'i think richfaces has a more mature ajax integration and their ajax components and events are more easy to use for me than trinidad ones\n')
('trinidad', 'more basic', 'richfaces', '', '2402860', 'regarding skinning i feel trinidad default skinning to be more basic than richfaces one but i think both have ways to make them as beautiful as your css skills allow you\n')
('richfaces', 'more mature', 'trinidad', '', '2402860', 'i think richfaces has a more mature ajax integration and their ajax components and events are more easy to use for me than trinidad ones\n')

mouseleave	mouseover	5
('mouseleave', 'more reliable', 'mouseover', 'reliable', '13688947', 'imho mouseenter and mouseleave are much more reliable than mouseover and mouseout which tend to flicker\n')
('mouseleave', 'more reliable', 'mouseover', 'reliable', '11345144', 'also you might want to use mouseenter and mouseleave which are sanitized by jquery and are a little more reliable than mouseover and mouseout\n')
('mouseleave', 'better', 'mouseover', '', '46256578', 'in this case mouseenter mouseleave has better behaviour and prevents bubbling compared to mouseover mouseout\n')
('mouseleave', 'better behaviour', 'mouseover', '', '46256578', 'in this case mouseenter mouseleave has better behaviour and prevents bubbling compared to mouseover mouseout\n')
('mouseleave', 'better', 'mouseover', '', '8060841', 'it should also be noted that mouseenter and mouseleave work somewhat differently and usually much better than mouseover and mouseout\n')

webrick	unicorn	3
('webrick', 'faster', 'unicorn', '', '17107729', 'my personal experience is that webrick is faster in my development environment than unicorn and thin os x in a pretty big rails app lots of gems routes etc\n')
('unicorn', 'faster', 'webrick', '', '22414367', 'i ve also found unicorn to be faster than webrick especially in production applications and apps running on heroku\n')
('unicorn', 'faster', 'webrick', '', '22414422', 'unicorn is supposed to be faster than webrick\n')

redmine	trac	12
('redmine', 'better', 'trac', 'better easier wound', '323542', 'the authors of redmine are trying to create a better trac than trac\n')
('redmine', 'nicer', 'trac', 'multiple projects box', '294097', 'redmine handles multiple projects and sub-projects right out of the box and overall seems nicer than trac\n')
('redmine', 'better', 'trac', 'better easier wound', '1050501', 'we found redmine to be a better than trac simply because it is easier to use\n')
('redmine', 'more', 'trac', '', '3989495', 'for next projects i m going to try redmine seems more clean and hipe than trac\n')
('redmine', 'more clean', 'trac', '', '3989495', 'for next projects i m going to try redmine seems more clean and hipe than trac\n')
('redmine', 'better', 'trac', 'better easier wound', '1277646', 'redmine was written to be a better trac than trac\n')
('redmine', 'nicer', 'trac', 'multiple projects box', '5309957', 'redmine handles multiple projects and sub projects far nicer than trac\n')
('redmine', 'more', 'trac', '', '1936043', 'i understand redmine is more of a trac clone but retrospectiva seem to support agile methodologies via a nice plugin\n')
('redmine', 'better', 'trac', 'better easier wound', '5747934', 'i wound up going with redmine and it s way better than trac\n')
('redmine', 'better', 'trac', '', '386835', 'redmine is an open source ruby on rails application that supports multiple projects much better than trac and seems to be much easier to administer\n')
('redmine', 'more', 'trac', '', '1275337', 'we ve recently switched from trac to redmine where i work and i think i like it a little more than trac and use the wiki functionality almost everyday\n')
('redmine', 'more complete', 'trac', '', '380757', 'i d recommend redmine like the other posters as it is more complete than trac\n')

netrw	nerdtree	4
('nerdtree', 'better', 'netrw', 'last better', '23161453', 'is nerdtree really much better than netrw\n')
('nerdtree', 'better', 'netrw', 'last better', '23161254', 'last question is nerdtree really much better than netrw\n')
('netrw', 'more', 'nerdtree', '', '19765721', 'in the netrw plugin it would be easy but this one is not used any more as nerdtree just replaced it\n')
('netrw', 'more', 'nerdtree', '', '8950449', 'vim includes netrw which is already a filebrowser and i like it a lot more than nerdtree\n')

factors	mean	3
('factors', 'smaller', 'mean', 'growth smaller previous', '21847850', 'if the factors is smaller than the golden mean 1.6 and the previous allocations are contiguous with each other they ll eventually add up to a chunk that can satisfy a later requirement\n')
('factors', 'larger', 'mean', 'growth smaller previous', '10197144', 'if your growth factors is larger than the golden mean that can t happen\n')
('factors', 'larger', 'mean', 'growth smaller previous', '21847850', 'if the factors is larger than the golden mean they never will\n')

x86	mips	9
('x86', 'more complicated', 'mips', 'assembly architecture complicated', '40397887', 'i have studied the x86 assembly and architecture and it appears to be a lot more complicated than mips\n')
('mips', 'much more', 'x86', '', '9219871', 'mips is much more orthogonal than x86 could ever dream of being\n')
('x86', 'more complex instructions', 'mips', 'complex instructions care', '454121', 'x86 have more complex instructions than mips\n')
('mips', 'much more orthogonal', 'x86', '', '9219871', 'mips is much more orthogonal than x86 could ever dream of being\n')
('mips', 'less complex', 'x86', 'complex instructions care', '12800438', 'the wording in your question seems to suggest you don t care as much that the output is mips but rather you want the output to be less complex than x86\n')
('mips', 'more orthogonal', 'x86', '', '9219871', 'mips is much more orthogonal than x86 could ever dream of being\n')
('mips', 'easier', 'x86', 'assembly architecture complicated', '1382636', 'do any of the other common architectures like arm mips sparc etc have an easier than x86 instruction set\n')
('mips', 'more straightforward', 'x86', '', '2656592', 'a better bet might be to install spim and to learn mips assembly which is more straightforward than x86 anyways\n')
('mips', 'easier', 'x86', 'assembly architecture complicated', '16701685', 'if you have not programmed assembly before i suggest you choose mips since it is easier than x86 and then b looking at how to transfer data with the serial port to begin with since this illustrates memory-mapped i o that is used\n')

rjdbc	rodbc	3
('rjdbc', 'better', 'rodbc', '', '5965234', 'rjdbc may also be a more stable option in the linux environment especially now that the fetch code has been re-written in java as of development release 0.2-0 on r-forge its performance is on par with if not better than rodbc\n')
('rodbc', 'longer', 'rjdbc', '', '46314548', 'rodbc takes longer than rjdbc\n')
('rjdbc', 'slower', 'rodbc', '', '21188796', 'now the speed of sql server interaction with r has affected because rjdbc is slower than rodbc but its not too bad\n')

uitextview	uilabel	6
('uitextview', 'much more', 'uilabel', '', '18561194', 'i m aware that uitextview is much more suitable for this as it implements uitextinput protocol which has all the methods i need but due to a bug in ios i m limited to uilabel\n')
('uitextview', 'more complicated', 'uilabel', '', '32473074', 'my problem is uitextview is more complicated than uilabel\n')
('uitextview', 'more', 'uilabel', '', '32473074', 'my problem is uitextview is more complicated than uilabel\n')
('uitextview', 'much more suitable', 'uilabel', '', '18561194', 'i m aware that uitextview is much more suitable for this as it implements uitextinput protocol which has all the methods i need but due to a bug in ios i m limited to uilabel\n')
('uitextview', 'bigger', 'uilabel', '', '39268477', 'i think the problem happened because the padding left right of uitextview is bigger than uilabel\n')
('uitextview', 'slower', 'uilabel', '', '4925945', 'also consider using uilabel instead of uitextview if you don t need to edit information inside since uitextview take longer to allocate and init and are generally slower than uilabel\n')

textarea	pre	3
('textarea', 'better', 'pre', '', '30758628', 'also you can do this with textarea or better with pre html element\n')
('textarea', 'more', 'pre', '', '15693980', 'textarea has one more line than pre\n')
('textarea', 'more line', 'pre', '', '15693980', 'textarea has one more line than pre\n')

scalamock	mockito	3
('mockito', 'longer', 'scalamock', '', '41273504', 'mockito has been around a lot longer than scalamock and is much more actively maintained because of it s much larger contributor base\n')
('scalamock', 'more', 'mockito', '', '41272971', 'scalamock looks more natural when developing applications in scala however from what i read it seems to support fewer test scenarios compared to mockito and it s also less mature\n')
('scalamock', 'more natural', 'mockito', '', '41272971', 'scalamock looks more natural when developing applications in scala however from what i read it seems to support fewer test scenarios compared to mockito and it s also less mature\n')

swt	swing	20
('swt', 'more', 'swing', '', '269117', 'swt is more simple to use than swing especially if this is your first ui\n')
('swt', 'harder', 'swing', '', '4508736', 'fixing bugs in swt is much harder than in swing most classes in swt are final or contain hostile checks in the constructor to make sure no one extends them the package is signed so you can t simply replace classes and so far i tried several times to compile swt from sources - and failed\n')
('swt', 'more', 'swing', '', '2281068', 'swt has a more platform-specific look about it but java ships with swing built-in there s no messing about with external libraries as with swt although the use of eclipse may make that much easier i still develop quite a bit of my stuff from the command line unfortunately\n')
('swt', 'slower', 'swing', '', '35038895', 'swt became slower than swing because it uses proxy to os widgets\n')
('swt', 'community smaller', 'swing', '', '5198877', 'swt community is smaller and it doesn t provide that many tools as swing does\n')
('swt', 'simpler', 'swing', '', '3186430', 'give swt a go the api is a lot simpler than swing\n')
('swt', 'actually newer', 'swing', '', '16695135', 'also swt is actually newer and more actively maintained than swing\n')
('swt', 'uglier api', 'swing', '', '6819467', 'i find swt to be an uglier api than swing in general though but not really a deal breaker\n')
('swt', 'more simple', 'swing', '', '269117', 'swt is more simple to use than swing especially if this is your first ui\n')
('swing', 'simply easier', 'swt', '', '5329644', 'so in my view using swing is simply easier unless you have more experience in swt\n')
('swing', 'better', 'swt', '', '20930869', 'in java if you want a graphic user interface you can use swt or swing and swing is better than swt\n')
('swt', 'faster', 'swing', '', '1298464', 'is swt faster than swing\n')
('swt', 'simpler', 'swing', '', '9085526', 'even though i liked many design aspects of swt and it is simpler than swing imo swing is the one to learn because imo it has far far better documentation examples etc\n')
('swt', 'more familiar', 'swing', '', '8136079', 'i m not too eager for using swt though since i m more familiar with swing\n')
('swt', 'much harder', 'swing', '', '4508736', 'fixing bugs in swt is much harder than in swing most classes in swt are final or contain hostile checks in the constructor to make sure no one extends them the package is signed so you can t simply replace classes and so far i tried several times to compile swt from sources - and failed\n')
('swing', 'weaker', 'swt', '', '15597946', 'swing is the weaker of the gui technologies relating to accessibility in java compared to swt at any rate\n')
('swing', 'easier', 'swt', '', '9333610', 'in my opinion swing is easier to learn and to use but the results of swt are often nicer - you can often feel that a swing application behaves not completely right\n')
('swt', 'faster', 'swing', '', '8700142', 'swt is claimed to be faster than swing although in modern versions swing is also fast enough\n')
('swt', 'usually easier', 'swing', '', '1037130', 'it can be hard to get the layuots exact the way you want in swt it s usually easier in swing\n')
('swt', 'more platform-specific', 'swing', '', '2281068', 'swt has a more platform-specific look about it but java ships with swing built-in there s no messing about with external libraries as with swt although the use of eclipse may make that much easier i still develop quite a bit of my stuff from the command line unfortunately\n')

uitableview	uipickerview	4
('uitableview', 'more customizable', 'uipickerview', '', '1440450', 'uitableview is much more customizable than uipickerview\n')
('uipickerview', 'nothing more', 'uitableview', '', '14856860', 'the uipickerview is nothing more than a uiview with one or more uitableview and background and selector views\n')
('uitableview', 'much more customizable', 'uipickerview', '', '1440450', 'uitableview is much more customizable than uipickerview\n')
('uitableview', 'much more', 'uipickerview', '', '1440450', 'uitableview is much more customizable than uipickerview\n')

flask	django	14
('flask', 'smaller', 'django', 'great community extensions', '3777454', 'if you are looking for the latter then flask is a micro framework that is considerably smaller than django\n')
('flask', 'much easier', 'django', '', '43979250', 'both frameworks are fairly easy to implement flask is much easier than django imo although django has a built in authentication layer that you can use albeit more difficult to implement in a client server scenario like you need\n')
('flask', 'more', 'django', '', '27329343', 'flask is more focused on simplicity instead of functionality while django has more functionality\n')
('flask', 'better', 'django', '', '28570968', 'i read that flask for beginner is better than django because educational reasons at the same time django have django oscar\n')
('flask', 'simplier', 'django', '', '44696924', 'current task looks like flask is ok for it since it is smaller and simplier than django\n')
('flask', 'more lightweight', 'django', '', '17385593', 'either will do the trick but bottle or in my preference flask will be faster as it is much more lightweight than django\n')
('flask', 'easier', 'django', '', '43979250', 'both frameworks are fairly easy to implement flask is much easier than django imo although django has a built in authentication layer that you can use albeit more difficult to implement in a client server scenario like you need\n')
('django', 'more out-of-the-box', 'flask', '', '46994273', 'django is very batteries included meaning that it comes with much more out-of-the-box than say flask and to me a large part of that the user auth system\n')
('django', 'more complicated', 'flask', '', '12781655', 'but a friend told me to begin with flask as it s simpler and will help me when i start learning django as django is more complicated than flask\n')
('django', 'more', 'flask', '', '12781655', 'but a friend told me to begin with flask as it s simpler and will help me when i start learning django as django is more complicated than flask\n')
('flask', 'more light', 'django', '', '32937016', 'our team use django as our frame before but now we use flask as our frame because it is more light than django but we still use django template.\n')
('flask', 'more comfortable', 'django', '', '10778346', 'i m building an application in both bottle and flask to see which i am more comfortable with as django is too much batteries included\n')
('django', 'better integration', 'flask', '', '18607458', 'but if the use of mongodb is a must then i suggest that you reconsider using django in the first place because mongodb has a better integration with flask through mongoengine\n')
('flask', 'smaller', 'django', 'great community extensions', '13186525', 'flask has a really great albeit smaller than django community and there are a lot of extensions available for common web-app extensions in the extensions directory\n')

screens	mdpi	9
('screens', 'more', 'mdpi', '', '28115430', 'if device screens destiny is more than mdpi - use default values folder\n')
('screens', 'smaller', 'mdpi', 'high smaller size', '46668634', 'ldpi assets will look bad on high density screens but are exponentially smaller than mdpi which is exponentially smaller than hdpi etc\n')
('mdpi', 'shorter', 'screens', 'xhdpi ldpi 48x48', '28262431', 'i have used this link to generate nine-patch images however even if i add the files to the drawable ldpi mdpi ldpi xhdpi and xxhdpi folders the image is still shorter than the screens width\n')
('screens', 'slightly taller', 'mdpi', 'xhdpi ldpi 48x48', '11429834', 'proportionally the hdpi screens is slightly taller than the mdpi screens\n')
('screens', 'density less', 'mdpi', 'xhdpi ldpi 48x48', '13482946', 'if the screens density is less than xhdpi i load smaller sampled sizes of the 96x96 image - as 36x36 for ldpi 48x48 for mdpi 72x72 for hdpi\n')
('screens', 'size larger', 'mdpi', 'high smaller size', '19835542', 'since the screens size is larger than the common mdpi screens sizes 320x480 the text size looks smaller in this emulator\n')
('screens', 'bigger', 'mdpi', 'high smaller size', '15987663', 'i read in some tutorials that android automatically scales up the images when the screens resolution is bigger than mdpi\n')
('screens', 'destiny more', 'mdpi', '', '28115430', 'if device screens destiny is more than mdpi - use default values folder\n')
('mdpi', 'phone smaller', 'screens', 'high smaller size', '28541798', 'addressing issue #2 if your mdpi phone has a smaller screens than 600dp it will use the layout in res layout folder\n')

cloudant	couchdb	4
('cloudant', 'more', 'couchdb', '', '20685886', 'due to many improvements to couchdb and that cloudant has more features than vanilla couchdb my suggestion would be to use a c++ http library to communicate with cloudant\n')
('cloudant', 'more features vanilla', 'couchdb', '', '20685886', 'due to many improvements to couchdb and that cloudant has more features than vanilla couchdb my suggestion would be to use a c++ http library to communicate with cloudant\n')
('cloudant', 'more features', 'couchdb', '', '20685886', 'due to many improvements to couchdb and that cloudant has more features than vanilla couchdb my suggestion would be to use a c++ http library to communicate with cloudant\n')
('cloudant', 'more', 'couchdb', '', '16593266', 'regarding cloudant it s more or less just couchdb so to connect you can use these libraries from the couchdb wiki\n')

filesystems	ntfs	10
('ntfs', 'much more', 'filesystems', '', '3551199', 'ntfs is much more complex and time consuming due to the more complex nature of this filesystems\n')
('filesystems', 'trickier business', 'ntfs', '', '10080420', 'actual mounting of filesystems is trickier business and really depends on what you are mounting - ntfs fat ext3 xfs nfs cifs webdav etc etc\n')
('ntfs', 'slower', 'filesystems', '', '28177009', 'the problem is that windows ntfs is slower than typical linux filesystems for these lookups\n')
('filesystems', 'simpler ones', 'ntfs', '', '2983099', 'although i myself have prior experience in implementing filesystems much simpler ones than ntfs xfs or ext2 i would not tackle this job\n')
('ntfs', 'more tricky', 'filesystems', '', '21863136', 'if you need to load from a well-defined filesystems fat or ntfs this is more tricky you have only 450 bytes of space because 60 of the 512 bytes are used by the filesystems internally for code that interprets the data of the filesystems finds the file containing the code and loads it into memory\n')
('ntfs', 'much more complex', 'filesystems', '', '3551199', 'ntfs is much more complex and time consuming due to the more complex nature of this filesystems\n')
('ntfs', 'better', 'filesystems', '', '32622710', 'generally the performance of hard filesystems like ntfs is better than that of traditional unix filesystems\n')
('filesystems', 'less', 'ntfs', '', '35627', 'when people say that unix filesystems are better they might mean to be saying oh ext3 stores bits in such as way that corruption happens way less than ntfs but they might also be talking about design choices made at the common layer above\n')
('filesystems', 'trickier', 'ntfs', '', '10080420', 'actual mounting of filesystems is trickier business and really depends on what you are mounting - ntfs fat ext3 xfs nfs cifs webdav etc etc\n')
('ntfs', 'more', 'filesystems', '', '21863136', 'if you need to load from a well-defined filesystems fat or ntfs this is more tricky you have only 450 bytes of space because 60 of the 512 bytes are used by the filesystems internally for code that interprets the data of the filesystems finds the file containing the code and loads it into memory\n')

guava	lambdaj	3
('guava', 'more popular', 'lambdaj', '', '19599464', 'the guava library is much more popular than lambdaj and does allow you to avoid for while loops by using preficates and filter methods\n')
('guava', 'library much more popular', 'lambdaj', '', '19599464', 'the guava library is much more popular than lambdaj and does allow you to avoid for while loops by using preficates and filter methods\n')
('guava', 'library much more', 'lambdaj', '', '19599464', 'the guava library is much more popular than lambdaj and does allow you to avoid for while loops by using preficates and filter methods\n')

qunit	jasmine	3
('jasmine', 'clearly more', 'qunit', '', '18155477', 'jasmine is clearly more bdd focused than qunit although i could see doing bdd with qunit by describing the tests in a behavior-oriented way\n')
('qunit', 'better', 'jasmine', '', '12772542', 'performing this asynchronous testing is actually possible in qunit but is handled better in another javascript testing framework jasmine js\n')
('jasmine', 'clearly more bdd', 'qunit', '', '18155477', 'jasmine is clearly more bdd focused than qunit although i could see doing bdd with qunit by describing the tests in a behavior-oriented way\n')

modulo	addition	13
('modulo', 'higher precedence', 'addition', 'higher precedence operator', '32254191', 'multiplication division and modulo have the same precedence and they all have higher precedence than addition and subtraction\n')
('modulo', 'higher precedence', 'addition', 'higher precedence operator', '25297793', 'and keep in mind that the modulo has a higher precedence than addition and subtraction\n')
('addition', 'much cheaper', 'modulo', 'operations important slower', '23462464', 'the addition is much cheaper than other operations like modulo and division and array access\n')
('modulo', 'higher', 'addition', 'higher precedence operator', '40602532', 'the modulo has a higher precedence than addition\n')
('modulo', 'higher operator', 'addition', 'higher precedence operator', '23395245', 'the modulo has a higher operator precedence than the addition operator therefore it will happen before the addition\n')
('addition', 'better', 'modulo', '', '31351662', 'the result of the addition was better than the modulo the by 0.0070000 milliseconds over the course of 2 million or 200 000 iterations\n')
('modulo', 'slower', 'addition', 'operations important slower', '31494852', 'then you can process any length number using very few division remainder modulo operations which is important because they are much slower than addition\n')
('modulo', 'higher precedence', 'addition', 'higher precedence operator', '41520049', 'note parentheses are redundant as division and multiplication have the same priority and modulo has higher precedence over addition\n')
('modulo', 'more tightly', 'addition', 'higher precedence operator', '40679020', 'because the string formatting operator shares precedence with the remainder or modulo which binds more tightly than the + addition operator\n')
('modulo', 'slower integer', 'addition', 'operations important slower', '898763', 'integer multiplication division and modulo are much slower than integer addition and subtraction\n')
('modulo', 'higher precedence', 'addition', 'higher precedence operator', '15075753', 'modulo can also cause a divide-by-zero and it has a higher precedence than addition\n')
('modulo', 'weaker', 'addition', '', '16363111', 'is the modulo really weaker than the addition\n')
('modulo', 'slower', 'addition', 'operations important slower', '8132236', 'division and modulo are indeed costly hardware operations whatever you do this is more related to hardware architecture than to languages or compilers perhaps ten times slower than addition\n')

matrix	factors	9
('matrix', 'lower triangular', 'factors', '', '12901850', 'finally note that by default ichol references the lower triangle of the input matrix and returns a lower triangular factors\n')
('factors', 'more complicated', 'matrix', '', '11123968', 'eta to answer your question in more general terms let s say we had the number of subjects and levels set up in advance increasing the number of factors is more complicated unless i m mistaken because then it would no longer be a two-dimensional matrix\n')
('matrix', 'size asymptotically worse', 'factors', '', '9356573', 'however it still performs worse by initially a factors of 3 but as the matrix size increases asymptotically worse by a factors of exactly 2\n')
('factors', 'more', 'matrix', '', '11123968', 'eta to answer your question in more general terms let s say we had the number of subjects and levels set up in advance increasing the number of factors is more complicated unless i m mistaken because then it would no longer be a two-dimensional matrix\n')
('matrix', 'more', 'factors', '', '23217722', 'in the code below i use block multiplication to speed up your code for a 1024x1204 matrix by more than a factors of ten 7.1 s with old code and 0.6s with new using only a single thread without using sse avx\n')
('factors', 'smaller model', 'matrix', '', '44734705', 'consider a model with lots of factors or nonlinear terms like bs ns or poly the model frame is much smaller compared with model matrix\n')
('matrix', 'slower', 'factors', '', '26356042', 'i measured the time it takes to calculate the distance between a vector and the rows of a matrix when they are in the object and it work slower by a factors of 3 then the normal distance function\n')
('matrix', 'worse', 'factors', '', '9356573', 'however it still performs worse by initially a factors of 3 but as the matrix size increases asymptotically worse by a factors of exactly 2\n')
('matrix', 'lower', 'factors', '', '12901850', 'finally note that by default ichol references the lower triangle of the input matrix and returns a lower triangular factors\n')

twig	smarty	3
('twig', 'better', 'smarty', '', '5769381', 'if you use twig which i like better than smarty - although i still prefer self-restraint+plain php most ide s that support django templating should work with it since the syntax is nearly the same\n')
('twig', 'better', 'smarty', 'market new symfony', '2894515', 'if your in the market for a templating engine twig a new templating engine used by symfony is much better than smarty imho\n')
('smarty', 'cleaner', 'twig', 'market new symfony', '25748940', 'either way i intend to use smarty partly because i have lots of experience with it and partly because its much more well documented and has much more functionality than blade and to me the syntax is slightly cleaner than twig although the template engine is not the point of this question really\n')

range	minimum	16
('minimum', 'not less', 'range', '', '47093441', 'minimum 1.6.0 is not less then range maximum 1.0.0 inclusion is\n')
('range', 'wider', 'minimum', '', '3539872', 'for example the language standard only mandates minimum range for types like short int and long but they may be wider than the minimum requirements\n')
('range', 'smaller', 'minimum', 'negative error exponent', '1990334', 'a range is contiguous when there is no value one smaller than the minimum and no value one bigger than the maximum and there is no gap within the range\n')
('range', 'less', 'minimum', '', '28241607', 'this obviously means that range is less than its minimum of 1\n')
('range', 'longer', 'minimum', '', '10923040', 'to summarize the problem given time range t1 and t2 on day d how can i determine the remaining time left in d that is longer than the minimum time block m\n')
('range', 'more', 'minimum', '', '10861750', 'the objective function is guaranteed to be finite and contionuous in the interpolation range along with its first and second derivatives and has no more than one minimum in this range if it has no minimum it is monotonic\n')
('minimum', 'not less then', 'range', '', '47093441', 'minimum 1.6.0 is not less then range maximum 1.0.0 inclusion is\n')
('range', 'higher', 'minimum', '', '31088127', '145 the output is like √¢ ¬∫√¢ √¢ √¢ ¬∫√¢ √¢ it doesn t reverse when the range is higher than 145 it works fine in gcc for borland turboc the minimum range must be 65 otherwise the program prints strange values instead of reversing it\n')
('range', 'less', 'minimum', '', '46186489', 'the unfortunate side effect is that half your circle will be cut off as it extends into the range that is less than your minimum value\n')
('range', 'greater', 'minimum', 'negative error exponent', '31084948', 'the reductive point here is the expression can actually be simplified to just the range that has the greater minimum value and the lesser maximum value\n')
('range', 'much closer', 'minimum', '', '47293435', 'for any particular set of hyperparameters this range is much closer to the minimum response than to the maximum\n')
('range', 'larger', 'minimum', '', '3821910', 'if the 32-bit float range is larger than -1..1 then you need to find the minimum and maximum values and calculate a scale factor that gets the samples within the int16 range\n')
('range', 'greater', 'minimum', 'negative error exponent', '5234591', 'how about for integer values you specify a range and a predicate that specifies the value must be greater than minimum less than maximum instead\n')
('range', 'less', 'minimum', 'negative error exponent', '45109856', 'i have hinted at my analysis of the problem finding the common range of depth values across all datasets and you should be able to track through how i have implemented this in excel to cater for cases where some datasets might contain depth values which are less than the minimum of the common range or which are greater than its maximum or possibly both\n')
('range', 'greater', 'minimum', 'negative error exponent', '40184847', 'the smallest most negative value that does not cause a range error is the one greater than the minimum exponent minus the number of bits of mantissa\n')
('range', 'lower', 'minimum', 'negative error exponent', '45656389', 'the cause for an integer overflow is when an arithmetic operation attempts to create a numeric value that is outside of the range that can be represented with a given number of bits either larger than the maximum or lower than the minimum representable value\n')

gtk	cairo	3
('gtk', 'more', 'cairo', '', '1734609', 'with gtk it s more common to use cairo already mentioned by jeff foster\n')
('cairo', 'larger', 'gtk', '', '12490400', 'the problem is that the canvas drawn by cairo is larger than the area of gtk s scrolled_window\n')
('gtk', 'more common', 'cairo', '', '1734609', 'with gtk it s more common to use cairo already mentioned by jeff foster\n')

settimeout	setinterval	29
('setinterval', 'less efficient', 'settimeout', '', '46857547', 'keep in mind that using setinterval is less efficient for this case then using settimeout which doesn t require comparing times at all as it schedules the alarm to occur at a particular time as setinterval will use more processor cycles to both schedule a check and then to compare the times\n')
('setinterval', 'cleaner', 'settimeout', 'little shure statement', '41311136', 'i find setinterval is a little cleaner than chaining settimeout calls\n')
('settimeout', 'timer more preferably', 'setinterval', 'timers use timer', '34249135', 'the use of one settimeout timer is more preferably than several setinterval timers\n')
('setinterval', 'better way', 'settimeout', 'better previous ajax', '20182174', 'i understand from searching on so that setinterval is a better way to approach this that settimeout which i was using initially but i haven t figured out how to specify that the function needs to repeat\n')
('settimeout', 'better', 'setinterval', 'better previous ajax', '3030830', 'if so then you can just pop lines off the array using settimeout which is better than setinterval for most animations\n')
('settimeout', 'more', 'setinterval', 'little shure statement', '23111155', 'and im not shure about this statement javascript likes settimeout more than setinterval which gives a little performance boost\n')
('settimeout', 'usually more', 'setinterval', 'useful need method', '41731274', 'now a routine to initiate once per second - settimeout is usually more useful than setinterval\n')
('settimeout', 'less', 'setinterval', '', '37951980', 'i read that settimeout is less cpu resources intensive than setinterval\n')
('settimeout', 'better', 'setinterval', 'better previous ajax', '31064972', 'but settimeout would be better than setinterval because with setinterval if your previous ajax request is not complete and you start another request there will have multiple requests which would sooner be problematic\n')
('settimeout', 'safer', 'setinterval', 'better task safer', '20550018', 'i think using settimeout is safer than setinterval\n')
('settimeout', 'better', 'setinterval', 'better previous ajax', '16126379', 'settimeout is better than setinterval here because setinterval will start at every 5 secs but settimeout will start once each time your job is done and wait for 5 seconds which will make your script adaptive to server response timings\n')
('settimeout', 'simpler', 'setinterval', 'useful need method', '46886457', 'as for me settimeout is simpler than setinterval in this case as you won t need to clearinterval in the end of the array\n')
('setinterval', 'more appropriate', 'settimeout', '', '17169595', 'also i advise you to take a look at javascript s setinterval since it is more appropriate than settimeout for what you want to do\n')
('settimeout', 'more', 'setinterval', 'useful need method', '20139502', 'settimeout is more relevant than setinterval since the first method just waits for a delay and executes a logic whereas the second function is meant for repeating a logic on periodic intervals\n')
('settimeout', 'better', 'setinterval', 'better previous ajax', '39790991', 'also settimeout is a better approach than setinterval as you explicitly reset it on each round trip\n')
('settimeout', 'bigger priority', 'setinterval', '', '32307605', 'it seems that settimeout has bigger priority than setinterval which could be delayed\n')
('settimeout', 'less cpu', 'setinterval', '', '37951980', 'i read that settimeout is less cpu resources intensive than setinterval\n')
('setinterval', 'much more', 'settimeout', 'timers use timer', '9578359', 'setinterval is much more suited for countdown timers and things you need to run continually since settimeout only runs once and you need to keep on calling it\n')
('setinterval', 'less', 'settimeout', '', '46857547', 'keep in mind that using setinterval is less efficient for this case then using settimeout which doesn t require comparing times at all as it schedules the alarm to occur at a particular time as setinterval will use more processor cycles to both schedule a check and then to compare the times\n')
('setinterval', 'often better', 'settimeout', 'better task safer', '16539647', 'also setinterval is often better replaced by settimeout\n')
('setinterval', 'more', 'settimeout', 'useful need method', '14174099', 'setinterval is more useful than settimeout here as it recurs automatically and you don t need to keep setting it\n')
('settimeout', 'more aesthetic experience', 'setinterval', '', '13234026', 'also in my experience at least settimeout offers a much more aesthetic experience than setinterval or requestanimationframe\n')
('settimeout', 'better idea', 'setinterval', 'better previous ajax', '47316194', 'using settimeout for such purposes is better idea than setinterval as you don t have to clear them and they won t get crowded - if your fight takes longer than period then this won t run into next fight\n')
('settimeout', 'better', 'setinterval', 'better previous ajax', '7197129', 'it uses settimeout however settimeout is a better solution than setinterval because it will only queue a new one if the previous one is complete\n')
('setinterval', 'more accurate', 'settimeout', 'useful need method', '43600221', 'well setinterval and settimeout essentially try to do the same thing but for your case setinterval method will be more accurate than settimeout\n')
('setinterval', 'better', 'settimeout', 'better task safer', '34253539', 'setinterval is better than settimeout for this task\n')
('setinterval', 'better way', 'settimeout', 'better task safer', '37051171', 'setinterval would be the better way than settimeout\n')
('settimeout', 'bigger', 'setinterval', '', '32307605', 'it seems that settimeout has bigger priority than setinterval which could be delayed\n')
('settimeout', 'better', 'setinterval', 'better previous ajax', '22424960', 'using settimeout is considered better than setinterval because of the screwy ways that js s event loop works\n')

max	minimum	15
('max', 'less', 'minimum', '', '11870987', 'i m simply checking the values of two input textboxes and alerting the user if the max price is less than the minimum price but they re evaluating backwards\n')
('minimum', 'less', 'max', '', '34556171', 'if i is rather little just iterate and keep i minimum datas insert every new data in a binary tree of the i most little datas if it is less than the max of these datas\n')
('minimum', 'lower', 'max', 'equal update left', '32300572', 'for group 1 the minimum value is actually 2 however i need minimum indexed lower than max value index position\n')
('max', 'lower', 'minimum', 'equal update left', '22326765', 'my question is can we set max stack size lower than the minimum stack size which may be 4 kb for the goroutines\n')
('max', 'less', 'minimum', '', '44407942', 'now you are iterating exactly like your example with one change to know what is the next set you are moving to you have to replace every number in the current set with the next number in the array and replace the max option that less than the minimum you are saving\n')
('minimum', 'less', 'max', 'equal update left', '40118146', 'all numbers will always be equal to or greater than the minimum value or equal to or less than the max value\n')
('minimum', 'smaller', 'max', '', '35101099', 'the minimum requirement and smaller than the max requirement\n')
('minimum', 'higher', 'max', 'equal update left', '39976775', 'in this example i would want to flag the following records in my data 2 lower than the minimum for x and 4 higher than the max for y\n')
('max', 'price less', 'minimum', '', '11870987', 'i m simply checking the values of two input textboxes and alerting the user if the max price is less than the minimum price but they re evaluating backwards\n')
('max', 'longer', 'minimum', '', '19796176', 'why is the max time which happens on the first iteration of the loop 2-4x longer than the minimum time\n')
('max', 'more', 'minimum', '', '9952736', 'first i run a query to find the min and max for each security id then find the difference between the min and max and finally find a value that is 10 more than the minimum like this\n')
('minimum', 'value greater', 'max', 'equal update left', '30945059', '4.if minimum value is greater than the current value in array than add difference of than in ans add the difference with current value update max from left\n')
('max', 'larger', 'minimum', 'equal update left', '26761734', 'how can the max value be larger than the minimum\n')
('max', 'greater', 'minimum', '', '3967656', 'if it were possible to find such a cut then max-flow min-cut would not be true the max flow of the network would be greater than the minimum capacity of an s-t cut\n')
('max', 'less', 'minimum', 'equal update left', '13993794', 'from here you also need to take into account if the user inputs a value higher than the max year of the data and also less than the minimum\n')

sml	haskell	3
('sml', 'stricter precedence', 'haskell', '', '38068762', 'also sml has stricter precedence rules than haskell\n')
('sml', 'better', 'haskell', '', '811801', 'because sml is eagerly evaluated the execution model is far easier to comprehend and debugging via printf works a lot better than in haskell\n')
('sml', 'stricter', 'haskell', '', '38068762', 'also sml has stricter precedence rules than haskell\n')

greedy	backtracking	3
('backtracking', 'steps much fewer', 'greedy', '', '33869801', 'since the next is not far the number of backtracking steps is much fewer than with greedy matching\n')
('greedy', 'less', 'backtracking', '', '2833879', 'the capturing group 1 in the first pattern is greedy it first matches everything and takes as less as it backtracking\n')
('backtracking', 'fewer', 'greedy', '', '33869801', 'since the next is not far the number of backtracking steps is much fewer than with greedy matching\n')

okhttp	retrofit	5
('okhttp', 'better', 'retrofit', '', '25939659', 'the point of using okhttp instead of the defaulthttpclient by apache is that okhttp is threadsafe for android and better supported by retrofit\n')
('okhttp', 'more', 'retrofit', 'solution different service', '38431343', 'the basic one and i think the simplest is okhttp but you have to understand that okhttp is no more supported but still work when you downgrade your sdkversion the best solution is to use volley or retrofit\n')
('okhttp', 'wich better', 'retrofit', '', '25939659', 'since you re using android and retrofit i suggest using okhttp wich is better supported by retrofit and android thread safe the way to this is the following\n')
('retrofit', 'better pure', 'okhttp', '', '42459992', 'note that if you have json and rest then retrofit is going to be better than pure okhttp\n')
('okhttp', 'more', 'retrofit', 'solution different service', '38392143', 'first you have many different library you can use instead of retrofit the basic one and i think the simplest is okhttp but you have to understand that okhttp is no more supported but still work when you downgrade your sdkversion and you can use volley to perform the same service as retrofit\n')

sortedlist	sorteddictionary	22
('sortedlist', 'smaller', 'sorteddictionary', '', '2037401', 'ignoring the cost of providing sorted input the oh of sortedlist is smaller than the oh of sorteddictionary\n')
('sortedlist', 'less', 'sorteddictionary', '', '890438', 'sortedlist uses less memory than sorteddictionary\n')
('sortedlist', 'less', 'sorteddictionary', '', '389813', 'sortedlist uses less memory than sorteddictionary\n')
('sorteddictionary', 'faster insertion', 'sortedlist', 'removal insertion operations', '21734216', 'sorteddictionary has faster insertion and removal operations for unsorted data o logn as opposed to o n for sortedlist\n')
('sortedlist', 'less', 'sorteddictionary', 'memory', '24681338', '√¢ sortedlist uses less memory than sorteddictionary\n')
('sortedlist', 'less memory', 'sorteddictionary', 'memory', '1427158', 'sortedlist tkey tvalue uses less memory than sorteddictionary tkey\n')
('sortedlist', 'worse', 'sorteddictionary', '', '12412950', 'you should also keep in mind that sortedlist performs worse than sorteddictionary during construction if the items are not inserted in already-sorted order although in this particular case it is highly likely that dates are inserted in chronological sorted order which would be perfect\n')
('sortedlist', 'faster', 'sorteddictionary', 'middle faster', '33649821', 'sortedlist is faster when you want to enumerate the elements and you can access the elements by index and sorteddictionary is faster if there are a lot of elements and you want to insert a new element in the middle of the collection\n')
('sortedlist', 'less memory', 'sorteddictionary', '', '890438', 'sortedlist uses less memory than sorteddictionary\n')
('sortedlist', 'faster', 'sorteddictionary', 'middle faster', '9932109', 'sortedlist is faster than sorteddictionary\n')
('sortedlist', 'less', 'sorteddictionary', '', '11383959', 'sortedlist uses less memory than sorteddictionary\n')
('sortedlist', 'less memory', 'sorteddictionary', '', '9932109', 'sortedlist uses less memory than sorteddictionary\n')
('sorteddictionary', 'faster', 'sortedlist', 'removal insertion operations', '10950851', 'note after doing some benchmarks i found that sorteddictionary is faster for removal but sortedlist is faster for adding and indexing by key\n')
('sorteddictionary', 'easier', 'sortedlist', '', '33731851', 'i had one further issue that related to the oncollectionchanged - the notifycollectionchangedeventargs required an index as opposed to the item of the sorteddictionary which is doesn t come out of the box it s easier with a sortedlist but anyhow\n')
('sortedlist', 'less memory', 'sorteddictionary', '', '389813', 'sortedlist uses less memory than sorteddictionary\n')
('sortedlist', 'less memory', 'sorteddictionary', '', '11383959', 'sortedlist uses less memory than sorteddictionary\n')
('sortedlist', 'less', 'sorteddictionary', '', '472158', 'sortedlist uses less memory than sorteddictionary\n')
('sortedlist', 'less memory', 'sorteddictionary', '', '472158', 'sortedlist uses less memory than sorteddictionary\n')
('sortedlist', 'less', 'sorteddictionary', '', '9932109', 'sortedlist uses less memory than sorteddictionary\n')
('sortedlist', 'faster', 'sorteddictionary', 'middle faster', '389813', 'if the list is populated all at once from sorted data sortedlist is faster than sorteddictionary\n')
('sortedlist', 'faster', 'sorteddictionary', 'middle faster', '890438', 'if the sortedlist is populated all at once from sorted data it s faster than sorteddictionary\n')
('sorteddictionary', 'faster', 'sortedlist', 'removal insertion operations', '472158', 'sorteddictionary has faster insertion and removal operations for unsorted data o log n as opposed to o n for sortedlist\n')

octal	hex	3
('octal', 'more popular', 'hex', '', '37348054', 'apparently octal format was more popular than hex format\n')
('octal', 'more popular', 'hex', '', '9234172', 'from what i understand octal was more popular than hex among users of 18-bit architectures since a word would be exactly 6 octal digits\n')
('octal', 'less error-prone', 'hex', '', '18558347', 'the octal encoding mechanism is less error-prone than hex so i ll demonstrate using octal\n')

cobertura	emma	4
('cobertura', 'better', 'emma', '', '8070899', 'if you re going to stick with maven and want a plugin for maven that will do the code-coverage job i think cobertura is a better choice as emma stable last build is from 2005\n')
('cobertura', 'more modern', 'emma', '', '14691985', 'however cobertura looks more modern active last update from 2010 instead of 2005 and generates nicer reports so i would prefer it over emma\n')
('cobertura', 'more', 'emma', '', '14691985', 'however cobertura looks more modern active last update from 2010 instead of 2005 and generates nicer reports so i would prefer it over emma\n')
('cobertura', 'better choice', 'emma', '', '8070899', 'if you re going to stick with maven and want a plugin for maven that will do the code-coverage job i think cobertura is a better choice as emma stable last build is from 2005\n')

intersect	contains	3
('intersect', 'slower', 'contains', '', '22813163', 'edit just checked the performance of intersect it is slower than using .all with contains\n')
('intersect', 'better', 'contains', '', '13715546', 'i d say the intersect method see answer by dasblinkenlight + any must work better than contains + any\n')
('intersect', 'greater', 'contains', '', '422343', 'given two ranges a a b and c c d do they intersect is one greater than the other or does one contains the other\n')

rsa	aes	25
('rsa', 'much slower', 'aes', 'slower simpler management', '9237803', 'like you heard asymmetric cryptography like rsa is much slower than symmetric cryptography aes but it does have it s advantages simpler key management a single private key to protect\n')
('rsa', 'key less', 'aes', '', '24333679', 'but if you use public key encryption to encrypt messages you are a limited to small messages -- a 1024 bit rsa key encrypts less than 128 bytes and b going to pay in performance because public key encryption is much more costly than symmetric key encryption such as aes encryption\n')
('aes', 'less', 'rsa', 'performance resources resource', '15027631', 'there are two reasons for that performance aes is faster then rsa and resources aes is less resource hungry than rsa\n')
('rsa', 'more secure', 'aes', 'secure', '37534974', 'asymmetric key encryption ex rsa is no more secure than symmetric key encryption ex aes\n')
('aes', 'less secure 4096-bit', 'rsa', '', '28474359', 'while 256-bit aes might sound less secure than 4096-bit rsa they might actually be quite similar from the offered protection\n')
('rsa', 'much more computationally', 'aes', '', '31408821', 'note however that doing so means that each encrypted chunk has its own padding and that rsa is much more computationally expensive than aes\n')
('rsa', 'less strenght', 'aes', '', '23744165', 'in your particular case an rsa key of 2048 bits has a lot less strenght than an aes key of 256 bits\n')
('aes', 'less secure', 'rsa', 'secure', '33871712', 'how is aes less secure than rsa in this scenario\n')
('rsa', 'much slower', 'aes', 'slower simpler management', '26673893', 'rsa is much slower than aes\n')
('aes', 'less safe', 'rsa', '', '124248', 'block crypto algorithms like aes do suffer from this problem too but without a pki aes is no less safe than rsa\n')
('aes', 'faster', 'rsa', 'execution sizes secs', '2743437', 'so the 115 seconds will be reduced to 3-4 secs plus the encryption decryption time used for aes which is much faster than rsa\n')
('aes', 'faster', 'rsa', 'performance resources resource', '20925115', 'and regarding your first question it is definitely possible to encrypt decrypt messages directly using rsa there are only technical and performance reasons aes is much faster than rsa why rsa is used only to encrypt a session key and aes is used to encrypt decrypt the messages themselves\n')
('rsa', 'less user-friendly', 'aes', '', '124248', 'algorithms like rsa are much less user-friendly than aes\n')
('rsa', 'more', 'aes', '', '124248', 'that is actually not the case with rsa which is --- more so than aes --- just a math equation\n')
('aes', 'less', 'rsa', '', '124248', 'block crypto algorithms like aes do suffer from this problem too but without a pki aes is no less safe than rsa\n')
('aes', 'more faster', 'rsa', 'execution sizes secs', '38483747', 'execution of aes is more faster than rsa for same key sizes\n')
('rsa', 'more', 'aes', 'secure', '38065154', 'asymmetric encryption ex rsa is no more secure than symmetric encryption ex aes\n')
('rsa', 'encrypt faster', 'aes', 'slower simpler management', '14642408', 'it shows that rsa encrypt is faster then aes encrypt\n')
('rsa', 'larger', 'aes', '', '32471157', 'considering most rsa moduli are at least 1024 bit this will be much larger than an aes key\n')
('rsa', 'more so', 'aes', '', '124248', 'that is actually not the case with rsa which is --- more so than aes --- just a math equation\n')
('rsa', 'much more', 'aes', '', '31408821', 'note however that doing so means that each encrypted chunk has its own padding and that rsa is much more computationally expensive than aes\n')
('rsa', 'much slower', 'aes', 'slower simpler management', '22911417', 'one of the reasons to do so is that rsa is much slower than for example aes\n')
('rsa', 'slower', 'aes', '', '31413617', 'as far as efficiency rsa is going to be orders of magnitudes slower than aes so the trade-off you make is that you give up simplicity you give up the simplicity of using aes in favor of some rsa chunking in return for poor performance you get the slower performance of rsa.\n')
('aes', 'faster', 'rsa', '', '34582962', 'the whole purpose of using aes to secure the communication or any symmetric key encryption is that it s a lot faster than rsa or any public key encryption\n')
('aes', 'faster', 'rsa', 'slower simpler management', '35236158', 'the aes key is encrypting much more data but is much faster than rsa encryption\n')

compiled-language	interpreted-language	28
('interpreted-language', 'slower other', 'compiled-language', 'slower faster execution', '18388172', 'python is an interpreted-language so by definition is slower than other compiled-language but the drawback in the execution speed is not even noticeable in most of applications\n')
('interpreted-language', 'slower', 'compiled-language', 'slower faster execution', '3899501', 'interpreted-language tend to be but not always are significantly slower than compiled-language\n')
('compiled-language', 'better', 'interpreted-language', 'slower faster execution', '38491212', 'are compiled-language better than interpreted-language or vice-versa\n')
('interpreted-language', 'less performant', 'compiled-language', 'performant level assembly', '29574827', 'interpreted-language are inherently less performant than compiled-language - c will generally outperform python - some operations more than others\n')
('compiled-language', 'more performant', 'interpreted-language', 'performant level assembly', '37105652', 'then c which is one those languages closer to the processor level is very performant and generally speaking compiled-language because they turn your code into assembly language are more performant than interpreted-language\n')
('compiled-language', 'faster', 'interpreted-language', 'slower faster execution', '223029', 'a compiled-language will generally run faster than an interpreted-language so i think ruby and php start behind the eight ball but it really comes down to how you use the language and how you structure the code\n')
('interpreted-language', 'slower', 'compiled-language', 'slower faster execution', '17216232', 'mostly interpreted-language are a bit slower compared with compiled-language but i guess the difference is almost negligible in coffeescript javascript because of node.js\n')
('interpreted-language', 'slower', 'compiled-language', 'slower faster execution', '4079920', 'php is an interpreted-language so will run a little slower than a compiled-language\n')
('interpreted-language', 'more overhead', 'compiled-language', '', '10049694', 'especially in an interpreted-language like php where classes add more overhead than a compiled-language\n')
('compiled-language', 'faster', 'interpreted-language', 'slower faster execution', '5670283', 'that being said a compiled-language like c will almost always be faster than an interpreted-language like javascript\n')
('interpreted-language', 'less', 'compiled-language', '', '1347760', 'this is usually seen in dynamic interpreted-language but is less common in compiled-language\n')
('interpreted-language', 'much slower', 'compiled-language', 'slower faster execution', '3019070', 'and perl like any interpreted-language is much slower than a compiled-language\n')
('compiled-language', 'faster', 'interpreted-language', 'slower faster execution', '30971543', 'in my general programming experience compiled c c++ programs generally run faster than most other compiled-language like java or even compiled python and almost always run faster than interpreted-language like uncompiled python or javascript\n')
('interpreted-language', 'less common', 'compiled-language', '', '1347760', 'this is usually seen in dynamic interpreted-language but is less common in compiled-language\n')
('interpreted-language', 'slower', 'compiled-language', 'slower faster execution', '1694508', 'this is a good question but should be formulated a little different in my opinion for example why are interpreted-language slower than compiled-language\n')
('interpreted-language', 'probably easier', 'compiled-language', 'easier possible bytecode', '47286728', 'while java could be described as a compiled and interpreted-language it s probably easier to think of java itself as a compiled-language and java bytecode as an interpreted-language\n')
('interpreted-language', 'slower', 'compiled-language', 'slower faster execution', '6619136', 'an interpreted-language will typically run one to two orders of magnitude slower than a compiled-language\n')
('compiled-language', 'significantly better', 'interpreted-language', 'performance examples better', '42017374', 'performance of programs in compiled-language is significantly better than that of an interpreted-language\n')
('compiled-language', 'faster', 'interpreted-language', 'slower faster execution', '26712393', 'from what i know a compiled-language such as c++ is much faster than an interpreted-language such as javascript\n')
('interpreted-language', 'slower', 'compiled-language', 'slower faster execution', '41849399', 'interpreted-language execution speed are slower than compiled-language true but once there is need for more speed you can call in compiled stuff through gems or micro services\n')
('interpreted-language', 'slower', 'compiled-language', 'slower faster execution', '41413195', 'naturally interpreted-language will run slower than compiled-language as compiled code can be ran blindly by the cpu where as compiled code needs to be checked ran line by line\n')
('interpreted-language', 'smaller', 'compiled-language', '', '15727516', 'my guess is that in interpreted-language the efficiency benefit in using switch statements is indeed smaller than in compiled-language\n')
('compiled-language', 'better performance', 'interpreted-language', 'performance examples better', '6361528', 'writing in a compiled-language java or c++ in your examples would almost certainly give better performance than an interpreted-language like php\n')
('interpreted-language', 'surely easier', 'compiled-language', 'easier possible bytecode', '21665739', 'an interpreted-language surely makes it easier but this is still entirely possible with compiled-language like c\n')
('interpreted-language', 'slower', 'compiled-language', 'slower faster execution', '7993308', 'this makes interpreted-language generally slower than compiled-language due to the overhead of running the vm or interpreter\n')
('interpreted-language', 'slower', 'compiled-language', 'slower faster execution', '1737240', 'fact is that interpreted-language like php are always slower than a compiled-language\n')
('interpreted-language', 'slower', 'compiled-language', 'slower faster execution', '5149958', 'while ruby and python are both interpreted-language and operation-for-operation slower than compiled-language the reality is in executing an application only a small portion of cpu time is spent in your code and the majority is spent into the built-in libraries you call into which are often native implementations and thus are as fast as compiled code\n')
('interpreted-language', 'slower natively', 'compiled-language', 'slower faster execution', '44258776', 'it should be noted that interpreted-language are inherently many time slower than natively compiled-language\n')

telnet	ftp	5
('telnet', 'more', 'ftp', '', '21419290', 'telnet is more general than ftp and is generally used for command and control\n')
('telnet', 'more general', 'ftp', '', '21419290', 'telnet is more general than ftp and is generally used for command and control\n')
('ftp', 'protocol more', 'telnet', 'protocol complex form', '1741448', 'ftp protocol is more complex than http or telnet form example\n')
('telnet', 'easier', 'ftp', 'protocol complex form', '1059847', 'it is optimized for downloading larger files where the setup overhead is amortized over the size and number of downloads http is very light-weight you can communicate to an http server using telnet much easier than ftp especially before passive ftp and is designed around html -- the concept that in the course of your navigation you will be visiting many different servers and grabbing only a couple of files at a time from each\n')
('ftp', 'better', 'telnet', '', '10818924', 'yes i know ftp is better than telnet but right now i m stuck with telnet\n')

webclient	httpwebrequest	11
('webclient', 'slower', 'httpwebrequest', 'higher order milliseconds', '22792326', 'using webclient is potentially slightly on the order of a few milliseconds slower than using httpwebrequest directly\n')
('webclient', 'higher', 'httpwebrequest', 'higher order milliseconds', '47215465', 'because webclient is higher class of httpwebrequest and its slower\n')
('webclient', 'simpler interface', 'httpwebrequest', '', '12083121', 'webclient has a much simpler interface than httpwebrequest and takes care of reading and writing from the streams for you\n')
('webclient', 'easier', 'httpwebrequest', '', '10569872', 'webclient is easier but httpwebrequest is more powerful and allows for more control\n')
('webclient', 'less code', 'httpwebrequest', '', '2760426', 'i d rather use webclient because it requires less code than httpwebrequest httpwebresponse\n')
('httpwebrequest', 'better option', 'webclient', '', '4482785', 'so simply httpwebrequest is better option then webclient\n')
('webclient', 'class more idiomatic', 'httpwebrequest', 'higher order milliseconds', '45059212', 'also i think the webclient class is more idiomatic these days than hand rolling httpwebrequest\n')
('httpwebrequest', 'lower level', 'webclient', '', '5912160', 'httpwebresponse and httpwebrequest are a little bit lower level than webclient\n')
('webclient', 'much simpler', 'httpwebrequest', '', '2152421', 'you can also use webclient which is much simpler than httpwebrequest but in order to set a cookiecontainer you ll need to derive from webclient and override the protected getwebrequest method\n')
('httpwebrequest', 'better', 'webclient', '', '4482785', 'so simply httpwebrequest is better option then webclient\n')
('webclient', 'simpler', 'httpwebrequest', '', '2152421', 'you can also use webclient which is much simpler than httpwebrequest but in order to set a cookiecontainer you ll need to derive from webclient and override the protected getwebrequest method\n')

printwriter	bufferedwriter	3
('printwriter', 'richer api', 'bufferedwriter', '', '17017131', 'printwriter is a richer api compared to bufferedwriter\n')
('printwriter', 'richer', 'bufferedwriter', '', '17017131', 'printwriter is a richer api compared to bufferedwriter\n')
('bufferedwriter', 'more', 'printwriter', '', '40971986', 'i like to use bufferedwriter more than printwriter and its working with the bufferedwriter\n')

vim	textmate	4
('vim', 'more powerful', 'textmate', '', '7923617', 'vim is more powerful and textmate is worth the price tag\n')
('vim', 'more', 'textmate', '', '7923617', 'vim is more powerful and textmate is worth the price tag\n')
('vim', 'much worse', 'textmate', '', '6181929', 'i like the idea of the of editing inside the terminal and like the key bindings of vim but the text highlighting in my vim is much worse than in textmate\n')
('vim', 'worse', 'textmate', '', '6181929', 'i like the idea of the of editing inside the terminal and like the key bindings of vim but the text highlighting in my vim is much worse than in textmate\n')

named	shadowing	5
('named', 'more', 'shadowing', '', '15715314', 'not using the same named is a more common practice to avoid confusion and shadowing\n')
('shadowing', 'more flexible', 'named', '', '25226751', 'when you re not worrying about shadowing this is more flexible if the named of the object changes\n')
('named', 'nicer', 'shadowing', '', '7541844', 'i believe the reasoning behind it is that it allows the parameters to be named nicer by preventing shadowing of member variables\n')
('named', 'more common', 'shadowing', '', '15715314', 'not using the same named is a more common practice to avoid confusion and shadowing\n')
('shadowing', 'more', 'named', '', '25226751', 'when you re not worrying about shadowing this is more flexible if the named of the object changes\n')

margin	height	29
('margin', 'larger', 'height', 'browser available percentage', '29724346', 'also you need to be careful about your content - in the fiddle you used h4 and p tags and these have a default top bottom margin set by the browser - if this margin is larger than the space available in the percentage height div it will push the content out of vertical alignment\n')
('margin', 'greater', 'height', 'css element greater', '31577622', 'in activity_main.xml below the feedbackview has a margin top of -36dp which is greater than its height when non-negated\n')
('height', 'smaller', 'margin', '', '17396678', 'the problem with your logic is that it doesn t incorporate the maximum distance the child is allowed to move in the top direction it will jump in 50 pixel steps and in case the newly calculated child height is smaller than the parent it just stops where it would also need to limit the margin to the maximum similar to what you are already doing for the bottom direction\n')
('height', 'much larger', 'margin', 'css element greater', '25144600', 'the first row has a height that is much larger than the margin bottom of its .content div so that the margin-bottom is contained and should not effect anything outside of its container\n')
('height', 'always higher', 'margin', 'css element greater', '40299232', 'i am trying to make my div wrap the tag however it doesn t wrap the height is always higher of my div and my tag has no padding or margin i tried many things but doesn t work i am adding my style and the html code i am also going to add some screenshots\n')
('height', 'less', 'margin', 'css element greater', '39407472', 'when recyclerview s content height is less than itself - last item has to gain margin padding height and fill the remaining space\n')
('height', 'actually greater', 'margin', 'css element greater', '39950172', 'css height 100 gives an element height that is actually greater than 100 by the size of the margin\n')
('margin', 'greater', 'height', 'css element greater', '46498535', 'you ll need to set the top margin for whatever item you want under it to be greater than the height of your navbar in order for it to show up correctly\n')
('height', 'less', 'margin', '', '32308964', 'once the page height is less than the margin i need to create another page\n')
('height', 'greater', 'margin', 'css element greater', '11165394', 'you also need to set a height that is greater than the negative top margin so part of the element will be visible so the user can hover over it\n')
('margin', 'greater', 'height', 'css element greater', '39145176', 'the value of margin top will be equal or greater than height of the fixed header height\n')
('margin', 'smaller', 'height', 'css element greater', '8026900', 'i assume margintop can t be solved since im setting margin top to -820 in order to get at a point of top 275 therefore screens smaller than 1200px height the div will go much higher...\n')
('margin', 'smaller', 'height', '', '35346111', 'gives a way to make the margin transparent but they are still there and the plot is smaller than height and width i set in the saved file\n')
('height', 'lower', 'margin', '', '44131642', 'this may be ommited once height is lower than available - thus negative margin may work\n')
('margin', 'less', 'height', 'browser available percentage', '25738542', 'also be aware that if the height of the printable area that is page height minus top and bottom margin is less than the height of your cell content then it s impossible for the browser to avoid breaking it unless it can somehow warp the fabric of space maybe firefox has a -moz- property for that\n')
('margin', 'greater', 'height', 'css element greater', '31577622', 'if i apply a negative margin to it that is greater than its height the first time feedbackview.showtext is called it doesn t animate in correctly\n')
('height', 'less', 'margin', 'css element greater', '7533484', 'it is treating the floated ul as position absolute but only when its height is less than or equal to the negative top margin on its containing parent\n')
('margin', 'greater', 'height', '', '7495299', 'the margin will be greater than the height of the iframe\n')
('margin', 'greater', 'height', 'css element greater', '34283849', 'however an algorith could be something like if the new margin top is greater than the height of the current note and the difference between the offet of the current note anchor and the following note anchor is less than the height of the current note than subtract the height of the current note from the new margin\n')
('height', 'greater', 'margin', 'css element greater', '10208968', 'if the height is greater than 66px i want to apply a negative top margin equal to half of its height\n')
('height', 'bigger', 'margin', 'css element greater', '22379684', 'your listview item s height is looking bigger because your are applying 17dp padding and 4dp margin at the top and 7dp padding and 4dp margin at the bottom of the textview ...so its taking total 32dp extra space excluding your textview\n')
('margin', 'greater', 'height', 'css element greater', '1144224', 'in conjunction with a negative margin equal to or greater than the height of the top and bottom borders if any to further remove the element\n')
('margin', 'bigger page', 'height', '', '29449510', 'you cant see 45 barcodes because their margin is bigger than page height\n')
('height', 'larger', 'margin', 'css element greater', '25303351', 'sometimes when enough content items is added this div height is larger than windows and part of div content is not visible at all it stays bellow page margin\n')
('margin', 'more', 'height', '', '31394133', 'by default browsers add a margin to the body causing the body to actually take up more than 100 height 100 plus whatever the margin is\n')
('margin', 'greater', 'height', 'css element greater', '35774300', 'if you want to use it then add a bottom margin to the content_main which should be equal or greater than the height of the ad layout\n')
('height', 'more', 'margin', 'css element greater', '18125383', '#footer s height is more than 800px so the #container should lose its top margin value by touching #footer and continue scrolling the page without that floating div\n')
('margin', 'bigger', 'height', '', '29449510', 'you cant see 45 barcodes because their margin is bigger than page height\n')
('height', '.footer minus', 'margin', '', '39851497', 'i have use height 100vh for .container and pulled .footer up by minus margin\n')

mergesort	in-place	4
('mergesort', 'more', 'in-place', '', '16594411', 'mergesort is more difficult to implement in-place but the out-of-place version is very cache-friendly - i suspect real-world implementations accept the o n space overhead - ram is cheap but memory bandwidth is a major bottleneck so trading memory for cache-efficiency and speed is often a good deal\n')
('mergesort', 'more difficult', 'in-place', '', '16594411', 'mergesort is more difficult to implement in-place but the out-of-place version is very cache-friendly - i suspect real-world implementations accept the o n space overhead - ram is cheap but memory bandwidth is a major bottleneck so trading memory for cache-efficiency and speed is often a good deal\n')
('mergesort', 'more memory', 'in-place', 'time space standard', '497849', 'another reason is that mergesort needs more memory because it s hard to implement it as an in-place sort\n')
('in-place', 'less space standard', 'mergesort', 'time space standard', '37737510', '1 in-place merge sort is used when you want to sort a list in o nlogn time while using less space than standard mergesort\n')

direct2d	gdi	10
('gdi', 'faster', 'direct2d', '', '4055456', 'the thing is that gdi is still faster than direct2d if i draw to a bitmap and after it s done i bitblt the result back to the form it paints at 35ms and with the same graphics quality\n')
('direct2d', 'more', 'gdi', '', '44284835', 'threads in direct2d is more granular than in gdi and gdi+ so that the\n')
('direct2d', 'faster', 'gdi', '', '4108046', 'disable antialiasing and the performance of direct2d will be on par or faster than gdi\n')
('direct2d', 'slower', 'gdi', 'slower', '13281964', 'but my direct2d code is much slower than my gdi code\n')
('direct2d', 'much faster', 'gdi', '', '24042201', 'i ve read that direct2d is much faster than gdi so i figured i would give it a shot for dealing with constantly updated variables\n')
('direct2d', 'slower pure', 'gdi', '', '13904487', 'a i tried gdi-compatible direct2d using id2d1dcrendertarget+binddc but it is much slower than pure gdi\n')
('gdi', 'still faster', 'direct2d', '', '4055456', 'the thing is that gdi is still faster than direct2d if i draw to a bitmap and after it s done i bitblt the result back to the form it paints at 35ms and with the same graphics quality\n')
('direct2d', 'faster', 'gdi', '', '24042201', 'i ve read that direct2d is much faster than gdi so i figured i would give it a shot for dealing with constantly updated variables\n')
('direct2d', 'slower', 'gdi', 'slower', '4055456', 'a direct2d is slower than gdi\n')
('direct2d', 'more granular', 'gdi', '', '44284835', 'threads in direct2d is more granular than in gdi and gdi+ so that the\n')

configobj	configparser	3
('configobj', 'easier', 'configparser', 'built-in easier', '3444436', 'i have heard that configobj is easier to use than configparser even though it is not a built-in library\n')
('configobj', 'easier', 'configparser', 'built-in easier', '186990', 'i ve heard that configobj is easier to work with than configparser\n')
('configobj', 'more flexible', 'configparser', '', '14096897', 'check out configobj its the slickest method i ve found so far and definitely more flexible than configparser\n')

haskell	ocaml	19
('haskell', 'fewer industrial', 'ocaml', '', '827594', 'haskell has fewer industrial users than ocaml and although it does have multicore support it is still being developed in a very unproductive direction\n')
('haskell', 'higher', 'ocaml', '', '1776455', 'haskell has higher level bindings to llvm than ocaml the haskell ones provide some interesting type safety guarantees and haskell has by far more libraries to use 1700 packages on making it easier to glue together components\n')
('haskell', 'more', 'ocaml', '', '1774364', 'haskell has more momentum these days but there are plenty of good parsing libraries for ocaml as well including the peg parser generator aurochs menhir and the glr parser generator dypgen\n')
('ocaml', 'faster', 'haskell', '', '6716315', 'the reason i wanted to investigate this was because both c and ocaml were significantly faster than haskell for this program\n')
('ocaml', 'more intuitive', 'haskell', '', '2269993', 'you will also likely find the performance characteristics of your ocaml code more intuitive than haskell because of haskell s lazy evaluation\n')
('haskell', 'more powerful', 'ocaml', '', '2290354', 'keith pointed out that haskell has a more powerful type system but it can also be said that ocaml has a more powerful module system than haskell\n')
('haskell', 'less code', 'ocaml', '', '2269313', 'secondly the haskell ffi is more powerful that is it does more with less code than ocaml s and more libraries are avaliable via hackage so i don t think foreign interfaces will be a deciding factor\n')
('ocaml', 'more', 'haskell', '', '2290354', 'keith pointed out that haskell has a more powerful type system but it can also be said that ocaml has a more powerful module system than haskell\n')
('haskell', 'zipwith friendlier', 'ocaml', '', '23204005', 'the haskell zipwith is friendlier than the ocaml list.map2 which requires the lists to be the same length\n')
('haskell', 'more momentum', 'ocaml', '', '1774364', 'haskell has more momentum these days but there are plenty of good parsing libraries for ocaml as well including the peg parser generator aurochs menhir and the glr parser generator dypgen\n')
('ocaml', 'more powerful', 'haskell', '', '2290354', 'keith pointed out that haskell has a more powerful type system but it can also be said that ocaml has a more powerful module system than haskell\n')
('haskell', 'ffi more powerful', 'ocaml', '', '2269313', 'secondly the haskell ffi is more powerful that is it does more with less code than ocaml s and more libraries are avaliable via hackage so i don t think foreign interfaces will be a deciding factor\n')
('haskell', 'ffi more', 'ocaml', '', '2269313', 'secondly the haskell ffi is more powerful that is it does more with less code than ocaml s and more libraries are avaliable via hackage so i don t think foreign interfaces will be a deciding factor\n')
('haskell', 'better', 'ocaml', '', '996052', 'i would just use ocaml but haskell s syntax is so much better than ocaml s and haskell is pure and has cool features such as type classes\n')
('ocaml', 'lower', 'haskell', '', '2290354', 'as others have pointed out ocaml s learning curve will be lower than haskell s\n')
('haskell', 'more', 'ocaml', '', '2290354', 'keith pointed out that haskell has a more powerful type system but it can also be said that ocaml has a more powerful module system than haskell\n')
('ocaml', 'closer', 'haskell', '', '12966482', 'ocaml is closer to c++ because of it s imperative and oo features but i recommend you learn haskell as it is more functional more mindbending and has more resources\n')
('haskell', 'higher level', 'ocaml', '', '1776455', 'haskell has higher level bindings to llvm than ocaml the haskell ones provide some interesting type safety guarantees and haskell has by far more libraries to use 1700 packages on making it easier to glue together components\n')
('haskell', 'fewer', 'ocaml', '', '827594', 'haskell has fewer industrial users than ocaml and although it does have multicore support it is still being developed in a very unproductive direction\n')

background-color	background-image	3
('background-image', 'more', 'background-color', '', '27035320', 'you can refer the bootstrap official document you can find that the default navbar background described as background-image the priority of background-image and background-color distinct the background-image is more powerful than background-color\n')
('background-image', 'more powerful', 'background-color', '', '27035320', 'you can refer the bootstrap official document you can find that the default navbar background described as background-image the priority of background-image and background-color distinct the background-image is more powerful than background-color\n')
('background-color', 'rgba faster', 'background-image', '', '25296557', 'a lot of answers comments are mentioning that the background-color rgba is faster and more efficient but that background-image is more compatibility friendly\n')

goto	break	15
('goto', 'better', 'break', 'better developer c-like', '45395794', 'but goto is better than break when you have nested loops like that\n')
('goto', 'more restrictive', 'break', '', '7073940', 'it is the equivalent of a goto but is more restrictive in that labels may be used only in break or continue statements\n')
('goto', 'moreso', 'break', '', '10918235', 'in the cleanup even in normal case scenario i would regard the use of goto as being clearer than the do while 0 constructs among other things because the target labels themselves practically cry out look at me far moreso than the break and do while 0 constructs\n')
('break', 'more', 'goto', '', '4384579', 'but actually break has more resemblance to return both instructions jump out of a block of code which is pretty much structured in comparison to goto\n')
('goto', 'more', 'break', '', '7073940', 'it is the equivalent of a goto but is more restrictive in that labels may be used only in break or continue statements\n')
('break', 'worse', 'goto', 'simpler statements if-checks', '30155252', 'the idea of saying break out of the nth nested loop is worse than a goto from a structural perspective\n')
('break', 'better', 'goto', 'better developer c-like', '17883705', 'nevertheless in my opinion break is not much better than goto its both not a good programming style\n')
('break', 'little more', 'goto', 'graceful l faster', '21104206', 'the bad we use a break that is little more than a tamed goto something like goto the end of the loop\n')
('break', 'better', 'goto', 'better developer c-like', '723329', 'labeled break like in java would be better than goto for this purpose\n')
('goto', 'simpler', 'break', 'simpler statements if-checks', '24476', 'if you re in a nested loop and need to break out of all loops a goto can make this much cleaner and simpler than break statements and if-checks\n')
('break', 'faster', 'goto', 'graceful l faster', '30144933', 'there s not really a graceful way to break out of for l although it is much faster than a goto loop\n')
('break', 'worse', 'goto', '', '12794377', 'but break is no better or worse than goto\n')
('break', 'more resemblance', 'goto', '', '4384579', 'but actually break has more resemblance to return both instructions jump out of a block of code which is pretty much structured in comparison to goto\n')
('break', 'better', 'goto', 'better developer c-like', '45395794', 'in the previous example break is better than goto\n')
('break', 'cleaner solution', 'goto', 'better developer c-like', '12792176', 'to any seasoned developer of a c-like language break will both read better as well as provide a cleaner solution than goto\n')

udp	mtu	16
('udp', 'larger', 'mtu', 'fragmented greater network', '18253025', 'when send a udp datagram larger than the mtu size only the last fragment of the udp datagram is putted out to the destination\n')
('udp', 'larger', 'mtu', 'fragmented greater network', '11809828', 'basically while sending udp packets larger than mtu ip fragmentation can occur if it s supported on your platform but not all platforms support it\n')
('udp', 'bigger', 'mtu', 'fragmented greater network', '40218900', 'if udp payload size is bigger than mtu size udp will silently segment the packet\n')
('udp', 'smaller', 'mtu', '', '7061343', 'to send large blocks of data via udp you need to chop them up into pieces smaller than the mtu for the network segment across which you re transmitting them\n')
('udp', 'bigger', 'mtu', 'fragmented greater network', '4549135', 'note that udp packets bigger than the mtu s at every hope between your hosts will be split by ip\n')
('udp', 'larger', 'mtu', 'fragmented greater network', '20851391', 'my lwip can send udp packets to pc but my pc would fail to reassemble when the udp packets are larger than mtu\n')
('udp', 'larger', 'mtu', 'fragmented greater network', '21056847', 'ever since i did sockets programming on a pdp 11 it s been the case that ip fragmentation will take care of the case where an ip datagram such as a udp datagram is larger than the mtu for the segment allows\n')
('udp', 'greater', 'mtu', 'fragmented greater network', '10356170', 'udp packets greater than the mtu size of the network that carries them will be automatically split up into multiple packets and then reassembled by the recipient\n')
('udp', 'bigger', 'mtu', 'fragmented greater network', '2315847', 'udp uses datagrams chunks of data which are received whole on the other side unless the size is bigger than the mtu but that s a different story\n')
('udp', 'package larger', 'mtu', 'fragmented greater network', '45144409', 'what would happen if my udp package is larger than mtu\n')
('udp', 'larger', 'mtu', 'fragmented greater network', '33452216', 'if there is network congestion rate limiting or traffic profiling or if the udp message size is larger than the mtu\n')
('udp', 'smaller', 'mtu', 'fragmented greater network', '13423649', 'ideally your udp frames are smaller than the mtu for your architecture say 1500 bytes so the messages won t get chopped up in transit\n')
('udp', 'larger', 'mtu', 'fragmented greater network', '1436197', 'if you send a udp datagram larger than the mtu it will be fragmented\n')
('udp', 'more', 'mtu', '', '29665424', 'i am working on udp socket programming and i have to stop the transmission in application if requested data is more than mtu value\n')
('udp', 'bigger', 'mtu', 'fragmented greater network', '1436154', 'they are easily generated for udp simply by making the datagram bigger than the mtu\n')
('udp', 'less', 'mtu', 'fragmented greater network', '40218900', 'in real life udp packets size usually is equal or less than mtu size\n')

pyglet	pyopengl	4
('pyglet', 'more', 'pyopengl', '', '33445742', 'pyglet is more strict the pyopengl so i m now learning it\n')
('pyglet', 'actually more', 'pyopengl', '', '408981', 'i d say that pyglet is actually more evolved than pyopengl\n')
('pyglet', 'more', 'pyopengl', '', '408981', 'i d say that pyglet is actually more evolved than pyopengl\n')
('pyglet', 'more strict', 'pyopengl', '', '33445742', 'pyglet is more strict the pyopengl so i m now learning it\n')

heapsort	quicksort	40
('heapsort', 'better big-o', 'quicksort', 'faster slower practice', '6781282', 'heapsort has a better big-o than say quicksort yet quicksort performs much better in practice\n')
('heapsort', 'slower', 'quicksort', 'faster slower practice', '45998880', 'however heapsort is slower than quicksort in the average case in the sense that heapsort performs c n log n whereas quicksort has d n log n performance with d being significantly smaller than c the numbers c and d are constants\n')
('quicksort', 'suddenly worse then', 'heapsort', 'sort worse insertion', '26723063', 'for 5 000 000 ints still stored in memory quicksort becomes suddenly worse then heapsort and mergesort\n')
('heapsort', 'faster', 'quicksort', 'faster slower practice', '4775203', 'if i do heapsort i can create the stack while i m sorting but would this be faster than a quicksort and then build the stack afterwords\n')
('quicksort', 'also better', 'heapsort', '', '46514662', 'quicksort also has a better cache access behavior than heapsort\n')
('quicksort', 'more efficient', 'heapsort', 'faster slower practice', '771892', 'average asymptotic order of quicksort is o nlogn and it s usually more efficient than heapsort due to smaller constants tighter loops\n')
('quicksort', 'worse', 'heapsort', 'sort worse insertion', '9157094', 'in theory insertion sort and quicksort are worse than heapsort\n')
('quicksort', 'faster', 'heapsort', 'faster slower practice', '18454981', 'the difference is large enough that the constant factor in front of the n log n term in quicksort is lower than the constant factor in front of the n log n term in heapsort which is one reason why quicksort is much faster than heapsort\n')
('quicksort', 'also better cache', 'heapsort', '', '46514662', 'quicksort also has a better cache access behavior than heapsort\n')
('heapsort', 'somewhat slower', 'quicksort', 'faster slower practice', '33943872', 'however heapsort is somewhat slower in practice on most machines than a well-implemented quicksort\n')
('quicksort', 'actually worse', 'heapsort', 'faster slower practice', '4292700', 'worst case for quicksort is actually worse than heapsort and mergesort but quicksort is faster on average\n')
('quicksort', 'faster', 'heapsort', 'faster slower practice', '39971717', 'this is because quicksort is generally faster than heapsort unless the call depth becomes to deep\n')
('heapsort', 'slower', 'quicksort', 'faster slower practice', '22888581', 'in the event that the quicksort starts to degenerate it uses heapsort which is o n log n worst-case but slightly slower than quicksort on average to guarantee o n log n worst-case runtimes\n')
('heapsort', 'faster', 'quicksort', 'faster slower practice', '3330132', 'so for instance heapsort is faster than quicksort in the worst case but slower in the average case\n')
('heapsort', 'significantly slower', 'quicksort', 'faster slower practice', '70423', 'but there are many citations of real world tests which show that heapsort is significantly slower than quicksort on average\n')
('quicksort', 'worse', 'heapsort', 'sort worse insertion', '15064866', 'in theory quicksort is worse than heapsort\n')
('quicksort', 'faster', 'heapsort', 'faster slower practice', '36468115', 'for example quicksort is faster than heapsort in general although their time complexity are the same\n')
('quicksort', 'less work', 'heapsort', 'faster slower practice', '46514662', 'so for even small inputs quicksort does less work than heapsort and is physically faster for every n\n')
('heapsort', 'faster', 'quicksort', 'faster slower practice', '11712414', 'in their respective worst cases heapsort is faster than quicksort\n')
('heapsort', 'better choice', 'quicksort', 'comparisons anyone circumstances', '18454981', 'in short - if all we care about are comparisons heapsort is a better choice than quicksort\n')
('heapsort', 'better', 'quicksort', 'faster slower practice', '33943872', 'asymptotic analysis reveals order of growth of heapsort in the worst case is big-o n logn which is better than quicksort s big-o n 2 as a worst case\n')
('heapsort', 'better', 'quicksort', 'comparisons anyone circumstances', '27592487', 'can anyone explain why heapsort performs better and under what circumstances quichesort would be better than both quicksort and heapsort\n')
('heapsort', 'higher', 'quicksort', 'higher words per-comparison-overhead', '45998880', 'in other words the per-comparison-overhead of heapsort is higher than the one of quicksort\n')
('heapsort', 'way quicker', 'quicksort', 'sort worse insertion', '7519297', 'after several tests i found out that my heapsort is way quicker than quicksort i think it should be the other way around my selection sort is also faster than insertion sort\n')
('quicksort', 'faster', 'heapsort', 'faster slower practice', '36468763', 'what makes quicksort faster than heapsort in practice is its constant that was ignored by big o analysis\n')
('heapsort', 'slower', 'quicksort', 'faster slower practice', '46514662', 'because heapsort is actually slower than quicksort for each n\n')
('quicksort', 'worse', 'heapsort', 'sort worse insertion', '1853219', 'however quicksort s worst-case performance is significantly worse than heapsort s is\n')
('heapsort', 'slower', 'quicksort', 'faster slower practice', '23986246', 'quicksort time complexity is typically o n log n but it s worst case is o n 2 which is avoided with the switch to heapsort since heapsort is always o n log n but slower than quicksort so it s only used to avoid o n 2\n')
('heapsort', 'smaller sets', 'quicksort', '', '285023', 'i was just going to say radix sort however that could be a bit above what you were looking to implement introsort is generally the accepted sorting solution for data it s a variation of quicksort that switches to heapsort when it reaches smaller sets as it s faster on smaller sets than quicksort\n')
('heapsort', 'better', 'quicksort', 'faster slower practice', '21580093', 'it is a variant of heapsort which is particularly suitable for the sorting of very large amounts of data if a relatively high cost per compare operation is needed and on average better than quicksort\n')
('quicksort', 'usually faster then', 'heapsort', 'faster slower practice', '941325', 'in practice however quicksort is usually faster then heapsort\n')
('heapsort', 'higher', 'quicksort', 'higher words per-comparison-overhead', '41480526', 'heapsort has higher overhead than quicksort but its worst case is o n log n vs\n')
('quicksort', 'more comparisons', 'heapsort', 'comparisons anyone circumstances', '18454981', 'you can indeed show that on average quicksort will do more comparisons than heapsort roughly 1.44 n log 2 n for quicksort versus n log 2 n versus heapsort\n')
('heapsort', 'slower', 'quicksort', '', '33943872', 'the reason heapsort is slower in practice than quicksort is due to the better locality of reference in quicksort where data elements are within relatively close storage locations\n')
('heapsort', 'less efficient', 'quicksort', 'faster slower practice', '28658362', 'in fact the heapsort algorithm works this way first arrange a random order into heap order and then obtain a sorted order somewhat less efficient than quicksort on average\n')
('quicksort', 'simpler', 'heapsort', 'faster slower practice', '941325', 'each iteration in quicksort is a lot simpler than heapsort\n')
('quicksort', 'faster', 'heapsort', 'faster slower practice', '107883', 'for example quicksort average cost t n.log n and heapsort average cost t n.log n are both sorting algorithms with the same average cost - yet quicksort is typically much faster than heapsort\n')
('quicksort', 'worse', 'heapsort', 'faster slower practice', '26276269', 'from what i heard quicksort should have better average case performance but from my tests it performs 4 times worse than heapsort for array of random integers\n')
('quicksort', 'better', 'heapsort', 'faster slower practice', '18450862', 'why it is said quicksort has better constant factor than heapsort and therefore quicksort is better than heapsort in average\n')
('heapsort', 'faster', 'quicksort', 'faster slower practice', '7532292', 'when you say something like heapsort should be faster than quicksort what makes you say that\n')

bottle	flask	3
('bottle', 'faster', 'flask', '', '41544393', 'bottle is rather faster than flask\n')
('bottle', 'rather faster', 'flask', '', '41544393', 'bottle is rather faster than flask\n')
('bottle', 'better', 'flask', '', '10777923', 'i d totally go with flask unless one dependency bottle is better than three flask jinja2 and werkzeug\n')

height	column-count	3
('column-count', 'bigger available', 'height', '', '37638612', 'try with 1 column-count and as text get bigger than available height it will auto split in to second column - columns 1 150px\n')
('height', 'opera more', 'column-count', '', '11152899', 'the problem is that when there is some fixed height opera generates more columns than specified in column-count instead of adding scroll\n')
('height', 'opera more columns', 'column-count', '', '11152899', 'the problem is that when there is some fixed height opera generates more columns than specified in column-count instead of adding scroll\n')

multiplying	add	21
('add', 'throughput lower', 'multiplying', '', '35092190', 'for example fp add throughput is lower than fma or multiplying on intel before skylake 1 vector per clock instead of 2\n')
('add', 'higher precedence', 'multiplying', 'precedence higher divide', '7501430', 'moreover i would like to add the pow in my evaluator with an higher precedence than multiplying and divide\n')
('multiplying', 'slower', 'add', 'slower years', '18417272', 'as of a few years ago multiplying was 3x slower than add\n')
('multiplying', 'slower', 'add', '', '18418827', 'on a cpu with a fast multiplier multiplying may only be on the order of 4 times slower than add but on normal hardware it s 16-32 times slower for a 32 bit operation\n')
('multiplying', 'higher precedence', 'add', 'precedence higher divide', '21650235', 'multiplying and divide have higher precedence than add and subtract\n')
('multiplying', 'more', 'add', '', '22388522', 'where multiplying binds more tightly than add\n')
('multiplying', 'operator higher precedence', 'add', 'precedence higher divide', '47289055', 'can someone explain this behaviour multiplying operator has higher precedence than add operator\n')
('multiplying', 'more time', 'add', '', '21819771', 'functionally a multiplying will always take more time than an add because it combines a true multiplying along with a true addition step\n')
('add', 'higher precedence', 'multiplying', 'precedence higher divide', '7501702', 'i would like to add the pow in my evaluator with an higher precedence than multiplying and divide\n')
('add', 'lower resolutions', 'multiplying', '', '15262190', 'you can add higher and lower resolutions by multiplying or dividing them by 2\n')
('multiplying', 'higher precedence', 'add', 'precedence higher divide', '10988746', 'to give multiplying and divide higher precedence than add and subtract you can do something like this example adapted from john levine lex yacc 2 e 1992\n')
('multiplying', 'higher', 'add', 'precedence higher divide', '4885461', 'with extra braces because multiplying has a higher precedence than add - assuming these are both percentage discounts\n')
('multiplying', 'operation more', 'add', 'clock cycles operation', '2306404', 'the multiplying operation uses more clock cycles than the add on many processors\n')
('multiplying', 'faster', 'add', 'clock cycles operation', '44273494', 'however multiplying is faster than adding even though less clock cycles are used to add verses multiplying according to what my particular cpu s datasheet says about the instructions being used\n')
('multiplying', 'more expensive', 'add', '', '46481820', 'multiplying is still somewhat more expensive than add on modern computers and compilers go to some effort to replace them with one or two shifts+add instructions\n')
('multiplying', 'more tightly', 'add', '', '22388522', 'where multiplying binds more tightly than add\n')
('multiplying', 'slower', 'add', 'slower years', '21010730', 'its the multiplying that historically was slower than the add\n')
('multiplying', 'more', 'add', 'precedence higher divide', '24842621', 'then i think it would be the problem of precedence in most case they are left-to-right and i think multiplying would be calculated first because in c multiplying is more prior than add instruction by one level\n')
('add', 'cheaper', 'multiplying', '', '47104042', 'add sub are cheaper than multiplying better throughput and lower latency\n')
('add', 'faster', 'multiplying', '', '3706276', 'add is faster than mul but if you want to multiplying two general values mul is far faster than any loop iterating add operations\n')
('multiplying', 'higher', 'add', 'precedence higher divide', '46965151', 'in the above example the instance of exprbinopadd is a child of the instance of exprbinopmul although precedence of multiplying is higher than precedence of add which results from the proper consideration of the parentheses\n')

spaces	delimiter	16
('spaces', 'more', 'delimiter', 'integers indentation whitespace', '33599383', 'the alternative is to write slightly more complex c code which can split on either spaces or tabs note that you can pass strtok more than one delimiter\n')
('delimiter', 'more', 'spaces', '', '23582518', 'as luiggi mendoza commented splitting by s+ instead of would resolve any issue with the number being delimiter by more than one spaces\n')
('delimiter', 'more', 'spaces', 'integers indentation whitespace', '28253043', 'if you want to allow the integers to be delimiter by more than one spaces for indentation purposes or so and depending on the way you want to handle tabs and other non-newline whitespace you can use a more complex delimiter\n')
('delimiter', 'more', 'spaces', '', '9647879', 'you are using the wrong delimiter since your text file may contain more than one spaces character between tokens\n')
('spaces', 'more natural', 'delimiter', '', '37910241', 'this is happening because i am trying to separate out the search terms based on spaces since spaces comes more natural to users then comma separation or pipes or any other delimiter\n')
('delimiter', 'more', 'spaces', '', '46459851', 'i know by giving spaces delimiter will not work as there will be split the wrong information and there will be some road name with more than spaces so in this info will be split up in wrong column\n')
('spaces', 'field', 'delimiter', 'awk comma field', '612937', 'awk uses a comma surrounded by 0 or more spaces as field delimiter\n')
('delimiter', 'more', 'spaces', '', '26742598', 'the -match operation removes those lines that don t start with an sha1 hash and the -replace operation collapses adjacent spaces into a single delimiter so that convertfrom-csv won t create empty fields when there is more than 1 spaces in a row\n')
('delimiter', 'more', 'spaces', '', '28725054', 'your actual delimiter looks more like comma followed by a spaces to me\n')
('delimiter', 'more', 'spaces', '', '40871493', 'so by using s 3 i am telling the csv processor that the columns in a row are delimiter by more than 3 spaces\n')
('delimiter', 'just', 'spaces', '', '11322412', 'if you want to allow for more delimiter than just spaces tab you can add additional separators when using split\n')
('spaces', 'more', 'delimiter', '', '25703773', 'to split the string with regular expression saying spaces one or more spaces one or more as delimiter\n')
('delimiter', 'more', 'spaces', '', '32811723', 'the pattern in scanner is supposed to be a regular expression that describes all the characters you don t want included in a token repeated one or more times this last part is because the words may be delimiter by more than one spaces punctuation etc.\n')
('spaces', 'more', 'delimiter', '', '37910241', 'this is happening because i am trying to separate out the search terms based on spaces since spaces comes more natural to users then comma separation or pipes or any other delimiter\n')
('spaces', 'more times', 'delimiter', '', '31583357', 'instead of explode use preg_split and then use s+ s spaces + 1 or more times as delimiter\n')
('spaces', 'field', 'delimiter', 'awk comma field', '1468030', 'it checks for one or more spaces as field delimiter and also tabs\n')

getline	fgets	5
('getline', 'better', 'fgets', '', '31471210', 'since i provided a getline example above your read loop can be much better written with fgets as follows\n')
('getline', 'safer', 'fgets', '', '19248865', 'one more edit if you want to use getline instead which you asked about in the comments - and it s even safer than fgets since it will increase the buffer size as needed you would change to change the code a little bit\n')
('getline', 'far more flexible', 'fgets', '', '29137699', 'getline is far more flexible handling the allocation of space for you with fgets it is up to you\n')
('getline', 'far more', 'fgets', '', '29137699', 'getline is far more flexible handling the allocation of space for you with fgets it is up to you\n')
('getline', 'harder', 'fgets', '', '26086806', 'if you cannot tolerate that use getline it s harder to use so use fgets if in doubt\n')

ignite	hazelcast	4
('ignite', 'much more', 'hazelcast', '', '31933051', 'ignite is much more ram-hungry than hazelcast\n')
('ignite', 'more ram-hungry', 'hazelcast', '', '31933051', 'ignite is much more ram-hungry than hazelcast\n')
('ignite', 'much more ram-hungry', 'hazelcast', '', '31933051', 'ignite is much more ram-hungry than hazelcast\n')
('ignite', 'more sophisticated', 'hazelcast', '', '31936967', 'probably the most important point is that apache ignite indexing is a lot more sophisticated than hazelcast\n')

nsurlsession	nsurlconnection	9
('nsurlsession', 'much more powerful', 'nsurlconnection', '', '31160034', 'nsurlsession is much more powerful tool than nsurlconnection\n')
('nsurlsession', 'also nicer interfaces', 'nsurlconnection', '', '32171996', 'nsurlsession also provides nicer interfaces for requesting data using blocks in that it allows you to combine them with delegate methods for doing custom authentication handling redirect handling etc. whereas with nsurlconnection if you suddenly realized you needed to do those things you had to refactor your code to not use block-based callbacks\n')
('nsurlsession', 'also nicer', 'nsurlconnection', '', '32171996', 'nsurlsession also provides nicer interfaces for requesting data using blocks in that it allows you to combine them with delegate methods for doing custom authentication handling redirect handling etc. whereas with nsurlconnection if you suddenly realized you needed to do those things you had to refactor your code to not use block-based callbacks\n')
('nsurlsession', 'also nicer interfaces', 'nsurlconnection', '', '40542267', 'nsurlsession also provides nicer interfaces for requesting data using blocks in that it allows you to combine them with delegate methods for doing custom authentication handling redirect handling etc. whereas with nsurlconnection if you suddenly realized you needed to do those things you had to refactor your code to not use block-based callbacks\n')
('nsurlsession', 'more powerful tool', 'nsurlconnection', '', '31160034', 'nsurlsession is much more powerful tool than nsurlconnection\n')
('nsurlsession', 'also nicer', 'nsurlconnection', '', '40542267', 'nsurlsession also provides nicer interfaces for requesting data using blocks in that it allows you to combine them with delegate methods for doing custom authentication handling redirect handling etc. whereas with nsurlconnection if you suddenly realized you needed to do those things you had to refactor your code to not use block-based callbacks\n')
('nsurlsession', 'newer', 'nsurlconnection', '', '42594985', 'nsurlsession is newer than nsurlconnection if you are using swift language then you can use your own custom methods by using nsurlsession or you can use alamofire\n')
('nsurlsession', 'slower', 'nsurlconnection', '', '25105001', 'it s not my experience that nsurlsession is any slower than nsurlconnection is\n')
('nsurlsession', 'much more', 'nsurlconnection', '', '31160034', 'nsurlsession is much more powerful tool than nsurlconnection\n')

boxlayout	gridbaglayout	4
('boxlayout', 'easier', 'gridbaglayout', '', '1905090', 'boxlayout is far easier than gridbaglayout because you don t have to learn how to specify constraints\n')
('boxlayout', 'far easier', 'gridbaglayout', '', '1905090', 'boxlayout is far easier than gridbaglayout because you don t have to learn how to specify constraints\n')
('gridbaglayout', 'easier solution', 'boxlayout', '', '23051038', 'although madprogrammers comment to use a gridbaglayout is an easier solution but knowing about glue and struts can be helpful for customizing the layout of a boxlayout\n')
('gridbaglayout', 'easier', 'boxlayout', '', '23051038', 'although madprogrammers comment to use a gridbaglayout is an easier solution but knowing about glue and struts can be helpful for customizing the layout of a boxlayout\n')

graphicsmagick	imagemagick	14
('imagemagick', 'better', 'graphicsmagick', 'better', '12307515', 'i do know imagemagick better than graphicsmagick\n')
('graphicsmagick', 'slower', 'imagemagick', '', '30500658', 'i successfully compiled graphicsmagick with q8 but after all it seems about 30 slower than imagemagick 0.3 secs\n')
('graphicsmagick', 'somewhat less developed', 'imagemagick', '', '39912666', 'mmmm graphicsmagick is somewhat less developed than imagemagick in many respects\n')
('graphicsmagick', 'leaner meaner', 'imagemagick', '', '45428547', 'i thought graphicsmagick was supposed to be leaner meaner than imagemagick\n')
('graphicsmagick', 'more', 'imagemagick', '', '5487679', 'graphicsmagick provides more extensive api documentation than imagemagick\n')
('graphicsmagick', 'less developed', 'imagemagick', '', '39912666', 'mmmm graphicsmagick is somewhat less developed than imagemagick in many respects\n')
('graphicsmagick', 'meaner', 'imagemagick', '', '45428547', 'i thought graphicsmagick was supposed to be leaner meaner than imagemagick\n')
('graphicsmagick', 'faster', 'imagemagick', 'faster file sizes', '2997695', 'graphicsmagick also seems to be faster than imagemagick using better multitasking\n')
('graphicsmagick', 'faster', 'imagemagick', 'faster file sizes', '15074956', 'the origin server would get the images from s3 process them using graphicsmagick since it s much faster than imagemagick then serve them\n')
('graphicsmagick', 'faster', 'imagemagick', 'faster file sizes', '14804613', 'graphicsmagick converted much faster than imagemagick although i did not test conversion with cuda processing\n')
('graphicsmagick', 'more extensive', 'imagemagick', '', '5487679', 'graphicsmagick provides more extensive api documentation than imagemagick\n')
('graphicsmagick', 'somewhat less', 'imagemagick', '', '39912666', 'mmmm graphicsmagick is somewhat less developed than imagemagick in many respects\n')
('graphicsmagick', 'higher', 'imagemagick', 'faster file sizes', '3722370', 'graphicsmagick is not that much faster -- and the outputted file sizes are significantly higher than imagemagick\n')
('graphicsmagick', 'better', 'imagemagick', 'better', '7623344', 'for me graphicsmagick is performing far better than imagemagick\n')

simpletest	phpunit	8
('phpunit', 'much nicer', 'simpletest', '', '8715966', 'subjective phpunit provides much nicer code coverage reports than simpletest\n')
('phpunit', 'much nicer code', 'simpletest', '', '8715966', 'subjective phpunit provides much nicer code coverage reports than simpletest\n')
('phpunit', 'more popular', 'simpletest', '', '2757869', 'phpunit is more popular and up to date as simpletest hasn t had a new release for some time though for testing webforms it s still very useful as phpunit does not have good support for that\n')
('phpunit', 'more', 'simpletest', '', '2757869', 'phpunit is more popular and up to date as simpletest hasn t had a new release for some time though for testing webforms it s still very useful as phpunit does not have good support for that\n')
('simpletest', 'slightly easier', 'phpunit', 'best opinion easier', '4624172', 'simpletest is slightly easier to grasp but phpunit is the best in my opinion at least so if you want to start learning and using a framework start with the one you re going to use when you ll be a master in tdd\n')
('simpletest', 'easier', 'phpunit', 'best opinion easier', '34338', 'i found simpletest was even easier than phpunit to set up\n')
('phpunit', 'much nicer', 'simpletest', '', '4625909', 'subjective phpunit provides much nicer code coverage reports than simpletest\n')
('phpunit', 'much nicer code', 'simpletest', '', '4625909', 'subjective phpunit provides much nicer code coverage reports than simpletest\n')

vimeo	youtube	4
('vimeo', 'more', 'youtube', '', '2043996', 'while vimeo is more of a professional site youtube offers html5 h.264 video playback support for all videos so they ll play on iphone\n')
('youtube', 'approach much more', 'vimeo', '', '41968516', 'the youtube approach seems much more efficient as far as amount of code and simplicity of understanding which makes me wonder why vimeo would use promises in this simple fast case\n')
('vimeo', 'fewer users', 'youtube', '', '50909', 'vimeo will always have fewer users than youtube because the user experience is poor for low bitrate users\n')
('youtube', 'approach much more efficient', 'vimeo', '', '41968516', 'the youtube approach seems much more efficient as far as amount of code and simplicity of understanding which makes me wonder why vimeo would use promises in this simple fast case\n')

direct3d	direct2d	3
('direct2d', 'more', 'direct3d', '', '19740472', 'direct2d is more or less dead nowadays and one would use direct3d also to render 2d\n')
('direct2d', 'simpler', 'direct3d', '', '12540800', 'if you are willing to limit yourself to vista or later then direct2d would be a little simpler than direct3d\n')
('direct3d', 'easier', 'direct2d', '', '10881667', 'direct3d appears in principal to be easier than direct2d but has poor text font handling in the latest version\n')

engineyard	heroku	4
('engineyard', 'less', 'heroku', '', '12955309', 'engineyard also seems like a great company but i think they hold your hand a little less than heroku\n')
('heroku', 'more full-service', 'engineyard', '', '7269490', 'in choosing heroku is more full-service whereas engineyard is a more traditional service giving you access to boxes but needing sysadmin skills\n')
('engineyard', 'better', 'heroku', '', '4218386', 'engineyard does provide application-level support too which is a fair bit better than what heroku does\n')
('heroku', 'more', 'engineyard', '', '7269490', 'in choosing heroku is more full-service whereas engineyard is a more traditional service giving you access to boxes but needing sysadmin skills\n')

titan	neo4j	3
('titan', 'faster', 'neo4j', '', '26026703', 'when the data is on disk titan is faster than neo4j cause it has a better disk representation\n')
('titan', 'better choice', 'neo4j', '', '28789700', 'because it seems you re going to deploy a cluster i think titan is the better choice unless you re willing to pay for the enterprise edition of neo4j to support clustering\n')
('titan', 'better', 'neo4j', '', '28789700', 'because it seems you re going to deploy a cluster i think titan is the better choice unless you re willing to pay for the enterprise edition of neo4j to support clustering\n')

opcache	apc	3
('opcache', 'faster', 'apc', '', '24433466', 'i don t want to use apc because opcache is around 10 faster than apc\n')
('opcache', 'more performant', 'apc', '', '46473622', 'zend opcache appears to be more performant than apc more fully featured and more reliable\n')
('apc', 'no longer', 'opcache', '', '28914277', 'i am using yii 1.1.12 and recently upgraded my php from 5.3 to 5.5 and have found that apc is no longer to be used because opcache has been made part of php5.5\n')

m2e	maven	7
('m2e', 'better integration additional', 'maven', '', '10005421', 'm2e is also a platform that let others provide better integration with additional maven plugins android web development etc.\n')
('maven', 'steeper', 'm2e', '', '1429767', 'maven 2 has a steeper learning curve but provides a much richer set of functionality for building your projects and eclipse integration through m2e or iam\n')
('maven', 'steeper learning', 'm2e', '', '1429767', 'maven 2 has a steeper learning curve but provides a much richer set of functionality for building your projects and eclipse integration through m2e or iam\n')
('m2e', 'more', 'maven', '', '47674', 'in other words m2e is more friendly to the maven way\n')
('m2e', 'longer works', 'maven', '', '5704090', 'with 0.13 m2e this no longer works as the maven builder appears to put things in target your-artificat-version-snapshot web-inf classes\n')
('maven', 'less likely', 'm2e', '', '14206612', 'moreover i m using m2e the maven plugin for eclipse so it seems that the compatibility of any maven plugins that might work by themselves is even less likely with m2e\n')
('m2e', 'more friendly', 'maven', '', '47674', 'in other words m2e is more friendly to the maven way\n')

droppable	draggable	25
('draggable', 'more', 'droppable', 'point item element', '37350176', 'the draggable is covering more than one droppable element and at this point there are multiple event.target.id s being covered\n')
('draggable', 'more', 'droppable', 'div smaller bigger', '11937386', 'it s just a hunch but maybe it s only a matter of the size of your draggable being too big and being over more than one droppable item\n')
('draggable', 'bigger', 'droppable', 'div smaller bigger', '25034752', 'this overlap is somewhat forced when the draggable is bigger than the droppable\n')
('droppable', 'more', 'draggable', 'div smaller bigger', '30317834', 'how can i make the two droppable div s to not accept more than one draggable elements\n')
('droppable', 'larger', 'draggable', 'div smaller bigger', '34833594', 'i was able to remove the unwanted behavior described above by turning the droppable into the parent of the element and added a margin padding that is slightly larger than the draggable snaptolerance\n')
('droppable', 'smaller', 'draggable', 'div smaller bigger', '2542137', 'but i have a problem dragging to a droppable that is smaller than the draggable\n')
('draggable', 'bigger', 'droppable', '', '41720307', 'it works nicely but from the rich ui perspective it s boring so i was wondering since the draggable image is bigger than the droppable how could i do assuming it s possible to have the droppable container suck the bigger image until if fills its dimensions\n')
('draggable', 'bigger', 'droppable', 'div smaller bigger', '28878211', 'apparently the draggable li element is bigger than the droppable div because the li is block size and the div has a 150px width\n')
('draggable', 'higher z-index', 'droppable', 'set z-index area', '21300419', 'for draggable set higher z-index than droppable so that draggable will always be visible over droppable\n')
('draggable', 'less', 'droppable', 'set z-index area', '20673571', 'alternatively you could set a width on your draggable which is less than twice the width of your droppable area or combine a set width with one of the above options for a better user experience\n')
('draggable', 'smaller', 'droppable', 'div smaller bigger', '26960332', 'p.s this will only work if the draggable is smaller than droppable which is true in this case\n')
('droppable', 'smaller', 'draggable', 'div smaller bigger', '25034752', 'perhaps you find it strange since the target droppable s size is much smaller than the draggable\n')
('droppable', 'more', 'draggable', 'div smaller bigger', '3948447', 'how can i make the droppable to not accept more than one draggable div\n')
('droppable', 'more', 'draggable', 'point item element', '12739978', 'the problem you outlined is that the droppable is allowing more than 1 draggable item to be placed inside of it\n')
('droppable', 'less', 'draggable', 'set z-index area', '26004165', 'i can make this work if the z-index of the droppable is less than the container but then you can t see where the draggable is since it s hidden behind the container\n')
('draggable', 'smaller', 'droppable', 'div smaller bigger', '10540768', 'when i made dimension of draggable div smaller than droppable div then drop event triggered successfully\n')
('draggable', 'more', 'droppable', '', '22417112', 'without draggable seems more like it but then i can t use the droppable\n')
('draggable', 'image bigger', 'droppable', '', '41720307', 'it works nicely but from the rich ui perspective it s boring so i was wondering since the draggable image is bigger than the droppable how could i do assuming it s possible to have the droppable container suck the bigger image until if fills its dimensions\n')
('draggable', 'wider', 'droppable', 'div smaller bigger', '27007444', 'this means that your draggable is the full width of the container which is much wider than the droppable and thus can t possibly intersect by 50\n')
('draggable', 'bigger', 'droppable', 'div smaller bigger', '13497941', 'it seems like the draggable element including the margin is bigger than the droppable element and therefore the dropped status is set although the element does not seems to touch the upper droppable yet\n')
('droppable', 'more', 'draggable', '', '21467901', 'i have a validation on the droppable for not adding more than one draggable per droppable\n')
('draggable', 'smaller', 'droppable', 'div smaller bigger', '27011078', 'and the size of the draggable div s should be smaller than the droppable div so that they fit in the droppable container\n')
('draggable', 'bigger', 'droppable', 'div smaller bigger', '45547144', 'i have a draggable parent element ice cream wrapper which is bigger than the droppable one teeth\n')
('draggable', 'bigger', 'droppable', 'div smaller bigger', '2985713', 'the draggable div is 3 times bigger than one droppable\n')
('draggable', 'larger', 'droppable', 'div smaller bigger', '18637463', 'when the draggable item is larger than the droppable div for some reason it will always place the appointment in the droppable div box that is directly below the one i am targetting\n')

fractions	integer	7
('integer', 'part less', 'fractions', '', '41896518', 'when you then calculate the integer part is 1 less that you might expect while the fractions part is slightly less than one\n')
('integer', 'part bigger', 'fractions', '', '42907073', 'the label s text size of an integer part is bigger than text size of a fractions part\n')
('integer', 'less limited', 'fractions', '', '10459789', 'as python integer is less limited than the float you may get bigger results with the fractions if it makes sense at all\n')
('integer', 'less', 'fractions', '', '10459789', 'as python integer is less limited than the float you may get bigger results with the fractions if it makes sense at all\n')
('integer', 'bigger results', 'fractions', '', '10459789', 'as python integer is less limited than the float you may get bigger results with the fractions if it makes sense at all\n')
('integer', 'part bigger then', 'fractions', 'mantissa larger number', '39567909', 'i know there are not that many mantissa bits for fractions part for bigger numbers but you did not specify which floating data-type you are using if 32 64 80 128 256 bits or more so hard to say and if the integer part is bigger then your integral data-type used to cut off the non fractions part then you would be in trouble with f-long f\n')
('fractions', 'larger', 'integer', 'mantissa larger number', '85416', 'if the number of bits in the mantissa or fractions is larger than the number of bits in your integer type then you ll possibly lose precision when someone types in a number such as\n')

zsh	bash	8
('zsh', 'more extensible', 'bash', '', '10172702', 'zsh is more extensible and has a much greater focus on searching and completion than bash\n')
('zsh', 'more', 'bash', '', '8542249', 'it seems that zsh is more configurable than bash but also more complicated\n')
('zsh', 'more', 'bash', '', '10172702', 'zsh is more extensible and has a much greater focus on searching and completion than bash\n')
('zsh', 'more', 'bash', '', '46261267', 'my stackoverflow search indicates that it can be turned off by setting setopt nonomatch then zsh behaves more like bash glob the pattern and pass it to the program if no match is found\n')
('zsh', 'more configurable', 'bash', '', '8542249', 'it seems that zsh is more configurable than bash but also more complicated\n')
('zsh', 'simpler', 'bash', '', '22107375', 'update turns out that zsh implementation based on builtin compctl is much simpler than the bash implementation based on builtin complete\n')
('zsh', 'less', 'bash', '', '1254726', 'how can you get similar highlightings to zsh s less than bash s less in ubuntu\n')
('zsh', 'better', 'bash', '', '13227684', 'so no big surprise zsh being better than bash\n')

okhttp	httpclient	3
('okhttp', 'more', 'httpclient', '', '40933697', 'but the post method okhttp is more slower than httpclient s post always more slower than okhttp s get method\n')
('okhttp', 'slower', 'httpclient', '', '40933697', 'but the post method okhttp is more slower than httpclient s post always more slower than okhttp s get method\n')
('okhttp', 'more slower', 'httpclient', '', '40933697', 'but the post method okhttp is more slower than httpclient s post always more slower than okhttp s get method\n')

koa	express	7
('koa', 'better', 'express', '', '45490890', 'see this blog when you have 10000 request koa performs better than express\n')
('koa', 'req.header authorization', 'express', '', '41459229', 'i should also say that i have the token at ctx.request.get authorization koa based i think it s something like req.header authorization with express in all routes\n')
('koa', 'less hacky', 'express', '', '45490890', 'koa middleware is much simpler and less hacky than express middleware due to the way middleware flows in a stack-like manner\n')
('koa', 'faster', 'express', '', '42270893', 'it shows that koa is faster then other framework but as this question is about express and restify express is faster than restify\n')
('koa', 'more low level', 'express', '', '45632452', 'koa doesn t provide this kind of thing out of the box - it s designed to be a little more low level than express\n')
('koa', 'faster then', 'express', '', '42270893', 'it shows that koa is faster then other framework but as this question is about express and restify express is faster than restify\n')
('koa', 'middleware much simpler', 'express', '', '45490890', 'koa middleware is much simpler and less hacky than express middleware due to the way middleware flows in a stack-like manner\n')

noexcept	throw	5
('noexcept', 'more optimized', 'throw', '', '34877452', 'unwound before program execution is terminated. he said code using noexcept is more optimized than code using throw\n')
('noexcept', 'more efficient', 'throw', '', '45688132', 'noexcept allows for more efficient code generation in that it does not have to perform rtti on throw exceptions instead if an exception is throw from a call-frame underneath a noexcept-declared function std terminate is called short-circuiting the crazy std unexpected machinery specified by the 98 standard\n')
('noexcept', 'more', 'throw', '', '45688132', 'noexcept allows for more efficient code generation in that it does not have to perform rtti on throw exceptions instead if an exception is throw from a call-frame underneath a noexcept-declared function std terminate is called short-circuiting the crazy std unexpected machinery specified by the 98 standard\n')
('noexcept', 'more', 'throw', '', '34877452', 'unwound before program execution is terminated. he said code using noexcept is more optimized than code using throw\n')
('noexcept', 'keyword more', 'throw', '', '30456801', 'i ve heard that noexcept keyword is more like it should never throw an exception rather than it doesn t\n')

bundler	rvm	4
('bundler', 'better', 'rvm', '', '9771172', 'bundler is a better way to manage application dependencies. there is a plugin rbenv-gemset for getting the same results as rvm s gemsets but sam clearly favors using bundler instead\n')
('rvm', 'more then', 'bundler', '', '15014912', 'rvm supports more then just .rvmrc one of this files is gemfile with either the bundler directive to specify ruby\n')
('rvm', 'more', 'bundler', '', '15014912', 'rvm supports more then just .rvmrc one of this files is gemfile with either the bundler directive to specify ruby\n')
('bundler', 'better way', 'rvm', '', '9771172', 'bundler is a better way to manage application dependencies. there is a plugin rbenv-gemset for getting the same results as rvm s gemsets but sam clearly favors using bundler instead\n')

max	rank	7
('rank', 'lower', 'max', 'time larger new', '24588036', 'if no rank is lower than its number there are no gaps in the table the query returns the max number + 1\n')
('max', 'usually slower', 'rank', '', '18858163', 'you might replace the max subquery with a rank max is usually slower only when cus_id is the pi rank might be worse\n')
('rank', 'greater', 'max', '', '21983695', 'so i want to generate rank for second set of values but starting with value greater than max from first set\n')
('max', 'faster', 'rank', '', '886136', 'while i think gbn s answer is probably sufficient i m wondering whether use of an over clause to establish a max date per id attribute with which to reduce the select in a where clause wouldn t be faster than a rank\n')
('rank', 'less', 'max', '', '9870286', 'if your rank is less than 4 it takes 0 instead it s the max part\n')
('max', 'usually slower only', 'rank', '', '18858163', 'you might replace the max subquery with a rank max is usually slower only when cus_id is the pi rank might be worse\n')
('rank', 'larger number', 'max', 'time larger new', '30495806', 'every time a rank finds a larger number than that stored have it send its new max to the root rank\n')

declarative	imperative	12
('declarative', 'better', 'imperative', '', '14346528', 'angular is built around the belief that declarative code is better than imperative when it comes to building uis and wiring software components together.\n')
('declarative', 'effects better', 'imperative', '', '34623840', 'using declarative effects is better than thunks for testability but the saga pattern can be implemented on top of imperative or declarative code\n')
('declarative', 'code easier', 'imperative', '', '382518', 'declarative code is easier to make bug-free than imperative code\n')
('declarative', 'bigger difference', 'imperative', '', '12196486', 'traditionally there was a huge difference in speed imperative has fewer overheads because it s more directly like the computer works but some more modern compilers of declarative code seem to be in the top few of the speed tables a lot of the time - compiled verses interpreted makes a much bigger difference than imperative vs declarative which is why python etc are often slower even though they re imperative\n')
('declarative', 'faster', 'imperative', '', '30022972', 'declarative sql is usually simpler and faster than imperative pl sql so it s usually best to do most of the work in sql and just glue it together with pl sql\n')
('imperative', 'fewer', 'declarative', '', '12196486', 'traditionally there was a huge difference in speed imperative has fewer overheads because it s more directly like the computer works but some more modern compilers of declarative code seem to be in the top few of the speed tables a lot of the time - compiled verses interpreted makes a much bigger difference than imperative vs declarative which is why python etc are often slower even though they re imperative\n')
('imperative', 'fewer overheads', 'declarative', '', '12196486', 'traditionally there was a huge difference in speed imperative has fewer overheads because it s more directly like the computer works but some more modern compilers of declarative code seem to be in the top few of the speed tables a lot of the time - compiled verses interpreted makes a much bigger difference than imperative vs declarative which is why python etc are often slower even though they re imperative\n')
('declarative', 'code better', 'imperative', '', '14346528', 'angular is built around the belief that declarative code is better than imperative when it comes to building uis and wiring software components together.\n')
('declarative', 'sql usually simpler', 'imperative', '', '30022972', 'declarative sql is usually simpler and faster than imperative pl sql so it s usually best to do most of the work in sql and just glue it together with pl sql\n')
('declarative', 'simpler', 'imperative', 'simpler cleaner business', '19199806', 'declarative programming is not always simpler than imperative programming\n')
('declarative', 'way cleaner', 'imperative', 'simpler cleaner business', '21401916', 'i know that declarative way is cleaner but sometimes imperative programming makes your business safer\n')
('imperative', 'machine much cheaper', 'declarative', '', '8909591', 'while it is possible to explore non-imperative computer concepts it doesn t seem to be worth the effort at the current time - building a declarative machine as an interpreter on top of an imperative machine is much cheaper and faster than a true declarative machine\n')

dill	pickle	8
('dill', 'slightly more cases', 'pickle', '', '44487109', 'you may also want to have a look at dill which covers slightly more cases than pickle\n')
('pickle', 'better', 'dill', 'problems serialization support', '32838740', 'cloudpickle might be a good idea for your problem as well it has better support in pickling objects than pickle not per see better than dill and you can pickle code easily as well\n')
('dill', 'slightly more', 'pickle', '', '44487109', 'you may also want to have a look at dill which covers slightly more cases than pickle\n')
('dill', 'better job', 'pickle', 'problems serialization support', '43642444', 'modules such as dill are doing a better job than pickle\n')
('dill', 'better', 'pickle', 'problems serialization support', '28639107', 'i searched a bit and found that dill can perform better than pickle with classes but i am having problems to implement it\n')
('dill', 'better serializer', 'pickle', '', '41269538', 'dill has a better serializer that can pickle socket objects on any os and thus sending the socket object with multiprocess works in either case\n')
('dill', 'better', 'pickle', '', '41269538', 'dill has a better serializer that can pickle socket objects on any os and thus sending the socket object with multiprocess works in either case\n')
('dill', 'better serialization', 'pickle', 'problems serialization support', '31962272', 'i think you can do exactly what you want with dill which provides better serialization than pickle\n')

jscript	vbscript	9
('jscript', 'simpler', 'vbscript', 'suggest scripting use', '23531981', 'the inclusion of jscript code into a batch file is simpler than vbscript and the translation of a small code segment from vbs to jscript is not problematic\n')
('jscript', 'simpler nicer', 'vbscript', '', '1910089', 'asp with jscript is 100 times better cleaner simpler nicer than vbscript and makes my job a joy rather than a vbscript head ache\n')
('jscript', 'nicer', 'vbscript', '', '1910089', 'asp with jscript is 100 times better cleaner simpler nicer than vbscript and makes my job a joy rather than a vbscript head ache\n')
('jscript', 'infinitely more', 'vbscript', '', '495528', 'when writing code in jscript as i am wont to do as i have never been a fan of asp.net and jscript is infinitely more elegant than vbscript you can call upon the arguments collection\n')
('jscript', 'more', 'vbscript', '', '22345923', 'on contrary jscript is more c-like do not require explicit enabling of script running accepts relative paths case sensitive and loosely typed both are imho advantages for scripting language compared to vbscript\n')
('jscript', 'more elegant', 'vbscript', '', '495528', 'when writing code in jscript as i am wont to do as i have never been a fan of asp.net and jscript is infinitely more elegant than vbscript you can call upon the arguments collection\n')
('vbscript', 'much more', 'jscript', 'suggest scripting use', '35567873', '...i suggest doing all of the scripting from within the vbscript file and avoiding the use of .cmd .bat files completely if you can as vbscript is much more readable and powerful though i prefer using the jscript language instead but that s just me\n')
('jscript', 'more c-like', 'vbscript', '', '22345923', 'on contrary jscript is more c-like do not require explicit enabling of script running accepts relative paths case sensitive and loosely typed both are imho advantages for scripting language compared to vbscript\n')
('jscript', 'infinitely more elegant', 'vbscript', '', '495528', 'when writing code in jscript as i am wont to do as i have never been a fan of asp.net and jscript is infinitely more elegant than vbscript you can call upon the arguments collection\n')

vhdl	verilog	7
('vhdl', 'more feature-rich', 'verilog', '', '178555', 'yes vhdl was once much more feature-rich than verilog but later revisions of the language verilog 2001 verilog 2005 systemverilog etc.. have cherry-picked most of the interesting features and there is far more robust toolchain support for verilog and its variant these days in addition to it being the dominant language in use in the us in my experience vhdl is only used here when dealing with extreme legacy blocks and in academic contexts partially due to the tools support mentioned previously\n')
('verilog', 'less common', 'vhdl', '', '764074', 'pacoblaze was written in verilog which like adam said less common than vhdl\n')
('verilog', 'shorter fact equivalent', 'vhdl', '', '15961408', 'my experience is that designers can use whichever they prefer usually and most agree that verilog is easier to use and the code is shorter fact than equivalent vhdl\n')
('vhdl', 'more popular', 'verilog', '', '177565', 'vhdl is more popular in europe and verilog is dominating in the us\n')
('vhdl', 'more', 'verilog', '', '177565', 'vhdl is more popular in europe and verilog is dominating in the us\n')
('vhdl', 'more widely-used', 'verilog', '', '4987325', 'by these numbers and only these numbers vhdl seems to be more widely-used than verilog\n')
('verilog', 'easier', 'vhdl', '', '15961408', 'my experience is that designers can use whichever they prefer usually and most agree that verilog is easier to use and the code is shorter fact than equivalent vhdl\n')

hex	binary	24
('binary', 'better', 'hex', '', '41315665', 'base64 is usually used in instances to represent arbitrary binary data in a text format it has a 33.3 overhead but that s better than say hex notation which has a 50 overhead\n')
('hex', 'faster', 'binary', 'representation decimal usability', '34334729', 'this is still accepted by calls like inet_addr and has several advantages all fields are fixed width there are only 8 characters to update and the binary to hex conversion is usually faster than binary to decimal\n')
('hex', 'string significantly longer', 'binary', '', '2558762', 'a hex string is significantly longer than the corresponding binary string\n')
('hex', 'alot shorter', 'binary', 'important alot shorter', '16513841', 'one important reason is because hex is alot shorter and easier to read than binary is for humans\n')
('hex', 'more', 'binary', 'representation decimal usability', '12081888', 'converting between decimal and hex is more involving and at least to me it s been easier if i have to do it in my head to first convert the decimal into binary representation and then the binary number into hex\n')
('hex', 'somewhat more', 'binary', 'readable data dump', '1712946', 'hex is somewhat more readable than binary if i happen to be loading a data dump in a text editor etc\n')
('hex', 'encoding far more', 'binary', '', '36923657', 'hex encoding is far more readable than binary that s why sublime uses it\n')
('hex', 'encoding far more readable', 'binary', '', '36923657', 'hex encoding is far more readable than binary that s why sublime uses it\n')
('hex', 'easier', 'binary', 'important alot shorter', '23532067', 'but when anyone human looks at it they look at it in hex using a hex editor which is much easier than reading binary\n')
('hex', 'more readable', 'binary', '', '36923657', 'hex encoding is far more readable than binary that s why sublime uses it\n')
('hex', 'much more readable', 'binary', 'readable data dump', '21578250', 'and because hex is much more readable and useful than binary - it s often used and shown\n')
('binary', 'more', 'hex', '', '32646938', 'format_int in binary case it loops 4 times then 4 times more than hex and dec cases\n')
('hex', 'more convenient', 'binary', 'digit convenient 0-f', '45780733', 'as others have pointed out hex is much more convenient than binary anyway - you just need to remember how each of the hex digit 0-f looks in binary and replace groups of 4 bits with a single hex digit\n')
('hex', 'easier', 'binary', '', '13960625', 'hex is easier for most people to convert to and from binary in their heads since binary numbers are usually expressed in blocks of eight because that s the size of a byte and eight is exactly two hex digits but hex notation would have been clunky and misleading in dennis time implying the ability to address 16 bits\n')
('hex', 'easier', 'binary', '', '15667899', '- i usually find debugging memory in hex x command is easier than binary so i will not use my solution\n')
('hex', 'just less', 'binary', '', '484849', 'hex is just less verbose and can express anything a binary number can\n')
('hex', 'way more', 'binary', '', '38749931', 'unfortunately using hex consumes way more space and takes significantly longer i m dealing with 500gb of data and around 1 2 million records so i would really like to get the straight binary method to work\n')
('hex', 'just less verbose', 'binary', '', '484849', 'hex is just less verbose and can express anything a binary number can\n')
('binary', 'friendlier most', 'hex', '', '21591637', 'i ve been using images to store data since editing binary data through paint.net is much friendlier than most hex editors\n')
('hex', 'numbers larger', 'binary', '', '12679024', 'those hex values seem a bit odd they re powers of two in decimal but in any case 0x128 the 0x is a standard prefix for hex numbers is the larger of the numbers in magnitude and its binary representation is 100101000\n')
('hex', 'way more space', 'binary', '', '38749931', 'unfortunately using hex consumes way more space and takes significantly longer i m dealing with 500gb of data and around 1 2 million records so i would really like to get the straight binary method to work\n')
('hex', 'representation better way', 'binary', 'representation decimal usability', '484066', 'it seems the from a readability and usability standpoint the hex representation is a better way of defining binary numbers\n')
('binary', 'side greater', 'hex', '', '37554151', 'if the right side the binary side is greater than or equal to the hex side then you print true if not then you print false\n')
('binary', 'even simpler', 'hex', 'digit convenient 0-f', '12081779', 'the conversion from hex to binary is even simpler since you can simply expand each hex digit into the corresponding binary for example 0xa4 - 1010 0100\n')

modulo	subtraction	9
('subtraction', 'typically less', 'modulo', '', '27467857', 'the conditional test and subtraction is typically less expensive than a modulo especially if the sum does not frequently exceed mod\n')
('subtraction', 'typically less expensive', 'modulo', '', '27467857', 'the conditional test and subtraction is typically less expensive than a modulo especially if the sum does not frequently exceed mod\n')
('subtraction', 'faster division-based', 'modulo', '', '24115313', 'that is essentially the one case in which repeated subtraction 0 or 1 times a special case of repeated subtraction can be and commonly is but not necessarily faster than division-based modulo\n')
('modulo', 'higher', 'subtraction', '', '31666977', 'with regard to implementation it also takes advantage of a bit of a non-obvious property of r precedence rules actually this is true of other languages as well such as c c++ and java namely that unary negative is higher than modulo which is higher than binary subtraction thus the calculation for is equivalent to\n')
('modulo', 'more expensive', 'subtraction', '', '22368203', 'as i said this may increase the speed especially in an environment where modulo is more expensive than simple subtraction but you would want to actually benchmark it to be certain\n')
('modulo', 'higher binary', 'subtraction', '', '31666977', 'with regard to implementation it also takes advantage of a bit of a non-obvious property of r precedence rules actually this is true of other languages as well such as c c++ and java namely that unary negative is higher than modulo which is higher than binary subtraction thus the calculation for is equivalent to\n')
('modulo', 'slower', 'subtraction', '', '43115704', 'the reason is that the modulo is slower than subtraction\n')
('modulo', 'slower', 'subtraction', '', '414763', 'as you can see modulo is about an order of magnitude slower than subtraction\n')
('modulo', 'more', 'subtraction', '', '22368203', 'as i said this may increase the speed especially in an environment where modulo is more expensive than simple subtraction but you would want to actually benchmark it to be certain\n')

scapy	dpkt	3
('scapy', 'slower', 'dpkt', '', '41680711', 'or is it just that scapy is slower than dpkt\n')
('scapy', 'better performer', 'dpkt', '', '37963958', 'scapy is a better performer than dpkt\n')
('scapy', 'better', 'dpkt', '', '37963958', 'scapy is a better performer than dpkt\n')

flac	wav	3
('flac', 'better', 'wav', 'comment better ogg', '45417810', 'regearding your comment i also know that it can deal with flac better than wav and ogg that is not really the case\n')
('flac', 'better', 'wav', 'comment better ogg', '45383521', 'i also know that it can deal with flac better than wav and ogg\n')
('flac', 'smaller', 'wav', '', '8301955', 'flac is smaller than wav\n')

next	except	6
('except', 'accordion imho better', 'next', '', '5690589', 'for me they serve pretty same purpose to hide complexity except accordion is imho better for continuous-reading it s easier to quickly go to next section while tabs seems to be more random-access\n')
('next', 'example more', 'except', '', '22646025', 'the next example does more or less the same except from an oop perspective\n')
('except', 'greater', 'next', 'ceiling number amount', '10924146', 'now i would like to take the ceiling of this number except in cases where the amount it is greater than the next lower integer is smaller than some epsilon\n')
('next', 'solution faster', 'except', '', '19105903', 'the next solution is faster than using in and except clauses\n')
('next', 'digit greater', 'except', 'ceiling number amount', '23263562', 'for such numbers as 54321 the else statement will be executed never because any next digit is greater than max1 except the first two digits\n')
('next', 'more', 'except', '', '4559066', 'in both cases you may also have to shift one or two elements off the start end of some blocks to the end start of the previous next block again at most o n 1 2 times to maintain an invariant that no two blocks differ in size by more than 1 except for the last which is used to take up slack\n')

installation	upgrade	3
('installation', 'slower', 'upgrade', '', '12791808', 'does an eclipse installation perform slower after the upgrade\n')
('installation', 'much better', 'upgrade', '', '765929', 'as for production side of things upgrading your database in transaction msi-style installation is much better than attempting to upgrade at each app startup since you can potentially end up with desynchronized database-application versioning\n')
('upgrade', 'smaller', 'installation', '', '12159596', 'this can enable the user to download an upgrade patch that is much smaller than the installation package for the entire product\n')

realloc	malloc	10
('realloc', 'faster', 'malloc', 'faster memcpy memory', '3108761', 'a realloc can occur significantly faster than a malloc memcpy and free\n')
('malloc', 'more', 'realloc', '', '39043954', 'but if it works with large datasets the users will notice that using the malloc -only program slows down other programs much more than the realloc -using program with the same data\n')
('realloc', 'way smarter', 'malloc', '', '27200845', 'i mean i think realloc is way smarter so why do we even need malloc\n')
('malloc', 'often more', 'realloc', '', '21358484', 'malloc often gives you more memory that you ask and stores the actual value in a special location that realloc can access at a later time\n')
('malloc', 'often more memory', 'realloc', '', '21358484', 'malloc often gives you more memory that you ask and stores the actual value in a special location that realloc can access at a later time\n')
('realloc', 'worse', 'malloc', '', '7188551', 'realloc is worse than malloc in that you will need to have the old and new pointers valid during the realloc\n')
('realloc', 'more memory', 'malloc', 'faster memcpy memory', '4190023', 'that s why realloc can temporarily require more memory than a malloc free pair\n')
('realloc', 'way smarter so', 'malloc', '', '27200845', 'i mean i think realloc is way smarter so why do we even need malloc\n')
('realloc', 'faster 2nd', 'malloc', '', '41428974', 'the justification of realloc is that it s faster than 2nd malloc manual copy free\n')
('malloc', 'less', 'realloc', '', '26126313', 'in the case of overflow a free malloc pair costs less than realloc because of its internal hidden memcpy\n')

velocity	freemarker	9
('velocity', 'more knoledge', 'freemarker', '', '30106906', 'i m trying to create a template in velocity since i have more knoledge than freemarker\n')
('freemarker', 'more advanced', 'velocity', '', '3703341', 'freemarker is more advanced but a little complex as compared to apache velocity\n')
('freemarker', 'more', 'velocity', '', '463420', 'freemarker is more powerful than velocity\n')
('freemarker', 'more', 'velocity', '', '3703341', 'freemarker is more advanced but a little complex as compared to apache velocity\n')
('freemarker', 'much better', 'velocity', '', '4146126', 'freemarker provides much better native whitespace handling recent velocity releases provide more interesting content controls #define #evaluate # literal block #\n')
('velocity', 'simpler', 'freemarker', '', '463420', 'velocity is simpler than freemarker\n')
('freemarker', 'more powerful', 'velocity', '', '463420', 'freemarker is more powerful than velocity\n')
('velocity', 'worse', 'freemarker', '', '10524352', 'velocity is worse than freemarker and stringtemplate has got its own issues\n')
('freemarker', 'much better native', 'velocity', '', '4146126', 'freemarker provides much better native whitespace handling recent velocity releases provide more interesting content controls #define #evaluate # literal block #\n')

scikit-learn	nltk	6
('scikit-learn', 'much better', 'nltk', '', '13041143', 'what you re looking for is linear regression and scikit-learn is much better than nltk for this see\n')
('scikit-learn', 'better', 'nltk', '', '13041143', 'what you re looking for is linear regression and scikit-learn is much better than nltk for this see\n')
('nltk', 'nicer output', 'scikit-learn', '', '35614800', 'the nltk library includes a confusion matrix that is simple to use and produces a nicer output than scikit-learn\n')
('scikit-learn', 'directly more details', 'nltk', '', '19868470', 'or scikit-learn directly .for more details nltk 3.0 documentation\n')
('scikit-learn', 'directly more', 'nltk', '', '19868470', 'or scikit-learn directly .for more details nltk 3.0 documentation\n')
('scikit-learn', 'less memory', 'nltk', '', '14131456', 'if you are worried about memory then do look into scikit-learn since equivalent models can use significantly less memory than nltk\n')

inherited	subclassing	15
('subclassing', 'more', 'inherited', '', '39741858', 'if a subclassing needs more information than the standard parameters which came up for us you have the option of a second parameters class type that you use as a second parameter but then you have two types of constructors in the tree or using inherited in the parameters class hierarchy\n')
('subclassing', 'more', 'inherited', '', '5527347', 'similarly as the subclassing gains more methods it inherited the list of superclass in the order in which they were named that precede it\n')
('inherited', 'mapping more', 'subclassing', '', '15552495', 'but native hibernate support regarding inherited mapping is more powerful than standard jpa and single table per class hierarchy or table per subclassing mapping strategies are more suitable for polymorphic queries and associations than table per concrete class strategy\n')
('inherited', 'more useful', 'subclassing', '', '154057', 'inherited is more useful when a new subclassing wants to change the way a method works if you just need to change the data the class uses to work probably an approach like this would do the trick\n')
('subclassing', 'trickier', 'inherited', 'ireadwrite implements base', '12945925', 'with subclassing is trickier because any private members of a class are not inherited by the subclassing but protected and public are\n')
('subclassing', 'more methods', 'inherited', '', '5527347', 'similarly as the subclassing gains more methods it inherited the list of superclass in the order in which they were named that precede it\n')
('inherited', 'less likely', 'subclassing', '', '44097475', 'with inherited this is less likely to happen due the contractual nature of subclassing abstract classes\n')
('subclassing', 'more', 'inherited', '', '6020740', 'i generally use interfaces are too enforce a common behavior that a group of classes share whereas subclassing is more appropriately used in cases where you can achieve serious code re-use through inherited functions properties\n')
('subclassing', 'more', 'inherited', 'ireadwrite implements base', '1331150', 'since ireadwrite implements ireadonly ireadwrite is said to be a subclassing of ireadonly although subclassing is more accurately used to describe a class which inherited a base class rather then implements an interface--for the sake of simplicity they are very nearly the same concept\n')
('subclassing', 'more appropriately', 'inherited', '', '6020740', 'i generally use interfaces are too enforce a common behavior that a group of classes share whereas subclassing is more appropriately used in cases where you can achieve serious code re-use through inherited functions properties\n')
('subclassing', 'better', 'inherited', '', '20999393', 'depending on how your application is structured this means you may want to have your own base class implementing iresource which creates your custom not found resource for all of its subclassing or better make a wrapper since composition is better than inherited\n')
('inherited', 'more', 'subclassing', '', '154057', 'inherited is more useful when a new subclassing wants to change the way a method works if you just need to change the data the class uses to work probably an approach like this would do the trick\n')
('inherited', 'less', 'subclassing', '', '44097475', 'with inherited this is less likely to happen due the contractual nature of subclassing abstract classes\n')
('subclassing', 'more information', 'inherited', '', '39741858', 'if a subclassing needs more information than the standard parameters which came up for us you have the option of a second parameters class type that you use as a second parameter but then you have two types of constructors in the tree or using inherited in the parameters class hierarchy\n')
('inherited', 'mapping more powerful', 'subclassing', '', '15552495', 'but native hibernate support regarding inherited mapping is more powerful than standard jpa and single table per class hierarchy or table per subclassing mapping strategies are more suitable for polymorphic queries and associations than table per concrete class strategy\n')

android-query	picasso	3
('android-query', 'better', 'picasso', '', '39345309', 'android-query is better than picasso because while in offline mode no internet connectivity picasso tries to fetch record form server whereas android-query maintains its cache form where it fetched the images\n')
('android-query', 'much more', 'picasso', '', '19800655', 'if picasso doesn t satisfy you for any reason you can also try android-query which does much more than picasso it s not only for images but the same rules apply\n')
('android-query', 'more', 'picasso', '', '19800655', 'if picasso doesn t satisfy you for any reason you can also try android-query which does much more than picasso it s not only for images but the same rules apply\n')

max	percentile	3
('max', 'greater 95th', 'percentile', '', '38463823', 'i can get the max values like this but i need values greater than 95th percentile for every 5 minutes\n')
('percentile', 'less', 'max', '', '47277190', 'if you notice the 99th percentile is less than 40mb but the max sized partition is still reported to be 3.44gb\n')
('max', 'temperature higher', 'percentile', '', '45871305', 'the code included in the sapply call will test each day starting from day n. 7+1 8 against the 15-day sliding window as defined before and check if the max temperature is higher than the 90th percentile of that window test1\n')

jackson	org.json	6
('jackson', 'more powerful', 'org.json', '', '45917091', 'p.s. my recommendation would be to remove jsonobject conversion and instead return an object of actual class as internally spring uses jackson which is more powerful json framework then org.json\n')
('jackson', 'better', 'org.json', '', '38062714', 'quick takeaway of the benchmark jackson performs 5 to 6 times better than org.json and more than twice better than gson\n')
('jackson', 'better', 'org.json', '', '42106801', 'in this case jackson performs better than nashorn which performs much better than org.json\n')
('jackson', 'more', 'org.json', '', '45917091', 'p.s. my recommendation would be to remove jsonobject conversion and instead return an object of actual class as internally spring uses jackson which is more powerful json framework then org.json\n')
('jackson', 'better', 'org.json', '', '38062608', 'quick takeaway of the benchmark jackson performs 5 to 6 times better than org.json and more than twice better than gson\n')
('jackson', 'better', 'org.json', '', '38062457', 'quick takeaway of the benchmark jackson performs 5 to 6 times better than org.json and more than twice better than gson\n')

svn	cvs	17
('svn', 'less disk', 'cvs', '', '10996036', 'wondering mainly if svn uses less disk space or more than the same in cvs\n')
('svn', 'better', 'cvs', 'areas work git', '1589215', 'svn in much better than cvs and have lot of mature tools for every platform\n')
('svn', 'better', 'cvs', 'areas work git', '245323', 'that being said i think svn is better in every other respect and you probably shouldn t start a new project with cvs\n')
('svn', 'better', 'cvs', 'areas work git', '160037', 'svn is better than cvs because it was designed to be - it s roughly the same thing with some simplications and new features\n')
('svn', 'more comparable format', 'cvs', '', '161202', 'the first one can be solved by using svn +ssh which is the more comparable format as cvs uses its own protocol as well\n')
('cvs', 'more popular', 'svn', '', '782375', 'in addition another coworker said cvs was a lot more popular than svn\n')
('svn', 'less', 'cvs', '', '10996036', 'wondering mainly if svn uses less disk space or more than the same in cvs\n')
('svn', 'better', 'cvs', 'areas work git', '1397047', 'if you use svn then it still okay because svn handles binary files much better than cvs\n')
('svn', 'more efficient', 'cvs', '', '191616', 'in fact svn does stores binaries a lot more efficient than cvs for more info see the svn-faq\n')
('svn', 'better', 'cvs', 'areas work git', '159971', 'svn is better than cvs\n')
('cvs', 'better system', 'svn', '', '7871646', 'i can only guess at the reasons and i don t worry much about the occasional downvote but perhaps some readers think i m advocating cvs as a better system than svn or git\n')
('svn', 'much better', 'cvs', 'areas work git', '10859451', 'svn is much better then cvs and git or mercurial are even better again\n')
('svn', 'better enviroment', 'cvs', '', '1101716', 'for all the reasons linked in the comment and elsewhere svn tends to be a much better enviroment than cvs or vss unless you have some weird requirements - so if you can successfully import your history and save the company money i wouldn t see why the bosses wouldn t go for it\n')
('svn', 'better', 'cvs', 'areas work git', '161216', 'svn was supposed to be better than cvs but in some areas that didn t work well\n')
('svn', 'bigger', 'cvs', '', '11879403', 'in this case i converted the cvs to svn and found the file size on the hard drive it was on my own laptop at the time but it was much smaller in svn than in cvs but there could have been some compression applied i dont know but everything on the web said svn would actually be bigger than cvs\n')
('cvs', 'more useful features', 'svn', '', '161216', 'the other distributed tools are a lot faster svn is slow as hell even cvs can be faster sometimes have much more useful features than svn are developing rapidly while seeing any new feature in svn takes years\n')
('svn', 'easier', 'cvs', '', '1580034', 'part of the point of svn was to make the use of branches and merging much easier than in cvs\n')

conda	virtualenv	2
('conda', 'better', 'virtualenv', 'anaconda alternative packages', '20567658', 'an additional bonus i find that conda works better as a package manager than virtualenv\n')
('conda', 'better alternative', 'virtualenv', 'anaconda alternative packages', '26663944', 'if you are using anaconda conda is a better alternative to virtualenv as it manages conda packages which are not limited to just python packages\n')

websphere	ibm	5
('websphere', 'older', 'ibm', '', '39102887', 'websphere development studio v7 wdsc is older than ibm i 6.1 your build date is 2007 the article you re referencing came out in 2008\n')
('ibm', 'technote more', 'websphere', '', '40174142', 'this ibm technote has more details on the signals part what is a signal and why does this matter for websphere application server\n')
('ibm', 'technote more details', 'websphere', '', '40174142', 'this ibm technote has more details on the signals part what is a signal and why does this matter for websphere application server\n')
('websphere', 'newer libraries', 'ibm', '', '2183918', 'other solution is to upgrade websphere with newer libraries as per ibm websphere upgrade service instructions\n')
('ibm', 'easier', 'websphere', '', '3825114', 'ibm makes it easier for those who can t afford websphere application developer or rational application developer which are both eclipse flavour to use eclipse\n')

wav	mp3	13
('mp3', 'smaller', 'wav', '', '8063108', 'now i assume you are worried your techno might not read a compressed mp3 which should be smaller than a wav from my memories\n')
('wav', 'better', 'mp3', 'uncompressed pcm data', '1628241', 'if you ask if a uncompressed wav which contains pcm data is better than mp3 then yes but the question sometimes is how much this better really matters to the human ear and how much postprocessing you have to perform on that data\n')
('mp3', 'much less memory', 'wav', '', '40874574', 'for using a fileformat i thought mp3 uses much less memory than wav because all the formats are based on wav but just compressed\n')
('mp3', 'much less', 'wav', '', '40874574', 'for using a fileformat i thought mp3 uses much less memory than wav because all the formats are based on wav but just compressed\n')
('mp3', 'smaller', 'wav', 'files larger additional', '44688938', 'you should definitely pick mp3 because they are about 10x smaller than wav files of the same duration\n')
('mp3', 'less memory', 'wav', '', '40874574', 'for using a fileformat i thought mp3 uses much less memory than wav because all the formats are based on wav but just compressed\n')
('mp3', 'lower file', 'wav', '', '41771353', 'question i√¢ m seeing some compromise in mp3 quality my converted mp3 is lower file size when compared to wav but my audio quality is little poor than wav wonder if i can increase the quality of the mp3 file\n')
('wav', 'file much easier', 'mp3', 'uncompressed pcm data', '1427191', 'either way applying gain and or attenuation to time-domain sample data as in a wav file is much easier than trying to apply these effects to frequency-domain data as in an mp3 file\n')
('mp3', 'smaller', 'wav', 'files larger additional', '23678277', 'if you are still having problems jdk 8 has the ability to play mp3 files which are significantly smaller than wav you may want to try this\n')
('mp3', 'much smaller', 'wav', 'files larger additional', '7596704', 'i understand that mp3 is much smaller but it has worst audio quality when is compared to wav files\n')
('wav', 'larger', 'mp3', 'files larger additional', '44531357', 'wav files are about 3 times larger than mp3 files so it would need 1.8gb additional space to do the conversion\n')
('wav', 'smaller', 'mp3', 'files larger additional', '43825846', 'ok i am new to audio with unity but despite reading all the unity posts regarding audio adding 2 short .wav clips i heard wav was smaller than mp3 to my app has added over 200mb\n')
('mp3', 'lower', 'wav', '', '41771353', 'question i√¢ m seeing some compromise in mp3 quality my converted mp3 is lower file size when compared to wav but my audio quality is little poor than wav wonder if i can increase the quality of the mp3 file\n')

qhash	qmap	2
('qhash', 'faster lookups', 'qmap', 'values lookups faster', '8907753', 'qhash provides faster lookups than qmap\n')
('qhash', 'faster', 'qmap', 'values lookups faster', '7123723', 'qhash is faster but qmap values are sorted by key if you iterate through them\n')

pyquery	beautifulsoup	3
('pyquery', 'faster', 'beautifulsoup', '', '21335822', 'also pyquery is significantly faster than beautifulsoup in many cases for processing results\n')
('pyquery', 'significantly faster', 'beautifulsoup', '', '21335822', 'also pyquery is significantly faster than beautifulsoup in many cases for processing results\n')
('pyquery', 'more intuitive', 'beautifulsoup', '', '2752712', 'pyquery uses the css selector syntax familiar from jquery which i find more intuitive than beautifulsoup s\n')

division	subtraction	18
('division', 'higher', 'subtraction', 'operator higher preference', '13190071', 'division has higher precedence than subtraction so in the first two examples only the second number is being divided\n')
('division', 'operator higher precedence', 'subtraction', 'operator higher preference', '37897197', 'doesn t get evaluated the way you are expecting the division operator has higher precedence than the subtraction operator\n')
('division', 'greater precedence', 'subtraction', 'operator higher preference', '34893808', 'in this since division has greater precedence than subtraction therefore x 10 will execute first and here we are dividing two int irrespective of the fact that the variable where final answer is stored is a double so answer will be an int i.e 5 10 0 and then subtraction of an int and double will be done here int will be promoted to a double\n')
('division', 'trickier', 'subtraction', '', '1218185', 'subtraction is similar using subtraction of the base type and borrow instead of carry multiplication can be done with repeated additions very slow or cross-products faster and division is trickier but can be done by shifting and subtraction of the numbers involved the long division you would have learned as a kid\n')
('division', 'stronger', 'subtraction', 'reduction optimization stronger', '47150236', 'this is called a strength reduction optimization because division is stronger slower more expensive than subtraction\n')
('division', 'higher precedence', 'subtraction', 'operator higher preference', '29579783', 'division has higher precedence than subtraction\n')
('division', 'operator higher precedence', 'subtraction', 'operator higher preference', '7851837', 'that s because the division operator has a higher precedence than the subtraction operator -\n')
('subtraction', 'weaker', 'division', 'reduction optimization stronger', '39379901', 'this is called a strength reduction operation because subtraction is a weaker and cheaper operation than division\n')
('division', 'higher precedence', 'subtraction', 'operator higher preference', '6851760', 'in this case division has higher precedence than subtraction parenthesis around the division or not\n')
('division', 'higher precedence', 'subtraction', 'operator higher preference', '41697652', 'remember multiplication division and remainder operators are all higher precedence than subtraction\n')
('division', 'slower', 'subtraction', 'reduction optimization stronger', '21475774', 'i am a bit suspicious of the performance because modulo tends to use division which is slower than your subtraction operations\n')
('division', 'higher precedence', 'subtraction', 'operator higher preference', '14438062', 'without parentheses math.exp c b is executed first as division has higher precedence than subtraction -\n')
('division', 'operator higher', 'subtraction', 'operator higher preference', '36193506', 'this is because division operator has higher preference than the subtraction operator - in the first example you use are not using brackets therefore division takes place first you can change your code to\n')
('subtraction', 'easier', 'division', '', '32897752', 'it may not be the most elegant method but when you just need to convert something ad-hoc thinking of it as comparison and subtraction may be easier than division\n')
('division', 'operator higher precedence', 'subtraction', 'operator higher preference', '3423368', 'because the division operator has higher precedence than subtraction\n')
('subtraction', 'slower', 'division', 'reduction optimization stronger', '3704402', 'this platform is probably not representative of your microcontroller but the test shows that on this platform the subtraction is considerably slower than the division\n')
('division', 'operation tighter', 'subtraction', 'reduction optimization stronger', '20687808', 'the division operation binds tighter than i.e is evaluated ahead of the subtraction so you are taking a square root of a negative number\n')
('division', 'greater precedence', 'subtraction', 'operator higher preference', '19693646', 'i don t think they have a natural precedence unlike say multiplication and division being of greater precedence than subtraction and addition because they can be built from subtraction and addition\n')

dexterity	archetypes	7
('dexterity', 'arguably more', 'archetypes', '', '8760668', 'dexterity arguably has more better documentation than archetypes see plone.org products dexterity as well as my book professional plone 4 development\n')
('archetypes', 'still stronger', 'dexterity', '', '13387479', 'variety of supporting widgets is probably the single area in which archetypes is still stronger than dexterity\n')
('dexterity', 'better documentation', 'archetypes', '', '8760668', 'dexterity arguably has more better documentation than archetypes see plone.org products dexterity as well as my book professional plone 4 development\n')
('dexterity', 'more lightweight', 'archetypes', '', '14759857', 'the good news is that dexterity content types are more lightweight than archetypes content types and doing raw listing by iterating over folder.contentitems in your template should not be that expensive\n')
('dexterity', 'arguably more better', 'archetypes', '', '8760668', 'dexterity arguably has more better documentation than archetypes see plone.org products dexterity as well as my book professional plone 4 development\n')
('archetypes', 'stronger', 'dexterity', '', '13387479', 'variety of supporting widgets is probably the single area in which archetypes is still stronger than dexterity\n')
('dexterity', 'arguably more better documentation', 'archetypes', '', '8760668', 'dexterity arguably has more better documentation than archetypes see plone.org products dexterity as well as my book professional plone 4 development\n')

oncreate	onstart	3
('onstart', 'less commonly', 'oncreate', '', '46291545', 'onstart is less commonly used than oncreate\n')
('onstart', 'less', 'oncreate', '', '46291545', 'onstart is less commonly used than oncreate\n')
('oncreate', 'earlier', 'onstart', '', '33901690', 'in my fragments data handling is taking place starting from oncreate which happens earlier than onstart\n')

tree	trie	17
('trie', 'better', 'tree', 'better kind thing', '3596741', 'a trie is better than a binary search tree for searching elements\n')
('tree', 'more', 'trie', '', '4203216', 'use a radix tree wiki or trie wiki if you are concerned about performance.the radix tree is more memory efficient compared to a trie\n')
('tree', 'more memory', 'trie', '', '4203216', 'use a radix tree wiki or trie wiki if you are concerned about performance.the radix tree is more memory efficient compared to a trie\n')
('tree', 'lighter', 'trie', '', '6723322', 'the suffix tree is lighter and faster than the trie and is used to index dna or optimize some large web search engines\n')
('tree', 'admittedly more difficult', 'trie', '', '2688976', 'finally b+ tree is admittedly more difficult to implement than a trie it s more on a red-black tree level of complexity\n')
('trie', 'more', 'tree', 'efficient ternary sort', '15458289', 'most likely a trie is more efficient and you didn t sort your dictionary and it doesn t use a binary tree or ternary tree\n')
('tree', 'more', 'trie', 'suffix advanced substrings', '402806', 'a suffix tree is more or less an advanced trie here you can also search for any substrings in o c as for the trie\n')
('trie', 'substantially more', 'tree', 'efficient ternary sort', '10970637', 'for cases where each node in the trie has most of its children used the trie is substantially more space efficient and time efficient than th ternary search tree\n')
('tree', 'more similar', 'trie', 'better kind thing', '5347445', 'recursive is usually used for traversal and binary search tree but this tree is more similar to trie of only 2 character in alphabet\n')
('tree', 'usually faster', 'trie', '', '13988231', 'ps radix tree is usually faster and more compact then trie but suffers from the same side effects of trie comparing to hash tables though less significant of course\n')
('tree', 'admittedly more', 'trie', '', '2688976', 'finally b+ tree is admittedly more difficult to implement than a trie it s more on a red-black tree level of complexity\n')
('tree', 'more efficient', 'trie', '', '27587903', 'should i change my project to trie or is there any other good reasons where avl tree woud be more efficient than trie in case of phonebook\n')
('tree', 'faster', 'trie', '', '6723322', 'the suffix tree is lighter and faster than the trie and is used to index dna or optimize some large web search engines\n')
('tree', 'less', 'trie', 'suffix advanced substrings', '34732260', 'a suffix tree has less dummy nodes than the suffix trie\n')
('trie', 'better binary', 'tree', 'better kind thing', '38671242', 'the article says that a trie is better than binary tree as for a string of length m for trie it takes o m time and for binary tree it takes o m logn time\n')
('trie', 'more', 'tree', '', '2688976', 'finally b+ tree is admittedly more difficult to implement than a trie it s more on a red-black tree level of complexity\n')
('trie', 'better', 'tree', 'better kind thing', '5953369', 'a trie is better suited to this kind of thing because it lets you store your symbols as a tree and quickly parse it to match values or reject them\n')

16-bit	64bit	5
('64bit', 'greater', '16-bit', 'systems wide larger', '28664552', 'how many chars you can pack into it depends on the size of int which varies across platforms typically one of 16 32 or 64bit but it could be anything else greater than 16-bit\n')
('16-bit', 'less', '64bit', '', '24587308', 'that s obviously quite a bit more than the 16-bit that s mandated for an int but equally obviously less than the 64bit mandated for a long long\n')
('64bit', 'larger range', '16-bit', 'systems wide larger', '35725586', 'on today s desktop systems an int is usually 32 or 64bit wide for a correspondingly much larger range than the 16-bit 32767 32768 you are talking of\n')
('16-bit', 'no longer', '64bit', 'systems wide larger', '6388799', 'most machines now end up with sizeof int sizeof long because 16-bit is no longer convenient but we have long long to get 64bit if needed\n')
('16-bit', 'less efficient', '64bit', '', '942017', 'in fact for x86 64 processors performing 32-bit or 16-bit operations are less efficient than 64bit or 8-bit operations due to the operand prefix byte that has to be decoded\n')

memset	calloc	5
('calloc', 'more type-wise', 'memset', '', '37555852', 'in other words calloc is no more type-wise than memset\n')
('calloc', 'more', 'memset', '', '37555852', 'in other words calloc is no more type-wise than memset\n')
('memset', 'slower', 'calloc', 'certain conditions malloc', '17898722', 'see also why malloc + memset is slower than calloc\n')
('memset', 'slower', 'calloc', 'certain conditions malloc', '2688466', 'my question is why is malloc + memset so much slower than calloc\n')
('memset', 'slower', 'calloc', 'certain conditions malloc', '16536738', 'malloc + memset is slower than calloc under certain conditions\n')

multiplication	division	149
('division', 'more expensive', 'multiplication', 'constant compiler expensive', '36160101', 'it will be much slower i don t have benchmarks but i would guess at least an order of magnitude maybe more decimal will not benefit from any hardware acceleration and arithmetic on it will require relatively expensive multiplication division by powers of 10 which is far more expensive than multiplication and dividion by powers of 2 to match the exponent before addition subtraction and to bring the exponent back into range after multiplication division\n')
('division', 'slower', 'multiplication', 'faster slower integer', '1643009', 'the tostring should be slower than parse since division is generally slower than multiplication\n')
('division', 'much slower', 'multiplication', '', '13106830', 'on some machines division is much slower than multiplication but on most machines j multiplies and j divides will run a lot faster than 2 n-2 multiplication and one division\n')
('multiplication', 'faster so', 'division', '', '47321155', 'change the half to 0.5 and you should be golden for the math part also multiplication is faster so use it instead of division when possible\n')
('multiplication', 'fewer', 'division', 'fewer cycles means', '40599466', 'it has to do with the fact that multiplication is itself done by means of binary shifts and additions - far fewer than with division\n')
('multiplication', 'usually fewer', 'division', 'fewer cycles means', '17883291', 'floating point multiplication usually takes fewer cycles than floating point division\n')
('multiplication', 'cheaper', 'division', '', '1027808', 't is not very important as long as alpha is small otherwise you will run into some rather weird nyquist issues aliasing etc. and if you are working on a processor where multiplication is cheaper than division or fixed-point issues are important precalculate omega\n')
('multiplication', 'faster then', 'division', 'faster slower integer', '32910219', 'i would also suggest to replace terms like a l1 0.3e1 with as multiplication is faster then division\n')
('division', 'more expensive', 'multiplication', 'expensive cost someone', '8886384', 'division is always much more expensive than multiplication\n')
('multiplication', 'faster', 'division', 'faster slower integer', '16212577', 'this because 1 x is simpler than y x and multiplication is faster than division\n')
('multiplication', 'cheaper', 'division', 'line time multiple', '15817184', 'following advise i received multiplication is cheaper than division i revised one code line and interestingly enough 71.2 dropped to 1.7 but the if statement just below shot up to 64.8 √¢ i just don t get it\n')
('multiplication', 'faster', 'division', '', '47321155', 'change the half to 0.5 and you should be golden for the math part also multiplication is faster so use it instead of division when possible\n')
('division', 'slower integer', 'multiplication', '', '42840754', 'it is well known that integer division is slow operation typically several times slower than integer multiplication\n')
('division', 'worse latency', 'multiplication', 'worse addition latency', '45899202', 'division has worse latency than multiplication or addition by a factor of 2 to 4 on modern x86 cpus and worse throughput by a factor of 6 to 40\n')
('multiplication', 'faster', 'division', '', '41582594', 'i wonder why everybody missed that multiplication is much faster than division\n')
('multiplication', 'more', 'division', '', '7554853', 'or is there something about multiplication that is more convenient than division in programming\n')
('division', 'slower', 'multiplication', 'faster slower integer', '38857588', 'in all other cases division appears to be several times slower than multiplication\n')
('division', 'normally more expensive', 'multiplication', 'constant compiler expensive', '33186030', 'this solution has the disadvantage that if the other factor is not constant the compiler and you can t reasonably avoid the division int_max n to be done at runtime and division is normally more expensive than multiplication\n')
('division', 'slower', 'multiplication', 'faster slower integer', '506241', 'division is per se slower than multiplication however i don t know the details\n')
('division', 'shorter', 'multiplication', '', '1965541', 'i haven t benchmarked any of this code but just by examining the code you can see that using integers division by 2 is shorter than multiplication by 2\n')
('division', 'slower', 'multiplication', 'faster slower integer', '24249023', 'because division is often much slower than multiplication if performance is critical you might keep a table with powers of ten and their reciprocals\n')
('multiplication', 'faster', 'division', 'constant compiler expensive', '9113669', 'most optimizing c compilers optimize it out to a multiplication operation which is much faster than division it can be done only if the divisor is constant though\n')
('division', 'slower', 'multiplication', '', '655584', 'which one is faster is indeed a cpu-specific issue or at least how much faster is cpu specific yes division is typically seen as slower than multiplication\n')
('multiplication', 'faster', 'division', 'faster slower integer', '41185802', 'as to why multiplication is faster than division and when the divisor is fixed this is a faster route\n')
('division', 'more costly affair', 'multiplication', '', '39722216', 'the intuition is that division is a more costly affair than multiplication\n')
('multiplication', 'cheaper', 'division', '', '39104562', 'i always thought a multiplication is computationally cheaper than a division\n')
('multiplication', 'faster', 'division', '', '45688463', 'multiplication is faster than division see fog s tables\n')
('division', 'more', 'multiplication', '', '43246339', 'easiest way is to simply recognize that division is nothing more than the multiplication of the dividend y and the inverse of the divisor x\n')
('division', 'usually slower', 'multiplication', '', '19938457', 'if the numbers are huge dividing x by b might be better√¢ division is usually slower than multiplication but getting out of the huge-number domain early might help more than avoiding division\n')
('multiplication', 'faster', 'division', 'faster slower integer', '4143288', 'similar to pmg s solution but still faster because multiplication is faster than division -\n')
('division', 'faster', 'multiplication', 'faster slower integer', '39174057', 'division is faster for unint8 than multiplication in your case\n')
('division', 'many more clock', 'multiplication', 'fewer cycles means', '35689883', 'it is common knowledge that division takes many more clock cycles to compute than multiplication\n')
('division', 'typically slower', 'multiplication', 'slower operations support', '21566325', 'removing division operations by passing through the inverse into the shader is another useful tip as division is typically slower than multiplication\n')
('division', 'generally longer', 'multiplication', 'faster slower integer', '2652547', 'it s just as fast as going the opposite direction if not faster given that division generally takes longer than multiplication\n')
('multiplication', 'faster', 'division', '', '37529283', 'the double_unit stuff is how random actually does it internally because multiplication is faster than division see floating point division vs floating point multiplication\n')
('division', 'much more', 'multiplication', 'expensive cost someone', '22522575', 'division is much more expensive than multiplication\n')
('division', 'more expensive', 'multiplication', 'constant compiler expensive', '12977120', 'usually division is a lot more expensive than multiplication but a smart compiler will often convert division by a compile-time constant to a multiplication anyway\n')
('division', 'much more complicated', 'multiplication', '', '1117688', 'the cpu operation for float division is much more complicated than multiplication\n')
('division', 'always more expensive', 'multiplication', 'expensive cost someone', '40280506', 'recently someone suggested to me that division is always more expensive than multiplication\n')
('multiplication', 'slower hardware', 'division', 'slower operations support', '436535', 'you always need to know the magic number here 0xaaaaaaab and the correct operations after the multiplication shifts and or additions in most cases and both is different depending on the number you want to divide by and both take too much cpu time to calculate them on the fly that would be slower than hardware division\n')
('division', 'worse', 'multiplication', '', '1988545', 'so division is always a bit worse than multiplication\n')
('division', 'more expensive', 'multiplication', 'expensive cost someone', '7147370', 'division is a lot more expensive than multiplication\n')
('multiplication', 'much faster', 'division', '', '41582594', 'i wonder why everybody missed that multiplication is much faster than division\n')
('multiplication', 'slower long', 'division', '', '6498884', 'if multiplication are o n 2 this is slower than long division for large numbers o n 2 vs o n 2 log n\n')
('division', 'slower', 'multiplication', 'faster slower integer', '655581', 'division algorithms are slower than multiplication algorithms in most cases\n')
('multiplication', 'faster', 'division', 'faster slower integer', '7720907', 'multiplication is usually significantly faster than division\n')
('multiplication', 'higher precedence', 'division', 'higher precedence i.e', '46323336', 'since multiplication is of higher precedence than division\n')
('division', 'more costly', 'multiplication', '', '39722216', 'the intuition is that division is a more costly affair than multiplication\n')
('multiplication', 'faster', 'division', 'faster slower integer', '22488897', 'multiplication is much faster than division\n')
('multiplication', 'faster', 'division', 'faster slower integer', '980962', 'on many processors integer multiplication is faster than integer division\n')
('multiplication', 'less expensive', 'division', 'expensive cost someone', '1735122', 'multiplication is less expensive than division so\n')
('division', 'much slower', 'multiplication', 'faster slower integer', '36077485', 'i found out that integer division is much slower than multiplication unfortunately\n')
('multiplication', 'more accurate', 'division', '', '35693173', 'in fact if the intent is to divide by 22 10 or some other real value that isn t necessarily exactly representable in binary floating-point then half the times the multiplication is more accurate than the division because it happens by coincidence that the relative error for 1 x is less than the relative error for x\n')
('multiplication', 'higher precedence', 'division', 'higher precedence i.e', '42255570', 'does multiplication has higher precedence over division or it is other way round\n')
('division', 'faster', 'multiplication', 'faster slower integer', '7730288', 'division is about 20 faster than multiplication\n')
('multiplication', 'faster integer', 'division', 'faster slower integer', '23965963', 'according to this author integer multiplication can be 40 times faster than integer division\n')
('multiplication', 'computationally cheaper', 'division', '', '39104562', 'i always thought a multiplication is computationally cheaper than a division\n')
('multiplication', 'much less', 'division', '', '8857056', 'iirc floating-point multiplication is much less expensive than division so this might be faster than both\n')
('division', 'slower', 'multiplication', '', '32022814', 'integer division is about an order of magnitude slower than multiplication on current cpus.\n')
('multiplication', 'faster', 'division', 'faster slower integer', '31618399', 'multiplication is usually faster than division\n')
('division', 'slower', 'multiplication', '', '4541290', 'according to stephen canon modern implementations favor taylor expansion over rational function approximation where division is much slower than multiplication\n')
('division', 'worse', 'multiplication', '', '14013678', 'but since division is pretty expensive i think that this is even worse than 2 multiplication\n')
('division', 'worse', 'multiplication', 'worse addition latency', '37236595', 'formally it means division cannot have a complexity worse than multiplication\n')
('multiplication', 'faster', 'division', '', '436535', 'in a 64 bit application this code will be a lot faster than in a 32 bit application in a 32 bit application multiplying two 64 bit numbers take 3 multiplication and 3 additions on 32 bit values - however it might be still faster than a division on a 32 bit machine\n')
('multiplication', 'higher precedence', 'division', 'higher precedence i.e', '34242369', 'multiplication has higher precedence than division\n')
('division', 'heavier', 'multiplication', 'modern cpus fast', '9939568', 'division may be heavier than multiplication but a commenter pointed out that reciprocals are just as fast as multiplication on modern cpus in which case this isn t correct for your case so if you do have 1 x appearing somewhere inside a loop and more than once you can assist by caching the result inside the loop and then using y\n')
('multiplication', 'faster', 'division', 'faster slower integer', '3851309', 'as hroptatyr mentioned the multiplication is quite fast and it s much faster than division\n')
('multiplication', 'faster', 'division', '', '22836475', 'floating point multiplication is faster than division so if speed is relevant\n')
('division', 'slower', 'multiplication', 'faster slower integer', '42840878', 'both works but division is generally slower than multiplication\n')
('division', 'more complicated', 'multiplication', '', '21546020', 'for division things are a little more complicated than multiplication see\n')
('division', 'longer', 'multiplication', '', '4125074', 'why does division take so much longer than multiplication\n')
('division', 'slower', 'multiplication', 'slower operations support', '7554853', 'on many machines particularly those without hardware support for division division is a slower operation than multiplication so this approach can yield a considerable speedup\n')
('division', 'slower float', 'multiplication', 'modern cpus fast', '31031223', 'on modern processors float division is a good order of magnitude slower than float multiplication when measured by reciprocal throughput\n')
('division', 'much more costly', 'multiplication', 'expensive cost someone', '26490416', 'knowing that a division is much more costly than a multiplication\n')
('division', 'costlier', 'multiplication', '', '12977241', 'well if it is a single calculation you wil hardly notice any difference but if you talk about millions of transaction then definitely division is costlier than multiplication\n')
('multiplication', 'cheaper', 'division', '', '1840568', 'if a remains the same and b is changing say if your code is in a loop and it s clear that a does not change between two iterations for instance because it s a const variable then the original version can execute faster because multiplication is cheaper than division assuming the compiler moves the computation of 1 .\n')
('multiplication', 'faster', 'division', 'faster slower integer', '17883577', 'multiplication is faster than division\n')
('division', 'slower', 'multiplication', 'integer gap relative', '4362064', 'the reason to do this is because even though there is an integer division instruction div idiv in the instruction set it s typically very slow several times slower than multiplication\n')
('multiplication', 'more', 'division', '', '19938457', 'if the numbers are huge dividing x by b might be better√¢ division is usually slower than multiplication but getting out of the huge-number domain early might help more than avoiding division\n')
('multiplication', 'faster', 'division', '', '1168616', 'this can be a major clock-cycle saver since multiplication is often much faster than a division operation\n')
('multiplication', 'faster', 'division', 'faster slower integer', '29745183', 'since you re resizing the window make sure to assign the w and h values not as numbers but as products or dynamic numbers multiplication is faster than division but you can also use division\n')
('multiplication', 'better', 'division', '', '19350996', 'if you are sure that a floating point multiplication is better than a floating point division then\n')
('division', 'slower', 'multiplication', 'integer gap relative', '27709697', 'hardware integer division is always slower than multiplication and the gap in the relative latencies of these instructions continues to widen\n')
('multiplication', 'faster', 'division', '', '17069961', 'here s one idea which uses one multiplication and one shift so it ll be faster than a division on most systems\n')
('multiplication', 'faster', 'division', 'faster slower integer', '899929', 'if the latter yes floating point multiplication is generally faster than division\n')
('multiplication', 'more', 'division', '', '35693173', 'in fact if the intent is to divide by 22 10 or some other real value that isn t necessarily exactly representable in binary floating-point then half the times the multiplication is more accurate than the division because it happens by coincidence that the relative error for 1 x is less than the relative error for x\n')
('multiplication', 'higher precedence', 'division', 'higher precedence i.e', '40372189', 'in some of the academic literature implied multiplication is interpreted as having higher precedence than division\n')
('multiplication', 'much simpler', 'division', '', '34925635', 'division though is an iterative process in logic the implementations you see on educational sites verilog vhdl are simply doing the same thing we did with log division in grade school but like multiplication it is much simpler than grade school you pull down bits from the numerator in the long division until the number being checked against the denominator is equal to or larger basically the number can either go in only zero times or one times into the next number under test unlike decimal where it can be between 0 to 9 times\n')
('division', 'slower', 'multiplication', '', '13106830', 'on some machines division is much slower than multiplication but on most machines j multiplies and j divides will run a lot faster than 2 n-2 multiplication and one division\n')
('division', 'longer', 'multiplication', '', '21155463', 'division takes a lot longer than multiplication - just do it with pen and paper to see\n')
('division', 'harder', 'multiplication', 'worse addition latency', '1117702', 'if you think back to grade school you ll recall that multiplication was harder than addition and division was harder than multiplication\n')
('division', 'more', 'multiplication', '', '39722216', 'the intuition is that division is a more costly affair than multiplication\n')
('division', 'more', 'multiplication', 'expensive one number', '22648785', 'however in general one could expect that a division is a more expensive operation than a multiplication\n')
('multiplication', 'higher presedence', 'division', 'higher precedence i.e', '21060979', 'i read that multiplication has has higher presedence than division\n')
('division', 'much more', 'multiplication', '', '1117688', 'the cpu operation for float division is much more complicated than multiplication\n')
('multiplication', 'faster', 'division', 'faster slower integer', '26656329', 'in usual programming practice one wouldn t bother and simply multiplying by the floating-point representation of 180 √Ø because multiplication is so much faster than division\n')
('multiplication', 'much less expensive', 'division', '', '8857056', 'iirc floating-point multiplication is much less expensive than division so this might be faster than both\n')
('division', 'more complicated', 'multiplication', '', '1117688', 'the cpu operation for float division is much more complicated than multiplication\n')
('division', 'slower', 'multiplication', '', '40589149', 'division is slower than multiplication is generally - and definitely using regular expression matching is going to be slower than multiplication is..\n')
('division', 'slower', 'multiplication', '', '11481493', 'division is generally on the order of 10x slower than multiplication on most processor families\n')
('multiplication', 'faster', 'division', 'faster slower integer', '1135698', 'integer multiplication is much faster than division\n')
('division', 'slower', 'multiplication', 'faster slower integer', '35506226', 'division is slower than multiplication due to some reasons\n')
('division', 'nothing more', 'multiplication', '', '43246339', 'easiest way is to simply recognize that division is nothing more than the multiplication of the dividend y and the inverse of the divisor x\n')
('division', 'slower', 'multiplication', 'faster slower integer', '14094072', 'is it possible that the division is six times slower than multiplication and\n')
('division', 'slower', 'multiplication', 'faster slower integer', '8776073', 'division is about 10 times slower than multiplication\n')
('multiplication', 'faster', 'division', 'faster slower integer', '8658217', 'for the division-to-multiplication case you are assuming that multiplication is faster than division\n')
('division', 'more expensive', 'multiplication', 'expensive cost someone', '23577263', 'the reason for doing so is to reduce hardware cost as division is more expensive than multiplication\n')
('multiplication', 'faster', 'division', '', '38977905', 'as a rule of thumb multiplication is faster than division on all cpus\n')
('multiplication', 'less expensive', 'division', '', '8857056', 'iirc floating-point multiplication is much less expensive than division so this might be faster than both\n')
('division', 'more time', 'multiplication', 'line time multiple', '21610045', 'i have heard division takes more time then multiplication but beyond that i could not determine whether writing this in one line or multiple assignment lines was more efficient\n')
('multiplication', 'faster', 'division', '', '24232771', 'i do not want to know when or if to use shift operators in my code i am interested in why multiplication is faster than shifting bits to the left whereas division is not\n')
('multiplication', 'faster', 'division', 'faster slower integer', '7935724', 'first of all multiplication is faster than division\n')
('multiplication', 'typically faster', 'division', 'faster slower integer', '13771806', 'i used multiplication for both operations because multiplication is typically faster than division\n')
('division', 'slower', 'multiplication', '', '10535605', 'i was always taught that division is slower than multiplication but i have no real proof of this√¢ has anyone got an opinion on this before i start benchmarking and running test\n')
('multiplication', 'faster', 'division', '', '22956226', 'but the research i ve done so far all points to multiplication being faster than division\n')
('multiplication', 'much faster', 'division', 'faster slower integer', '34966700', 'i picked c 1 1 8 for this example simply because it is exact in ieee-754 floating-point representation and typically multiplication is much faster than division\n')
('division', 'slower', 'multiplication', '', '28690939', 'your friend has a point a division actual division not just writing in c is slower than a multiplication\n')
('division', 'more', 'multiplication', 'expensive cost someone', '4109348', 'division is more expensive than multiplication\n')
('division', 'longer', 'multiplication', '', '18165141', 'why does division take so much longer than multiplication\n')
('multiplication', 'faster', 'division', '', '2652588', 'even simpler and probably even faster because multiplication is faster than division is dav s answer which is the most natural algorithm.\n')
('division', 'slower operation', 'multiplication', 'faster slower integer', '4125154', 'division is inherently a much slower operation than multiplication\n')
('division', 'slower', 'multiplication', 'modern cpus fast', '436535', 'can be fast or it can be awfully slow even if division is done entirely in hardware if it is done using a div instruction this instruction is about 3 to 4 times slower than a multiplication on modern cpus\n')
('multiplication', 'faster', 'division', 'faster slower integer', '899887', 'multiplication is faster than division so the second method is faster\n')
('division', 'more efficient', 'multiplication', '', '40229256', 'i am pretty sure it is not possible to compute polynomial division more efficient than multiplication and as you can see in the following table this algorithm is only 3 times slower than a single multiplication\n')
('division', 'slower', 'multiplication', '', '7460216', 'on most processors division is slower than multiplication for the same data types\n')
('multiplication', 'more convenient', 'division', '', '7554853', 'or is there something about multiplication that is more convenient than division in programming\n')
('division', 'more complex', 'multiplication', '', '23199400', 'division and square roots for huge number of bits are not much more complex than multiplication\n')
('division', 'slower', 'multiplication', 'faster slower integer', '9714461', 'and division may be slower than multiplication or may still be fast\n')
('division', 'more expensive', 'multiplication', 'expensive cost someone', '11481394', 'is division more expensive than multiplication in c++\n')
('multiplication', 'far easier', 'division', 'faster slower integer', '1917713', 'multiplication is far easier and faster for a cpu to do than division\n')
('division', 'much slower', 'multiplication', '', '4541290', 'according to stephen canon modern implementations favor taylor expansion over rational function approximation where division is much slower than multiplication\n')
('multiplication', 'better', 'division', '', '14416164', 'the multiplication should perform somewhat better than division\n')
('multiplication', 'less time', 'division', '', '18706614', 'multiplication takes less time then division so you can try this\n')
('multiplication', 'typically faster', 'division', 'faster slower integer', '21188088', 'the compiler or the jit is likely to convert the first case to the second anyway since multiplication is typically faster than division\n')
('division', 'usually more expensive', 'multiplication', 'expensive one number', '42193080', 'in the code we calculate 1.0 sum .. because a division usually is more expensive than a multiplication and thus can gain some efficiency with that\n')
('multiplication', 'vastly faster', 'division', 'faster slower integer', '5459132', 'in many processors integer multiplication is vastly faster than integer division\n')
('division', 'more expensive', 'multiplication', 'expensive one number', '26052472', 'division is one of a number of operations which as far as computational complexity theory is concerned are no more expensive than multiplication\n')
('division', 'more accurate', 'multiplication', '', '33018203', 'division by 5.0 is more accurate than multiplication by an approximate 0.2\n')
('multiplication', 'less', 'division', '', '18706614', 'multiplication takes less time then division so you can try this\n')
('multiplication', 'usually easier', 'division', '', '26400338', 'from what i read on the net multiplication is usually easier to compute than division\n')
('division', 'faster', 'multiplication', 'faster slower integer', '22956226', 'therefore i conclude that division is faster than multiplication\n')
('multiplication', 'faster', 'division', 'faster slower integer', '836856', 'also addition is faster than multiplication and multiplication is faster than division\n')
('division', 'busier place', 'multiplication', '', '506252', 'both operations are done down at the floating point unit fpu level and even in the world of integral alus the division circuit is a far busier place than a multiplication circuit\n')
('division', 'slower', 'multiplication', 'faster slower integer', '7459618', 'yes division is usually much slower than multiplication\n')
('multiplication', 'faster', 'division', '', '42074376', 'from the performance side float multiplication is faster than division but i don t think that in the gui code it can create significant difference\n')
('division', 'slower', 'multiplication', 'faster slower integer', '15745819', 'but i wonder why is division actually slower than multiplication\n')
('division', 'slower', 'multiplication', '', '19938457', 'if the numbers are huge dividing x by b might be better√¢ division is usually slower than multiplication but getting out of the huge-number domain early might help more than avoiding division\n')
('multiplication', 'more', 'division', 'higher precedence i.e', '35845566', 'thus python should interpret this like 12 2 i.e 6 since precedence of multiplication is more than division\n')
('multiplication', 'faster', 'division', 'faster slower integer', '226515', 'multiplication is faster division is more accurate\n')

usb	bluetooth	7
('usb', 'connection far more reliable', 'bluetooth', '', '9754274', 'on the other hand a usb connection is far more reliable better supported and of course has the inherent advantage of speed and since it is well supported does not suffer from all the pitfalls bluetooth connectivity does\n')
('bluetooth', 'slower', 'usb', '', '35572690', 'if your watch doesn t have usb support moto 360 and other induction only charging you need to enable bluetooth debugging slower than through usb though\n')
('usb', 'connection sometimes easier', 'bluetooth', 'commands useful slower', '13684470', 'it depends on your requirements but setting up a usb connection is sometimes easier than managing a bluetooth connection\n')
('usb', 'more difficult', 'bluetooth', '', '6268880', 'interfacing with usb is more difficult than it sounds it would be harder to build something which would interface with that and measure millivolts than with bluetooth because the pic processor you use for analog to digital sampling and usb client would in fact have to either act as usb host or usb otg on a phone which is far more complicated than being a usb peripheral\n')
('bluetooth', 'slower', 'usb', 'commands useful slower', '23259073', 'i had previously sent those commands via bluetooth but the connection fails too often to be useful and is slower than usb\n')
('usb', 'more', 'bluetooth', '', '6268880', 'interfacing with usb is more difficult than it sounds it would be harder to build something which would interface with that and measure millivolts than with bluetooth because the pic processor you use for analog to digital sampling and usb client would in fact have to either act as usb host or usb otg on a phone which is far more complicated than being a usb peripheral\n')
('usb', 'connection far more', 'bluetooth', '', '9754274', 'on the other hand a usb connection is far more reliable better supported and of course has the inherent advantage of speed and since it is well supported does not suffer from all the pitfalls bluetooth connectivity does\n')

jython	pypy	2
('jython', 'more unpredictable√¢', 'pypy', 'unpredictable√¢ recent benchmark', '29966745', 'jython is more unpredictable√¢ sometimes almost as fast as pypy sometimes much slower than cpython\n')
('jython', 'slower', 'pypy', 'unpredictable√¢ recent benchmark', '7793515', 'here is a recent benchmark of jython 2.5.2 running on jvm 7 where jython is slower than pypy but faster than cpython\n')

snappy	lzo	4
('snappy', 'better', 'lzo', '', '25209341', 'in my tests snappy performs better than lzo by the way\n')
('snappy', 'faster', 'lzo', 'decompression big files', '15693524', 'snappy also consistently decompresses 20 + faster than lzo which is a pretty big win if you want it for files you re reading a lot over hadoop\n')
('snappy', 'more popular', 'lzo', '', '27479257', 'these formats allow various data compression codecs note that snappy is now much more popular than lzo and can also provide other benefits such as fast serializable deserialization column pruning and bundled metadata\n')
('snappy', 'faster', 'lzo', 'decompression big files', '32381774', 'snappy is also significantly faster than lzo for decompression\n')

x86	64bit	20
('64bit', 'faster 32-bit', 'x86', 'x86_64 platform width', '6284598', '64bit amd and later intel machines run faster than 32-bit x86 machines because when amd designed the new instruction set they added more cpu registers and made sse math the default\n')
('x86', 'machines much stronger', '64bit', '', '12817803', 'pax s aslr implementation for 64bit x86 machines is much stronger than linux s default 64bit aslr implementation\n')
('64bit', 'more memory', 'x86', '', '35068309', 'however my tests have shown that on a 64bit system an anycpu prefer 32-bit application which i confirm runs 32-bit can allocate more memory than an x86 one\n')
('64bit', 'slower', 'x86', 'slower 32bits faster', '5607953', '64bit code is not actually faster it is usually a bit slower than x86 code\n')
('x86', 'furhter', '64bit', '', '13458435', 'in addition x86 is furhter complicated because there are generally separate documentation manuals for 32 bit and 64bit processors i m not familiar enough with arm to comment here\n')
('x86', 'better', '64bit', '', '22864892', 'however if you don t have specific reasons to use anycpu then you could still use x86 because in some cases the performances are better than 64bit code\n')
('64bit', 'platform much more', 'x86', 'x86_64 platform width', '45279374', 'the x86_64 64bit platform is much more than twice the width of the x86 32-bit\n')
('64bit', 'fiddlier', 'x86', '', '43206179', 'on arm it is not or rather 32-bit os on 64bit uefi is technically possible only would still require the operating system loader to be 64bit but even fiddlier than on x86\n')
('x86', 'easier debugging', '64bit', '', '3195878', 'x86 allows easier debugging - edit and continue is not supported when running in 64bit mode\n')
('x86', 'furhter complicated', '64bit', '', '13458435', 'in addition x86 is furhter complicated because there are generally separate documentation manuals for 32 bit and 64bit processors i m not familiar enough with arm to comment here\n')
('x86', 'considerably slower', '64bit', '', '95121', 'x86 is considerably slower a few clocks plus a clock or so per function argument while 64bit is much less because most function arguments are passed in registers instead of on the stack\n')
('64bit', 'more', 'x86', '', '531772', 'reason why double can t be declared volatile it s 64bit which makes it more than the word size on x86 which prevents it from being declared volatile in the cli if i remember correctly\n')
('x86', 'higher internal', '64bit', '', '30073542', 'the difference is in the first number which shows the rounding of the intermediate calculation so the problem happens because x86 has a higher internal precision 80 bit than the arm 64bit\n')
('x86', 'slower', '64bit', 'slower 32bits faster', '12665633', 'faster than on x86 32bits but slower than x64 64bit\n')
('x86', 'higher', '64bit', '', '30073542', 'the difference is in the first number which shows the rounding of the intermediate calculation so the problem happens because x86 has a higher internal precision 80 bit than the arm 64bit\n')
('x86', 'easier', '64bit', '', '3195878', 'x86 allows easier debugging - edit and continue is not supported when running in 64bit mode\n')
('x86', 'also more visually', '64bit', '', '12800316', 'to me the path without x86 is also more visually appealing and indicates that it s a modern application - adapted for 64bit operation where necessary\n')
('x86', 'wider', '64bit', '', '45887220', 'no intel or amd x86 manuals ever guarantee atomicity of anything wider than 64bit except for lock cmpxchg16b so this talk of sse vector loads stores being atomic on some cpus isn t something that you can reliably take advantage of or detect when it s supported\n')
('x86', 'also more', '64bit', '', '12800316', 'to me the path without x86 is also more visually appealing and indicates that it s a modern application - adapted for 64bit operation where necessary\n')
('x86', 'more', '64bit', '', '2799753', 'x86 doesn t support higher precision than 80 bits but if you really need more than 64bit for a fp algorithm most likely you should check your numerics instead of solving the problem with brute force\n')

nvidia	ati	10
('nvidia', 'more flexible', 'ati', '', '1962928', '4 is nvidia cuda technology is easier more flexible than ati brook+ language\n')
('ati', 'better', 'nvidia', '', '29051119', 'nvidia and ati architectures differ enough so that for certain tasks such as bitcoin mining ati is vastly better than nvidia\n')
('ati', 'more', 'nvidia', '', '9248755', 'ati seems to tell more than nvidia\n')
('ati', 'older laptop', 'nvidia', '', '10545022', 'i m having an issue where my glsl 130 code wont run properly on my somewhat modern ati 5850 hardware while the identical code runs perfectly fine on an older laptop with a nvidia card i have\n')
('nvidia', 'more picky', 'ati', '', '2438099', 'for example i ve noticed nvidia s glsl compiler is a little more picky than ati s and rejects some shader code that otherwise works fine\n')
('ati', 'vastly better', 'nvidia', '', '29051119', 'nvidia and ati architectures differ enough so that for certain tasks such as bitcoin mining ati is vastly better than nvidia\n')
('ati', 'better', 'nvidia', 'tools rendermonkey faster', '7099300', 'ati might be a better between nvidia and ati since it was reportedly faster in 2009 but i m not sure if those stats are still correct\n')
('nvidia', 'better', 'ati', '', '21699076', 'there is almost always some driver issue between them but in general nvidia is better for opengl has bugs in directx implementation and ati amd versions only is better for directx has bugs in opengl implementation\n')
('nvidia', 'less amd', 'ati', '', '6881575', 'another reason to choose nvidia is because that s what the hpc system builders have been building systems with since nvidia made a huge push for gpgpu computing where as it s less backed by amd ati\n')
('nvidia', 'way better tools', 'ati', 'tools rendermonkey faster', '5682205', 'the reason i ask is that it seems like nvidia has way better tools and ati seems to have cancelled rendermonkey\n')

timsort	quicksort	5
('timsort', 'better', 'quicksort', '', '34037078', 'i ve read that timsort is better than quicksort both in the best and the worst case although it uses a bit more memory\n')
('timsort', 'better', 'quicksort', '', '12455892', 'you can take a look at timsort which for non completely random data performs better than quicksort they have the same asymptotic complexity but timsort has lower constants\n')
('timsort', 'faster', 'quicksort', '', '7786914', 'if that is so you might find that timsort runs faster than quicksort\n')
('timsort', 'less comparison', 'quicksort', '', '21807889', 'if it is true then timsort will always take less comparison than quicksort because on real life data there is some pattern except data is truly random\n')
('timsort', 'better', 'quicksort', '', '23340978', 'java s array .sort is from about java 6 actually timsort the fastest general purpose #sort out there much better than quicksort in many situations\n')

distinct	union	6
('union', 'faster', 'distinct', 'slower de-dupping tables', '3634389', 'however the tables are huge and the union all i read its faster than distinct takes forever to execute even with just two tables let alone 6\n')
('union', 'faster', 'distinct', 'note rows outer', '22829159', 'a side note since you want all rows using union all is faster since it does not need to perform a distinct to eliminate duplicates\n')
('distinct', 'slower', 'union', 'slower de-dupping tables', '31622091', 'union distinct is slower than union all but you may need it for de-dupping.\n')
('distinct', 'faster', 'union', 'note rows outer', '3877976', 'i am currently using union all and a distinct in the outer query as this proved much faster than using union s for the uniqueness of data\n')
('union', 'faster', 'distinct', 'slower de-dupping tables', '43636244', 'union all is generally faster than using distinct or grouping\n')
('distinct', 'slower', 'union', 'slower de-dupping tables', '1804853', 'keep in mind that union will return a distinct list - duplicates will be removed but it will perform slower than using union all which will not remove duplicates\n')

inherited	properties	15
('properties', 'easier', 'inherited', '', '9216497', 'this should handle all cases of setting the properties makes them easier to implement in your inherited classes and cleans things up\n')
('properties', 'more', 'inherited', '', '5736117', 'if you need a globally accessible variable or properties that s more suited to a base class that your classes inherited from\n')
('inherited', 'more', 'properties', '', '45555967', 'inherited is more of an is-a relationship for example a usermodel is-a model thus all properties and methods of a model will be part of a usermodel\n')
('inherited', 'much more powerful', 'properties', '', '183126', 'now in .net for desktop controls you can use inherited which is much more powerful than the old tag properties anyway\n')
('inherited', 'better', 'properties', 'model individual base', '35690134', 'potentially you are trying to model something in inherited that is better suited for composition or your base class should be taking in an object instead of individual related properties if the properties aren t related then perhaps your base class is doing too much single responsibility principle\n')
('inherited', 'more', 'properties', '', '6071295', 'however i could not find it the documentation so it may inherited more than properties\n')
('inherited', 'better nesting', 'properties', 'model individual base', '1287890', 'less is a css extension that enables reuse and encapsulation of values color values for instance improves inherited allows a better nesting of related properties and operations also\n')
('properties', 'better choice', 'inherited', 'model individual base', '23018184', 'since the paddle object has properties that are shared by both player and enemy composition is a better choice than inherited\n')
('properties', 'also more', 'inherited', '', '16587246', 'using dedicated methods for getting and setting properties is also more clear in inherited\n')
('properties', 'higher', 'inherited', '', '34583059', 'i don t see any form properties in the code you posted so either the posted code has been modified or the properties is higher in the inherited tree simpleformcontroller\n')
('inherited', 'more', 'properties', '', '46751164', 'counter1 can be used with instanceof and inherited but is more verbose and doesn t have real private properties eg count properties is exposed\n')
('inherited', 'more verbose', 'properties', '', '46751164', 'counter1 can be used with instanceof and inherited but is more verbose and doesn t have real private properties eg count properties is exposed\n')
('inherited', 'much more', 'properties', '', '183126', 'now in .net for desktop controls you can use inherited which is much more powerful than the old tag properties anyway\n')
('properties', 'also more clear', 'inherited', '', '16587246', 'using dedicated methods for getting and setting properties is also more clear in inherited\n')
('inherited', 'easier', 'properties', '', '766479', 'multiple inherited makes it easier to compose classes from small mixin base classes that implement functionality and have properties to remember state\n')

pbkdf2	hash	5
('pbkdf2', 'slower standard', 'hash', '', '13395733', 'key derivation algorithms such as bcrypt and pbkdf2 aka rfc2898derivebytes are much slower than standard hash algorithms\n')
('pbkdf2', 'more', 'hash', '', '41233659', 'pbkdf2 is more secure than a simple hash or even a salt hash\n')
('pbkdf2', 'more secure', 'hash', '', '41233659', 'pbkdf2 is more secure than a simple hash or even a salt hash\n')
('pbkdf2', 'better plain', 'hash', '', '7029421', 'key strengthening techniques such as bcrypt or pbkdf2 are generally considered better than plain hash since cracking them requires more resources\n')
('pbkdf2', 'quicker', 'hash', '', '116767', 'a key-stretching algorithm like pbkdf2 applies a quicker hash like sha512 thousands of times typically causing the hash generation to take 1 5 of a second or so\n')

fadein	fadeout	3
('fadein', 'longer', 'fadeout', 'issues shorter animation', '2165425', 'more detail set the amount of time the animation will take for fadeout and use a delay for the fadein animation that is longer than the fadeout animation time\n')
('fadeout', 'shorter', 'fadein', 'issues shorter animation', '20388866', 'otherwise you will run into issues of trying to fadein and fadeout at the same time if your delay is shorter than your fadein\n')
('fadeout', 'slower', 'fadein', '', '32921128', 'i want smooth fadeout fadein animations instead setting visibility where fadeout is slower than fadein animation so i ve used enteractions and exitaction of datatrigger\n')

tcmalloc	glibc	4
('tcmalloc', 'more aggressive', 'glibc', '', '18098933', 'jemalloc and tcmalloc with some setting changes can be more aggressive than glibc to release memory to the os - but again it depends on the allocation patterns\n')
('glibc', 'less', 'tcmalloc', '', '15566083', 'then we found glibc also have same issue but increase rate is less than tcmalloc\n')
('tcmalloc', 'faster', 'glibc', 'available faster malloc', '15452794', 'tcmalloc is faster than the glibc 2.3 malloc available as a separate library called ptmalloc2 and other malloc s that i have tested\n')
('tcmalloc', 'faster', 'glibc', 'available faster malloc', '5742204', 'tcmalloc is faster than the glibc 2.3 malloc.\n')

mouseover	mouseout	3
('mouseover', 'animation 200ms longer', 'mouseout', '', '12685001', 'the mouseover animation is 200ms longer than the mouseout so if you mouseover and mouseout in less than 200ms total the animations run in parallel and the mouseover one finishes last leaving the color red\n')
('mouseover', 'longer', 'mouseout', '', '12685001', 'the mouseover animation is 200ms longer than the mouseout so if you mouseover and mouseout in less than 200ms total the animations run in parallel and the mouseover one finishes last leaving the color red\n')
('mouseout', 'better', 'mouseover', '', '26679935', 'note without the mouseout it works better but tooltip stays until next mouseover\n')

hash	salt	20
('hash', 'harder', 'salt', 'harder crypt brute', '19884074', 'i don t know how safe could it be and how difficult is for the hacker to determinate the technique i use the thing is that the result has the same length as the hash and is harder to determinate a salt so if for any reason in the history hacker uses a rainbow table and catches a probable result it will be the wrong\n')
('salt', 'trimmed', 'hash', 'data longer string', '15396796', 'example the salt field might only allow a 64 characters while the generated salt might be longer therefore when you save the salt it gets trimmed which ultimately changes the hash password\n')
('salt', 'probably faster', 'hash', 'data longer string', '4834231', 'you ll probably need to get data anyway so the unique salt is probably faster too because you won t need to calculate the hash over username\n')
('salt', 'more protection', 'hash', '', '9220557', 'however using a salt offers more protection against rainbow tables precalculated hash tables so they re still worth using\n')
('salt', 'passwords more', 'hash', 'situation credentials hands', '4269273', 'i get the impression that most people think that hashing salt passwords is the more secure way of handling passwords but i can t figure out a way to comply with current company operations when using hash passwords\n')
('salt', 'field better', 'hash', '', '15540208', 'restructuring of the database to just add an salt field is better option or the only one really if your going to do it properly but you could use your currant hash field to store the salt as other person posted\n')
('salt', 'sha-512 higher', 'hash', '', '12064628', 'salt sha-512 offers a higher level of security and implementing a scheme where you stretch the hash is even better do some high number of iterations of sha-512 - starting with the password+salt of course\n')
('salt', 'more', 'hash', '', '9220557', 'however using a salt offers more protection against rainbow tables precalculated hash tables so they re still worth using\n')
('salt', 'field better option', 'hash', '', '15540208', 'restructuring of the database to just add an salt field is better option or the only one really if your going to do it properly but you could use your currant hash field to store the salt as other person posted\n')
('salt', 'better', 'hash', '', '1995717', 'the more randomness and more characters your salt has the better for the hash but anything that s several characters long and random works\n')
('hash', 'much larger', 'salt', 'data longer string', '28201502', 'likely not as cheap as xor against n values but seems like there s possibility for better quality results at a minimal extra cost especially if the data being hash is much larger than the salt value\n')
('salt', 'not more secure', 'hash', 'harder crypt brute', '8646455', 'so when i see that the salt is stored in the hash password and that you use that hash password as salt i think crypt + salt is not more secure against a brute force on output hackers who managed to steal hash passwords\n')
('salt', 'sha-512 higher level', 'hash', '', '12064628', 'salt sha-512 offers a higher level of security and implementing a scheme where you stretch the hash is even better do some high number of iterations of sha-512 - starting with the password+salt of course\n')
('hash', 'harder especially', 'salt', 'harder crypt brute', '7003476', 'most attacks involve generating hash for common passwords so for reasonably complicated passwords it becomes harder especially with salt some people use usernames as salt others use randomly generated numbers\n')
('salt', 'nothing more', 'hash', 'data longer string', '12807370', 'this salt is nothing more than a random arbitrary string that you concatenate to the passwords and it will make your hash password unique\n')
('hash', 'longer', 'salt', 'data longer string', '482268', 'you can safely store the salt in the db because working out a string from its hash is just as hard when you know some of the string as it is when you know none of it provided the password itself is longer than the salt and long enough and strong enough to take a long time to crack by brute force at least 6 chars with at least one case change and a number or non-alphanumeric i d say\n')
('salt', 'harder', 'hash', '', '5641994', 'the lack of salt is harder to expoit here than with password hash since the hash is not directly known\n')
('salt', 'more', 'hash', 'situation credentials hands', '31641520', 'in this situation storing password hash and the salt is more secure than storing the credentials encrypted or not because an attacker would have no way of getting the password back even if he manages to get his hands on both the hash and the salt\n')
('salt', 'also more', 'hash', '', '4732381', 'prepending a salt is also more powerful than directly setting the seed values because in addition to changing the internal state of the hash if the salt is not a multiple of the digest block size then it can also perturb the alignment with which the input is fed into the hash function\n')
('salt', 'also more powerful', 'hash', '', '4732381', 'prepending a salt is also more powerful than directly setting the seed values because in addition to changing the internal state of the hash if the salt is not a multiple of the digest block size then it can also perturb the alignment with which the input is fed into the hash function\n')

ilist	ienumerable	18
('ienumerable', 'less', 'ilist', 'functions specific', '17761596', 'ienumerable is less specific than ilist\n')
('ienumerable', 'more', 'ilist', '', '8955601', 'ienumerable is more abstract and is generally preferred to list or ilist if possible\n')
('ienumerable', 'lighter rather', 'ilist', '', '3522746', 'yes i understand that ienumerable is much more lighter rather than ilist but anyway there is a lot situations where we need to have ilist instead of ienumerable and in this approach we need to cast ienumerable to ilist isn t it\n')
('ilist', 'more specialized', 'ienumerable', '', '13779387', 'the reason why this doesn t work specifically is because ilist is more specialized than ienumerable\n')
('ienumerable', 'more abstract', 'ilist', '', '8955601', 'ienumerable is more abstract and is generally preferred to list or ilist if possible\n')
('ienumerable', 'more abstract', 'ilist', '', '35478849', 'another suggestion change you to because you can keep an extension method for more collections because the ienumerable is more abstract than ilist\n')
('ienumerable', 'less specific', 'ilist', 'functions specific', '5213886', 'an ienumerable is less specific than an ilist\n')
('ilist', 'more', 'ienumerable', '', '13779387', 'the reason why this doesn t work specifically is because ilist is more specialized than ienumerable\n')
('ilist', 'more', 'ienumerable', '', '2000456', 'thus ilist is more than ienumerable and you won t be able to get away with it\n')
('ienumerable', 'more', 'ilist', '', '35478849', 'another suggestion change you to because you can keep an extension method for more collections because the ienumerable is more abstract than ilist\n')
('ienumerable', 'less specific', 'ilist', 'functions specific', '3180672', 'ienumerable is less specific than an ilist that is ilist has functions that ienumerable does not\n')
('ilist', 'interface more functionality', 'ienumerable', '', '14821298', 'you need to use tolist to convert it from ienumerable because the ilist interface supports more functionality than the ienumerable interface\n')
('ienumerable', 'much more', 'ilist', '', '3522746', 'yes i understand that ienumerable is much more lighter rather than ilist but anyway there is a lot situations where we need to have ilist instead of ienumerable and in this approach we need to cast ienumerable to ilist isn t it\n')
('ienumerable', 'less', 'ilist', '', '3228735', 'ienumerable is less specific than ilist ilist implements ienumerable so unless you want something specific from ilist such as .count as you suggest or perhaps add delete etc i d use ienumerable\n')
('ilist', 'interface more', 'ienumerable', '', '14821298', 'you need to use tolist to convert it from ienumerable because the ilist interface supports more functionality than the ienumerable interface\n')
('ienumerable', 'much more lighter', 'ilist', '', '3522746', 'yes i understand that ienumerable is much more lighter rather than ilist but anyway there is a lot situations where we need to have ilist instead of ienumerable and in this approach we need to cast ienumerable to ilist isn t it\n')
('ilist', 'stronger', 'ienumerable', '', '16934777', 'ilist is stronger in that it makes more guarantees than ienumerable\n')
('ienumerable', 'less specific', 'ilist', '', '3228735', 'ienumerable is less specific than ilist ilist implements ienumerable so unless you want something specific from ilist such as .count as you suggest or perhaps add delete etc i d use ienumerable\n')

moles	typemock	3
('moles', 'more often', 'typemock', '', '3035730', 'moles is more often compared contrasted to typemock in that it offers a set of facilities outside of moq and or rhinomocks sweet spot\n')
('moles', 'more', 'typemock', '', '3035730', 'moles is more often compared contrasted to typemock in that it offers a set of facilities outside of moq and or rhinomocks sweet spot\n')
('typemock', 'faster ms', 'moles', '', '3869263', 'i have no concrete figures on that but from my own experience i d estimate that instrumented tests are around 100-400 slower typemock seeming to be faster than ms moles\n')

self	super	3
('super', '.__str__ better', 'self', '', '42014475', 'also as stated by martijn pieters using super super .__str__ is better than doing it the way i did deck.__str__ self\n')
('self', 'x better then', 'super', '', '27859143', 'i think a.__init__ self x is better then super .__init__ x because it supports multiple inheritance and i didn t find a way to do it with super\n')
('self', 'x better', 'super', '', '27859143', 'i think a.__init__ self x is better then super .__init__ x because it supports multiple inheritance and i didn t find a way to do it with super\n')

setter	getter	15
('setter', 'more efficient', 'getter', '', '24655947', 'if we put our filter in between these calls either in getter or setter setter is more efficient as it is called only when filters change we modify original filtered list with our filter and return it back through the getter\n')
('setter', 'more', 'getter', '', '24655947', 'if we put our filter in between these calls either in getter or setter setter is more efficient as it is called only when filters change we modify original filtered list with our filter and return it back through the getter\n')
('setter', 'less', 'getter', '', '1063920', 'but then your setter is less restricted than your getter which is odd.\n')
('setter', 'higher', 'getter', '', '6197415', 'the setter complexity can be higher than the getter and thus validate a unit-test\n')
('getter', 'more', 'setter', '', '28294911', 'if the calculation is expensive or the getter is executed more often than the setter for the changeable properties playername by far it can be an optimization to change the property inside the class into a read-write property and set the value every time the changeable properties are changed\n')
('setter', 'more', 'getter', '', '24656056', 'if we put our filter in between these calls either in getter or setter setter is more efficient as it is called only when filters change we modify original filtered list with our filter and return it back through the getter\n')
('getter', 'more', 'setter', '', '14844343', 'if your getter takes more than one argument it s not called a setter anymore\n')
('getter', 'more', 'setter', '', '33041507', 'note that the test bean has a very special design as the getter returns a more general type number than the setter requests integer\n')
('getter', 'more often', 'setter', '', '28294911', 'if the calculation is expensive or the getter is executed more often than the setter for the changeable properties playername by far it can be an optimization to change the property inside the class into a read-write property and set the value every time the changeable properties are changed\n')
('setter', 'less restricted', 'getter', '', '1063920', 'but then your setter is less restricted than your getter which is odd.\n')
('setter', 'more efficient', 'getter', '', '24656056', 'if we put our filter in between these calls either in getter or setter setter is more efficient as it is called only when filters change we modify original filtered list with our filter and return it back through the getter\n')
('setter', 'lower', 'getter', '', '35545423', 'you can override the setter s level to be lower than the getter s level with either private set or internal set\n')
('setter', 'far more', 'getter', '', '9991138', 'the code in the setter is far more interesting than the getter should it not take precedence and be defined first\n')
('setter', 'far more interesting', 'getter', '', '9991138', 'the code in the setter is far more interesting than the getter should it not take precedence and be defined first\n')
('getter', 'more general', 'setter', '', '33041507', 'note that the test bean has a very special design as the getter returns a more general type number than the setter requests integer\n')

atom-editor	sublimetext	10
('atom-editor', 'better', 'sublimetext', '', '22286530', 'atom-editor has better github support out of the box but sublimetext has a several git packages\n')
('atom-editor', 'better github', 'sublimetext', '', '22286530', 'atom-editor has better github support out of the box but sublimetext has a several git packages\n')
('atom-editor', 'more memory', 'sublimetext', '', '45607671', 'why atom-editor uses more memory and takes more time to start as compare to sublimetext editor\n')
('sublimetext', 'significantly better', 'atom-editor', '', '22471391', 'though similar in ui and ux sublimetext performs significantly better than atom-editor especially in heavy lifting like working with large files complex snr or plugins that do heavy processing on files buffers\n')
('atom-editor', 'more', 'sublimetext', '', '45607671', 'why atom-editor uses more memory and takes more time to start as compare to sublimetext editor\n')
('sublimetext', 'better', 'atom-editor', '', '22471391', 'though similar in ui and ux sublimetext performs significantly better than atom-editor especially in heavy lifting like working with large files complex snr or plugins that do heavy processing on files buffers\n')
('atom-editor', 'more recent', 'sublimetext', '', '32173336', 'plus copy as rtf for atom-editor has more recent updates than sublimehightlight for sublimetext\n')
('sublimetext', 'better', 'atom-editor', '', '25491307', 'sublimetext has better performance than atom-editor\n')
('sublimetext', 'better performance', 'atom-editor', '', '25491307', 'sublimetext has better performance than atom-editor\n')
('atom-editor', 'more', 'sublimetext', '', '32173336', 'plus copy as rtf for atom-editor has more recent updates than sublimehightlight for sublimetext\n')

ubuntu	debian	15
('ubuntu', 'far less', 'debian', '', '5009964', 'ubuntu is far less conservative than debian so you will get closer to the bleeding edge\n')
('ubuntu', 'less conservative', 'debian', '', '5009964', 'ubuntu is far less conservative than debian so you will get closer to the bleeding edge\n')
('ubuntu', 'more resources', 'debian', '', '1316580', 'ubuntu heavily relies on python scripting and generally consumes more resources than debian\n')
('ubuntu', 'far less conservative', 'debian', '', '5009964', 'ubuntu is far less conservative than debian so you will get closer to the bleeding edge\n')
('ubuntu', 'newer', 'debian', '', '35398351', 'this is because ubuntu 15.10 uses a newer version of libc and libstdc++ which is not available on debian 8\n')
('ubuntu', 'nicer frontend', 'debian', '', '7764101', 'ubuntu has nicer frontend and could be more suitable for windows emigrants while debian is more for backend guys\n')
('debian', 'more recent', 'ubuntu', 'smaller recent wheezy', '20931360', 'i m in debian wheezy which is much more recent than ubuntu 10.04\n')
('ubuntu', 'smaller', 'debian', 'smaller recent wheezy', '29638668', 'i believe ubuntu is smaller debian wheezy smaller still or even alpine for tiny start point\n')
('ubuntu', 'nicer', 'debian', '', '7764101', 'ubuntu has nicer frontend and could be more suitable for windows emigrants while debian is more for backend guys\n')
('debian', 'more stable', 'ubuntu', '', '4333375', 'as for debian being more stable than ubuntu for using as server it can be true in very rare occasions where the package is very obscure\n')
('debian', 'image smaller', 'ubuntu', '', '27249910', 'the main advantage of the debian image is the smaller size √¢ it clocks in at around 85.1 mb compared to around 200 mb for ubuntu\n')
('ubuntu', 'newer version', 'debian', '', '35398351', 'this is because ubuntu 15.10 uses a newer version of libc and libstdc++ which is not available on debian 8\n')
('debian', 'image smaller size', 'ubuntu', '', '27249910', 'the main advantage of the debian image is the smaller size √¢ it clocks in at around 85.1 mb compared to around 200 mb for ubuntu\n')
('ubuntu', 'kernels harder', 'debian', '', '29893268', 'recompiling ubuntu kernels is harder -- it will require working with debian build tools\n')
('ubuntu', 'newer', 'debian', '', '8931660', 'since ubuntu 10.10 is newer than debian squeeze if you can do it on squeeze you can certainly do it on ubuntu\n')

illegalargumentexception	nullpointerexception	8
('illegalargumentexception', 'better', 'nullpointerexception', '', '7391541', 'since it s an exported method clients should get an exception on their abstraction level so illegalargumentexception is better than nullpointerexception\n')
('illegalargumentexception', 'less idiomatic', 'nullpointerexception', '', '44913918', 'disclaimer all this would be needed just to throw an illegalargumentexception which is less idiomatic than a nullpointerexception\n')
('illegalargumentexception', 'more specific', 'nullpointerexception', '', '22074', 'in my mind illegalargumentexception seems more specific than using a nullpointerexception since it s telling me that the problem was with an argument i passed to the method and not with a value that may have been generated while performing the method\n')
('nullpointerexception', 'longer', 'illegalargumentexception', '', '199290', 'decoding nullpointerexception is going to take a bit longer than illegalargumentexception filepath must be supplied or whatever\n')
('illegalargumentexception', 'more', 'nullpointerexception', '', '22074', 'in my mind illegalargumentexception seems more specific than using a nullpointerexception since it s telling me that the problem was with an argument i passed to the method and not with a value that may have been generated while performing the method\n')
('illegalargumentexception', 'less', 'nullpointerexception', '', '44913918', 'disclaimer all this would be needed just to throw an illegalargumentexception which is less idiomatic than a nullpointerexception\n')
('illegalargumentexception', 'more sense', 'nullpointerexception', '', '46185968', 'also throwing illegalargumentexception makes more sense instead of nullpointerexception when string has blank empty or null values\n')
('illegalargumentexception', 'more', 'nullpointerexception', '', '46185968', 'also throwing illegalargumentexception makes more sense instead of nullpointerexception when string has blank empty or null values\n')

glassfish	jboss	17
('jboss', 'implementation smaller', 'glassfish', '', '13494857', 'as for me jboss implementation is smaller than the whole glassfish so i m using\n')
('jboss', 'more popular', 'glassfish', '', '9943106', 'but in my location jboss is more popular than glassfish so i have a idea\n')
('glassfish', 'more', 'jboss', '', '12638140', 'well glassfish is more right than jboss and weblogic business-bean-classes should all have their own ejb-local-interface\n')
('jboss', 'more', 'glassfish', '', '9943106', 'but in my location jboss is more popular than glassfish so i have a idea\n')
('jboss', 'better product', 'glassfish', '', '14709269', 'even if jboss is the better product in my next project i will shift to glassfish because of the better documentation\n')
('glassfish', 'however better', 'jboss', '', '39194452', 'glassfish however performs better than jboss and has a very slick gui-based admin console whereas jboss can only be administrated with a command line\n')
('jboss', 'much more', 'glassfish', 'j2ee server afaik', '3025706', 'afaik jboss is much more adopted in production deployments than glassfish but this doesn t necessarily mean it s better\n')
('glassfish', 'better j2ee', 'jboss', 'j2ee server afaik', '283405', 'i think glassfish is a better j2ee app server to start with than jboss\n')
('glassfish', 'more', 'jboss', '', '9943106', 'in my opinion glassfish is more user friendly than jboss so i decided use glassfish for my project\n')
('jboss', 'larger community', 'glassfish', '', '39194452', 'jboss has a larger community than glassfish\n')
('glassfish', 'more right', 'jboss', '', '12638140', 'well glassfish is more right than jboss and weblogic business-bean-classes should all have their own ejb-local-interface\n')
('glassfish', 'more user', 'jboss', '', '9943106', 'in my opinion glassfish is more user friendly than jboss so i decided use glassfish for my project\n')
('glassfish', 'more', 'jboss', '', '14949370', 'glassfish v3 vs jboss 7.0 in using in production environment i know more people use jboss the application server but glassfish has more features and stability over jboss\n')
('jboss', 'larger', 'glassfish', '', '39194452', 'jboss has a larger community than glassfish\n')
('glassfish', 'more features', 'jboss', '', '14949370', 'glassfish v3 vs jboss 7.0 in using in production environment i know more people use jboss the application server but glassfish has more features and stability over jboss\n')
('glassfish', 'better', 'jboss', '', '39194452', 'glassfish however performs better than jboss and has a very slick gui-based admin console whereas jboss can only be administrated with a command line\n')
('jboss', 'better', 'glassfish', '', '14709269', 'even if jboss is the better product in my next project i will shift to glassfish because of the better documentation\n')

d3.js	protovis	5
('d3.js', 'faster', 'protovis', '', '12335448', 'for semantic zooming you ll notice that d3.js is significantly faster than protovis\n')
('d3.js', 'more animation', 'protovis', '', '6218120', 'finally i haven t done much with animation but i think you re entirely correct - d3.js provides more animation support than protovis especially in terms of animated transitions\n')
('d3.js', 'significantly faster', 'protovis', '', '12335448', 'for semantic zooming you ll notice that d3.js is significantly faster than protovis\n')
('d3.js', 'better option', 'protovis', '', '3313282', 'the team behind protovis has since created d3.js so this is likely a better option than protovis\n')
('d3.js', 'more', 'protovis', '', '6218120', 'finally i haven t done much with animation but i think you re entirely correct - d3.js provides more animation support than protovis especially in terms of animated transitions\n')

kohana	codeigniter	4
('kohana', 'less bloated', 'codeigniter', '', '1710652', 'but if codeigniter has a bit too much bloat for you maybe you can try kohana which is a bit less bloated than codeigniter started as a fork\n')
('kohana', 'more flexible', 'codeigniter', '', '6053870', 'overall kohana is more flexible than codeigniter and a great base to build a web application and api on\n')
('kohana', 'better', 'codeigniter', '', '9753028', 'i ve came to kohana from codeigniter which was a little bit bigger documentation and easier to understood but as far as i found out many programmers say that kohana are alot better than codeigniter\n')
('kohana', 'more', 'codeigniter', '', '6053870', 'overall kohana is more flexible than codeigniter and a great base to build a web application and api on\n')

strdup	malloc	5
('strdup', 'simpler', 'malloc', '', '29989607', 'you can use either to create a new memory block which is separate from the original but naturally strdup is simpler since it doesn t require a separate malloc strlen call\n')
('strdup', 'cleaner', 'malloc', '', '40423473', 'or indeed if your system has strdup or you re willing to write an implementation then strdup is much cleaner than malloc + strcpy\n')
('strdup', 'more', 'malloc', '', '28931396', 'you should know that strdup allocates more memory and returns its pointer which you then overwrite the original pointer returned by malloc so it will be impossible to free that memory since you no longer have the pointers\n')
('strdup', 'more memory', 'malloc', '', '28931396', 'you should know that strdup allocates more memory and returns its pointer which you then overwrite the original pointer returned by malloc so it will be impossible to free that memory since you no longer have the pointers\n')
('strdup', 'much cleaner', 'malloc', '', '40423473', 'or indeed if your system has strdup or you re willing to write an implementation then strdup is much cleaner than malloc + strcpy\n')

nginx	apache	101
('nginx', 'faster', 'apache', 'faster static assets', '37012428', 'nginx is typically faster than apache but with a low request server it hardly matters\n')
('nginx', 'more straight forward', 'apache', '', '26239764', 'the switchover to nginx really had little to do with the rewrite rule and more to do with getting away from apache 2.2 default upstream version for centos however with nginx rewrite rules are more straight forward than apache s imo\n')
('apache', 'better solution just', 'nginx', 'web lighter proxy', '8839295', 'i ve heard it suggested that i use nginx as a reverse proxy in front of apache and node.js is that a better solution than just nginx\n')
('nginx', 'still faster', 'apache', 'faster static assets', '23170094', 'nginx is still faster and i might choose it but apache isn t asleep\n')
('nginx', 'faster', 'apache', 'faster static assets', '15748792', 'and finally from my experience nginx is faster than apache\n')
('nginx', 'faster', 'apache', 'faster static assets', '25406562', 'nginx is faster than apache and the configuration is easier\n')
('nginx', 'faster', 'apache', 'static files file', '11462284', 'there seems to be a consensus that nginx serves static content faster than apache\n')
('nginx', 'easier', 'apache', '', '40213903', 'nginx is actually quite a lot easier than apache in my opinion\n')
('nginx', 'better', 'apache', 'long polling request', '45025292', 'i think you would like lemp e stands for the nginx and for a lot small projects it would be better than apache\n')
('apache', 'slower', 'nginx', 'faster static assets', '45766594', 'i would really like not to run both apache and nginx i did switch everything to apache yet found it loaded my proxies slower than nginx\n')
('nginx', 'more clean', 'apache', '', '10318491', 'the syntax for nginx configuration is different but more clean than apache\n')
('nginx', 'more efficient', 'apache', 'setting resources performant', '9745974', 'nginx or other server is not much more efficient than apache\n')
('apache', 'more', 'nginx', '', '12509562', 'apache is more friendly configuration wise htaccess htpasswd rewrite rules etc nginx is fast in regard to static assets\n')
('apache', 'mod_php much more stable', 'nginx', '', '19961943', 'apache mod_php is much more stable and cleaner while nginx will often deliver http bad gateway error coded in 502\n')
('nginx', 'better', 'apache', 'web lighter proxy', '35898440', 'i have no idea what i m doing so i dove nose-first into nginx -- which i had never used before -- because someone told me it s better than apache at dealing with lots of small tasks and requests -- not that i would know how to turn apache into a proxy mind you\n')
('nginx', 'less resources', 'apache', 'setting resources performant', '25819090', 'also when your setting up the server i would say start with nginx it s uses less resources than apache\n')
('nginx', 'more flexible', 'apache', '', '2912577', 'also nginx s configuration is much more flexible than apache and by having it on the front end it gives you a lot of flexibility\n')
('nginx', 'better', 'apache', 'faster static assets', '44707193', 'how can nginx performs better than apache\n')
('apache', 'significantly more complex', 'nginx', '', '24338964', 'however my experience is that configuring it in apache is significantly more complex than configuring it in nginx and even with worker it still is not quite as efficient with nginx\n')
('apache', 'mod_php much more', 'nginx', '', '19961943', 'apache mod_php is much more stable and cleaner while nginx will often deliver http bad gateway error coded in 502\n')
('nginx', 'better', 'apache', 'faster static assets', '24360855', 'i want to move to nginx since it s better than apache\n')
('nginx', 'faster', 'apache', '', '19719946', 'hi everyone i need help with this i ve already set up nginx + php and it works great faster than apache my problem is how to setup a multiple projects in one ip\n')
('nginx', 'faster', 'apache', 'static files file', '3952446', 'for static file serving i found nginx performance lot faster than apache\n')
('apache', 'more popular', 'nginx', 'faster static assets', '4113570', 'apache is more popular and has more features nginx is smaller and faster and has less features\n')
('nginx', 'lower', 'apache', '', '7463387', 'nginx uses an event based non blocking single thread and the memory usage is relatively much lower than apache\n')
('nginx', 'faster', 'apache', 'faster static assets', '19810803', 'nginx is faster than apache handles slow clients better and is generally easier to use\n')
('apache', 'significantly more', 'nginx', '', '24338964', 'however my experience is that configuring it in apache is significantly more complex than configuring it in nginx and even with worker it still is not quite as efficient with nginx\n')
('nginx', 'better', 'apache', 'long polling request', '2014241', 'nginx also happens to be better than apache at writing logfiles interestingly\n')
('nginx', 'faster', 'apache', 'static files file', '22224559', 'i will add that i ve often heard that nginx is faster than apache for serving static files to the point that it s sometimes worth using nginx for static files and reverse proxying to apache for dynamic content\n')
('nginx', 'more complicated', 'apache', 'setting resources performant', '28805780', 'i am not going into how to do rewrites on nginx because it is much more complicated than apache\n')
('nginx', 'lower', 'apache', 'static files file', '21815739', 'i know nginx has lower memory footprint and little faster than apache in serving static files\n')
('apache', 'more', 'nginx', '', '7392125', 'apache is more flexable then nginx but it comes with a high price in performance\n')
('nginx', 'better', 'apache', 'long polling request', '44707193', 'i aways heart that nginx performs better than apache server\n')
('nginx', 'more traffic', 'apache', '', '7974735', 'apache s design is thread per client while nginx uses the reactor pattern meaning - nginx can handle much more traffic than apache as a web server about 50 times the number of requests\n')
('nginx', 'better', 'apache', 'long polling request', '6021813', 'why nginx might be better than apache when one is long polling and why long polling is better than periodically polling a server\n')
('nginx', 'less memory', 'apache', '', '1271575', 'nginx uses less memory than apache given the size of your setup i would definitely recommend that\n')
('apache', 'easier', 'nginx', 'faster static assets', '38941986', 'for me apache is easier to use but i prefer nginx as it is much faster\n')
('nginx', 'less', 'apache', '', '1271575', 'nginx uses less memory than apache given the size of your setup i would definitely recommend that\n')
('nginx', 'faster', 'apache', 'web lighter proxy', '29403998', 'is nginx + php-fpm is suppose to do server operations much faster than apache + mod-php due to efficient usage of memory and other resources\n')
('nginx', 'faster', 'apache', 'faster static assets', '8268449', 'very fast static assets nginx is faster than apache at serving static assets css js images ... and uses very little memory to do so\n')
('nginx', 'better', 'apache', 'long polling request', '1469813', 'nginx with its own mod_wsgi seems to perform even better than apache but hey you didn t ask about that\n')
('nginx', 'better', 'apache', 'long polling request', '12379123', 'the remote server is set up to allow very few maximum concurrent clients generally nginx handles many concurrent clients better than apache since it doesn t need to fork a new process for every request so if it becomes an issue you might want to look into switching web servers\n')
('nginx', 'quicker', 'apache', '', '35117899', 'nginx is quicker though honestly you ll struggle to see the difference except for very high volume sites and has quickly become the web server of choice for a lot of people if you don t have any specific need for apache for your code\n')
('nginx', 'less resource-hungry', 'apache', '', '29190250', 'i m new to nginx and want to try it out since it apparently is much faster and less resource-hungry than apache but i can t see why this would be such a hard thing to achieve\n')
('nginx', 'lighter', 'apache', '', '10576127', 'nginx is very fast much lighter than apache\n')
('nginx', 'better', 'apache', 'long polling request', '20529263', 'nginx is better at handling requests since it does not spawn a new process for every request unlike apache\n')
('nginx', 'better', 'apache', 'long polling request', '7181330', 'i recommend you to use nginx as an reverse proxy since the configuration is easier and the performance is much better than apache\n')
('apache', 'more friendly', 'nginx', '', '12509562', 'apache is more friendly configuration wise htaccess htpasswd rewrite rules etc nginx is fast in regard to static assets\n')
('nginx', 'usually better performance', 'apache', 'web lighter proxy', '21035581', 'note that in any case for increased security and fast static file css js delivery you might want to add a reverse proxy layer nginx usually provides better performance but apache works as well before the nodejs python server\n')
('nginx', 'simpler', 'apache', '', '41745892', 'i ve been attempting to upgrade to php 7.1 using phpbrew and elected to install it with nginx as i read everywhere that it was simpler than apache not that simple in my humble opinion\n')
('nginx', 'faster', 'apache', 'faster static assets', '32964547', 'for example nginx is considered faster than apache and a nodejs application is considered faster than a php application\n')
('nginx', 'faster', 'apache', 'web lighter proxy', '35636877', 'i have configured tomcat with apache web server in past and never slowness problem before and practically speaking nginx is said to much lighter and faster than apache web server\n')
('nginx', 'sometimes better', 'apache', '', '41928658', 'id love to know how to solve this since using nginx sometimes is a better option than apache and having this issue with fuelphp framework and not being able to use this two great tools together is awful\n')
('nginx', 'easier', 'apache', 'long polling request', '35685489', 'nginx can be configured to only respond to requests matching a predefined pattern far easier than with apache\n')
('nginx', 'faster', 'apache', 'faster static assets', '11217047', 'nginx works great by itself and will likely be much faster than apache\n')
('nginx', 'much more', 'apache', 'static files file', '14091869', 'serving static files with nginx is much more efficient than with apache\n')
('nginx', 'better', 'apache', 'long polling request', '9287841', 'nginx is better suited than apache as it is light and single threaded vs apache thread per request in most normal setups\n')
('apache', 'more busy', 'nginx', '', '25123234', 'it seems your apache is more busy than your nginx\n')
('apache', 'more flexable', 'nginx', '', '7392125', 'apache is more flexable then nginx but it comes with a high price in performance\n')
('apache', 'faster', 'nginx', 'faster static assets', '8103931', 'paradoxally it does not mean that apache is faster than nginx it just means that on 1 2 3 .\n')
('nginx', 'less memory', 'apache', '', '5244789', 'also nginx uses a lot less memory than apache\n')
('nginx', 'much more efficient', 'apache', 'setting resources performant', '25898583', 'next you ll find that the threading model of nginx is much more efficient than apache s for what you re doing\n')
('nginx', 'faster', 'apache', 'faster static assets', '43186862', 'i have recently read that nginx is faster than apache\n')
('nginx', 'better', 'apache', 'web lighter proxy', '9550924', 'although this thread is more than a year old it still merits from the fact that no one mentioned about the not so recent innovations of nginx lighty and other web servers which scale much better than apache at higher concurrency and consume lesser resources\n')
('nginx', 'easier configuration', 'apache', '', '9951705', 'any one of the reverse proxy systems can likely do this nginx is popular too and generally has easier configuration than apache but i ve never used it with https\n')
('nginx', 'faster', 'apache', 'static files file', '15152595', 'when i was googling info on nginx it appears to be faster than apache and works well in serving static pages\n')
('nginx', 'better', 'apache', 'long polling request', '6942102', '4 i d like to understand why nginx might be better than apache when one is long polling and why long polling is better than periodically polling a server\n')
('apache', 'more', 'nginx', '', '25123234', 'it seems your apache is more busy than your nginx\n')
('nginx', 'better', 'apache', 'long polling request', '10204877', 'uwsgi is better if you are using nginx i find nginx far better than apache personally\n')
('nginx', 'faster', 'apache', 'faster static assets', '35488326', 'i read that nginx is faster than apache and i want to try it with some of the projects and leave the others with apache\n')
('apache', 'worse', 'nginx', '', '33949046', 'i m about to try apache but most write ups suggest that this is worse than nginx at this job\n')
('nginx', 'faster', 'apache', 'faster static assets', '27358402', 'nginx √¢ without any optimizations done √¢ is much faster than apache\n')
('nginx', 'faster', 'apache', 'web lighter proxy', '32573222', 'nginx is faster and lighter but many people find it easier to work with apache because of .htaccess support nginx does not have an analog due to performance concern\n')
('apache', 'slower', 'nginx', '', '20715542', 'we have a few clients who have very high traffic sites running apache slower than nginx with varnish in front of it and they get way more traffic than you are saying with little to no performance problems\n')
('nginx', 'more', 'apache', '', '36952147', 'nginx is more picky about case of file names than apache\n')
('nginx', 'more experience', 'apache', '', '31800197', 'i also know there is nginx and haproxy although i have never used either of them and have a lot more experience with apache\n')
('nginx', 'more picky', 'apache', '', '36952147', 'nginx is more picky about case of file names than apache\n')
('nginx', 'better', 'apache', 'long polling request', '24561939', 'nginx + gunicorn is likely to work better than apache + modwsgi at this point in time\n')
('apache', 'better', 'nginx', '', '8103931', 'now back to the question my guess based on reading tests published here would be that the proper multi-thread apache architecture should scale better than nginx on multi-core cpus\n')
('nginx', 'more efficient', 'apache', '', '2899344', 'in fact nginx can use select instead of epoll if you compile it with the --with-select_module option and i bet it will still be more efficient than apache\n')
('nginx', 'better option', 'apache', '', '41928658', 'id love to know how to solve this since using nginx sometimes is a better option than apache and having this issue with fuelphp framework and not being able to use this two great tools together is awful\n')
('nginx', 'much faster', 'apache', 'faster static assets', '14473134', 'i am not an expert in deployment but in my experience nginx is much faster and more friendly to django compared to apache\n')
('nginx', 'sometimes better option', 'apache', '', '41928658', 'id love to know how to solve this since using nginx sometimes is a better option than apache and having this issue with fuelphp framework and not being able to use this two great tools together is awful\n')
('nginx', 'less memory', 'apache', '', '148194', 'servers like lighthttp and nginx can handle large amounts of traffic in much less memory than apache if you can sacrifice apache s power and flexibility or if you just don t need those things which often you don t\n')
('nginx', 'less memory', 'apache', '', '7224338', 'also have a look at nginx for example it is fast and uses less memory than apache to handle client connections\n')
('nginx', 'better', 'apache', '', '20960880', 'i will say that nginx tends to handle heavier loads better than apache though so take a look at that\n')
('nginx', 'more performant', 'apache', 'setting resources performant', '36973548', 'nginx is more performant than apache in most cases with high-levels of requests\n')
('nginx', 'faster', 'apache', 'faster static assets', '535933', 'not only is nginx supposedly faster than apache at delivering static content but this also offloads your rails application for every image stylesheet javascript or whatever other static content\n')
('nginx', 'faster', 'apache', 'faster static assets', '1315178', 'for example nginx is much faster than apache\n')
('apache', 'better', 'nginx', 'long polling request', '9609477', 'apache made a claim that apache 2.4 will offer performance as good or better than nginx\n')
('nginx', 'faster', 'apache', 'static files file', '12509474', 'i ve read that nginx is faster for static pages but there are questions about its performance with php compared to apache s performance with php\n')
('nginx', 'better', 'apache', 'static files file', '3602188', 'nginx s static file performance is better than apache\n')
('nginx', 'faster', 'apache', 'faster static assets', '4109998', 'nginx will definitely work faster than apache\n')
('nginx', 'more flexible', 'apache', 'setting resources performant', '21286932', 'also you should consider using nginx as server that s more flexible than apache\n')
('nginx', 'better performance', 'apache', 'web lighter proxy', '2583350', 'tornadoweb and nginx are popular web servers for the moment and many benchmarkings show that they have a better performance than apache under certain circumstances\n')
('nginx', 'faster', 'apache', 'faster static assets', '13451844', 'you can serve it from for example nginx varnish which are usually faster than apache\n')
('apache', 'easier', 'nginx', '', '27824470', 'but doing that kind of things with apache is rather painfull and is easier with nginx\n')
('nginx', 'faster', 'apache', 'static files file', '13074918', 'as an added benefit nginx can also serve static files much faster than apache and nginx also uses much less ram and can handle much more connections\n')
('nginx', 'better', 'apache', 'long polling request', '8103674', 'if you want to use something in front of it though i suggest you use something like nginx better than apache since nginx is also asynchronous like node and it s performs really well at serving static files\n')
('nginx', 'better', 'apache', 'faster static assets', '15646087', 'also what makes nginx better than apache in this case\n')
('apache', 'better', 'nginx', 'long polling request', '8103931', '16 cores apache would scale better than nginx while nginx would process more client requests\n')

imagick	gmagick	5
('imagick', 'more', 'gmagick', '', '8642900', 'imagick is more resource hungry than gmagick but when i tried to use gmagick it is not working properly\n')
('imagick', 'more resource', 'gmagick', '', '8642900', 'imagick is more resource hungry than gmagick but when i tried to use gmagick it is not working properly\n')
('gmagick', 'newer version', 'imagick', '', '8643574', 'gmagick is newer version of imagick with more set of features it is less resource intensive and fast but the problem is there is very few discussion about this wonderful tool on web i recently came across this on\n')
('gmagick', 'better', 'imagick', '', '13630798', 'update graphicsmagick is faster than imagick doesn t means gmagick is better than imagick\n')
('gmagick', 'newer', 'imagick', '', '8643574', 'gmagick is newer version of imagick with more set of features it is less resource intensive and fast but the problem is there is very few discussion about this wonderful tool on web i recently came across this on\n')

vb6	vb.net	22
('vb.net', 'result more', 'vb6', '', '30670540', 'can i safely assume that vb.net result is more precise than vb6 and discard the vb6 result completely\n')
('vb.net', 'much more', 'vb6', '', '30921042', 'vb.net appears much more complex then vb6 and the learning curve is tough\n')
('vb.net', 'more precise', 'vb6', '', '30670540', 'can i safely assume that vb.net result is more precise than vb6 and discard the vb6 result completely\n')
('vb6', 'more', 'vb.net', '', '7017638', 'especially as vb6 is becoming more and more of a distant memory and the vb.net language takes on a life of its own in conjunction with the core .net framework advancing\n')
('vb.net', 'result more precise', 'vb6', '', '30670540', 'can i safely assume that vb.net result is more precise than vb6 and discard the vb6 result completely\n')
('vb.net', 'more strict', 'vb6', '', '12501075', 'none of the .net libraries are there and there are some syntax differences as vb.net is more strict than vb6 is\n')
('vb6', 'better use', 'vb.net', 'new features application', '18437545', 'if you don t already know vb6 there s little point in learning it now - your time could be put to much better use by learning vb.net c#\n')
('vb.net', 'better', 'vb6', '', '2983944', 'i assume the same control in vb.net would be datagridview and i m fairly sure that you can probably make it look better than in vb6 but if you want really good looking ones you might want to look at thirdparty grid controls\n')
('vb.net', 'more feature rich', 'vb6', '', '12262553', 'quite apart from the fact that the language vb.net is far more feature rich than vb6 the fact that you have developed in vb.net means that you have made extensive use of the .net class libraries including system.security.cryptography that you give as an example\n')
('vb.net', 'rubby easier', 'vb6', '', '4309687', 'also developing enterprise application is such new languages java c# vb.net rubby is easier that vb6 because they rely on frameworks every body can write c# java code that function but it requires tricks good practices and some of imagination to write vb6 strong and rehusable code\n')
('vb.net', 'more', 'vb6', '', '12501075', 'none of the .net libraries are there and there are some syntax differences as vb.net is more strict than vb6 is\n')
('vb.net', 'version less', 'vb6', '', '12909426', 'yes they are different but you can hardly say that the vb.net version is less capable than the vb6 version\n')
('vb.net', 'better language', 'vb6', 'new features application', '38377745', 'vb.net is a better language than vb6 use its com capabilities to save you from writing endless sketchy vb6 code\n')
('vb.net', 'better', 'vb6', '', '5862179', 'fortunately vb.net finally ended all that and is completely pixel based you can still alter you viewport scaling but .net seems to handle that much better than vb6\n')
('vb.net', 'far more feature', 'vb6', '', '12262553', 'quite apart from the fact that the language vb.net is far more feature rich than vb6 the fact that you have developed in vb.net means that you have made extensive use of the .net class libraries including system.security.cryptography that you give as an example\n')
('vb.net', 'far more', 'vb6', '', '12262553', 'quite apart from the fact that the language vb.net is far more feature rich than vb6 the fact that you have developed in vb.net means that you have made extensive use of the .net class libraries including system.security.cryptography that you give as an example\n')
('vb.net', 'version less capable', 'vb6', '', '12909426', 'yes they are different but you can hardly say that the vb.net version is less capable than the vb6 version\n')
('vb6', 'lot easier', 'vb.net', '', '15249588', 'avoiding them by modifying vb6 is lot easier than fixing the issues in vb.net\n')
('vb6', 'application more', 'vb.net', 'new features application', '3326639', 'biggest of all is that adding new features to your vb6 application is more expensive than it would be if the application was in a better language like c# or vb.net\n')
('vb.net', 'certainly easier', 'vb6', '', '19501727', 'getting your project migrated to vb.net is certainly easier when you keep the old vb6 controls\n')
('vb.net', 'much more complex', 'vb6', '', '30921042', 'vb.net appears much more complex then vb6 and the learning curve is tough\n')
('vb6', 'tools more', 'vb.net', '', '1101923', 'however i ve noticed that running the vb6 tools is becoming more and more painful over time so i m looking at the possibility of migrating this code to vb.net 2008\n')

and-operator	or-operator	4
('and-operator', 'higher precedence', 'or-operator', '', '20844229', 'as far as i know the and-operator has the higher precedence than || or-operator in most of the languages\n')
('and-operator', 'higher', 'or-operator', '', '20844229', 'as far as i know the and-operator has the higher precedence than || or-operator in most of the languages\n')
('and-operator', 'higher precedence ||', 'or-operator', '', '20844229', 'as far as i know the and-operator has the higher precedence than || or-operator in most of the languages\n')
('and-operator', 'stronger', 'or-operator', '', '16360333', 'which will never be true have in mind that the and-operator binds stronger than the or-operator\n')

ipb	mybb	2
('ipb', 'less', 'mybb', 'average queries slower', '9600557', 'the ipb which has less queries runs slower than mybb with more queries\n')
('ipb', 'slower', 'mybb', 'average queries slower', '9600557', 'the ipb one has less queries used only 14 on average but it runs slower than mybb with more queries used average on 20\n')

datediff	difference	3
('datediff', 'more', 'difference', '', '81983', 'datediff becomes more difficult to use as you have more dateparts in your difference in your case looks like minutes and seconds\n')
('difference', 'larger', 'datediff', '', '16333387', 'note that diffseconds can cause an overflow when the difference becomes larger than int32.maxvalue error the datediff function resulted in an overflow\n')
('datediff', 'more difficult', 'difference', '', '81983', 'datediff becomes more difficult to use as you have more dateparts in your difference in your case looks like minutes and seconds\n')

owl	rdf	9
('owl', 'more structure', 'rdf', '', '31269752', 'owl has more structure than rdf\n')
('owl', 'more', 'rdf', '', '21358258', 'owl is a more advanced language than rdf\n')
('owl', 'more', 'rdf', '', '31269752', 'owl has more structure than rdf\n')
('owl', 'more mechanisms', 'rdf', '', '34639846', 'owl provides more mechanisms for asserting shapes of rdf graphs as does new work on rdf shapes\n')
('owl', 'more expressive', 'rdf', 'expressive complex relations', '15074623', 'owl and rdfs are more expressive than rdf which means here that you can capture more complex relations for instance you can also represent the link between sets of things rdfs subclassof or use transitive properties hasancestor\n')
('owl', 'more', 'rdf', '', '34639846', 'owl provides more mechanisms for asserting shapes of rdf graphs as does new work on rdf shapes\n')
('owl', 'more advanced language', 'rdf', '', '21358258', 'owl is a more advanced language than rdf\n')
('owl', 'richer', 'rdf', 'expressive complex relations', '6004853', 'owl is richer than languages such as rdf schema rdfs\n')
('owl', 'more advanced', 'rdf', '', '21358258', 'owl is a more advanced language than rdf\n')

one-to-many	many-to-many	3
('many-to-many', 'more', 'one-to-many', '', '39240823', 'i√¢ ve read a so question√¢ s comment where inserting order# 68 as pictured wouldn√¢ t cause any trouble but if i wanted to query orders by certain tags a many-to-many is more appropriate convenient efficient since otherwise in a one-to-many every single order will have to be checked to know how its tags is this true\n')
('one-to-many', 'associations always better', 'many-to-many', '', '29643115', 'using two one-to-many associations is always better than relying on many-to-many relations\n')
('many-to-many', 'more appropriate', 'one-to-many', '', '39240823', 'i√¢ ve read a so question√¢ s comment where inserting order# 68 as pictured wouldn√¢ t cause any trouble but if i wanted to query orders by certain tags a many-to-many is more appropriate convenient efficient since otherwise in a one-to-many every single order will have to be checked to know how its tags is this true\n')

avx	sse	14
('sse', 'clearly faster', 'avx', 'smaller values fast', '18697383', 'now for sse is clearly faster and for the smaller values it s nearlly as fast as avx\n')
('avx', 'slower', 'sse', '', '29031187', 'i have code that does the same thing but the avx version is considerably slower than the sse version\n')
('avx', 'faster', 'sse', '', '47115510', 'i expected avx to be about 1.5x faster than sse\n')
('avx', 'more', 'sse', '', '16034841', 'the underlying reason for this and various other avx limitations is that architecturally avx is little more than two sse execution units side by side - you will notice that virtually no avx instructions operate horizontally across the boundary between the two 128 bit halves of a vector which is particularly annoying in the case of vpalignr\n')
('avx', 'newer', 'sse', '', '18319880', 'also note that the fact that the avx are a newer than sse doesn t make the avx faster whatever you are planning to use the number of cycles taken by an function is probably more important than the avx vs sse argument for example see this answer\n')
('avx', 'version considerably slower', 'sse', '', '29031187', 'i have code that does the same thing but the avx version is considerably slower than the sse version\n')
('avx', 'faster', 'sse', 'smaller values fast', '29032199', 'so the avx version does indeed appear to faster than the sse version both for the original implementations and the optimised implementations\n')
('avx', 'faster', 'sse', 'l1d cache cpus', '28030333', 'for small buffers hot in l1d cache avx can copy significantly faster than sse on cpus like haswell where 256b loads stores really do use a 256b data path to l1d cache instead of splitting into two 128b operations\n')
('avx', 'faster', 'sse', 'smaller values fast', '34069001', 'as expected the performance got better with both and avx 2 faster than sse 4.2 but when i profiled the code with papi i found out that the total number of misses mainly l1 and l2 increased a lot\n')
('avx', 'scalar faster', 'sse', 'smaller values fast', '42324992', 'the question is avx scalar is 2.7x faster than sse when i vectorized it the speed up is 3x matrix size is 128x128 for this question\n')
('avx', 'more', 'sse', '', '45770089', 'and simd math libraries for sse and avx however they seem to be more sse than avx2\n')
('avx', 'little more', 'sse', '', '16034841', 'the underlying reason for this and various other avx limitations is that architecturally avx is little more than two sse execution units side by side - you will notice that virtually no avx instructions operate horizontally across the boundary between the two 128 bit halves of a vector which is particularly annoying in the case of vpalignr\n')
('avx', 'more time', 'sse', '', '18691322', 'buf1 buf2 and buf3 is small enough to located in l1 cache and l2 cache l2 cache 1mb .both of sse and avx is band width limited but with the datalen increase why do the avx need more time than sse\n')
('avx', 'faster', 'sse', 'l1d cache cpus', '31476517', 'so congratulations - you can pat yourself on the back your avx routine is indeed about a third faster than the sse routine tested on haswell i7 here\n')

sqoop	hadoop	3
('hadoop', 'better', 'sqoop', '', '40234150', 'can anyone give some details about oracle hadoop connectors will it perform better than sqoop\n')
('sqoop', 'older', 'hadoop', '', '14886668', 'sqoop 1 is older fully functional and mature project supporting hadoop 0.20 1.x 0.23 and 2.0.x you can download the bits from here\n')
('sqoop', 'older fully', 'hadoop', '', '14886668', 'sqoop 1 is older fully functional and mature project supporting hadoop 0.20 1.x 0.23 and 2.0.x you can download the bits from here\n')

jqgrid	datatables	4
('jqgrid', 'better', 'datatables', 'customisation someone better', '4361920', 'if you don t have someone around to help with jqgrid you are better off with datatables\n')
('datatables', 'better customizations', 'jqgrid', '', '7798213', 'datatables has better customizations as far as clientside bells and whistles where as jqgrid is a little harder to make look as pretty but can do some pretty good serverside interaction from what i understand\n')
('datatables', 'better', 'jqgrid', '', '7798213', 'datatables has better customizations as far as clientside bells and whistles where as jqgrid is a little harder to make look as pretty but can do some pretty good serverside interaction from what i understand\n')
('datatables', 'better', 'jqgrid', 'customisation someone better', '15838894', 'it turns out jquery datatables is better suited for customisation and we have adopted this instead of using jqgrid\n')

read.table	fread	5
('fread', 'faster', 'read.table', 'fast read.csv large', '24966794', 'fread ... is extremely fast 10 - 100 times faster than read.table ... or read.csv ... for large datasets\n')
('read.table', 'more time', 'fread', '', '20940609', 'interestingly for 1 million rows per file the optimised version of read.csv and read.table take 422 and 430 more time than fread whilst without optimisation this leaps to around 1500 and 1005 longer\n')
('fread', 'faster', 'read.table', '', '27792611', 'you might want to give the data.table package a try check out the fread function which is much faster than read.table\n')
('fread', 'faster', 'read.table', 'fast read.csv large', '26359766', 'fread performs faster and more efficiently than read.table but read.table produces less no errors on the same data set\n')
('fread', 'faster base', 'read.table', 'fast read.csv large', '45595542', 'for reading large csv files you should either use readr read_csv or data.table fread as both are much faster than base read.table\n')

centos	debian	4
('centos', 'better', 'debian', '', '30323767', 'we recently have migrated redmine from a server which was running under centos 5.5 with the same ror environment the same load the performance was a way better than on debian 7\n')
('centos', 'older', 'debian', '', '13459028', 'note that centos software versions are older than debian s but versions of opensuse software are newer than debian s versions\n')
('debian', 'less', 'centos', '', '20916262', 'he says he uses debian and is less familiar with centos and so i am posting here\n')
('debian', 'less familiar', 'centos', '', '20916262', 'he says he uses debian and is less familiar with centos and so i am posting here\n')

gitolite	gitosis	10
('gitolite', 'better', 'gitosis', 'best better', '17706974', 'i know gitolite better than gitosis\n')
('gitolite', 'far more', 'gitosis', '', '3223137', 'gitolite is far more advanced than gitosis and is quite easy to install directly from your workstation based on ssh communication with your git repository server\n')
('gitosis', 'longer', 'gitolite', '', '5804015', 'gitosis which is no longer in active development and you should be using gitolite but this answer applies to both of them stores each user s public keys in in your case gitosis .ssh authorized_keys\n')
('gitolite', 'more up-to-date', 'gitosis', '', '23043305', 'either way gitolite is easier to maintain and more up-to-date than gitosis see how do programs like gitolite work\n')
('gitolite', 'better', 'gitosis', 'best better', '7070048', 'for this the best option is gitolite better than gitosis\n')
('gitolite', 'more complete', 'gitosis', '', '4173070', 'that being said i find gitolite much more complete than gitosis like all those recent blog posts illustrate\n')
('gitolite', 'more', 'gitosis', '', '4582514', 'gitolite is maintained has a dozen features more than gitosis and the author actually responds to emails\n')
('gitolite', 'more advanced', 'gitosis', '', '3223137', 'gitolite is far more advanced than gitosis and is quite easy to install directly from your workstation based on ssh communication with your git repository server\n')
('gitolite', 'easier', 'gitosis', '', '23043305', 'either way gitolite is easier to maintain and more up-to-date than gitosis see how do programs like gitolite work\n')
('gitolite', 'far more advanced', 'gitosis', '', '3223137', 'gitolite is far more advanced than gitosis and is quite easy to install directly from your workstation based on ssh communication with your git repository server\n')

web2py	django	15
('web2py', 'more', 'django', '', '1250937', 'and web2py is more lightweight than django rails whatever on pretty much all counts\n')
('web2py', 'much newer', 'django', '', '2795807', 'i prefer web2py because there are more conveniences built into the environment than offered by django but web2py is much newer than django and hindsight always makes it easier make new implementations better\n')
('web2py', 'more focus', 'django', '', '7913630', 'web2py has more focus on simple is better than complex but django has more focus on explicit is better than implicit\n')
('web2py', 'more', 'django', '', '7913630', 'web2py has more focus on simple is better than complex but django has more focus on explicit is better than implicit\n')
('web2py', 'lower', 'django', '', '4352956', 'having said that web2py has a lower initial learning curve than django as it was specifically designed as a learning tool\n')
('django', 's better', 'web2py', 'admin customizable administrators', '6338747', 'django s is better web2py s appadmin is for administrators only\n')
('web2py', 'gae better', 'django', 'admin customizable administrators', '4566361', 'as i understand it web2py supports gae better out of the box than django\n')
('django', 'more', 'web2py', '', '1477841', 'to answer klochner both seems quite popular but ruby is not a language that i am familiar with and django seems more heavy and complex to me than web2py\n')
('web2py', 'easier', 'django', '', '196705', 'anyway the most important issue is that web2py is easier than django pylons php and rails\n')
('django', 'more heavy', 'web2py', '', '1477841', 'to answer klochner both seems quite popular but ruby is not a language that i am familiar with and django seems more heavy and complex to me than web2py\n')
('django', 'more customizable', 'web2py', 'admin customizable administrators', '4353033', 'django s admin is better and more customizable than web2py s appadmin\n')
('web2py', 'lower initial', 'django', '', '4352956', 'having said that web2py has a lower initial learning curve than django as it was specifically designed as a learning tool\n')
('web2py', 'newer', 'django', '', '2795807', 'i prefer web2py because there are more conveniences built into the environment than offered by django but web2py is much newer than django and hindsight always makes it easier make new implementations better\n')
('web2py', 'more lightweight', 'django', '', '1250937', 'and web2py is more lightweight than django rails whatever on pretty much all counts\n')
('web2py', 'even easier', 'django', '', '5494262', 'i think you ll find that web2py is even easier to learn and use than rails and django\n')

addition	subtraction	8
('subtraction', 'slower', 'addition', 'bignum little chip', '39783882', 'it s possible though that software could mess things up by making subtraction slower than addition - but that s unlikely\n')
('addition', 'slower', 'subtraction', 'bignum little chip', '23414385', 'this is a hold over from older compilers and interpreters on old chip architecture that would do addition slightly slower than subtraction\n')
('addition', 'better', 'subtraction', '', '39589499', 'a111 addition is equal or better than subtraction\n')
('addition', 'higher precedence', 'subtraction', '', '30346386', 'the only way it would be broken up differently would be if addition had a higher precedence than subtraction like multiplication does\n')
('addition', 'bigger', 'subtraction', '', '26876494', 'i was thinking that there could be an issue if the result from the addition is bigger than what 15 bits can represent 32767 or if i get a negative number in the subtraction\n')
('subtraction', 'more work', 'addition', '', '29550341', 'the subtraction case is going to require a little more work than addition in this code\n')
('subtraction', 'slower', 'addition', '', '39783882', 'here it is conceivable that subtraction is slower than addition\n')
('subtraction', 'slower bignum', 'addition', 'bignum little chip', '46025736', 'but i d think bignum subtraction is a little slower than bignum addition\n')

mstest	nunit	12
('nunit', 'better', 'mstest', '', '13545330', 'nunit has better support for parameterized tests than mstest\n')
('nunit', 'better', 'mstest', '', '1989900', 'various people told me to go with nunit since it s better than mstest apparently i have no idea and it also has very good support in resharper which i m using\n')
('mstest', 'simpler framework', 'nunit', '', '18403378', 'sriwantha mstest is a simpler framework than nunit\n')
('nunit', 'better support', 'mstest', '', '13545330', 'nunit has better support for parameterized tests than mstest\n')
('nunit', 'faster', 'mstest', 'suspect loading delays', '3844399', 'nonetheless i tried to compare the sum of all test speeds and in some cases nunit is faster and in other cases mstest is faster\n')
('nunit', 'more', 'mstest', '', '2422410', 'for example nunit offers more assert methods than mstest\n')
('mstest', 'slower', 'nunit', 'slower faster', '5815939', 'from my experience mstest is much slower than nunit\n')
('nunit', 'faster', 'mstest', 'slower faster', '22663184', 'nunit is faster as compared to mstest\n')
('mstest', 'better', 'nunit', '', '1340207', 'if you have a full version of visual studio 2008 rather than the express edition it integrates the inbuilt mstest much better than nunit does and cruise control also supports mstest\n')
('nunit', 'faster', 'mstest', 'suspect loading delays', '3844399', 'thus i suspect when people say that nunit is much faster than mstest it is because of the loading and updating delays but the actual test execution time appears to be very similar\n')
('mstest', 'faster', 'nunit', '', '36080077', 'the best testdriven.net disables all instrumentation that mstest does so it makes mstest blazing fast - much faster than nunit for example\n')
('mstest', 'simpler', 'nunit', '', '18403378', 'sriwantha mstest is a simpler framework than nunit\n')

inline	inlining	14
('inline', 'keyword more', 'inlining', 'symbol rule actual', '12414229', 'generally speaking the inline keyword is used more now to allow you to violate the one definition rule when you define a function in a header than to give the compiler a hint about inlining\n')
('inline', 'more', 'inlining', 'symbol rule actual', '4445686', 'the keyword inline is more about telling the compiler that the symbol will be present in more than one object file without violating the one definition rule than about actual inlining which the compiler can decide to do or not to do\n')
('inline', 'better manually', 'inlining', '', '22568041', 'if your compiler can do this then writing functions in a way that the compiler is able to inline is better than manually inlining the calls yourself\n')
('inline', 'generally faster', 'inlining', '', '31367212', 'a similar argument can be made for inlining functions inline is generally faster but will remain in the same big-o complexity class although there is an additional size tradeoff inlining makes your compiled program larger if the code was being used in many places\n')
('inline', 'larger', 'inlining', '', '46509056', 'callee is too large message is printed by c1 when the size in bytecodes of the method being inline is larger than maxinlinesize 35 multiplied by nestedinliningsizeratio 90 on each next level of inlining\n')
('inline', 'more', 'inlining', '', '5431498', 'templates will be inline in the standard meaning of inline which is more related to the one definition rule than to actual code inlining\n')
('inline', 'keyword less', 'inlining', '', '17664046', 'in reality the inline keyword has less to do with inlining code and more to do with allowing legal violation of the one definition rule\n')
('inline', 'more', 'inlining', '', '26307679', 'i m well aware that inline is more of compiler decision than of user going so far as even to inlining non-specified inline-functions so the user control is almost negligible\n')
('inline', 'more related', 'inlining', '', '5431498', 'templates will be inline in the standard meaning of inline which is more related to the one definition rule than to actual code inlining\n')
('inline', 'better', 'inlining', '', '22568041', 'if your compiler can do this then writing functions in a way that the compiler is able to inline is better than manually inlining the calls yourself\n')
('inline', 'code longer', 'inlining', '', '34846138', 'but as the inline code gets longer the savings for inlining become smaller so maybe you could just have a hard limit on the size of the code - any code to be inline must be smaller than the limit\n')
('inlining', 'fatter code', 'inline', '', '40781908', 'inlining inlining produces fatter code which is faster the inline functions will not appear in the call stack\n')
('inlining', 'fatter', 'inline', '', '40781908', 'inlining inlining produces fatter code which is faster the inline functions will not appear in the call stack\n')
('inline', 'bigger', 'inlining', '', '133271', 'if a function is static thus not exported anyway and only called once within your code and you never use a pointer to the function chances are good that gcc will decide to inline it automatically as it will have no negative impact the binary won t get bigger by inlining it only once\n')

srt	subtitle	2
('srt', 'simpler', 'subtitle', 'formatting options format', '43712635', 'ass supports more formatting options but srt is a simpler format and can be modified with the force_style option in the subtitle filter\n')
('srt', 'simpler', 'subtitle', 'formatting options format', '43712635', 'srt is simpler than ass but lacks features so you may need to use the force_style option in the subtitle filter\n')

adfs	acs	3
('adfs', 'more powerful', 'acs', '', '5568668', 'adfs has more powerful claims transformation capabilities than acs\n')
('adfs', 'more', 'acs', '', '4674246', 'it seems possible to have adfs as the ip-sts send an assertion to more than 1 acs url based upon the acs url or acs index in the authnrequest as long as they are listed in the relaying party trust endpoints list\n')
('adfs', 'more', 'acs', '', '5568668', 'adfs has more powerful claims transformation capabilities than acs\n')

rar	zip	5
('rar', 'smaller', 'zip', '', '28236359', 'by the way i would suggest creating rar self-extracting archives instead of zip self-extracting archives as with rar compression the exe file with the right switches for best compression using additionally also solid archive options could be much smaller than with zip compression\n')
('rar', 'decompression much more', 'zip', '', '3339409', 'i ve heard that rar decompression requires much more memory than zip decompression\n')
('rar', 'decompression much more memory', 'zip', '', '3339409', 'i ve heard that rar decompression requires much more memory than zip decompression\n')
('rar', 'better', 'zip', '', '36767008', 'one reason to use rar it is sooooo much better than zip\n')
('rar', 'more memory', 'zip', '', '3339409', 'i ve heard that rar decompression requires much more memory than zip decompression\n')

malloc	memcpy	4
('memcpy', 'less call', 'malloc', '', '18134099', 'this allows you to use the assignment operator instead of memcpy and requires 1 less call to malloc - the one you make\n')
('malloc', 'slower', 'memcpy', '', '6685743', 'afaik malloc is not slower than memcpy\n')
('malloc', 'not slower', 'memcpy', '', '6685743', 'afaik malloc is not slower than memcpy\n')
('memcpy', 'less', 'malloc', '', '18134099', 'this allows you to use the assignment operator instead of memcpy and requires 1 less call to malloc - the one you make\n')

lxml	beautifulsoup	35
('lxml', 'faster', 'beautifulsoup', 'task broken orders', '14069663', 'i would recommend lxml for html parsing it s simple and considerably faster than beautifulsoup can be as much as two orders of magnitude\n')
('lxml', 'faster', 'beautifulsoup', 'parser pyquery posts', '4025244', 'you ll probably find that lxml runs faster than beautifulsoup but in my uses beautifulsoup was very easy to learn and use and handled typical crappy html as found in the wild well enough that i don t have need for anything else\n')
('lxml', 'better', 'beautifulsoup', 'task broken orders', '29681486', 'the reason for using lxml for such a task is that it cleans html files better than beautifulsoup do\n')
('lxml', 'faster', 'beautifulsoup', 'parser pyquery posts', '6728412', 'pyquery is based on lxml so it s also much faster than beautifulsoup\n')
('lxml', 'stricter', 'beautifulsoup', '', '44882181', 'i do understand that traditionally they are saying that lxml are stricter than beautifulsoup however what i do not get is the following\n')
('lxml', 'faster', 'beautifulsoup', 'parser pyquery posts', '44964258', 'since you re using lxml why not use it in a more direct manner lxml is believed to be faster than beautifulsoup\n')
('lxml', 'faster', 'beautifulsoup', 'parser pyquery posts', '32041266', 'according to the above posts and my own experience lxml is definitely faster than beautifulsoup\n')
('lxml', 'faster', 'beautifulsoup', 'parser pyquery posts', '14164350', 'edit don t use this for html work use the lxml library it s python based and much faster than beautifulsoup\n')
('lxml', 'easier', 'beautifulsoup', 'xpath easier painful', '8940209', 'lxml enables you to search for elements using xpath which i think is easier than using beautifulsoup s api\n')
('lxml', 'better option', 'beautifulsoup', 'task broken orders', '5218029', 'note that lxml is probably a better option than beautifulsoup for this kind of task nowadays for the reasons given by beautifulsoup s author\n')
('beautifulsoup', 'slower', 'lxml', 'parser pyquery posts', '26958133', 'note that using the beautifulsoup parser is a lot slower than lxml s default parser\n')
('lxml', 'faster', 'beautifulsoup', 'parser pyquery posts', '3215955', 'lxml is faster than beautifulsoup i think and has much better functionality while remaining relatively easy to use\n')
('beautifulsoup', 'no longer actively', 'lxml', '', '1922064', 'for starters beautifulsoup is no longer actively maintained and the author even recommends alternatives such as lxml\n')
('beautifulsoup', 'easier', 'lxml', 'xpath easier painful', '30075680', 'i found a solution to this problem using beautifulsoup at beautifulsoup-where-are-you-putting-my-html because i think it is easier than lxml\n')
('beautifulsoup', 'no longer', 'lxml', '', '1922064', 'for starters beautifulsoup is no longer actively maintained and the author even recommends alternatives such as lxml\n')
('lxml', 'also more', 'beautifulsoup', '', '2430575', 'lxml also has more features and offers beautifulsoup too\n')
('lxml', 'faster', 'beautifulsoup', 'parser pyquery posts', '2752712', 'it uses lxml underneath and is much faster than beautifulsoup\n')
('lxml', 'better', 'beautifulsoup', 'parser pyquery posts', '5890829', 'one of the things that makes lxml better than beautifulsoup is support for proper css-like class selection or even supports full css selectors if you want to use them\n')
('beautifulsoup', 'more', 'lxml', 'task broken orders', '1648539', 'beautifulsoup is more suitable for html parsing than lxml\n')
('lxml', 'significantly more powerful', 'beautifulsoup', '', '5999808', 'lxml is significantly more powerful and robust than beautifulsoup in my experienced opinion\n')
('lxml', 'faster', 'beautifulsoup', 'parser pyquery posts', '41266291', 'i prefere lxml it s a harder to understand but much faster than beautifulsoup\n')
('lxml', 'faster', 'beautifulsoup', 'parser pyquery posts', '42852910', 'alternatively you can use lxml module which is lot faster than beautifulsoup\n')
('lxml', 'also more features', 'beautifulsoup', '', '2430575', 'lxml also has more features and offers beautifulsoup too\n')
('lxml', 'faster', 'beautifulsoup', 'parser pyquery posts', '880821', 'i ve found that even if lxml is faster than beautifulsoup for documents that size it s usually best to try to reduce the size to a few kb via regex or direct stripping and load that into bs as you are doing now\n')
('lxml', 'faster', 'beautifulsoup', 'parser pyquery posts', '13615911', 'according to some benchmark tests lxml is nearly 100 times faster than beautifulsoup\n')
('beautifulsoup', 'better', 'lxml', 'parser pyquery posts', '19670433', 'i prefer to use beautifulsoup better than lxml\n')
('lxml', 'faster', 'beautifulsoup', 'parser pyquery posts', '15432775', 'how can i find all div and span tags with order preserved.with beautifulsoup it is very simple but i switched recently to lxml since it is much faster than beautifulsoup\n')
('lxml', 'more', 'beautifulsoup', 'parser pyquery posts', '804829', 'lxml is supposed to be much faster and efficient and can do much more than beautifulsoup\n')
('lxml', 'better', 'beautifulsoup', 'task broken orders', '5778559', 'regarding beautifulsoup lxml is more efficient and in my experience can handle broken html better than beautifulsoup\n')
('lxml', 'faster', 'beautifulsoup', 'parser pyquery posts', '19357899', 'lxml is also much much faster than beautifulsoup\n')
('lxml', 'much faster', 'beautifulsoup', 'parser pyquery posts', '6649888', 'lxml is much faster than beautifulsoup and probably the fastest parser available for python\n')
('lxml', 'faster', 'beautifulsoup', 'parser pyquery posts', '5784358', 'speed isn t important here but in other applications it is good to know that regexes are very fast 100 times faster than lxml and 1000 faster than beautifulsoup\n')
('lxml', 'less painful', 'beautifulsoup', 'xpath easier painful', '16958218', 'lxml will let you use xpath here which i think will be less painful than beautifulsoup s interface\n')
('lxml', 'significantly more', 'beautifulsoup', '', '5999808', 'lxml is significantly more powerful and robust than beautifulsoup in my experienced opinion\n')
('lxml', 'faster', 'beautifulsoup', 'parser pyquery posts', '4295387', 'it s generally accepted that lxml is faster than beautifulsoup ref\n')

xfce	gnome	5
('xfce', 'smaller', 'gnome', '', '1105831', 'xfce runs much smaller than gnome and is full featured\n')
('xfce', 'slightly lighter', 'gnome', '', '5343779', 'you might want to look at one of these options if you re running in a vm since xfce is slightly lighter weight than gnome although not all that much lighter these days\n')
('xfce', 'lighter weight', 'gnome', '', '5343779', 'you might want to look at one of these options if you re running in a vm since xfce is slightly lighter weight than gnome although not all that much lighter these days\n')
('xfce', 'much smaller', 'gnome', '', '1105831', 'xfce runs much smaller than gnome and is full featured\n')
('xfce', 'slightly lighter weight', 'gnome', '', '5343779', 'you might want to look at one of these options if you re running in a vm since xfce is slightly lighter weight than gnome although not all that much lighter these days\n')

qvector	qlist	7
('qlist', 'better', 'qvector', 'size store element', '33610032', 'if the size of the qlist s element type is greater than the pointer s size qlist performs better than qvector because it doesn t store the objects sequentially but stores sequentially pointers to heap copies\n')
('qlist', 'worse', 'qvector', 'performance memory heap', '33665848', 'if it stores it as pointers on the heap won t qlist be much worse off than qvector\n')
('qlist', 'code generally less', 'qvector', '', '27124306', 'qlist code is generally less optimized than qvector one\n')
('qlist', 'less', 'qvector', '', '27124306', 'qlist code is generally less optimized than qvector one\n')
('qlist', 'better', 'qvector', 'size store element', '33665848', 'size qlist performs better than qvector because it doesn t store the\n')
('qvector', 'better', 'qlist', '', '16991903', 'qvector is better than qlist in this case because it s easy to resize it\n')
('qvector', 'better performance', 'qlist', 'performance memory heap', '36125922', 'qvector will usually give better performance than qlist because qvector always stores its items sequentially in memory where qlist will allocate its items on the heap unless sizeof t sizeof void and t has been declared to be either a q_movable_type or a q_primitive_type using q_declare_typeinfo\n')

quicksort	radix-sort	3
('quicksort', 'more', 'radix-sort', '', '24519734', 'which of the two consumes more memory is not defined and depends on the input sequence to be sorted as well as on algorithm tuning parameters see the comments to one of the answers to why quicksort is more popular than radix-sort\n')
('quicksort', 'more popular', 'radix-sort', '', '24519734', 'which of the two consumes more memory is not defined and depends on the input sequence to be sorted as well as on algorithm tuning parameters see the comments to one of the answers to why quicksort is more popular than radix-sort\n')
('quicksort', 'more common', 'radix-sort', '', '3539265', 'why quicksort or introsort or any comparison-based sorting algorithm is more common than radix-sort\n')

put	post	22
('put', 'more', 'post', 'appropriate new', '9352970', 'i think that in that case the put verb is more appropriate because post really means i want to create something new\n')
('post', 'also more commonly', 'put', '', '6203393', 'post is also more commonly used for partial updates as put generally implies sending a full new representation of the resource\n')
('put', 'moreso', 'post', 'multipart api data', '2023144', 'put is designed for file uploads moreso than post which requires doing a multipart upload but then it comes down to what your server can do as to which is more convenient for you to implement\n')
('put', 'simpler', 'post', 'multipart api data', '36932851', 'to receive a file in your api i would use a put request simpler than post multipart and fetch the data from the stream php input\n')
('put', 'request much simpler', 'post', 'docs link advantage', '2864151', 'on the php docs link above they say a put request is much simpler than a post request when uploading file along with this advantage what other advantages disadvanatges do the put has got compared to the post\n')
('post', 'more', 'put', '', '35232309', 'anyway http 405 is telling you that your backend does not support the put method and probably it s expecting a post method with the x-http-method-override put http header since post is more standard method in rest than put\n')
('put', 'more sense', 'post', '', '40336732', 'if noop a put may make more sense than a post which would imply creating a second connection\n')
('post', 'more standard', 'put', '', '35232309', 'anyway http 405 is telling you that your backend does not support the put method and probably it s expecting a post method with the x-http-method-override put http header since post is more standard method in rest than put\n')
('post', 'less secure', 'put', '', '35855054', 'words like arbitrary processing and neither not safe make post sounds less secure than put when there is a choice\n')
('post', 'less', 'put', '', '35855054', 'words like arbitrary processing and neither not safe make post sounds less secure than put when there is a choice\n')
('post', 'better', 'put', '', '40896714', 'q1.i know that post is better than put for name-value pair parameters as the get exposes it in url and post doesn t\n')
('post', 'more appropriate', 'put', 'appropriate new', '8693510', 'more importantly in this case i think post is more appropriate than put\n')
('post', 'better', 'put', 'resource restful blog', '32541130', 'post is better but if you want it to be truly restful you should ensure that the uri uniquely identifies the resource and use put\n')
('post', 'more restful', 'put', 'resource restful blog', '44936791', 'side note if you are attempting to create a new customer you may want to use post instead as it may be considered more restful as put s are generally for updating an existing resource but this is up to you\n')
('post', 'more', 'put', '', '17924408', 'the client post scores and fetches highscore lists from the server and everything seemed to be working perfectly we had been testing it for a month with no problems and the code is really simple with not much more than a put get\n')
('post', 'more convenient', 'put', '', '45046836', 'i m very sorry for the long question but i thought instead of dividing the question into several post it is more convenient if they are put into one place\n')
('put', 'more secure http', 'post', '', '1577549', 'http put isn t inherently any more secure than http post if you re allowing the uploaded files to be exceuted on your server\n')
('put', 'more', 'post', '', '8669928', 'put does not mean update any more than post means insert\n')
('post', 'also more', 'put', '', '6203393', 'post is also more commonly used for partial updates as put generally implies sending a full new representation of the resource\n')
('post', 'more complex', 'put', 'docs link advantage', '17070042', 'side note it looks like you re using the post form of file upload which as the docs say is considerably more complex than put\n')
('post', 'more', 'put', '', '45046836', 'i m very sorry for the long question but i thought instead of dividing the question into several post it is more convenient if they are put into one place\n')
('post', 'safer', 'put', 'resource restful blog', '11325318', 'typically you would not allow a http client to determine the uri of a new resource so a post to blog would be safer than a put to blog article-uri although http does cater for appropriate responses should the server be unable to honour the intended uri\n')

fork	pthreads	3
('fork', 'more extensive independence', 'pthreads', '', '42755694', 'the features stemming from those discussions permit less extreme fork than processes which is symmetrically like the provision of more extensive independence between pthreads\n')
('fork', 'better', 'pthreads', 'processes clone better', '22140337', 'there is a nice comparison of threads and processes here when is clone and fork better than pthreads\n')
('fork', 'better', 'pthreads', 'processes clone better', '11662781', 'but when is fork and clone better than pthreads\n')

floating-point	fractions	4
('floating-point', 'more', 'fractions', 'dot decimal representation', '41839881', 'the floating-point numbers are rounded to have not more than eight fractions digits\n')
('fractions', 'more', 'floating-point', 'dot decimal representation', '26145924', 'all other fractions floats have more digits after the dot when expressed in decimal because the representation of floating-point numbers is binary not decimal\n')
('floating-point', 'values more realistic', 'fractions', '', '2132643', 'and using floating-point values is more realistic - you need fractions values because when you rotate something the new coordinates will nearly always be non integral\n')
('floating-point', 'values more', 'fractions', '', '2132643', 'and using floating-point values is more realistic - you need fractions values because when you rotate something the new coordinates will nearly always be non integral\n')

png	gif	36
('png', 'better', 'gif', 'bigger alos cant', '9424505', 'png gives you better alpha result than gif\n')
('gif', 'larger', 'png', 'regard smaller pixels', '18601225', 'i m not sure if this matters but the gif is significantly larger than the png files\n')
('png', 'smaller', 'gif', 'regard smaller pixels', '610565', 'if png isn t smaller than gif then your software may be saving it poorly - look for png optimisation progams like pngout and pngnq\n')
('png', 'better', 'gif', '', '319433', 'paul points out that png compresses static line art better than gif for nearly every situation\n')
('gif', 'slightly better', 'png', 'bigger alos cant', '115838', 'there might be some edge cases where gif is slightly better because the png format may have a slightly larger overhead from metadata but it s really not worth the worry\n')
('gif', 'format substantially less capable', 'png', 'bigger alos cant', '30777789', 'the gif format is substantially less capable than png\n')
('png', 'smaller', 'gif', 'regard smaller pixels', '2747873', 'just press save and give it a name and that photoshop image will be saved into a transparent background png file which presents more colors and it s smaller than a gif file and is as good as a jpg\n')
('png', 'better', 'gif', '', '115838', 'as a general rule png is never worse and often better than gif because of superior compression\n')
('png', 'never worse', 'gif', '', '115838', 'as a general rule png is never worse and often better than gif because of superior compression\n')
('png', 'not bigger', 'gif', 'bigger alos cant', '5134831', 'also if i change all to png is not bigger and alos i am using prawn pdf outputting these images so cant use gif\n')
('png', 'smaller', 'gif', 'regard smaller pixels', '116210', 'indexed png less than 256 colors is actually always smaller than gif so i use that most of the time\n')
('png', 'better', 'gif', 'bigger alos cant', '1200232', 'png compresses much better than gif and allows more colors at the same time\n')
('gif', 'file smaller oh', 'png', 'regard smaller pixels', '8596064', 'it might help to reduce your gif file sizes smaller oh and i believe -depth 8 can only be used for png images\n')
('png', 'shim smaller', 'gif', 'regard smaller pixels', '1841996', 'a 8-bit png shim is smaller than the same dimension 1 pixel gif and everything will still work as planned\n')
('gif', 'larger', 'png', 'regard smaller pixels', '6850687', 'it will always be a web format which basically comes down to jpg png and gif with gif being very unlikely because of its limitations gif can contain 256 colors at most and is generally larger than png\n')
('png', 'better compression', 'gif', '', '10666940', 'png achieves better compression than gif because it applies a pre-filtering step before the lossless compression deflate roughly equivalent to lzw. see wikipedia s explanation of png filtering\n')
('png', 'better competition', 'gif', 'bigger alos cant', '1084126', 'png images are always compressed lossless but their compression algorithm works better than competition gif\n')
('gif', 'less', 'png', 'regard smaller pixels', '42301395', 'i used gif because its file size 2.1kb was considerably less than png or jpeg in this case\n')
('png', 'larger equivalent', 'gif', 'regard smaller pixels', '116461', 'if your png files are coming out larger than equivalent gif files it is almost certainly because your source image has more than 256 colors\n')
('png', 'often smaller', 'gif', 'regard smaller pixels', '28668844', 'icon size indexed png is often smaller than the same gif\n')
('png', 'better compression', 'gif', 'regard smaller pixels', '11005984', 'you can then use imagecopy to insert each gif image including the background and imagepng to generate png output which is better for line art than jpeg offers better compression than gif and can support more than 256 colors\n')
('png', 'wider dimension', 'gif', 'regard smaller pixels', '30455777', 'wewtaco i noticed that your png file has wider dimension than the gif file and i am guess that could be a reason the black bars are showing up\n')
('png', 'better support', 'gif', 'bigger alos cant', '11199578', 'for example png has better support for transparency than gif or jpeg\n')
('gif', 'smaller palette', 'png', 'regard smaller pixels', '12416387', 'one thing to note is that gif supports a smaller palette than png - only up to 256 colors\n')
('png', 'newer', 'gif', 'bigger alos cant', '610542', 'png is a newer format and often better than either jpeg of gif - especially for screenshots\n')
('gif', 'smaller', 'png', 'regard smaller pixels', '27036474', 'since that appears to generate index-color gif files which are smaller than the png files that doxygen generates\n')
('gif', 'smaller', 'png', 'regard smaller pixels', '2523038', 'but keep in mind that the gif color palette is way smaller than png\n')
('png', 'smaller', 'gif', 'regard smaller pixels', '2308120', 'convert it to png 10-30 smaller than gif on average\n')
('png', 'larger', 'gif', 'regard smaller pixels', '610573', 'jpg and png work well for most applications but the files will be larger than gif for very simple graphics\n')
('png', 'generally smaller', 'gif', 'regard smaller pixels', '34538885', 'but in that regard it is replaced by png which is generally smaller supports alpha transparency where gif pixels are either fully transparent or fully opaque and most importantly gif images are limited to 256 colors\n')
('png', 'format better', 'gif', 'bigger alos cant', '10666583', 'according to wikipedia the png format provides better compression than gif\n')
('png', 'better', 'gif', 'bigger alos cant', '4288557', 'many people don t know about 8-bit png which is usually better than gif in size.\n')
('png', 'better', 'gif', 'bigger alos cant', '37907325', 'animated png is better than gif if we re focused on file size √¢ achieving a smaller file size was one of the reasons the apng format was designed\n')
('gif', 'smaller', 'png', 'regard smaller pixels', '2686734', 'gif is smaller because it s based on an colour palette of 256 colours rather than the separate rgb values for each pixel or group of pixels in jpg and png\n')
('png', 'wider color', 'gif', 'regard smaller pixels', '2336552', 'png has a wider color pallete than gif and gif is properitary while png is not\n')
('png', 'definitely better', 'gif', 'bigger alos cant', '10941029', 'while png is definitely better that gif occasionally there is a use case for needing to stay in gif format\n')

words	n-gram	3
('words', 'better', 'n-gram', '', '25261349', 'if you will be classifying multi-paragraph text all in one language a functional words list which your bag of words with pruning of hapaxes will quickly approximate might well serve you perfectly and could work better than n-gram\n')
('n-gram', 'more', 'words', '', '37178364', 'it has support for tokenizing lemmatizing n-gram ideas that span more than one words\n')
('n-gram', 'better', 'words', '', '28320865', 'for some problems character level n-gram do better than words level and logistic regression parameters\n')

iostream	cstdio	3
('cstdio', 'more', 'iostream', '', '15501048', 'for those commenting that cstdio is obsolete personally i like it more than iostream\n')
('iostream', 'slower', 'cstdio', '', '9369269', 'iostream is said to be slower than cstdio but i suggest you use a profiling tool here to find the best set of options here\n')
('iostream', 'slower', 'cstdio', '', '5792495', 'yes iostream is slower than cstdio\n')

jruby	mri	21
('jruby', 'heavier', 'mri', '', '2224831', 'the jruby runtime alone is already pretty heavy much heavier than mri\n')
('jruby', 'faster', 'mri', 'slower opposite 2-5x', '7987382', 'and it sounds strange but jruby scales very well and it s faster than mri with java 7\n')
('jruby', 'faster', 'mri', 'slower opposite 2-5x', '40529208', 'does this mean that the old adagio about jruby being faster than mri ruby is gone\n')
('jruby', 'faster', 'mri', 'slower opposite 2-5x', '15548793', 'for example jruby is faster than mri jruby 1.7 is faster than jruby 1.6 jruby 1.7 running on hotspot is faster than jruby 1.7 running on j9 jruby 1.7 running on hotspot 1.7 is faster than jruby 1.7 running on hotspot 1.6 jruby 1.7 running on hotspot 1.7 with the c2 compiler is faster than jruby 1.7 running on hotspot 1.7 with the c1 compiler and so on\n')
('jruby', 'more performant', 'mri', 'raw performant execution', '10284169', 'once the jvm has warmed up rails requests under jruby are usually significantly more performant than under mri both in terms of raw execution speed and garbage collection\n')
('jruby', 'more sensitive', 'mri', '', '12822575', 'i ve noticed however that jruby is more sensitive to memory leaks than mri\n')
('jruby', 'higher priority', 'mri', '', '46009886', 'alter your command path so that jruby s version of the ruby command has a higher priority than the mri one\n')
('jruby', 'better', 'mri', 'better application rubinius', '12071741', 'i know that rails jruby handles concurrency better than mri but i don t know how to do it\n')
('mri', 'faster', 'jruby', 'slower opposite 2-5x', '30228655', 'mri has a gil so why is it faster than jruby in handling requests\n')
('jruby', 'better', 'mri', 'better application rubinius', '13448080', 'for longer-running applications like a web application rubinius or jruby will generally perform better than mri\n')
('mri', 'slower', 'jruby', 'slower opposite 2-5x', '30097643', 'this really surprised me because i expected mri to be slower than jruby\n')
('jruby', 'more', 'mri', '', '12822575', 'i ve noticed however that jruby is more sensitive to memory leaks than mri\n')
('jruby', 'faster', 'mri', 'process long processes', '11058633', 'lastly if you are frequently finding yourself running long running process i advice you to try jruby which is works much better with long running processes due to jvm lot faster than mri\n')
('jruby', 'more', 'mri', '', '3928025', 'in fact on windows jruby passes more rubyspec tests than ruby meaning mri or yarv itself\n')
('jruby', 'more rubyspec', 'mri', '', '3928025', 'in fact on windows jruby passes more rubyspec tests than ruby meaning mri or yarv itself\n')
('jruby', 'faster', 'mri', 'slower opposite 2-5x', '8920123', 'jruby is faster than 1.9 mri matz ruby interpreter the standard in certain areas\n')
('jruby', 'better performance', 'mri', 'better application rubinius', '14584499', 'with these options jruby on rails gives about the same or better performance than mri\n')
('mri', '2-5x slower', 'jruby', 'slower opposite 2-5x', '40545364', 'so it seems like the opposite - mri 2.3 gets 2-5x slower than jruby 9.1\n')
('mri', 'faster', 'jruby', 'slower opposite 2-5x', '30228655', 'mri is faster than jruby\n')
('mri', 'faster', 'jruby', 'raw performant execution', '10747331', 'jvm hosted languages are generally going to be faster than traditional mri ruby and both java and scala are generally faster than jruby when it comes to raw cpu capabilities\n')
('mri', 'faster', 'jruby', 'process long processes', '40556630', 'sometimes mri is faster but with the right parameters and warmup jruby was 3 to 3.5 times as fast on my system for this particular\n')

ecj	javac	5
('ecj', 'better', 'javac', '', '14186109', 'however i think that ecj is even better than javac my opinion .\n')
('ecj', 'even better', 'javac', '', '14186109', 'however i think that ecj is even better than javac my opinion .\n')
('ecj', 'much smarter', 'javac', '', '15169046', 'eclipse compiler for java jdt ecj is much smarter tool than actual javac\n')
('javac', 'more cpu', 'ecj', '', '20068641', 'to recap i want to know why a javac compilation utilizes so much more cpu than ecj\n')
('ecj', 'much smarter tool', 'javac', '', '15169046', 'eclipse compiler for java jdt ecj is much smarter tool than actual javac\n')

coalesce	nvl	5
('coalesce', 'simpler', 'nvl', 'standard simpler portable', '38997181', 'the ansi standard function coalesce is simpler than using nvl and decode which should be obsoleted anyway\n')
('coalesce', 'more', 'nvl', '', '9716167', 'coalesce is more efficient than nvl as it only evaluates the second argument if the first is null whereas nvl evaluates both arguments every time\n')
('coalesce', 'more efficient', 'nvl', '', '9716167', 'coalesce is more efficient than nvl as it only evaluates the second argument if the first is null whereas nvl evaluates both arguments every time\n')
('coalesce', 'more portable', 'nvl', 'standard simpler portable', '16041281', 'the coalesce function is used here because it is more portable than nvl or ifnull\n')
('coalesce', 'stricter', 'nvl', '', '10416747', '2 however coalesce requires all arguments to be of the same data type thus being stricter than nvl which will first attempt an implicit conversion\n')

decimal	octal	5
('decimal', 'representation no more', 'octal', '', '44023228', 'this means the buffer is enough for printing the number in octal and since decimal representation uses no more digits than octal it will be enough for decimal representation too\n')
('decimal', 'often more convenient', 'octal', '', '4676830', 'bitshifts just go easier with hexadecimal than decimal and is often more convenient to read than octal\n')
('decimal', 'often more', 'octal', '', '4676830', 'bitshifts just go easier with hexadecimal than decimal and is often more convenient to read than octal\n')
('octal', 'clearer', 'decimal', '', '8218375', 'hex or maybe octal depending on the machine being emulated will be clearer than using decimal since similar opcodes tend to vary in bits not digits\n')
('decimal', 'representation no more digits', 'octal', '', '44023228', 'this means the buffer is enough for printing the number in octal and since decimal representation uses no more digits than octal it will be enough for decimal representation too\n')

jogl	lwjgl	4
('jogl', 'more java-like', 'lwjgl', '', '157238', 'jogl is more java-like whereas lwjgl provides more gaming functionality on top of opengl access\n')
('lwjgl', 'much more', 'jogl', '', '23462234', 'lwjgl is much more aimed towards gaming with opengl where as jogl is more worried about complete and perfect bindings to opengl opencl\n')
('lwjgl', 'smaller', 'jogl', '', '6496021', 'if your company s concern is to avoid big unknown libraries which is prefectly understandable i d advise you to stick with lwjgl which is smaller that jogl\n')
('jogl', 'more', 'lwjgl', '', '157238', 'jogl is more java-like whereas lwjgl provides more gaming functionality on top of opengl access\n')

put	get	22
('get', 'slower', 'put', '', '3380000', 'since most data-storage mechanisms in-ram in a database etc. get a lot slower as you put more data in them you should ensure you re only timing your http access and not looking at overall crawler throughput including storage\n')
('put', 'more', 'get', 'requests second performance', '26171964', 'i m not sure if this is the answer but states that if you expect a rapid increase in the request rate for a bucket to more than 300 put list delete requests per second or more than 800 get requests per second we recommend that you open a support case to prepare for the workload and avoid any temporary limits on your request rate\n')
('put', 'process faster', 'get', 'loop counter value', '31944382', 'as long as the dataframe is small your assumption that the put process is faster than the get seems true we can fetch all 5 items within one loop of while not q.empty\n')
('get', 'better way', 'put', '', '32556567', 'but the slider won t work well it doesn t get activated is a better way to put it if i insert the code from slider.js into the chrome console hit enter - booom works perfectly i ve been looking for what the problem might be tried adding the type text javascript in the script tags added the document .ready in my jquery still nothing.\n')
('get', 'command actually slower', 'put', '', '43420201', 'as i am benchmarking my cluster i discover that for large file my get command is actually slower than put command\n')
('put', 'more just', 'get', '', '26262818', 'and then i saw that they put functions under transform that did much more than just get data\n')
('get', 'slower native', 'put', '', '44810414', 'i think put and get on ignite cache would likely to be slower than native put and get on my inbuilt key value store\n')
('get', 'worse', 'put', '', '7779856', 'i m concerned this is going to get worse as we put more tests into the specflow project\n')
('put', 'more', 'get', 'requests second performance', '40435522', 'at very high speeds amazon s3 does have some recommended request rate and performance considerations but this is only when making more than 300 put list delete requests per second or more than 800 get requests per second for a particular bucket\n')
('get', 'slower', 'put', '', '43420201', 'as i am benchmarking my cluster i discover that for large file my get command is actually slower than put command\n')
('put', 'more', 'get', '', '41529280', 'if you expect a rapid increase in the request rate for a bucket to more than 300 put list delete requests per second or more than 800 get requests per second we recommend that you open a support case to prepare for the workload and avoid any temporary limits on your request rate\n')
('put', 'method better', 'get', '', '794801', 'right now i would have to say the put method is better since it works and i could not get the webservice to work\n')
('put', 'higher', 'get', 'loop counter value', '30760255', 'when i put my loop counter variable pagessent in the watch window it gets optmized when i declare as volatile it still gets optimized but when the max value is set to 4 the loop exits properly but if max value is higher than 4 get stuck..\n')
('put', 'more difficult', 'get', '', '8805725', 'from an interface design standpoint you want user-agents to make post and put and delete more difficult than get or at least distinctly different so that users can rely on that difference to hint when their actions might cause a change in the resource state because they are responsible for those changes\n')
('get', 'more accurately oswap', 'put', '', '38482452', 'now don t get me wrong regenerating the session id on login or more accurately as oswap put it on privilege level change is indeed a very good defense against session fixation\n')
('put', 'less frequent', 'get', '', '6337024', 'you got at least put and delete although they are used much less frequent than get and post as in hardly ever\n')
('get', 'more', 'put', '', '44565429', 'from the count you will get the number of sequence and those which have more than 2 put those in a different series and then add that series in the dataframe\n')
('put', 'now slower', 'get', 'slower rate', '31944382', 'this could mean that put is now slower than get and we have to wait\n')
('get', 'more once', 'put', '', '19144096', 'to get your code to run more than once put it in a while loop\n')
('get', 'less', 'put', '', '16422108', 'this should be producing a topological sort but so far i consistently get one value less than i put in as far as number of vertices and none of the number match those i ve inputted\n')
('get', 'better', 'put', '', '32556567', 'but the slider won t work well it doesn t get activated is a better way to put it if i insert the code from slider.js into the chrome console hit enter - booom works perfectly i ve been looking for what the problem might be tried adding the type text javascript in the script tags added the document .ready in my jquery still nothing.\n')
('get', 'rate slower', 'put', 'slower rate', '41911766', 'at times the get rate is slower than the put rate and we see messages backing up\n')

tcpdf	fpdf	5
('tcpdf', 'slower', 'fpdf', '', '11405245', 'tcpdf was always slower than fpdf\n')
('tcpdf', 'slower', 'fpdf', '', '2285314', 'if anyone has some information on this problem i d really appreciate it - either things you did to make tcpdf faster or just confirmation that it runs slower than fpdf so i can forget about it and just stick with fpdf\n')
('tcpdf', 'far better', 'fpdf', 'past look better', '6280801', 'i suggest you to give a look to tcpdf which is far better than fpdf also because it is actively developed\n')
('tcpdf', 'better', 'fpdf', 'past look better', '7739169', 'i ve used tcpdf in the past and found it a lot better than fpdf\n')
('tcpdf', 'much better', 'fpdf', '', '9000297', 'somewhat good news you could move to tcpdf which is much better at handling utf8 and is more modern in general than fpdf\n')

httplib	urllib	4
('httplib', 'slightly better', 'urllib', '', '29110737', 'i don t know why this works i can only assume that httplib is slightly better behaved than urllib\n')
('httplib', 'better', 'urllib', '', '29110737', 'i don t know why this works i can only assume that httplib is slightly better behaved than urllib\n')
('httplib', 'lower level', 'urllib', '', '7505789', 'basically - httplib is lower level while urllib is high-level\n')
('httplib', 'lower', 'urllib', '', '7505789', 'basically - httplib is lower level while urllib is high-level\n')

toupper	tolower	10
('toupper', 'more', 'tolower', '', '2801521', 'so yes - toupper is more reliable than tolower\n')
('toupper', 'better', 'tolower', '', '5104579', 'and if you have to convert to the same case to make comparisons toupper is better than tolower\n')
('tolower', 'faster', 'toupper', 'null experiment errors', '41238495', 'so you can t reject the null hypothesis that tolower is as faster as toupper and thus your experiment has got errors\n')
('toupper', 'more', 'tolower', '', '1047997', 'as a side note using toupper is more efficient than using tolower so toupper would be the way to go\n')
('toupper', 'better', 'tolower', '', '18342840', 'toupper is better to use than tolower but i forget why\n')
('toupper', 'more reliable', 'tolower', '', '2801521', 'so yes - toupper is more reliable than tolower\n')
('toupper', 'more efficient', 'tolower', '', '1047997', 'as a side note using toupper is more efficient than using tolower so toupper would be the way to go\n')
('toupper', 'faster', 'tolower', 'null experiment errors', '41240021', 'your intial hypothesis of toupper being faster than tolower has a logical fallacy\n')
('toupper', 'more accurate', 'tolower', '', '32678208', 'you can use string.isnullorempty and toupper method is in general more accurate than tolower\n')
('toupper', 'lower case', 'tolower', '', '43095027', 'we uppercase this with toupper then we add on the next 3 characters of the string starting at the 4th character which we force in to lower case with tolower\n')

while-loop	for-loop	6
('while-loop', 'cheaper', 'for-loop', '', '43011622', 'the reason for the second case much slower on sorted data is that a while-loop is cheaper than the equivalent for-loop when there are zero iterations\n')
('for-loop', 'faster', 'while-loop', 'cleaner faster', '4203952', 'and now we know that for-loop is faster than while-loop\n')
('for-loop', 'greater cost', 'while-loop', '', '24353790', 'also it seems like a for-loop is of greater cost to the compiler than a while-loop\n')
('while-loop', 'cleaner', 'for-loop', 'cleaner faster', '29374366', 'edit just realized a while-loop may well be a lot cleaner than a for-loop for this\n')
('for-loop', 'greater', 'while-loop', '', '24353790', 'also it seems like a for-loop is of greater cost to the compiler than a while-loop\n')
('while-loop', 'faster', 'for-loop', 'cleaner faster', '2611604', 'i have also found that a while-loop is faster than a for-loop\n')

jackson	gson	38
('jackson', 'faster', 'gson', 'faster json benchmarks', '17166058', 'personally i prefer jackson as according to test benchmarks it s faster than gson\n')
('gson', 'faster', 'jackson', 'faster json benchmarks', '4764950', 'gson 1.6 now includes a low-level streaming api and a new parser which is actually faster than jackson\n')
('jackson', 'more complete', 'gson', '', '2431212', 'since i am more familiar with jackson here are some aspects where i think jackson has more complete support than gson apologies if i miss a gson feature\n')
('gson', 'faster', 'jackson', 'faster json benchmarks', '14248787', 'further more gson really seems to be faster than jackson json\n')
('jackson', 'more slow', 'gson', '', '14323861', 'try this lib that s a good one with the jackson we use only in the server side because jackson is more slow in the android than gson at least in our test\n')
('gson', 'slower', 'jackson', 'faster json benchmarks', '6559693', 'deserialization performance is similar with gson over 9x slower than jackson and fastjson about 0.5 faster than jackson\n')
('gson', 'simpler', 'jackson', 'faster json benchmarks', '9792782', 'gson is simpler jackson is faster\n')
('jackson', 'better', 'gson', 'plan project diffrent', '46011311', 'jackson type safety is way better than gson\n')
('gson', 'better', 'jackson', 'faster json benchmarks', '14519479', 'also i want to know if google gson is better than jackson for json parsing\n')
('jackson', 'larger library', 'gson', '', '27597609', 'keep in mind though that jackson is a larger library than gson so depending on your case you might prefer gson to avoid 65k methods limitation\n')
('jackson', 'more', 'gson', 'faster json benchmarks', '12426957', 'jackson is more suitable if you have a complex deep json tree because gson creates a lot of temporary objects which leads to stop the world gcs\n')
('gson', 'more', 'jackson', '', '7736941', 'it seems gson is more faster than jackson the average time of gson is about 2ms while jackson is about 16ms does i make mistake when using jackson\n')
('jackson', '2-4x faster', 'gson', '', '5787646', 'gson is not particularly fast but the jackson library can almost compete with most binary serializers jackson is 2-4x faster than gson in most situations and 10-20x faster on utf-8 because it has special code for utf-8\n')
('gson', 'better', 'jackson', 'plan project diffrent', '3754055', 'we plan to use gson extensively in the application as it seems safer and better than jackson\n')
('gson', 'less features', 'jackson', '', '12107360', 'note also that gson comes with less features out of the box than genson or jackson\n')
('jackson', 'slower', 'gson', 'faster json benchmarks', '26263028', 'code looks correct and even at its worst jackson should be no slower than gson\n')
('gson', 'faster', 'jackson', 'faster json benchmarks', '42641548', 'large objects google gson performs faster than jackson and simple json\n')
('jackson', 'lib better performance', 'gson', 'plan project diffrent', '43648840', 'also it seems jackson lib has better performance than other packages such as gson which i haven t tried personally\n')
('jackson', 'more', 'gson', '', '14323861', 'try this lib that s a good one with the jackson we use only in the server side because jackson is more slow in the android than gson at least in our test\n')
('gson', 'slower', 'jackson', 'faster json benchmarks', '34679659', 'i looked at gson metrics and it seems slower than jackson\n')
('gson', 'less powerful', 'jackson', '', '17110794', 'going to go ahead and say that gson is a lot more user friendly albeit less powerful than jackson\n')
('jackson', 'better', 'gson', 'plan project diffrent', '7590072', 'i found jackson better than gson performance project activity better docs ...\n')
('jackson', 'faster', 'gson', 'faster json benchmarks', '9296657', 'jackson is faster but the api is 37x more complex than the gson api\n')
('jackson', 'faster', 'gson', '', '5787646', 'gson is not particularly fast but the jackson library can almost compete with most binary serializers jackson is 2-4x faster than gson in most situations and 10-20x faster on utf-8 because it has special code for utf-8\n')
('gson', 'faster', 'jackson', 'faster json benchmarks', '31940366', 'gson is faster with smaller documents and jackson is faster with large documents\n')
('jackson', 'better', 'gson', 'plan project diffrent', '27757123', 'performance of jackson is better than gson\n')
('gson', 'more faster', 'jackson', '', '7736941', 'it seems gson is more faster than jackson the average time of gson is about 2ms while jackson is about 16ms does i make mistake when using jackson\n')
('jackson', 'better performance', 'gson', 'plan project diffrent', '7736941', 'after searched in google found that jackson has better performance than gson i plan to replace gson with jackson in my project but i got a diffrent result when run test code\n')
('gson', 'faster', 'jackson', '', '7736941', 'it seems gson is more faster than jackson the average time of gson is about 2ms while jackson is about 16ms does i make mistake when using jackson\n')
('gson', 'faster', 'jackson', 'faster json benchmarks', '33828265', 'under some conditions gson has proven to be a lot faster than jackson there also exists jsonp and json.simple\n')
('gson', 'faster', 'jackson', 'faster json benchmarks', '42641548', 'very small object google gson performs faster than jackson and simple json\n')
('gson', 'less', 'jackson', '', '12107360', 'note also that gson comes with less features out of the box than genson or jackson\n')
('jackson', 'larger', 'gson', '', '27597609', 'keep in mind though that jackson is a larger library than gson so depending on your case you might prefer gson to avoid 65k methods limitation\n')
('jackson', 'more', 'gson', '', '2431212', 'since i am more familiar with jackson here are some aspects where i think jackson has more complete support than gson apologies if i miss a gson feature\n')
('jackson', 'faster', 'gson', 'faster json benchmarks', '5553647', 'take a look at the jackson json parser it s faster than the one in android and faster than gson and supports streaming\n')
('gson', 'slower', 'jackson', 'faster json benchmarks', '6559693', 'according to the performance results at for serialization with databind with strings gson.tojson myobject gson is over 10x slower than jackson\n')
('jackson', 'faster', 'gson', 'faster json benchmarks', '45229746', 'in my case i found jackson little faster than gson i used default serialization because so far i don t have a need to customize serialization\n')
('jackson', 'much faster', 'gson', 'faster json benchmarks', '3261073', 'i ve seen questions like this come up before and the general consensus is that jackson is much faster than gson\n')

ogg	mp3	5
('ogg', 'better', 'mp3', 'quality meg licensing', '12945530', 'in general ogg achieves better compression than mp3 which is a plus for things like download size bandwidth resource usage etc\n')
('ogg', 'vorbis better quality', 'mp3', 'quality meg licensing', '2467567', 'ogg vorbis is better quality per meg than mp3 plus no licensing legal issues\n')
('ogg', 'smaller', 'mp3', '', '28983675', 'of those three ogg would usually be smaller than mp3\n')
('ogg', 'smaller', 'mp3', '', '8859332', 'of those three ogg would usually be smaller than mp3\n')
('ogg', 'vorbis better then', 'mp3', 'quality meg licensing', '9884227', 'moreover ogg vorbis is better then mp3 at all bitrates\n')

cheerio	jsdom	6
('cheerio', 'much faster', 'jsdom', '', '13901897', 'i had the same problem with jsdom and switcht to cheerio which is much faster than jsdom and works even after scanning hundreds of sites\n')
('cheerio', 'faster', 'jsdom', '', '13901897', 'i had the same problem with jsdom and switcht to cheerio which is much faster than jsdom and works even after scanning hundreds of sites\n')
('cheerio', 'more', 'jsdom', '', '36509548', 'if you don t need a full dom available and just want to parse and scrape manipulate html elements there is cheerio which is more lightweight than jsdom and still gives you a jquery-like api\n')
('cheerio', 'faster', 'jsdom', '', '20374129', 'if it is unavoidable node.js has good options - try to use the module cheerio which is faster than heavy weight jsdom\n')
('cheerio', 'more lightweight', 'jsdom', '', '36509548', 'if you don t need a full dom available and just want to parse and scrape manipulate html elements there is cheerio which is more lightweight than jsdom and still gives you a jquery-like api\n')
('cheerio', 'easier', 'jsdom', '', '14532393', 'i find request + cheerio to be easier than jsdom for tasks like this\n')

jtextpane	jeditorpane	3
('jtextpane', 'more', 'jeditorpane', '', '8215676', 'jtextpane is more high level as jeditorpane strange naming\n')
('jtextpane', 'more high', 'jeditorpane', '', '8215676', 'jtextpane is more high level as jeditorpane strange naming\n')
('jtextpane', 'more high level', 'jeditorpane', '', '8215676', 'jtextpane is more high level as jeditorpane strange naming\n')

microchip	avr	5
('avr', 'more', 'microchip', '', '6824099', 'as far as easy goes they are both equivalent in terms of difficulty both provide assembly and c except that the gnu toolchain for avr is more complex than microchip because it requires use of unix command line etc\n')
('microchip', 'more successful', 'avr', '', '6824099', 'microchip is more successful in industry and has better tools than avr\n')
('avr', 'more complex', 'microchip', '', '6824099', 'as far as easy goes they are both equivalent in terms of difficulty both provide assembly and c except that the gnu toolchain for avr is more complex than microchip because it requires use of unix command line etc\n')
('microchip', 'better tools', 'avr', '', '6824099', 'microchip is more successful in industry and has better tools than avr\n')
('microchip', 'more', 'avr', '', '6824099', 'microchip is more successful in industry and has better tools than avr\n')

map	dictionary	12
('map', 'better', 'dictionary', '', '33454940', 'if what you are making is a map from one word to another you might be better off with a dictionary\n')
('map', 'slightly better', 'dictionary', '', '43011853', 'map is slightly better because the shared dictionary has around 480 entries instead of around 450 but it s still inconsistent and not all 500 as expected\n')
('map', 'much more', 'dictionary', '', '46547616', 'i know this question is a bit older but in es2015 there is a new data structure called map that is much more similar to a dictionary that you would use in c#\n')
('dictionary', 'slower std', 'map', 'examples constant factor', '2699569', 'for suitably large examples of each dictionary overcomes the constant factor by which it s slower than std map and will actually do operations like lookup insertion etc\n')
('dictionary', 'more', 'map', '', '37206223', 'data structure to implement reverse functionality of a dictionary that is more than one key map to a common value using python\n')
('map', 'slower', 'dictionary', 'examples constant factor', '2699569', 'std map though is actually implemented in a way that many operations are slower than dictionary as its size gets large\n')
('map', 'more', 'dictionary', '', '47214672', 'using this hint we can try to guess that a fixmap must correspond to a dictionary data type in c# since a map is more or less like a dictionary of key-value pairs\n')
('map', 'more', 'dictionary', '', '19670609', 'the difference between a map and vector is a like an array while a map is more a dictionary of key value pairs\n')
('map', 'more', 'dictionary', '', '40393458', 'c++ std map behaves more like a python defaultdict than dictionary\n')
('map', 'much more similar', 'dictionary', '', '46547616', 'i know this question is a bit older but in es2015 there is a new data structure called map that is much more similar to a dictionary that you would use in c#\n')
('map', 'worse algorithmic', 'dictionary', 'examples constant factor', '2699569', 'i definitely wouldn t try introducing a new general-purpose type for use in python based on std map which has worse algorithmic complexity in time for many important operations and√¢ in at least some implementations√¢ leaves some optimisations to the user that dictionary already has\n')
('dictionary', 'implementation faster', 'map', '', '4157451', 'the immutable dictionary implementation is faster but no less pure in usage than the map implementation\n')

push	pull	16
('push', 'more idiomatic', 'pull', '', '28904913', 'there is a certain irony here given that within xslt push stylesheets are generally more idiomatic than pull stylesheets\n')
('push', 'cheaper', 'pull', '', '42642241', 'i guess i m just surprised that the documentation recommends the approach of querying presumably continually in my case versus keeping a tailable cursor open i would have thought that push would be cheaper than pull\n')
('pull', 'request more features', 'push', '', '12109797', 'i create new branch add those new features and than i once again made pull request but now the features i implemented in the master branch are also in my new branch so my second pull request has more features than i want to push to the original project\n')
('pull', 'request more', 'push', '', '12109797', 'i create new branch add those new features and than i once again made pull request but now the features i implemented in the master branch are also in my new branch so my second pull request has more features than i want to push to the original project\n')
('pull', 'more', 'push', 'scalable starters', '1768222', 'i have found that pull is more scalable than push\n')
('pull', 'better', 'push', 'performance subscriptions wan', '7555572', 'is the performance of pull better than push in this scenario\n')
('push', 'safer force', 'pull', '', '4674677', 'tortoise now has an option push new branch that may be safer than force pull or push\n')
('pull', 'model definitely easier', 'push', 'message processing rebus', '9999184', 'a heartbeat mechanism pull model is definitely easier to implement but a push model is far more efficient\n')
('pull', 'better', 'push', 'performance subscriptions wan', '2350342', 'the reason the pull model works better than the push model in this case is as follow\n')
('pull', 'better rebus', 'push', 'message processing rebus', '26895650', 'if in-order processing is required a much better design would be to use another message processing library that supports a pull model which i think would fit your scenario much better than rebus push model\n')
('push', 'better', 'pull', 'performance subscriptions wan', '3585336', 'how are push notification better than pull notification on iphones\n')
('push', 'model less', 'pull', 'performance subscriptions wan', '45656811', 'i guess one of them is that the push model is less coupled then the pull model\n')
('pull', 'better', 'push', 'performance subscriptions wan', '7742259', 'pull subscriptions perform much better than push subscriptions in a wan scenario\n')
('push', 'better', 'pull', '', '20215538', 'alone push is better in the accepted answer can t quite work as a push-operation in some class can require a new pull at the pushed object\n')
('push', 'far more', 'pull', 'scalable starters', '912233', 'why do you think that push is far more scalable then pull for starters\n')
('push', 'higher throughput', 'pull', '', '10728510', 'push models have higher throughput than pull models\n')

dialog	pop-up	10
('pop-up', 'better', 'dialog', 'better divs login', '18214671', 'generally a pop-up is a better option for a login dialog and a pop-up would allow you to easily navigate to the main page\n')
('pop-up', 'bigger', 'dialog', 'box datebox panel', '20348531', 'when typing in the text box the autocomplete pop-up but is bigger than the remaining space in the modal dialog\n')
('dialog', 'easier', 'pop-up', 'window bubble higher', '38296642', 'dialog makes it easier for you to create a pop-up window with customized contents\n')
('dialog', 'more', 'pop-up', '', '13521463', 'feed dialog is more intrusive in the sense that it has a facebook pop-up window\n')
('dialog', 'less intrusive', 'pop-up', '', '206134', 'from a practice standpoint - excluding accessibility - modal windows provide an alternative that are less startling as say dialog boxes and feel less intrusive than pop-up windows\n')
('pop-up', 'z-index less', 'dialog', 'box datebox panel', '16581005', 'because of datebox pop-up z-index is less then your box mean dialog box s z-index it shows behind pop-up panel\n')
('dialog', 'more intrusive', 'pop-up', '', '13521463', 'feed dialog is more intrusive in the sense that it has a facebook pop-up window\n')
('dialog', 'more', 'pop-up', '', '30921171', 'i am using jquery ui dialog to show more than one pop-up on one page each pop-up will have its own id and it will be triggered by an anchor with a attribute\n')
('dialog', 'better', 'pop-up', 'better divs login', '784719', 'use floating divs instead which looks like a modal dialog but are better than the pop-up\n')
('pop-up', 'higher', 'dialog', 'window bubble higher', '8527360', 'i realize this is an older post but we just ran into the same issue and resolved it by setting the z-index of the bubble pop-up to something higher than the dialog window\n')

benchmarking	profiling	4
('benchmarking', 'much higher', 'profiling', '', '16500703', 'the issue is that the execution time of a benchmarking is much higher about 3 times in case i do not invoke the profiling along with it than the case when the benchmarking is executing with the profiling\n')
('profiling', 'often more appropriate', 'benchmarking', '', '24810089', 'using a profiling is often more appropriate than benchmarking but it seems to be even more tricky\n')
('profiling', 'often more', 'benchmarking', '', '24810089', 'using a profiling is often more appropriate than benchmarking but it seems to be even more tricky\n')
('profiling', 'more appropriate', 'benchmarking', '', '24810089', 'using a profiling is often more appropriate than benchmarking but it seems to be even more tricky\n')

versioning	upgrade	68
('versioning', 'lower', 'upgrade', '', '34388748', 'for the case xcode versioning is lower than ios device s image you can either copy the disk image from other already updated xcode or maybe the internet or upgrade your xcode\n')
('upgrade', 'greater', 'versioning', 'older newer better', '34672781', 'you used a older versioning of vagrant before 1.5 versioning and made an upgrade to vagrant greater than 1.5 versioning\n')
('versioning', 'newer', 'upgrade', '', '1447805', 'running pear -v gives me versioning 1.7.2 when i run pear upgrade pear it says my versioning is newer than the current noe which is 1.9.0 if ran pear upgrade -f pear to force an upgrade it downloads the files and installs successfully but i still have versioning 1.7.2 and cannot install phpunit\n')
('versioning', 'higher', 'upgrade', '', '29137974', 'this will restart the site and when it runs for the first time after that it will see that the dll versioning is higher than the one in the config files and the db and will kick off the upgrade procedure\n')
('upgrade', 'lower', 'versioning', 'older newer better', '994571', 'if i enable this then any setup is ran every time it will be asking for upgrade either it is on lower versioning over higher versioning or higher versioning over lower versioning\n')
('versioning', 'older', 'upgrade', 'older newer better', '36198561', 'also i can not use custom dimension because my piwik versioning is older and i can not upgrade it now\n')
('versioning', 'higher', 'upgrade', '', '12299636', 'if blackberry device software versioning is higher than os 6 then continue the app otherwise prompt user dialog showing upgrade os first and exit the application\n')
('upgrade', 'more', 'versioning', '', '30088465', 'you want to make sure the code will work when users upgrade more than 1 versioning and that the update statement only runs the one upgrade it is needed\n')
('versioning', 'less', 'upgrade', '', '42665119', 'if you have six versioning less than 1.10 upgrade it\n')
('upgrade', 'newer older', 'versioning', 'older newer better', '36084301', 'also don t forget to upgrade the gradle plugin to 1.5.0 or newer as older versioning are not supported\n')
('upgrade', 'newer browser', 'versioning', 'older newer better', '1872552', 'these locations will convert when they go to windows 7 perhaps or because the application they use internally is upgrade and needs the newer browser versioning\n')
('versioning', 'earlier', 'upgrade', '', '42763968', 'however if you have a current production mysql versioning that is earlier than v5.7.7 then the removal of this restriction on views should only be one of the criteria being assessed while making a decision as to upgrade or not\n')
('versioning', 'less', 'upgrade', '', '8395720', 'the dbi versioning is less likely to be the source of the trouble but it would still be good to upgrade to the most current versioning\n')
('versioning', 'older', 'upgrade', 'older newer better', '40344093', 'if the versioning is older than 0.10 please upgrade\n')
('upgrade', 'further', 'versioning', '', '6078158', 'you do want to upgrade no further than versioning 2.1.6 at the moment as it s the latest one that supports rails 2.3.x\n')
('versioning', 'lower', 'upgrade', 'product3 lower', '44174731', 'and my php versioning is lower than 5.3.0 i upgrade that fixed my problem\n')
('versioning', 'worse', 'upgrade', '', '46646323', 'the problem was the same on both versioning though perhaps a bit worse after the upgrade\n')
('versioning', 'older', 'upgrade', 'older newer better', '31218967', 'if your versioning is older than that it won t work and you ll need to upgrade\n')
('versioning', 'less', 'upgrade', '', '24136959', 'you are using a method to bind click event in your case is live and this has been removed in the latest jquery libraries from 1.9+ onwards so make sure your versioning is less than 1.9 or better to upgrade the library and use the recommended method for it .on to delegate the event event delegation syntax is little different with .on\n')
('upgrade', 'better last', 'versioning', 'older newer better', '4513809', 'you can safely upgrade to trunk its better than last versioning anyway\n')
('upgrade', 'bigger jumps', 'versioning', '', '38424078', 'btw - i went back and did the upgrade again with bigger jumps between versioning actually ran the site after each upgrade and it went perfectly\n')
('upgrade', 'newer', 'versioning', 'older newer better', '38471241', 'however if that upgrade includes myself say i have a package named server and part of the upgrade includes a newer versioning of server then the upgrade fails\n')
('upgrade', 'greater then', 'versioning', 'installshield equal first', '12462524', 'i am using installshield 2011 and what i want to do is on an upgrade to install all the files that are equal or greater than then versioning that is already installed\n')
('versioning', 'better approach', 'upgrade', '', '20304639', 'upgrading a language or service can often have disastrous or unexpected consequences thus sandboxing alternate versioning seems the better approach plus it makes projects immune from os upgrade\n')
('versioning', 'higher', 'upgrade', 'older newer better', '24226790', 'if you are running that versioning or higher or after you upgrade follow these steps\n')
('versioning', 'higher', 'upgrade', '', '24834951', 'also what happens when common msi c s versioning is higher in product b and b upgrade c on install\n')
('upgrade', 'more simple older', 'versioning', 'older newer better', '33321665', 'to upgrade your plone site from 4.3 to 5.0 you can check this link section upgrading plone 4.x to 5.0 the migration should be more simple than older versioning like 3.x or 2.x\n')
('upgrade', 'sequence much simpler', 'versioning', '', '7859219', 'the upgrade sequence is much simpler i have a hard link in the app that points to the latest versioning of the apk the donwload starts and automatically laucnhes the install\n')
('upgrade', 'more', 'versioning', '', '27518664', 'i heard that i should upgrade beatbox to something more than the versioning 21 to be able to access the forecastingitem object so i tried apt-get update upgrade beatbox but i still get the error\n')
('versioning', 'much more', 'upgrade', '', '6544864', 'nevertheless i would recommend sticking to the queryover versioning it s much more intuitive and you avoid magic strings especially that you don t have to upgrade the nh versioning\n')
('upgrade', 'probably better', 'versioning', 'older newer better', '27508192', 'as painful as it s going to be for both of us to perform the upgrade it s probably better to commit the time now and get the code up to the latest versioning than to try to find an older versioning that reduces the effort\n')
('versioning', 'older', 'upgrade', '', '44193413', 'by looking at various blogs i understand glassfish versioning 4.1 has older jackson library 2.4 which does not have this method and need to upgrade jakcson versioning 2.8\n')
('upgrade', 'actually newer', 'versioning', 'older newer better', '34669872', 'upgrade actually installs newer versioning of the packages you have\n')
('versioning', 'much more intuitive', 'upgrade', '', '6544864', 'nevertheless i would recommend sticking to the queryover versioning it s much more intuitive and you avoid magic strings especially that you don t have to upgrade the nh versioning\n')
('versioning', 'older', 'upgrade', 'older newer better', '46572148', 'warning you are using requests versioning which is older than requests-oauthlib expects please upgrade to 2.0.0 or later\n')
('upgrade', 'actually newer', 'versioning', 'older newer better', '46809434', 'apt-get upgrade actually installs the newer versioning\n')
('versioning', 'better', 'upgrade', 'older newer better', '14940344', 'if you re using older versioning it is better to upgrade and avail benefits of c++11 features as much as possible\n')
('versioning', 'better idea', 'upgrade', 'older newer better', '21257793', 'if you think that writing two apps for both versioning is a better idea then should i write app on wp8 first and at the end remove special wp8 features to downgrade it for wp7.5 or maybe i should write wp7.5 app and then add some wp8 features to upgrade it to wp8\n')
('versioning', 'easier', 'upgrade', '', '1214032', 'does anyone know if the upcoming v8 versioning is easier to upgrade or if its easier to upgrade from a certain previous versioning compared to earlier versioning\n')
('versioning', 'better', 'upgrade', '', '20304639', 'upgrading a language or service can often have disastrous or unexpected consequences thus sandboxing alternate versioning seems the better approach plus it makes projects immune from os upgrade\n')
('upgrade', 'easier newer', 'versioning', 'older newer better', '46176002', 'itext versioning is 5.5.x but i guess we can upgrade it if the task would be easier with newer versioning\n')
('versioning', 'older', 'upgrade', 'older newer better', '47159711', 'if your versioning is older than 5.0.0 run pip install --upgrade notebook to upgrade\n')
('versioning', 'probably more', 'upgrade', '', '24673291', 'no problem mnt i mentioned possible compatibility between the method tried in 4.25 my solution and 4.00 your versioning but keep in mind the gap in time between these versioning is probably more than two years of upgrade and also a jump between backend databases versioning oracle 10g to oracle 11g r1.\n')
('upgrade', 'higher', 'versioning', 'previous target sdk', '2984015', 'i am wondering what happens when i release a upgrade that has a higher target sdk versioning then the previous versioning of my app\n')
('upgrade', 'more', 'versioning', '', '32629961', 'and if somebody is running a 6-month old versioning with a known bug upgrade becomes a more acceptable answer if they are 12 versioning behind\n')
('versioning', 'less', 'upgrade', '', '21703040', 'if kernel versioning is less than 2.6 then we recommend to upgrade it\n')
('versioning', 'greater', 'upgrade', 'installshield equal first', '39303628', 'so just change your versioning to something else which must be greater than the upgrade versioning so that again first condition will be false and system will not check further and will connect without using tls\n')
('versioning', 'less', 'upgrade', '', '35799291', 'and looks like your php versioning is less then 5.5 so upgrade your php versioning 5.5 and it will work\n')
('versioning', 'older jackson', 'upgrade', '', '44193413', 'by looking at various blogs i understand glassfish versioning 4.1 has older jackson library 2.4 which does not have this method and need to upgrade jakcson versioning 2.8\n')
('upgrade', 'rule older', 'versioning', 'older newer better', '4591554', 'this way the upgrade rule detects older versioning and shows a custom dialog if it does\n')
('versioning', 'definitely more', 'upgrade', '', '8607666', 'if the code doesn t run on php 5.2+ then you can t use a current phpunit versioning which is definitely more of a concern and my first general recommendation is to find any issues an php 5 upgrade might bring\n')
('versioning', 'lower then', 'upgrade', 'product3 lower', '40175754', 'if product3 is installed and installed versioning is lower then upgrade\n')
('upgrade', 'slower previous', 'versioning', 'previous target sdk', '35099925', 'since the upgrade the content authors are complaining that the experience editor performance is much slower than previous versioning\n')
('versioning', 'less likely', 'upgrade', '', '8395720', 'the dbi versioning is less likely to be the source of the trouble but it would still be good to upgrade to the most current versioning\n')
('versioning', 'less', 'upgrade', '', '42665044', 'if you have six versioning less than 1.10 upgrade it\n')
('upgrade', 'more acceptable', 'versioning', '', '32629961', 'and if somebody is running a 6-month old versioning with a known bug upgrade becomes a more acceptable answer if they are 12 versioning behind\n')
('upgrade', 'older', 'versioning', 'older newer better', '25074930', 'windows installer rollback will work as you request if you use 1 a minor upgrade or 2 a properly sequenced major upgrade that uninstalls the older versioning after successfully updating all files\n')
('versioning', 'newer', 'upgrade', '', '26278821', 'at least if the php versioning is newer and not including the deprecated functions like the extension in the error message i recommend to upgrade to a newer typo3 versioning and find a way to replace the extension ph_nextgenmenu with a newer one or edit it manually to use the typo3 sql api or the newer php functions directly\n')
('versioning', 'number easier', 'upgrade', '', '142427', 'using compatibility as the central point in the versioning number makes it easier for users especially if te product is a library to judge whether or not they can expect a smoothe and safe upgrade or not\n')
('upgrade', 'more', 'versioning', '', '13499762', 'code upgrade require system downtime and if you have a large cluster that cannot run more than one versioning of code at once you ll need to take the entire cluster down at once\n')
('upgrade', 'setup older', 'versioning', 'older newer better', '44779572', 'but during upgrade setup launches the older versioning setup bootstrapper ui\n')
('versioning', 'number bigger', 'upgrade', '', '5514765', 'if the apps versioning number is bigger it s an upgrade and you now need to save that as the last installer versioning\n')
('versioning', 'longer', 'upgrade', '', '45740908', 'by default psycopg2 uses its own versioning of libssl and it seemed to keep a dependency on an old versioning of the library which no longer existed after my upgrade\n')
('versioning', 'number always greater', 'upgrade', '', '25162101', 'for example if you start with a table and trunk adds column a and the branch adds column b then you merge trunk to branch - you cannot realistically upgrade to the versioning with both unless the branch versioning number is always greater than the trunk s upgrade script and that doesn t work if you subsequently merge trunk to the branch\n')
('versioning', 'older', 'upgrade', 'older newer better', '37105692', 'if your ruby versioning is older than 2.2.4 then please upgrade it\n')
('versioning', 'older', 'upgrade', 'older newer better', '45592457', 'if your server versioning is older it is highly recommended to upgrade postgres anyway to use jsonb efficiently\n')
('versioning', 'less then', 'upgrade', '', '35799291', 'and looks like your php versioning is less then 5.5 so upgrade your php versioning 5.5 and it will work\n')
('versioning', 'somewhat earlier', 'upgrade', '', '19064464', 'if the code is to be distributed consider compiling that java class with a target jvm versioning that is somewhat earlier than the latest √¢ otherwise some users will be forced to upgrade their jvm to run your software and some of those won t have admin rights to do that.\n')

icefaces	richfaces	7
('icefaces', 'more semantic', 'richfaces', '', '69545', 'there is icefaces which provides more semantic support than richfaces .also you can try nitobi suite which also provides similar kinda solution.if you are not satisfied with any of these i suggest try to write your own part extending the sun faces\n')
('richfaces', 'more', 'icefaces', 'components easy better', '1465066', 'richfaces looks more good option to work than icefaces bcoz it has inbuilt support its easy to learn its long time support guarantee for seam+richfaces combination\n')
('icefaces', 'more', 'richfaces', '', '69545', 'there is icefaces which provides more semantic support than richfaces .also you can try nitobi suite which also provides similar kinda solution.if you are not satisfied with any of these i suggest try to write your own part extending the sun faces\n')
('icefaces', 'more semantic support', 'richfaces', '', '69545', 'there is icefaces which provides more semantic support than richfaces .also you can try nitobi suite which also provides similar kinda solution.if you are not satisfied with any of these i suggest try to write your own part extending the sun faces\n')
('icefaces', 'more good', 'richfaces', 'components easy better', '3252727', 'icefaces provides more good looking components than richfaces\n')
('icefaces', 'better', 'richfaces', '', '1014688', 'that said i found icefaces to be a useful product and much better than richfaces especially in terms of the quality of the documentation\n')
('richfaces', 'better', 'icefaces', 'components easy better', '3252727', 'richfaces has better ajax support than icefaces\n')

jmock	mockito	3
('jmock', 'more complex scenarios', 'mockito', '', '2482760', 'for the record jmock as of today supports more complex scenarios than mockito that s why the initial learning curve is steeper\n')
('jmock', 'better', 'mockito', '', '2668072', 'i suggest that you to move jmock which has a better api or even to mockito whose protocol is even simpler\n')
('jmock', 'better api', 'mockito', '', '2668072', 'i suggest that you to move jmock which has a better api or even to mockito whose protocol is even simpler\n')

dask	pandas	5
('dask', 'more familiar', 'pandas', '', '39856364', 'this may help those confused by dask and hdf5 but more familiar with pandas like myself\n')
('pandas', 'far more', 'dask', '', '44834924', 'pandas is far more flexible for working with data so i often bring parts of dask dataframes into memory manipulate columns and create new ones\n')
('dask', 'dataframes faster', 'pandas', '', '45993751', 'when hdf5 storage can be accessed fast than .csv and when dask creates dataframes faster than pandas why is dask from hdf5 slower than dask from csv\n')
('dask', 'slower', 'pandas', '', '43827567', '1 i guess dask will be slower than pandas for smaller datasets\n')
('pandas', 'far more flexible', 'dask', '', '44834924', 'pandas is far more flexible for working with data so i often bring parts of dask dataframes into memory manipulate columns and create new ones\n')

fckeditor	summernote	3
('fckeditor', 'more complete tool', 'summernote', '', '39551686', 'i know summernote does that but fckeditor is a more complete tool than summernote so i cant switch to that\n')
('fckeditor', 'more complete', 'summernote', '', '39551686', 'i know summernote does that but fckeditor is a more complete tool than summernote so i cant switch to that\n')
('fckeditor', 'more', 'summernote', '', '39551686', 'i know summernote does that but fckeditor is a more complete tool than summernote so i cant switch to that\n')

stanford-nlp	opennlp	3
('stanford-nlp', 'easier', 'opennlp', 'training project stanford', '6603262', 'i looking to use a suite of nlp tools for a personal project and i was wondering whether stanford s stanford-nlp is easier to use or opennlp\n')
('opennlp', 'easier', 'stanford-nlp', 'training project stanford', '45592826', 'i find training in opennlp much easier than in stanford-nlp\n')
('stanford-nlp', 'more accurate detection', 'opennlp', '', '40036005', 'but if you will look at the accuracy level stanford-nlp have more accurate detection than opennlp\n')

ecdsa	rsa	5
('rsa', 'much faster', 'ecdsa', '', '44352675', 'rsa is much faster then ecdsa at verification\n')
('ecdsa', 'faster', 'rsa', '', '38001023', 'ecdsa is much faster than rsa for private key operations so it should definitely be preferred over rsa when high efficiency is required unless rsa is still fast enough something that may very well be the case\n')
('rsa', 'much faster then', 'ecdsa', '', '44352675', 'rsa is much faster then ecdsa at verification\n')
('ecdsa', 'much faster', 'rsa', '', '38001023', 'ecdsa is much faster than rsa for private key operations so it should definitely be preferred over rsa when high efficiency is required unless rsa is still fast enough something that may very well be the case\n')
('ecdsa', 'smaller', 'rsa', '', '2350959', 'if you re interesting in reducing the size of the resulting cookies you should consider using ecdsa rather than rsa to produce the signatures - ecdsa signatures are considerably smaller than rsa signatures of an equivalent security factor\n')

bufferedoutputstream	dataoutputstream	4
('bufferedoutputstream', 'more', 'dataoutputstream', '', '30035138', 'a bufferedoutputstream is more appropriate that a dataoutputstream imho\n')
('bufferedoutputstream', 'more efficient', 'dataoutputstream', '', '36750852', 'it will wrap the original stream in a bufferedoutputstream which is more efficient which is then wrapped into a dataoutputstream which offers additional nice features like writeint writelong and so on\n')
('bufferedoutputstream', 'more appropriate', 'dataoutputstream', '', '30035138', 'a bufferedoutputstream is more appropriate that a dataoutputstream imho\n')
('bufferedoutputstream', 'more', 'dataoutputstream', '', '36750852', 'it will wrap the original stream in a bufferedoutputstream which is more efficient which is then wrapped into a dataoutputstream which offers additional nice features like writeint writelong and so on\n')

weblogic	jboss	7
('weblogic', 'more complex', 'jboss', '', '5919293', 'i had worked on jboss for a year and on weblogic for more than a year now my experience with the web logic is good compared to jboss weblogic is more stable and robust it can handle more than 3000 concurrent requests without throwing a single exception where jboss failed to do so and admin console for the weblogic is excellent but i think weblogic is more complex then jboss\n')
('weblogic', 'more', 'jboss', '', '5919293', 'i had worked on jboss for a year and on weblogic for more than a year now my experience with the web logic is good compared to jboss weblogic is more stable and robust it can handle more than 3000 concurrent requests without throwing a single exception where jboss failed to do so and admin console for the weblogic is excellent but i think weblogic is more complex then jboss\n')
('jboss', 'much more resource', 'weblogic', '', '30139205', 'if your application is self-sufficient i would recommend going for tomcat as jboss is much more resource intensive as well as weblogic moreover weblogic costs some money\n')
('weblogic', 'more stable', 'jboss', '', '5919293', 'i had worked on jboss for a year and on weblogic for more than a year now my experience with the web logic is good compared to jboss weblogic is more stable and robust it can handle more than 3000 concurrent requests without throwing a single exception where jboss failed to do so and admin console for the weblogic is excellent but i think weblogic is more complex then jboss\n')
('weblogic', 'more', 'jboss', '', '33929846', 'i am running an application on jboss 7 and weblogic 12 when i make a soap call on weblogic is more restrictive than jboss\n')
('weblogic', 'more restrictive', 'jboss', '', '33929846', 'i am running an application on jboss 7 and weblogic 12 when i make a soap call on weblogic is more restrictive than jboss\n')
('jboss', 'much more', 'weblogic', '', '30139205', 'if your application is self-sufficient i would recommend going for tomcat as jboss is much more resource intensive as well as weblogic moreover weblogic costs some money\n')

free	realloc	5
('realloc', 'more complicated', 'free', '', '7188085', 'dynamic memory management on an small embedded system is tricky to begin with but realloc is no more complicated than a free and malloc of course that s not what it does\n')
('realloc', 'more', 'free', '', '7188085', 'dynamic memory management on an small embedded system is tricky to begin with but realloc is no more complicated than a free and malloc of course that s not what it does\n')
('realloc', 'even more efficient', 'free', '', '26536703', 'if you don t mind the libc allocation functions realloc is even more efficient it wont copy the data on a shrink just mark the extra memory as free and if you grow the memory and there is memory free after it will mark the needed memory as used and not copy either\n')
('free', 'better', 'realloc', '', '4190023', 'a malloc free pair can be better than a realloc if you don t need to keep around the original memory\n')
('realloc', 'even more', 'free', '', '26536703', 'if you don t mind the libc allocation functions realloc is even more efficient it wont copy the data on a shrink just mark the extra memory as free and if you grow the memory and there is memory free after it will mark the needed memory as used and not copy either\n')

hyperthreading	processors	6
('hyperthreading', 'poorer performances', 'processors', '', '5195665', 'first step would be to investigate why a processors with hyperthreading simultaneous multithreading could lead to poorer performances than a processors without this technology\n')
('hyperthreading', 'more logical', 'processors', '', '2904283', 'a quad core intel cpu s with hyperthreading enabled has 4 physical cores yet 8 logical processors hyperthreading creates 4 more logical processors\n')
('hyperthreading', 'more', 'processors', '', '21875112', 'you may find that hyperthreading helps more on code that is using large amounts of memory so that the processors is regularly blocked on fetching from memory\n')
('hyperthreading', 'more', 'processors', '', '2904283', 'a quad core intel cpu s with hyperthreading enabled has 4 physical cores yet 8 logical processors hyperthreading creates 4 more logical processors\n')
('hyperthreading', 'greater', 'processors', '', '14507745', 'in computer 1 the eigen3 performance is worse because the number of total processors virtual + physical - √¢ due to hyperthreading is greater than the number of physical processors\n')
('hyperthreading', 'better older', 'processors', '', '10403526', 'more modern processors handle hyperthreading better than older processors\n')

onkeydown	onkeyup	3
('onkeydown', 'more preferable', 'onkeyup', '', '7049468', 'usually onkeydown is more preferable then onkeyup for such combo\n')
('onkeydown', 'better', 'onkeyup', '', '3789935', 'for browsers that don t support either event you can fall back to onkeydown with a 0ms timer for the check which is a little better than onkeyup\n')
('onkeydown', 'more', 'onkeyup', '', '7049468', 'usually onkeydown is more preferable then onkeyup for such combo\n')

onitemclicklistener	onclicklistener	3
('onitemclicklistener', 'better', 'onclicklistener', '', '28295873', 'if you still would love to manage onclicklistener i will tell why onitemclicklistener is much better than onclicklistener\n')
('onclicklistener', 'worse', 'onitemclicklistener', '', '42697073', 'is using onclicklistener in arrayadapter worse than onitemclicklistener\n')
('onitemclicklistener', 'much better', 'onclicklistener', '', '28295873', 'if you still would love to manage onclicklistener i will tell why onitemclicklistener is much better than onclicklistener\n')

gethashcode	equals	11
('gethashcode', 'faster equivalent', 'equals', 'equivalent performance implementation', '20598647', 'even though gethashcode itself should be fast it s not mostly faster than equivalent equals\n')
('gethashcode', 'more tolerant', 'equals', '', '18076696', 'override both methods but make gethashcode more tolerant than equals that means make unequal objects have the same hash code and not the opposite\n')
('equals', 'implementation much more expensive', 'gethashcode', '', '20598647', 'in the equals method only if you re certain the ensuing equals implementation is much more expensive than gethashcode which is not vast majority of cases\n')
('equals', 'implementation much more', 'gethashcode', '', '20598647', 'in the equals method only if you re certain the ensuing equals implementation is much more expensive than gethashcode which is not vast majority of cases\n')
('equals', 'slower', 'gethashcode', 'equivalent performance implementation', '31878297', 'if you do not implement gethashcode union will call equals which will work but is slower than gethashcode\n')
('equals', 'more specific', 'gethashcode', '', '2872561', 'equals on the other hand can test accross a larger number of fields - ie its test is more specific than gethashcode comparisons\n')
('gethashcode', 'faster', 'equals', '', '35866139', '1 is comparison via gethashcode check if the hashcode of both objects are the same faster than equals\n')
('gethashcode', 'faster', 'equals', 'equivalent performance implementation', '36041588', 'and that is for performance reasons assuming that a gethashcode implementation should always be much faster than an equals implementation\n')
('equals', 'more expensive', 'gethashcode', '', '20598647', 'in the equals method only if you re certain the ensuing equals implementation is much more expensive than gethashcode which is not vast majority of cases\n')
('gethashcode', 'quicker', 'equals', '', '13938719', 'not sure about the overhead of calling gethashcode a few million times but comparing two ints is probably going to be a lot quicker than the equals object method\n')
('gethashcode', 'quicker', 'equals', '', '16381', 'gethashcode should be a lot quicker than equals but doesn t need to be unique\n')

arrays	for-loop	81
('for-loop', 'still more times', 'arrays', '', '34389194', 'but the outer for-loop still runs 9 more times pushing temp which is already a set number onto the numbers arrays\n')
('for-loop', 'faster', 'arrays', 'faster foreach-loop better', '34076726', 'for example sometimes a for-loop is faster than the built-in arrays methods in some browsers\n')
('for-loop', 'faster', 'arrays', 'faster foreach-loop better', '41177212', 'the for-loop is faster than the foreach-loop if the arrays must only be\n')
('for-loop', 'quicker', 'arrays', '', '21505023', 'to my knowledge and research so far - javascript s native for-loop is quicker than arrays map for iterating through the arrays\n')
('arrays', 'slower', 'for-loop', '', '27901842', 'in this case instead of generating two large matrices with the row and column indices you can use a for-loop on the rows of your arrays it s slower but not as slow as a double for-loop\n')
('for-loop', 'here more', 'arrays', '', '41146354', 'the for-loop here is more efficient for 2 reasons a you don t have to construct a temporary arrays of tuples like with zip and b it returns false as soon as a non-match is found\n')
('for-loop', 'usually better', 'arrays', 'straightforward opinion specific', '41556915', 'in my opinion a for-loop is usually better for doing something a specific number of times and if you re just iterating over every item in an arrays foreach is usually more straightforward\n')
('arrays', 'longer', 'for-loop', 'longer iterations division', '13821093', 'note that this is one of those cases where matrix division of large arrays takes longer than a for-loop\n')
('for-loop', 'more', 'arrays', '', '32296275', 'a for-loop is more adequate than a do while for simply iterating an arrays string\n')
('for-loop', 'less time', 'arrays', '', '26838242', 'i am just starting to learn about the streams and parallel in java and i was wondering why a normal for-loop takes less time than intstream paralleled at adding items to an arrays\n')
('arrays', 'faster', 'for-loop', 'faster foreach-loop better', '29868617', 'this is the reason why working with the higher-dimensional arrays ends up being so much faster than the for-loop -based code\n')
('arrays', 'longer', 'for-loop', 'longer iterations division', '15291406', 'the hits arrays is longer than numtotalhits so your for-loop limit should be numtotalhits instead of hits.length\n')
('arrays', 'faster', 'for-loop', 'faster foreach-loop better', '46597341', 'would an arrays be faster than a for-loop in this case\n')
('for-loop', 'smaller', 'arrays', '', '8546694', 'to use this in a loops you can write a simple for-loop which always checks if the index stil is smaller than the arrays length\n')
('for-loop', '4x faster', 'arrays', '', '34796354', 'running a quick benchmark it seems that the for-loop is 4x faster even in the worst case where you have to replace every single time and you construct a new arrays to hold the replacements\n')
('for-loop', 'less', 'arrays', 'length index version', '41386426', 'i fixed this by adding after the for-loop and before the return statement which fixes the problem but if the for-loop is written to continue while i is less than the arrays length and when the arrays only contains a the length is one and i is 0 shouldn t it also pop a\n')
('arrays', 'usually more information', 'for-loop', '', '11852754', 'an arrays usually offers more information for alias analysis and after some optimizations the same code will be generated anyway search for-loop strength reduction if curious\n')
('arrays', 'more', 'for-loop', '', '30296682', 'but i don t want to use a for-loop as my json arrays has more than 3 entries and if i request a lot of data in short time it takes long time till the for-loop goes through every entry\n')
('for-loop', 'less', 'arrays', '', '26838242', 'i am just starting to learn about the streams and parallel in java and i was wondering why a normal for-loop takes less time than intstream paralleled at adding items to an arrays\n')
('arrays', 'usually more', 'for-loop', '', '11852754', 'an arrays usually offers more information for alias analysis and after some optimizations the same code will be generated anyway search for-loop strength reduction if curious\n')
('for-loop', 'better', 'arrays', 'faster foreach-loop better', '21640491', 'edit using an enhanced for-loop is a lot better than using arrays\n')
('arrays', 'method faster way', 'for-loop', 'faster foreach-loop better', '18444065', 'when you know both objects are arrays method is a faster way to check equality than for-loop\n')
('arrays', 'more work', 'for-loop', '', '44034616', 'but modifying the arrays is more work than a simple for-loop again\n')
('for-loop', 'probably closer as', 'arrays', '', '16072349', 'try catch inside for-loop is probably closer as long as you don t mind the unassigned values left in the arrays\n')
('for-loop', 'less memory', 'arrays', '', '37159258', 'in such a simple arrays you shouldn t be concerned about memory usage but the for-loop consumes less memory than foreach because foreach uses an internal copy of the arrays\n')
('for-loop', 'more suitable', 'arrays', '', '34698551', 'a for-loop is more suitable to iterate through the arrays\n')
('arrays', 'much better', 'for-loop', 'faster foreach-loop better', '38359658', 'you can use array.prototype.find method to check if the element exists in arrays which is much better than perform a traditional for-loop\n')
('arrays', 'better', 'for-loop', 'faster foreach-loop better', '27683326', 'but when looping through an arrays it s better to use a regular for-loop\n')
('for-loop', 'faster', 'arrays', 'faster foreach-loop better', '32350088', 'thus the for-loop is faster than the foreach-loop if the arrays must\n')
('for-loop', 'bigger', 'arrays', 'length index version', '18884550', 'it turns out i had a hard coded maximum index in my for-loop which was bigger than the arrays i was trying to assign to\n')
('for-loop', 'faster', 'arrays', 'faster foreach-loop better', '37788181', 'i completely failed to check that assertion and just jumped into the analysis of how the enhanced for-loop is faster on arrays than lists\n')
('for-loop', '4x faster even', 'arrays', '', '34796354', 'running a quick benchmark it seems that the for-loop is 4x faster even in the worst case where you have to replace every single time and you construct a new arrays to hold the replacements\n')
('arrays', 'smaller', 'for-loop', 'faster foreach-loop better', '43668103', 'as mentioned above as you remove items the arrays gets smaller so a for-loop is probably not the best solution\n')
('for-loop', 'less', 'arrays', 'length index version', '8345962', 'when i try to access it with a for-loop where its index is less than the arrays length i get the following error message typeerror function object is unsubscriptable\n')
('for-loop', 'more', 'arrays', '', '46087164', 'in your code on line in the for-loop does no more point to an arrays --the compiler has no information about the length of the variable that it s pointing at whether it is an arrays a single chars or an int or something else-- but it is just a plain pointer presumably a pointer pointing to a default int\n')
('arrays', 'more iterations', 'for-loop', 'longer iterations division', '16164311', 'the longer the arrays gets the more iterations your for-loop will need\n')
('arrays', 'typically more straightforward', 'for-loop', 'straightforward opinion specific', '34030414', 'in its implementation foreach executes a closure over every element in the arrays this is typically more straightforward and transparent alternative to old-fashioned for-loop\n')
('for-loop', 'better', 'arrays', 'faster foreach-loop better', '23501241', 'the questions should i use for-loop or is it better to do it recursively next insert will be called after previous is done should i check if saved.length datalength and then return the arrays or is there some better way how to do it\n')
('for-loop', 'more adequate', 'arrays', '', '32296275', 'a for-loop is more adequate than a do while for simply iterating an arrays string\n')
('arrays', 'faster', 'for-loop', 'faster foreach-loop better', '19608875', 'i tried this code with my the big arrays it is around 10 to 20 times faster than a for-loop solution and around 200 times fast than the old code\n')
('arrays', 'faster', 'for-loop', '', '2963102', 'it returns a byte arrays of all the pixels which can be iterated much faster than a for-loop with a call to getpixel inside nested inside another for-loop\n')
('for-loop', 'faster', 'arrays', 'faster foreach-loop better', '44503420', 'the for-loop is faster than the foreach-loop if the arrays must only be accessed once per iteration\n')
('for-loop', 'ndx less', 'arrays', '', '13575677', 'on the last iteration of the outer for-loop ndx is one less than array.length so when you call arrays ndx+1 that is equivalent to arrays array.length which out of bounds since arrays start indexing at 0\n')
('for-loop', 'worse', 'arrays', '', '12296053', 'so then i think to go with that approach i would end up with a for-loop and loads of add calls but surely that is even worse than the arrays copy isn t it\n')
('for-loop', 'more', 'arrays', '', '39498852', 'this is a scenario where a traditional for-loop is more handy than just iterating over the arrays\n')
('for-loop', 'more', 'arrays', 'faster foreach-loop better', '21524225', 'im going to have a second for-loop that makes more arrays and names these arrays as the strings from my previous arrays\n')
('for-loop', 'faster', 'arrays', '', '12418192', 'it is clear without any performance tests that native javascript for-loop is faster but there is no big difference for small arrays like 10-20 small items\n')
('for-loop', 'nothing more', 'arrays', 'faster foreach-loop better', '9251272', 'looping with a for-loop is nothing more than a basic iteration of an arrays using a for-loop\n')
('for-loop', 'more point', 'arrays', '', '46087164', 'in your code on line in the for-loop does no more point to an arrays --the compiler has no information about the length of the variable that it s pointing at whether it is an arrays a single chars or an int or something else-- but it is just a plain pointer presumably a pointer pointing to a default int\n')
('arrays', 'slower', 'for-loop', '', '14566564', 'when summing an arrays over a specific axis the dedicated arrays method array.sum ax may actually be slower than a for-loop\n')
('arrays', 'faster', 'for-loop', 'faster foreach-loop better', '13200688', 'iterating pair-wise you d normally do something like but iterating over an arrays is faster than using a c-style for-loop\n')
('for-loop', 'more', 'arrays', '', '34698551', 'a for-loop is more suitable to iterate through the arrays\n')
('for-loop', 'probably better', 'arrays', 'good small amount', '36037302', 'i suppose the first option is good for small arrays but a for-loop is probably better practice as the amount of code would remain the same regardless of arrays size\n')
('for-loop', 'far better', 'arrays', 'faster foreach-loop better', '35089734', 'but then normal for-loop is far better for arrays than using for-in which is actually for object\n')
('for-loop', 'probably closer', 'arrays', '', '16072349', 'try catch inside for-loop is probably closer as long as you don t mind the unassigned values left in the arrays\n')
('arrays', 'better', 'for-loop', 'faster foreach-loop better', '10956586', 'but you will have loops the outer arrays in order to get it to work which would be better done with a for-loop so you reference both at once\n')
('arrays', 'more efficient', 'for-loop', '', '6676226', 'the only way to copy arrays that is more efficient than for-loop coding is system.arraycopy\n')
('arrays', 'less', 'for-loop', 'length index version', '31072639', 'if the length of the arrays is less than 8 a regular for-loop summation is performed\n')
('arrays', 'shorter', 'for-loop', 'faster foreach-loop better', '35563476', 'because if the first word in arrays is shorter than second one you need second for-loop\n')
('arrays', 'simpler', 'for-loop', '', '41347938', 'note that you should check if index is within arrays bounds in such cases and that system.arraycopy is more efficient and arguably simpler than a for-loop for copying arrays\n')
('arrays', 'better speed', 'for-loop', 'good small amount', '10511218', 'use a for-each loops to go through a range it s not as fast as using a variant arrays but keeps things simple and offers better speed than a for-loop\n')
('arrays', 'more', 'for-loop', '', '6676226', 'the only way to copy arrays that is more efficient than for-loop coding is system.arraycopy\n')
('for-loop', 'here more efficient', 'arrays', '', '41146354', 'the for-loop here is more efficient for 2 reasons a you don t have to construct a temporary arrays of tuples like with zip and b it returns false as soon as a non-match is found\n')
('arrays', 'shorter', 'for-loop', 'faster foreach-loop better', '39674479', 'in this case if any element in arrays is shorter than 11 symbols will become big and for-loop will stop executing\n')
('for-loop', 'less', 'arrays', 'size user program', '31977008', 'okay so after telling the user to enter the size of the arrays the arrays was assigned to lets say 5 therefore in the first for-loop the program is checking if i is less than the arrays size so it can only be entered 5 times as that is the size of the arrays\n')
('arrays', 'more', 'for-loop', '', '12859396', 'next i can use 3rd 4th and 5th level of arrays means more than for-loop statement will be assign\n')
('for-loop', 'much more reliable', 'arrays', '', '27306889', 'i ve used it for convenience a for-loop is much more reliable for converting an htmlcollection to an arrays\n')
('arrays', 'more', 'for-loop', '', '44034616', 'but modifying the arrays is more work than a simple for-loop again\n')
('for-loop', 'less', 'arrays', '', '27032881', 'so when you go up an arrays 0-9 you want the top of a for-loop to be less than the arrays length when you are going down the arrays 9-0 you want the lower bound to be less than or equal to the bottom of the arrays otherwise you will start out trying to access at 10 the arrays length and get an outofrangeexception\n')
('arrays', 'much larger', 'for-loop', 'length index version', '41951140', 'above is a simplified version of my actual code where the c arrays is much larger so i have to use a for-loop to get every index\n')
('for-loop', 'better', 'arrays', '', '29865957', 'also with the for-loop it s considered better to limit the scope of the iterating variable i and to use println you need system.out not just system and you need a string java arrays do not override tostring so something to output the numbers the user entered after loops like\n')
('for-loop', 'less', 'arrays', 'size user program', '9698965', 'but the for-loop is not reading writing the last part of the parent file which is less than the arrays size\n')
('for-loop', 'much more', 'arrays', '', '27306889', 'i ve used it for convenience a for-loop is much more reliable for converting an htmlcollection to an arrays\n')
('for-loop', 'greater', 'arrays', 'length index version', '32706815', 'also change your logic in the for-loop to be not since i will not ever be greater than the arrays length\n')
('for-loop', 'still more', 'arrays', '', '34389194', 'but the outer for-loop still runs 9 more times pushing temp which is already a set number onto the numbers arrays\n')
('for-loop', 'more handy', 'arrays', '', '39498852', 'this is a scenario where a traditional for-loop is more handy than just iterating over the arrays\n')
('arrays', 'better', 'for-loop', 'faster foreach-loop better', '41821054', 'since it s an arrays it s better to use a for-loop with a counter variable i which starts from 1\n')
('for-loop', 'less', 'arrays', '', '37159258', 'in such a simple arrays you shouldn t be concerned about memory usage but the for-loop consumes less memory than foreach because foreach uses an internal copy of the arrays\n')
('arrays', 'easier', 'for-loop', 'faster foreach-loop better', '40577230', 'with one arrays one can do which is easier than a for-loop\n')
('for-loop', 'much better', 'arrays', '', '19520802', 'notice that besides using the filter method or not even with a plain for-loop is much better for performance create a new arrays from scratch instead of mutate the current one multiple times\n')
('arrays', 'better', 'for-loop', 'faster foreach-loop better', '8617791', 'but for the arrays it is better to use for-loop as shown by alnitak than for-in\n')

properties	accessor	4
('properties', 'nothing more', 'accessor', '', '10910531', 'a properties is nothing more than syntactic shorthand for a get set accessor\n')
('properties', 'more', 'accessor', 'aspect static pair', '10794303', 'that suggests another aspect where a declared properties is more than a pair of accessor methods that is more static type checking although it is undesirable here\n')
('properties', 'more', 'accessor', 'aspect static pair', '10794303', 'it means a declared properties is more than a pair of accessor methods getter setter\n')
('properties', 'directly technically faster', 'accessor', '', '42944069', 'edit as willeke has pointed out accessing a properties directly is technically faster than doing so via an accessor via self\n')

dawg	trie	4
('dawg', 'better memory', 'trie', '', '8329927', 'a dawg has better memory performance if the strings have many common suffixes but they are more expensive and difficult to build and update so start with a trie\n')
('dawg', 'more', 'trie', 'similar space-efficient prefixes', '7638114', 'use a dawg which is more efficient than a trie in terms of space waste\n')
('dawg', 'better', 'trie', '', '8329927', 'a dawg has better memory performance if the strings have many common suffixes but they are more expensive and difficult to build and update so start with a trie\n')
('dawg', 'more', 'trie', 'similar space-efficient prefixes', '681760', 'it is a structure similar to but twice as space-efficient as the dawg that is more efficient than the trie which only compresses prefixes\n')

division	addition	41
('division', 'larger', 'addition', '', '5649131', 'and division has larger complexity than addition\n')
('addition', 'faster', 'division', '', '1348077', 'for example on most 32 bit systems 64-bit addition is faster than 32-bit division modulo\n')
('division', 'operator higher', 'addition', 'higher precedence subtraction', '34712043', 'this happens because the division operator has higher precedence than the + addition operator\n')
('division', 'much more', 'addition', 'difference expensive costly', '5649137', 'the first difference is that division is much more expensive than addition\n')
('division', 'higher priority', 'addition', 'higher precedence subtraction', '43177267', 'multiplication and division have higher priority than addition and subtraction\n')
('division', 'much slower', 'addition', 'higher precedence subtraction', '8392125', 'it could be done via division which is much slower than addition or it could be translated into a bitwise and operation as well and end up being just as fast as the version\n')
('division', 'operation slower', 'addition', 'higher precedence subtraction', '29574172', 'it is true that division and modulo a division operation is slower than addition\n')
('division', 'far more', 'addition', 'time example cycles', '14395974', 'best example the division it an an addition are both o 1 but usually the division takes far more cycles time to execute than the addition\n')
('division', 'simpler', 'addition', 'higher precedence subtraction', '4247640', 'knuth writes that fibonacci search is preferable on some computers because it involves only addition and subtraction not division by 2. but almost all computers use binary arithmetic in which division by 2 is simpler than addition and subtraction\n')
('addition', 'less work', 'division', '', '8643410', 'in addition to that the crossing off may be less work than a division don t know about python it is for c arrays\n')
('division', 'higher precedence', 'addition', 'higher precedence subtraction', '16127818', 'multiplication and division operators have higher precedence than addition and subtraction in c++ same as in scientific notation\n')
('division', 'more expensive', 'addition', '', '40200123', 'if you are doing physical simulations things like division or square roots are going to be way more expensive than addition\n')
('addition', 'faster', 'division', 'faster gpu careful', '26964749', 'with careful optimization however you can make addition 61 times faster than division\n')
('addition', 'faster', 'division', '', '8949555', 'for example an addition is typically much faster than a division\n')
('division', 'higher', 'addition', 'higher precedence subtraction', '14622461', 'division has higher precedence than addition\n')
('division', 'operation faster', 'addition', 'faster gpu careful', '37904833', 'i need to find out that how much division operation is faster than addition operation in a gpu\n')
('division', 'more costly', 'addition', 'difference expensive costly', '26209229', 'generally the division is more costly than addition i think but not much difference in this case\n')
('division', 'more expensive', 'addition', '', '8335325', 'so even disregarding that division is more expensive than addition and multiplication we see that the number of operations the sieve requires is much smaller than the number of operations required by trial division if the limit is not too small\n')
('division', 'higher precedence', 'addition', 'higher precedence subtraction', '17433226', 'multiplication and division have a higher precedence than addition and subtraction\n')
('division', 'operator higher', 'addition', 'higher precedence subtraction', '19467456', 'the division operator has a higher order precedence as the addition operator\n')
('division', 'higher precedence', 'addition', 'higher precedence subtraction', '28221487', 'note that division has a higher precedence than addition\n')
('division', 'more', 'addition', '', '8335325', 'so even disregarding that division is more expensive than addition and multiplication we see that the number of operations the sieve requires is much smaller than the number of operations required by trial division if the limit is not too small\n')
('division', 'higher precedence', 'addition', 'higher precedence subtraction', '11533547', 'to start with i need multiplication and division to take higher precedence than addition and subtraction\n')
('division', 'operator higher precedence', 'addition', 'higher precedence subtraction', '46675877', 'the division operator has a higher precedence than the addition operator + so you need to enclose the sum with brackets before dividing\n')
('division', 'larger complexity', 'addition', '', '5649131', 'and division has larger complexity than addition\n')
('division', 'higher', 'addition', 'higher precedence subtraction', '41993666', 'division has a higher precedence than addition or subtraction so it s really this\n')
('division', 'operator higher', 'addition', 'higher precedence subtraction', '38932876', 'the division operator has a higher precendence than the addition operator so your function is calculating 1 1 + e -x\n')
('division', 'more tightly', 'addition', 'higher precedence subtraction', '884697', 'the addition and subtraction is okay because the types of a and b force them to be performed using floating point arithmetic - but because division binds more tightly than addition and subtraction it s like using the brackets above only the immediate operands are considered\n')
('division', 'more complex', 'addition', 'higher precedence subtraction', '37904833', 'as far as i know the division is more complex and slower than other operations like addition so is my code incorrect then\n')
('addition', 'faster', 'division', 'faster gpu careful', '1348077', 'performing addition on this slightly larger type will pretty much always be faster than doing division or modulo on the type itself\n')
('division', 'higher precedence', 'addition', 'higher precedence subtraction', '37646748', 'multiplication and division are higher precedence than addition so they get done first - before the implicit conversion to string for concatenation\n')
('addition', 'faster', 'division', 'higher precedence subtraction', '4624837', 'an addition is faster than a division and a multiplication\n')
('division', 'higher precedence', 'addition', 'higher precedence subtraction', '45273269', 'finally we all know that multiplication and division have higher precedence than addition and subtraction so we can remove the extraneous parentheses so this turns into\n')
('division', 'slower', 'addition', 'higher precedence subtraction', '22877763', '2.the division by 2 can be done by bit - shift operation is it really slower than addition\n')
('division', 'longer', 'addition', 'higher precedence subtraction', '1541739', 'the term is apparently not an exact measurement as it is clear that a double-precision floating-point operation is going to take longer than a single-precision one and multiplication and division are going to take longer than addition and subtraction\n')
('division', 'higher', 'addition', 'higher precedence subtraction', '27096708', 'division has a higher precedence than addition ergo\n')
('division', 'higher precedence', 'addition', 'higher precedence subtraction', '44168281', 'the division has higher precedence than the addition so what you re calculating is sumaverage1+ sumaverage2 5 which is integer division which is probably not what you want\n')
('division', 'slower', 'addition', 'higher precedence subtraction', '29574172', 'division is performed by repeated subtraction therefore needs more level of subtract logic making division slower than addition\n')
('division', 'more time', 'addition', 'time example cycles', '24542784', 'i remember it says something like division takes much much more time than addition\n')
('division', 'higher', 'addition', 'higher precedence subtraction', '19503254', 'since division has a higher precedence than addition 5 2 gets evaluated as a integer division returning 2 as an integer\n')
('addition', 'faster', 'division', 'faster gpu careful', '26964749', 'so if your code has tough data dependency problems addition is about 12 times faster than division\n')

codeigniter	laravel	9
('laravel', 'undeniably faster', 'codeigniter', '', '25880819', 'in my personal benchmarks laravel is undeniably faster than codeigniter due to lazy loading\n')
('laravel', 'better', 'codeigniter', 'features better', '25132418', 'if you ve been using laravel then you already know it is better than codeigniter\n')
('laravel', 'faster', 'codeigniter', '', '32941565', 'i am new to laravel it s good for coding but it is not much faster than codeigniter\n')
('codeigniter', 'much older', 'laravel', '', '23339615', 'unfortunately i m pretty sure you ll not find any packages or projects that migrates a joomla web site to laravel or maybe codeigniter which is much older than laravel\n')
('laravel', 'more time-effective', 'codeigniter', '', '35859900', 'i understand that laravel is what s hot right now but i ve never played with it and am not sure if learning laravel is more time-effective vs using codeigniter which i know pretty well but just doesn t excite me any more\n')
('laravel', 'much better', 'codeigniter', 'features better', '26133517', 'before i am using codeigniter but i found out that laravel is much better than codeigniter and it has a lot of features\n')
('laravel', 'more', 'codeigniter', '', '35859900', 'i understand that laravel is what s hot right now but i ve never played with it and am not sure if learning laravel is more time-effective vs using codeigniter which i know pretty well but just doesn t excite me any more\n')
('codeigniter', 'older', 'laravel', '', '23339615', 'unfortunately i m pretty sure you ll not find any packages or projects that migrates a joomla web site to laravel or maybe codeigniter which is much older than laravel\n')
('laravel', 'faster', 'codeigniter', '', '25880819', 'in my personal benchmarks laravel is undeniably faster than codeigniter due to lazy loading\n')

firefox	safari	28
('firefox', 'closer', 'safari', '', '27283013', 'in ie and firefox fullscreen_block appears closer to the bottom than in safari and google-chrome\n')
('firefox', 'just better', 'safari', '', '463954', 'firefox is just better for web development and i prefer safari overall\n')
('firefox', 'more accurate', 'safari', '', '2474666', 'i just tested geolocation on firefox 3.6 and iphone safari os 3.1.3 the result is interesting firefox is more accurate than safari\n')
('safari', 'faster', 'firefox', '', '899967', 'in safari we found that the dom level 0 took twice the time off the dom level 2 but was still four times faster than either firefox case\n')
('safari', 'faster', 'firefox', '', '3220693', 'google-chrome or safari on a mac could be much faster than firefox on a pc especially with newer apis\n')
('safari', 'slower', 'firefox', '', '18707981', 'on safari everything is slower than on firefox still the object property access is more than two times faster\n')
('safari', 'more strict', 'firefox', '', '31321155', 'it seems that google-chrome internet explorer or safari are more strict than firefox on terms of security\n')
('safari', 'significantly brighter', 'firefox', '', '27722716', 'in safari it renders significantly brighter than in firefox or google-chrome\n')
('safari', 'more anti-alisaing', 'firefox', '', '5804790', 'in particular a font may be rendered quite differently between the various browsers and operating systems in current use - safari and macos use more anti-alisaing than firefox or ie but ie9 has a new feature called cleartype which also affects font rendering\n')
('safari', 'more', 'firefox', '', '6692565', 'to me it looks like safari gets it more right than firefox text is generally more around a middle line\n')
('safari', 'more problems', 'firefox', '', '44755522', 'please especially test on safari because it has some more problems than firefox and google-chrome\n')
('safari', 'everything slower', 'firefox', '', '18707981', 'on safari everything is slower than on firefox still the object property access is more than two times faster\n')
('safari', 'more right', 'firefox', '', '6692565', 'to me it looks like safari gets it more right than firefox text is generally more around a middle line\n')
('firefox', 'even worse', 'safari', 'paint scroll worse', '33516237', 'i planned on using svgs for the entire site but with only 20-30 svg images of medium to high complexity used in the page and google-chrome already seems to be showing som jank and high paint times for scroll and firefox is even worse though safari seems to do a lot better\n')
('firefox', 'bigger', 'safari', '', '6079275', 'that i gave to every link in the set of links home about us products contact and it seems that firefox is making that 1px margin much bigger than safari or google-chrome and distorting it\n')
('firefox', 'greater', 'safari', '', '36743820', 'so to specify firefox greater than 20 safari greater than 9.1 and ie greater than 9\n')
('safari', 'better', 'firefox', 'paint scroll worse', '7322272', 'safari behaves better than firefox but an error message √¢ ≈ìone error in opening the page√¢ √¢ shows up in the status bar if you remove the iframe during the load event\n')
('firefox', 'less strict', 'safari', '', '3349260', 'it seems that ie and firefox are less strict than safari\n')
('firefox', 'conversion better', 'safari', '', '7432356', 'the service is still in beta trial and firefox conversion is working better than safari one\n')
('firefox', 'more forgiving', 'safari', '', '365945', 'but i haven t yet figured out whether it s me writing sloppy code with firefox perhaps being more forgiving than safari or if it s safari or if it s jquery\n')
('firefox', 'better', 'safari', '', '7432356', 'the service is still in beta trial and firefox conversion is working better than safari one\n')
('firefox', 'smaller then', 'safari', '', '3467818', 'small in firefox is smaller then small in safari so never ever use them\n')
('safari', 'taller', 'firefox', '', '7898066', 'i saw that the discrepancy was because in safari the text element is taller than in firefox and includes a slight amount of whitespace on top that doesn t show up in firefox in firefox the top of the text element is exactly when the text starts\n')
('safari', 'less fuzzy', 'firefox', '', '3039489', 'font looks sharp in google-chrome safari ie8 not as good as other 2 but less fuzzy than firefox\n')
('firefox', 'smaller', 'safari', '', '3467818', 'small in firefox is smaller then small in safari so never ever use them\n')
('safari', 'worse', 'firefox', '', '28572292', 'it works great in google-chrome and safari haven t tested ie but i m sure it s somehow worse than firefox\n')
('safari', 'higher', 'firefox', '', '10623171', 'in safari it is several pixels higher up than in firefox and google-chrome and significantly lower in opera\n')
('firefox', 'more', 'safari', '', '2474666', 'i just tested geolocation on firefox 3.6 and iphone safari os 3.1.3 the result is interesting firefox is more accurate than safari\n')

affinity	cpu	3
('affinity', 'better', 'cpu', 'time performance vs', '39495136', 'but i found if i do not set their cpu affinity that is they run on same core 0 the time performance get better than setting cpu affinity 8.76s vs 14.66s\n')
('affinity', 'more', 'cpu', '', '22259309', 'the cpu affinity is more like a suggestion to the kernel regarding which cpu to use\n')
('affinity', 'better', 'cpu', 'time performance vs', '15037998', 'cpu affinity it s better for the cpu to have a load average of 1.0 and processes to have affinity to a single core\n')

strncpy	strcpy	18
('strncpy', 'more secure', 'strcpy', '', '37740121', 'so that the strncpy is more secure than strcpy\n')
('strncpy', 'safer', 'strcpy', 'unsafe cousins strcpy_s', '30884175', 'myth 3 strncpy is a safer version of strcpy\n')
('strncpy', 'safer', 'strcpy', 'unsafe cousins strcpy_s', '32834982', 'i was exploring around with c regarding strncpy since most people says that it is safer than strcpy additional parameter length to avoid buffer overflows\n')
('strncpy', 'safer', 'strcpy', 'unsafe cousins strcpy_s', '17641528', 'strncpy is safer than strcpy\n')
('strncpy', 'more', 'strcpy', '', '41937901', 'for instance strncpy is mostly useless it gives you nothing more than strcpy\n')
('strncpy', 'safer', 'strcpy', 'unsafe cousins strcpy_s', '18727224', 'strcpy is notoriously unsafe as are it s cousins strcpy_s and strncpy although they are mildly safer than strcpy\n')
('strncpy', 'safier', 'strcpy', '', '12236011', 'using strncpy is considered safier than strcpy because the second one can easily cause buffer overrun\n')
('strncpy', 'safer', 'strcpy', 'unsafe cousins strcpy_s', '33271840', 'you should use strcpy or strncpy safer than strcpy to copy the string stored in the array between arrays\n')
('strncpy', 'more', 'strcpy', '', '28534187', 'strncpy is more recommended that strcpy because protect your code against buffer overflow\n')
('strncpy', 'more', 'strcpy', '', '37740121', 'so that the strncpy is more secure than strcpy\n')
('strncpy', 'not safer method', 'strcpy', 'unsafe cousins strcpy_s', '13903306', 'strncpy is not safer method to use as strcpy\n')
('strncpy', 'less', 'strcpy', '', '5883113', 'the best solution is to write a custom version of strncpy that is less weird or if you know the length of the input just use strcpy\n')
('strncpy', 'less weird', 'strcpy', '', '5883113', 'the best solution is to write a custom version of strncpy that is less weird or if you know the length of the input just use strcpy\n')
('strncpy', 'actually better', 'strcpy', 'better things strlcpy', '44577839', 'i.e strncpy is actually better than the simpler strcpy if you are willing to improve the code\n')
('strcpy', 'better', 'strncpy', 'better things strlcpy', '5463735', 'strcpy could be better replaced by strncpy which does some bound checking\n')
('strncpy', 'not safer', 'strcpy', 'unsafe cousins strcpy_s', '1258708', 'strncpy is not safer than strcpy it just trades one type of bugs with another\n')
('strncpy', 'better', 'strcpy', 'better things strlcpy', '10845959', 'using strncpy 3 is better than strcpy 3 but things like strlcpy 3 are better still\n')
('strncpy', 'safer alternative', 'strcpy', 'unsafe cousins strcpy_s', '3629186', 'in general strncpy is a safer alternative to strcpy\n')

screens	hdpi	5
('screens', 'lower', 'hdpi', '', '26063897', 'i am not aware of any device that can use api 14 with a screens density lower than hdpi\n')
('screens', 'greater dpi', 'hdpi', '', '5428091', 'edit - now that i think about it i m not sure why your image would appear smaller unless your screens had a greater dpi than hdpi\n')
('screens', 'less', 'hdpi', '50px larger resolution', '11429933', 'so as i said - mdpi also doesn t means that your screens resolution is less than hdpi screens resolution\n')
('screens', 'larger', 'hdpi', '50px larger resolution', '4885845', 'if in java code the values would be in pixels so 50px on mdpi screens will look larger than on hdpi screens\n')
('hdpi', 'more', 'screens', '50px larger resolution', '6366076', 'even if i create three versions for ldpi mdpi and hdpi there are more than screens resolutions in that table if there is no matching image it will scale my image and may not retain the aspect ratio\n')

operator-precedence	logical-or	3
('operator-precedence', 'logical-and higher precidence', 'logical-or', '', '21345748', 'according to the mdn operator-precedence logical-and has a higher precidence over logical-or suggesting that the condition is evaluated as if were a single statement which then moves on to determine the boolean condition of false || true which is then true\n')
('operator-precedence', 'logical-and higher', 'logical-or', '', '21345748', 'according to the mdn operator-precedence logical-and has a higher precidence over logical-or suggesting that the condition is evaluated as if were a single statement which then moves on to determine the boolean condition of false || true which is then true\n')
('operator-precedence', 'higher precidence', 'logical-or', '', '21345748', 'according to the mdn operator-precedence logical-and has a higher precidence over logical-or suggesting that the condition is evaluated as if were a single statement which then moves on to determine the boolean condition of false || true which is then true\n')

protected	public	18
('protected', 'closer', 'public', 'closer perfect method', '8202001', 'protected is closer to public than private\n')
('protected', 'less', 'public', 'constructor someone class', '12325479', 'oh i see you need a constructor that has more access than protected but less than public\n')
('protected', 'much more', 'public', 'constructor someone class', '761864', 'therefore the only types that should have access to a constructor are its derived types and hence protected makes much more sense than public\n')
('protected', 'more restrictive', 'public', 'closer perfect method', '28963709', 'so a protected is more restrictive than public and private is more restrictive than protected\n')
('protected', 'better', 'public', 'closer perfect method', '2757943', 'it s not perfect but i guess that a protected method that does not check parameters is better than a public method that does not do it\n')
('public', 'higher', 'protected', '', '21338125', 'public is higher than protected so there s no problem\n')
('protected', 'more limited', 'public', '', '25672161', 'from a software engineering point of view as soon as you make a function protected you expose it to other users of course much more limited than public exposure but still much more exposed than private and you create expectation about some stability of the api\n')
('protected', 'easier', 'public', '', '24661886', 'what is the true rationale behind all the private and protected stuff when we can just make our life as a programmer easier by using public for everything\n')
('protected', 'weaker invariant', 'public', '', '4507414', 'protected functions maintain a weaker invariant than the public one before and after each call\n')
('protected', 'actually closer', 'public', 'closer perfect method', '36322823', 'furthermore protected is actually closer to public than to private\n')
('protected', 'better', 'public', 'closer perfect method', '4753405', 'that means private is better than protected protected is better than public etc ..\n')
('protected', 'better', 'public', '', '6033905', 'reason i once heard that protected is better for hibernate performance but all i can find on the web is hibernate can access public private and protected accessor methods as well as public private and protected fields directly\n')
('protected', 'more permissive', 'public', '', '14271110', 'for public inheritance it means that all the accessible members of base class that is the public and protected members can not be at a level more permissive than public\n')
('protected', 'less accessible', 'public', 'package accessible accessibility', '18376768', 'since package protected is less accessible than public the code is reducing the accessibility of the foo method\n')
('protected', 'more restrictive', 'public', 'package accessible accessibility', '15220204', 'otherwise there is still the possibility to change a public access to a protected or package private access which will be much more restrictive than public\n')
('protected', 'less accessible', 'public', 'package accessible accessibility', '24548057', 'change it to public to make it more accessible or perhaps better protected to make it less accessible than public but more than private read more about that here\n')
('protected', 'access more', 'public', 'constructor someone class', '3313279', 'the theory is that someone extending your class with protected access knows more about what they are doing than someone who is merely using it with public access\n')
('protected', 'more restrictive', 'public', 'closer perfect method', '15626425', 'protected is more restrictive than public\n')

tcp	arp	4
('tcp', 'shorter', 'arp', '', '1716751', 'it would appear from your question that the period of the tcp message is shorter than the arp refresh time\n')
('arp', 'lower level', 'tcp', '', '42873263', 'if you are using linux check out netdiscover this uses arp i think arp is lower level than tcp udp and with java you can only create apps from tcp udp and above\n')
('tcp', 'message shorter', 'arp', '', '1716751', 'it would appear from your question that the period of the tcp message is shorter than the arp refresh time\n')
('arp', 'lower', 'tcp', '', '42873263', 'if you are using linux check out netdiscover this uses arp i think arp is lower level than tcp udp and with java you can only create apps from tcp udp and above\n')

range	min	13
('range', 'lower higher', 'min', 'maxpoint select values', '42035218', 'i m working on slider that updates 2 text boxes with values the slider is in a limited range so it doesn t give values lower higher than min max\n')
('range', 'greater', 'min', 'maxpoint select values', '15000781', 'range is 5000 to 50000 what i want to achive is in maxpoint select box i want to display the values which are greater than min points selected value\n')
('range', 'lower', 'min', 'maxpoint select values', '22336343', 'a variation on pentadecagon you are free to set n arbitrary values on the diagonal in some range min..max containing x and fill the rest of the array with lower than min on one side and higher than max on the other\n')
('range', 'bigger', 'min', 'first date console', '44600848', 'for ease of debugging i pass the value of to reactive values and print the first date range s value to the console rendered to check whether the it is smaller or bigger than the min and max of the corresponding date column as i did in the lapply function\n')
('range', 'bigger', 'min', 'first date console', '43066794', 'my solution to the range part feels clunky over complicated and doesn t check if the max range value is bigger than the min range value doesn t check if 10 2\n')
('range', 'higher', 'min', 'maxpoint select values', '42850734', 'if you want to check that a number is between the min and max of the range you would likely want to check that it is both higher than the min and lower than the max\n')
('range', 'less', 'min', '', '26778990', 'any value in the disjointed range that is less than the value in d1 has 1e+99 added to it and that won t be the min of anything\n')
('range', 'greater', 'min', 'maxpoint select values', '10851578', 'take a look at your picture - all the range you want have ending time greater than min and starting time less than max\n')
('range', 'more', 'min', '', '10425399', 'but if i take it out of range for more than 1 min it gives an exception\n')
('min', 'greater', 'range', '', '16608301', 'if your range were sorted in some manner then you could look at the extreme ends if the end s min is greater than the targetmax then say look at the range 1 4 backwards from the end etc.\n')
('range', 'greater', 'min', 'maxpoint select values', '30718503', 'if range is greater then or less then the min and max then it should throw error\n')
('range', 'less', 'min', '', '42503519', 'my query is given below so based on the date range first i have to sort down the records after that i have no idea how to find the difference between created_at and updated_at having status success and the time difference is less than 5 min 5 to 15 and so on\n')
('range', 'less', 'min', '', '3188934', 'if max and min are independent variables the extra subtraction for max-min will waste time but if that expression can be precomputed at compile time or if it can be computed once at run-time to test many numbers against the same range the above expression may be computed efficiently even in the case where the value is within range if a large fraction of values will be below the valid range it may be faster to use because it will exit early if value is less than min\n')

exponent	multiplication	9
('multiplication', 'even easier', 'exponent', '', '18450999', 'multiplication is even easier as you dont have to line up the decimal points you just do the math on the significant digits and simply add the exponent\n')
('exponent', 'faster', 'multiplication', 'misunderstanding small parameter', '20776795', 'however with really very small parameter 2 in your case exponent is faster than multiplication\n')
('exponent', 'faster', 'multiplication', 'misunderstanding small parameter', '14917576', 'this is analogous to the way you can compute exponent using successive squaring much faster than by repeated multiplication\n')
('multiplication', 'slower', 'exponent', 'misunderstanding small parameter', '18453999', 'however naive multiplication will get slower and slower as the exponent increases\n')
('exponent', 'operator higher precedence', 'multiplication', '', '29987396', 'note that the exponent operator has a higher precedence than multiplication and division just like in mathematics\n')
('exponent', 'higher precedence', 'multiplication', '', '29987396', 'note that the exponent operator has a higher precedence than multiplication and division just like in mathematics\n')
('exponent', 'operator higher', 'multiplication', '', '29987396', 'note that the exponent operator has a higher precedence than multiplication and division just like in mathematics\n')
('exponent', 'not faster', 'multiplication', 'misunderstanding small parameter', '12919354', 'the misunderstanding is that incrementing the exponent is not faster than doing a multiplication\n')
('exponent', 'larger', 'multiplication', '', '1019808', 'as int exponent gets larger taking powers might be faster than multiplication\n')

exception-handling	try-catch	7
('exception-handling', 'better', 'try-catch', '', '44723363', 'so here the unchecked exception-handling is better to use in order not to copy and paste all that ugly try-catch block rethrowing an exception-handling and add the throws clause to the method\n')
('exception-handling', 'heavier', 'try-catch', '', '4571666', 'will hide the exception-handling and since dealing with exception-handling is heavier compared to a simple if t why isn t the normal new t not considered less good practice considering we will have to use try-catch to check if a simple allocation succeeded and if we don t just watch the program die\n')
('try-catch', 'more', 'exception-handling', '', '29999464', 'try-catch rsources is fine for some cases but this is the old way and works better when you have more than 1 exception-handling in a block\n')
('try-catch', 'more', 'exception-handling', '', '12951427', 'in general try-catch is more robust does not require you to define an exact position of where to test could be a block and provides info about the exception-handling\n')
('try-catch', 'more robust', 'exception-handling', '', '12951427', 'in general try-catch is more robust does not require you to define an exact position of where to test could be a block and provides info about the exception-handling\n')
('exception-handling', 'better', 'try-catch', '', '36331574', 'when you call input.nextline as part of your exception-handling catching is it better to place it into every catch block or just inside a finally block at the end of the try-catch\n')
('try-catch', 'actually slower', 'exception-handling', '', '26017078', 'try-catch is actually slower if there really is an exception-handling thrown\n')

keyup	keydown	12
('keyup', 'smoother transition', 'keydown', '', '46595732', 'in my test keyup gives a smoother transition as compared to keydown\n')
('keyup', 'smoother', 'keydown', '', '46595732', 'in my test keyup gives a smoother transition as compared to keydown\n')
('keydown', 'earlier first', 'keyup', '', '14646962', 'the events seem to not follow strict sequential rules second keydown comes earlier than first keyup so the timer gets initialized multiple times\n')
('keyup', 'more sense', 'keydown', '', '45039229', 'also note that using keyup or input makes far more sense than keydown otherwise the previous value will only be evaluated on the next event occurrence\n')
('keyup', 'more preferable', 'keydown', 'multiple stick example', '20370954', 'keyup is more preferable than keydown because keydown may occur multiple times if user keeps it pressed\n')
('keydown', 'just better', 'keyup', 'multiple stick example', '25939892', 'they have their differences better stick to one i prefer for this example to use keydown just plays better with me you can use keyup\n')
('keydown', 'better', 'keyup', 'multiple stick example', '33768168', 'also note that keydown is better for this methodology as keyup will fire multiple times though i guess this will too.\n')
('keyup', 'earlier', 'keydown', 'events right value', '12622265', 'as you can see the keyup events of numpad5 and numpad6 occured earlier than their keydown event\n')
('keyup', 'more', 'keydown', 'events right value', '45686156', 'then the right events to do it is keyup more than keydown since the value isn t yet in the field at this moment or on change\n')
('keydown', 'better', 'keyup', 'little element silently-ish', '25278766', 'also if you notice i ve changed the keyup event to keydown which is better in my opinion cause when the user holds their finger down on a button the code wouldn t be fired if it is on the keyup event\n')
('keydown', 'earlier', 'keyup', '', '14646962', 'the events seem to not follow strict sequential rules second keydown comes earlier than first keyup so the timer gets initialized multiple times\n')
('keydown', 'better', 'keyup', 'little element silently-ish', '19554689', 'edit keydown is a little better than keyup for the element bind now enter key fails silently-ish\n')

updatepanel	scriptmanager	4
('updatepanel', 'more hassel', 'scriptmanager', '', '5565423', 'i have found that using jquery javascript inside an updatepanel is more hassel than it is worth as you always need to output the jquery javascript using the scriptmanager or the scriptmanager.registerclientscriptblock\n')
('updatepanel', 'more time', 'scriptmanager', '', '22788420', 'in case if updatepanel takes more time to process set asyncpostbacktimeout property of your scriptmanager\n')
('updatepanel', 'more', 'scriptmanager', '', '22788420', 'in case if updatepanel takes more time to process set asyncpostbacktimeout property of your scriptmanager\n')
('updatepanel', 'more', 'scriptmanager', '', '5565423', 'i have found that using jquery javascript inside an updatepanel is more hassel than it is worth as you always need to output the jquery javascript using the scriptmanager or the scriptmanager.registerclientscriptblock\n')

cypher	gremlin	7
('cypher', 'still faster', 'gremlin', '', '25576741', 'neo4j and cypher is still faster and obviously this has no effect on the gremlin queries on neo4j but that might be just a issue with the gremlin implementation for neo4j\n')
('cypher', 'much more clear', 'gremlin', '', '13824962', 'cypher seems much more clear to me than gremlin and in general it seems that the guys in neo4j are going with cypher\n')
('cypher', 'less', 'gremlin', '', '36779724', 'but i read in this post that group by on union are not possible yet it mean that cypher is less powerful than gremlin\n')
('cypher', 'much more', 'gremlin', '', '13824962', 'cypher seems much more clear to me than gremlin and in general it seems that the guys in neo4j are going with cypher\n')
('cypher', 'faster', 'gremlin', '', '17332011', 'recently we noticed that cypher queries run faster than gremlin so we decided to convert our queries\n')
('gremlin', 'better', 'cypher', '', '33393378', 'in this case a traversal-oriented approach is best maybe gremlin is better since cypher doesn t allow you to specify traversal order\n')
('cypher', 'less powerful', 'gremlin', '', '36779724', 'but i read in this post that group by on union are not possible yet it mean that cypher is less powerful than gremlin\n')

metaphone	soundex	8
('metaphone', 'more', 'soundex', '', '3940042', 'in php you should use metaphone it is more accurate than soundex\n')
('metaphone', 'better', 'soundex', '', '41321818', 'then i tried the metaphone function and it worked far better than soundex\n')
('metaphone', 'better', 'soundex', '', '20066405', 'double metaphone - this algo will give you a better match than soundex at the cost of speed it is really good for spelling correction though\n')
('metaphone', 'more accurate', 'soundex', '', '3940042', 'in php you should use metaphone it is more accurate than soundex\n')
('metaphone', 'better', 'soundex', '', '123076', 'edit double metaphone was specifically designed to be better than soundex and work in languages other than english\n')
('metaphone', 'much more accurate', 'soundex', '', '9014069', 'general consensus including the php docs is that metaphone is much more accurate than soundex when dealing with the english language\n')
('metaphone', 'much more', 'soundex', '', '9014069', 'general consensus including the php docs is that metaphone is much more accurate than soundex when dealing with the english language\n')
('metaphone', 'more accurate', 'soundex', '', '9014069', 'general consensus including the php docs is that metaphone is much more accurate than soundex when dealing with the english language\n')

irrlicht	ogre	3
('irrlicht', 'better', 'ogre', '', '19394943', 'irrlicht is no way better than ogre 3d or am not trying to prove that\n')
('irrlicht', 'cleaner', 'ogre', '', '151399', 'irrlicht has a cleaner api lower system requirements and works better across platforms than ogre in my opinion\n')
('irrlicht', 'cleaner api', 'ogre', '', '151399', 'irrlicht has a cleaner api lower system requirements and works better across platforms than ogre in my opinion\n')

tcl	perl	7
('tcl', 'more', 'perl', '', '23933557', 'tcl is more verbose than perl here\n')
('tcl', 'worse', 'perl', '', '393362', 'tcl is no better nor worse than perl ruby python or any other scripting language in this regard -- they all do basic file operations with equal aplomb\n')
('tcl', 'simpler', 'perl', '', '1197324', 'it is written in tcl which is a language somewhat simpler than perl but broadly in the same family and not difficult to learn\n')
('perl', 'better', 'tcl', '', '18208624', 'i know that perl performs better for some regex but will the tcl performance really be this bad in comparison\n')
('tcl', 'actually more closely', 'perl', '', '44058365', 'while tcl syntax looks more related to shell syntax like bash or tcsh tcl is actually more closely related to perl or php or ruby\n')
('tcl', 'actually more', 'perl', '', '44058365', 'while tcl syntax looks more related to shell syntax like bash or tcsh tcl is actually more closely related to perl or php or ruby\n')
('tcl', 'more verbose', 'perl', '', '23933557', 'tcl is more verbose than perl here\n')

wan	lan	4
('wan', 'less', 'lan', '', '37886234', 'wan is less stable than lan\n')
('lan', 'more', 'wan', '', '37886234', 'lan is more or less stable wan can be with network issues like\n')
('wan', 'less', 'lan', '', '19719152', 'even if all the traffic resides on the same network the client traffic will have been throttled by your wan capacity which is always less than your lan capacity\n')
('wan', 'less stable', 'lan', '', '37886234', 'wan is less stable than lan\n')

fireworks	photoshop	3
('photoshop', 'more familiar', 'fireworks', '', '1870710', 'i have fireworks 8 as well as photoshop cs3 on my windows pc but i m more familiar with fireworks\n')
('fireworks', 'easier time', 'photoshop', '', '410176', 'i find fireworks has an easier time dealing with vectors because they re first class objects while in photoshop they re actually a combination of a vector mask and a colour fill\n')
('fireworks', 'easier', 'photoshop', '', '410176', 'i find fireworks has an easier time dealing with vectors because they re first class objects while in photoshop they re actually a combination of a vector mask and a colour fill\n')

dotnetzip	sharpziplib	4
('dotnetzip', 'more permissive', 'sharpziplib', '', '3860490', 'i used it because it is small 6 kb compiled with just the extraction making it far smaller than dotnetzip which is more than 150 kb and is more permissive than sharpziplib\n')
('dotnetzip', 'much easier', 'sharpziplib', '', '10643602', 'dotnetzip is much easier to use than sharpziplib example of zipping all files in folder\n')
('dotnetzip', 'more flexible', 'sharpziplib', '', '3046580', 'dotnetzip offers native support and has a quite friendly api and is my opinion more flexible than sharpziplib\n')
('dotnetzip', 'more', 'sharpziplib', '', '3860490', 'i used it because it is small 6 kb compiled with just the extraction making it far smaller than dotnetzip which is more than 150 kb and is more permissive than sharpziplib\n')

objectcontext	dbcontext	15
('dbcontext', 'better', 'objectcontext', '', '15179448', 'i used to use dbcontext for all of my db models until i read ways to optimize entity framework after following the steps i found my self forced to switch to objectcontext instead so there were alot of code changes to be done but i am not sure that i doing the right thing specially after googling the deference i ve noticed that dbcontext is newer and better than objectcontext and also i noticed that i lost alot of things while switching to objectcontext like migrations and find method and much more.\n')
('dbcontext', 'api better', 'objectcontext', 'better newer older', '22010602', 'there are many reasons why the dbcontext api is better than the older objectcontext api but in your case it may initially feel like a downgrade\n')
('dbcontext', 'api easier', 'objectcontext', 'pleasant api easier', '13000063', 'besides the dbcontext api is easier to use than objectcontext\n')
('dbcontext', 'much simpler', 'objectcontext', 'simpler common development', '9224507', 'and dbcontext is much simpler to use than objectcontext and will serve the most common development needs\n')
('objectcontext', 'better', 'dbcontext', '', '12689334', 'in 6.7 a graph it shown that states that the performance of a objectcontext linq query is better than dbcontext linq query\n')
('dbcontext', 'slower', 'objectcontext', '', '10103310', 'if adding 2000 entities and saving the changes at the end dbcontext is 3 to 5 times slower than objectcontext btw. i know that adding a large amount of entities would be better using sqlbulkcopy but that s not the point\n')
('dbcontext', 'much simpler', 'objectcontext', 'simpler common development', '12495100', 'dbcontext is much simpler to use than objectcontext and will serve the most common development needs\n')
('dbcontext', 'api easier', 'objectcontext', 'better newer older', '14727174', 'dbcontext api is easier to work with than objectcontext but both approaches use the former\n')
('dbcontext', 'newer', 'objectcontext', 'better newer older', '17285367', 'my understanding is that although dbcontext is newer it s not necessarily better than objectcontext it just provides a different api that might be considered simpler but doesn t that depend on the use case\n')
('dbcontext', 'newer api', 'objectcontext', 'better newer older', '15875489', 'dbcontext is newer api which should polish developers experience when using most common tasks - simply the api is better designed but you still have to get objectcontext from dbcontext and use the older api if you want to use some more complex features\n')
('dbcontext', 'lighter', 'objectcontext', '', '14903097', 'you just need to connect using the entity framework driver and if you develop in any of technologies that uses dbcontext includes code first model first and data base first but is lighter than objectcontext you can use the list below\n')
('dbcontext', 'more pleasant api', 'objectcontext', 'pleasant api easier', '13089533', 'dbcontext is a much more pleasant api than objectcontext\n')
('objectcontext', 'worse', 'dbcontext', 'better newer older', '7230825', 'it is a feature it is about objectcontext api but the same is true or worse with dbcontext api\n')
('dbcontext', 'newer', 'objectcontext', '', '15179448', 'i used to use dbcontext for all of my db models until i read ways to optimize entity framework after following the steps i found my self forced to switch to objectcontext instead so there were alot of code changes to be done but i am not sure that i doing the right thing specially after googling the deference i ve noticed that dbcontext is newer and better than objectcontext and also i noticed that i lost alot of things while switching to objectcontext like migrations and find method and much more.\n')
('dbcontext', 'slower', 'objectcontext', '', '10103310', 'when it comes to deletion it even gets worse when saving at the end of all entity removals dbcontext is around 18 times slower than objectcontext\n')

panels	scrollable	2
('panels', 'larger', 'scrollable', 'larger form autoscroll', '5682770', 'the panels itself is larger than the form and is scrollable autoscroll true\n')
('scrollable', 'smaller inner', 'panels', 'larger form autoscroll', '19957747', 'i am trying to create a jpanel that is resizable scrollable and contains x smaller inner panels\n')

sorting	filtering	11
('filtering', 'less expensive', 'sorting', '', '2911817', 'filtering is a lot less expensive than sorting\n')
('sorting', 'more important', 'filtering', '', '25252630', 'sorting is more important to me than filtering so if i have to have both sorting and filtering target the same representation of the data i ll just give up on filtering working\n')
('sorting', 'more complicated', 'filtering', '', '38171789', 'considering sorting is more complicated than summation median filtering will cost longer time\n')
('sorting', 'more', 'filtering', '', '38171789', 'considering sorting is more complicated than summation median filtering will cost longer time\n')
('sorting', 'cheaper', 'filtering', '', '1172381', 'if your author field is selective and sorting is cheaper than filtering\n')
('filtering', 'slower just', 'sorting', 'range query pseudomedian', '7274258', 'if almost all elements fail the filtering then it s considerably slower than just sorting everything since you ll end up selecting thousands of times\n')
('sorting', 'longer', 'filtering', '', '7274114', 'but right now the sorting step is taking way longer than the filtering step so i would like to combine them in some way\n')
('sorting', 'more', 'filtering', '', '25252630', 'sorting is more important to me than filtering so if i have to have both sorting and filtering target the same representation of the data i ll just give up on filtering working\n')
('filtering', 'faster', 'sorting', 'range query pseudomedian', '6654141', 'in terms of your speed query i d propose that your pseudomedian filtering is faster because it doesn t involve sorting\n')
('filtering', 'faster', 'sorting', 'range query pseudomedian', '45873691', 'you d still have to filtering to get a range though it ought to be faster than sorting at least\n')
('sorting', 'more straightforward', 'filtering', '', '33053106', 'on the other hand you may want stable sorting in other contexts as well and so if you have the stable_sort function defined this approach would still be more straightforward than filtering out the numbers with each sign and recombining them\n')

nsmutablestring	nsstring	5
('nsstring', 'more', 'nsmutablestring', '', '12530092', 'nsstring is more general as it leaves you the oppertunity to create another subclass of it that could add the altering functionality without using the nsmutablestring s implementation why ever you would want that to do\n')
('nsstring', 'more general', 'nsmutablestring', '', '12530092', 'nsstring is more general as it leaves you the oppertunity to create another subclass of it that could add the altering functionality without using the nsmutablestring s implementation why ever you would want that to do\n')
('nsmutablestring', 'more things', 'nsstring', '', '12529478', 'all-in all the reason is that nsmutablestring is able to do more things than nsstring and can do anything nsstring can hence the direction of inheritance\n')
('nsmutablestring', 'more efficient', 'nsstring', '', '14341239', 'note also that using nsmutablestring is more efficient than creating a new nsstring each time a letter is added\n')
('nsmutablestring', 'more', 'nsstring', '', '14341239', 'note also that using nsmutablestring is more efficient than creating a new nsstring each time a letter is added\n')

xna	libgdx	3
('xna', 'more popular', 'libgdx', '', '19776052', 'xna is more popular and has more tutorials then libgdx\n')
('xna', 'more', 'libgdx', '', '19776052', 'xna is more popular and has more tutorials then libgdx\n')
('xna', 'lower', 'libgdx', '', '17584717', 'xna + monogame --- monogame s performance seems only slightly lower than libgdx can build to most platforms\n')

r-tree	quadtree	11
('quadtree', 'some better perfomance', 'r-tree', '', '18145430', 'you can also try a quadtree it has some better perfomance over a r-tree\n')
('r-tree', 'more specifically', 'quadtree', '', '12715054', 'on the other hand the wikipedia article on r-tree seems more specifically targeted towards mapping than the k-d tree or quadtree\n')
('quadtree', 'simpler data', 'r-tree', '', '20115674', 'a quadtree is a simpler data structure than the r-tree\n')
('r-tree', 'faster', 'quadtree', 'indexes window queries', '27930062', 'r-tree are substantially faster than quadtree for window queries like inside contains covers etc\n')
('quadtree', 'more', 'r-tree', '', '26519960', 'i use quadtree more than r-tree and find them super flexible\n')
('r-tree', 'more', 'quadtree', '', '12715054', 'on the other hand the wikipedia article on r-tree seems more specifically targeted towards mapping than the k-d tree or quadtree\n')
('r-tree', 'faster', 'quadtree', 'indexes window queries', '27930062', 'r-tree are much faster than quadtree for nearest neighbours queries\n')
('quadtree', 'some better', 'r-tree', '', '18145430', 'you can also try a quadtree it has some better perfomance over a r-tree\n')
('quadtree', 'faster', 'r-tree', 'indexes window queries', '27930062', 'quadtree indexes are created faster than r-tree\n')
('quadtree', 'better perfomance', 'r-tree', '', '18145430', 'you can also try a quadtree it has some better perfomance over a r-tree\n')
('quadtree', 'simpler', 'r-tree', '', '20115674', 'a quadtree is a simpler data structure than the r-tree\n')

gwt-rpc	requestfactory	4
('gwt-rpc', 'newer', 'requestfactory', '', '6957715', 'go with gwt-rpc or better newer with requestfactory\n')
('gwt-rpc', 'better newer', 'requestfactory', '', '6957715', 'go with gwt-rpc or better newer with requestfactory\n')
('requestfactory', 'more', 'gwt-rpc', '', '20335224', 'my understanding is the requestfactory is more efficient and recommended over gwt-rpc but it s more of a data entity persistence framework than a request-response framework like rpc\n')
('requestfactory', 'more efficient', 'gwt-rpc', '', '20335224', 'my understanding is the requestfactory is more efficient and recommended over gwt-rpc but it s more of a data entity persistence framework than a request-response framework like rpc\n')

gdi	directx	7
('directx', 'faster', 'gdi', 'simplification gdi-based speed', '3991925', 'directx is in general much faster than gdi due to the fact that it has full acceleration on most video cards\n')
('gdi', 'slower', 'directx', 'simplification gdi-based speed', '58301', 'speed is usually faster than gdi and slower than directx and depends greatly on how you do things seen something to work 60 times faster after rewriting in a sensible way\n')
('directx', 'way faster', 'gdi', 'simplification gdi-based speed', '5113541', 'directx is way faster than gdi\n')
('directx', 'smaller', 'gdi', '', '6727374', 'if you are talking about someone else s there is no promise that they will render larger than the screen since would be wise to clip their painting to what is visible and they may be further constrained by other factors such as the size of a directx surface which is smaller than the gdi limit\n')
('directx', 'faster', 'gdi', 'simplification gdi-based speed', '368466', 'to say directx is faster than gdi is also something of a simplification - wpf and gdi-based rendering technologies just have different performance characteristics\n')
('directx', 'method slower', 'gdi', '', '35451557', 'using getfrontbufferdata in directx method is slower than gdi itself\n')
('directx', 'slower', 'gdi', '', '35451557', 'using getfrontbufferdata in directx method is slower than gdi itself\n')

xcb	xlib	5
('xcb', 'simpler', 'xlib', '', '9039622', 'xcb is simpler to use has a better response to a multithread environment but lacks documentation while xlib is a more dated complex tool better documented and fully implemented\n')
('xcb', 'lower level', 'xlib', '', '21216728', 'xcb is lower level than xlib and allows you to minimise the number of round-trips to the x server leading to lower latency\n')
('xcb', 'more', 'xlib', '', '41403168', 'xcb presents a more direct view of the protocol than xlib does so you often have to look at either the protocol specs or xlib source code to find out what the underlying protocol request is to find an equivalent\n')
('xcb', 'more direct', 'xlib', '', '41403168', 'xcb presents a more direct view of the protocol than xlib does so you often have to look at either the protocol specs or xlib source code to find out what the underlying protocol request is to find an equivalent\n')
('xcb', 'lower', 'xlib', '', '21216728', 'xcb is lower level than xlib and allows you to minimise the number of round-trips to the x server leading to lower latency\n')

javassist	cglib	6
('javassist', 'slower', 'cglib', '', '9823788', 'also javassist is recognized to be slower than cglib\n')
('javassist', 'significantly slower then', 'cglib', '', '21202878', 'note that javassist is significantly slower then for example cglib because it reads in class files directly instead of using reflective access in order to avoid class loading\n')
('javassist', 'better', 'cglib', '', '9167436', 'here in so i found a lot of questions asking something similar and the answers normally said you can use cglib or asm or javassist is better than cglib or bcel is old and is dying or asm is the best because it gives x and y\n')
('javassist', 'slower', 'cglib', '', '9823788', 'this makes for example javassist or proxetta significantly slower than cglib which simply reads the methods via the reflection api and overrides them\n')
('javassist', 'way better', 'cglib', '', '9823788', 'the javadoc of javassist is way better than that of cglib\n')
('javassist', 'significantly slower', 'cglib', '', '21202878', 'note that javassist is significantly slower then for example cglib because it reads in class files directly instead of using reflective access in order to avoid class loading\n')

ironpython	cpython	14
('ironpython', 'worse', 'cpython', '', '3882058', 'so if you want to use django or something like that it s probably not smart to use ironpython because it isn t really cross-platform doesn t work with some frameworks and it performs worse than cpython\n')
('ironpython', 'faster', 'cpython', 'possible jython virtual', '8981895', 'ironpython is faster than c# in certain areas but not faster than cpython however you can link ironpython to any language thus over coming problems but then again you can do the same with cpython\n')
('cpython', 'more', 'ironpython', '', '845066', 'i am however no cpython guru and can get so much more out of ironpython than cpython as i can easily leverage the .net platform on which i am far more at home\n')
('ironpython', 'faster', 'cpython', 'possible jython virtual', '3033387', 'it s possible that jython and ironpython are much faster than cpython as well as they are backed by heavily optimized virtual machines jvm and .net clr\n')
('ironpython', 'faster', 'cpython', 'conclusion faster', '620976', 'i m not sure exactly how you re drawing the conclusion that ironpython is faster than cpython\n')
('cpython', 'probably better', 'ironpython', '', '1168957', 'cpython probably has better ide support at present than ironpython - so this may be a factor in the choosing of one over the other\n')
('ironpython', 'slower', 'cpython', 'possible jython virtual', '12843154', 'also on implementations like jython or ironpython could be a lot slower than with cpython\n')
('ironpython', 'better', 'cpython', '', '4337136', 'one of the largest benefits of ironpython is that it has effectively no gil - meaning that if you are both writing python code and it is multi-threaded - you can often get performance that is better than cpython without having to spawn multiple process and pickle objects across the boundaries\n')
('cpython', 'more comfortable', 'ironpython', '', '1441330', 'my understanding was it was written in vanilla python cpython but if you are more comfortable with ironpython it shouldn t be hard to translate\n')
('ironpython', 'much faster', 'cpython', 'possible jython virtual', '13964362', 'if there s any heavy application logic as opposed to all of the work being networking files database ironpython is much faster than cpython at a few things and much slower at a few others so you probably need to profile and perf-test before you go too far down either path\n')
('cpython', 'probably better ide', 'ironpython', '', '1168957', 'cpython probably has better ide support at present than ironpython - so this may be a factor in the choosing of one over the other\n')
('ironpython', 'slower', 'cpython', 'possible jython virtual', '19013034', 'it seems ironpython is just slower than cpython for reading text files\n')
('ironpython', 'potentially faster', 'cpython', 'conclusion faster', '4148627', 'consequently ironpython is potentially faster than cpython is especially for multithreading scenarios\n')
('ironpython', 'faster', 'cpython', '', '30475540', 'ironpython and jython are also jit-compiled although using the more generic jvm and .net jits so they tend to be faster than cpython for this kind of work as well\n')

couchbase	couchdb	4
('couchbase', 'faster', 'couchdb', '', '11960001', 'i d like to add that couchbase is a faster and more scalable option than couchdb the 2.0 version introduces views at a high level it s a distributed memcached membase server merged with couchdb but of course more sophisticated than just mashing them together\n')
('couchbase', 'more', 'couchdb', '', '9508840', 'couchbase looks more like a memcache server with a persistence layer powered by couchdb and maybe it does not fit your needs\n')
('couchbase', 'more scalable option', 'couchdb', '', '11960001', 'i d like to add that couchbase is a faster and more scalable option than couchdb the 2.0 version introduces views at a high level it s a distributed memcached membase server merged with couchdb but of course more sophisticated than just mashing them together\n')
('couchbase', 'more efficient', 'couchdb', '', '31795832', 'couchbase btw also uses binary replication mechanism which will be more efficient than couchdb as long as the couchdb protocol is not utilized for bidirectional data exchange and conflict resolution\n')

https	ssl	7
('https', 'more flexible', 'ssl', '', '20815358', 'https is more flexible than ssl an application can configure the level of security it needs\n')
('ssl', 'more', 'https', 'virtual host port', '39346295', 'there is a limitation on creating virtual hosts for name based virtual host while using ssl 443 port so if you want to have more than one https port enabled you will need ip based virtual hosting\n')
('https', 'more', 'ssl', '', '20815358', 'https is more flexible than ssl an application can configure the level of security it needs\n')
('ssl', 'always safer switch', 'https', '', '22101820', 'as last resort resolution i don t suggest this for security issues using ssl is always safer switch your registry to use http instead of https\n')
('ssl', 'always safer', 'https', '', '22101820', 'as last resort resolution i don t suggest this for security issues using ssl is always safer switch your registry to use http instead of https\n')
('https', 'more', 'ssl', 'virtual host port', '24386103', 'it could be a sni problem if you use any kind of load balancer https proxy or more than 1 ssl certificate on the same ip\n')
('https', 'resource slower', 'ssl', '', '34876725', 'you could always use https that will work both on http and https websites but loading a https resource is slower than loading a http resource because of the encryption and ssl handshakes\n')

floyd-warshall	dijkstra	4
('floyd-warshall', 'more efficient', 'dijkstra', '', '25250266', 'short answer floyd-warshall is more efficient in this case than naive application of dijkstra s\n')
('floyd-warshall', 'more', 'dijkstra', '', '25250266', 'short answer floyd-warshall is more efficient in this case than naive application of dijkstra s\n')
('floyd-warshall', 'better', 'dijkstra', '', '11778525', 'indeed floyd-warshall s algorithm is better than dijkstra s in this case the complexity for dijkstra is o m n 2 and in this problem m is much much higher than n so the o n 3 time complexity of floyd-warshall is better\n')
('floyd-warshall', 'faster', 'dijkstra', '', '11439561', 'no practically floyd-warshall is faster than dijkstra s for all pair shortest path generally\n')

max	median	4
('max', 'larger smaller', 'median', '', '28372834', 'so the t 7n 10 is the part of continuing the equation with the max segment of numbers that is larger smaller than the median of medians..\n')
('max', 'less', 'median', '', '21074836', 'so after calculating median of first k elements delete the first element directly from heap min or max according to whether it is greater or less than median using pointers and then use heapify at that position\n')
('max', 'smaller', 'median', '', '28372834', 'so the t 7n 10 is the part of continuing the equation with the max segment of numbers that is larger smaller than the median of medians..\n')
('max', 'less', 'median', '', '28372834', 'therefore the max number of elements you could have that are greater than or less than the median of median is 3 10 + 2 10 + 2 10 7 10\n')

glut	sdl	6
('glut', 'much more easier', 'sdl', '', '4115361', 'glut is much more easier while many of people use sdl or sfml they re more flexible and feature-full than glut\n')
('sdl', 'more', 'glut', '', '2842963', 'however if you re developing a serious application sdl is more likely to be the tool you need to use as glut abstracts more than a real application would normally want to\n')
('glut', 'much more', 'sdl', '', '4115361', 'glut is much more easier while many of people use sdl or sfml they re more flexible and feature-full than glut\n')
('glut', 'better', 'sdl', '', '2842963', 'if you re building a simple demo of a rendering mechanism glut is way better than sdl it takes care of a lot of the details that sdl would otherwise require\n')
('sdl', 'more likely', 'glut', '', '2842963', 'however if you re developing a serious application sdl is more likely to be the tool you need to use as glut abstracts more than a real application would normally want to\n')
('glut', 'way better', 'sdl', '', '2842963', 'if you re building a simple demo of a rendering mechanism glut is way better than sdl it takes care of a lot of the details that sdl would otherwise require\n')

g++	gcc	6
('g++', 'compiler more strict', 'gcc', '', '6371223', 'g++ compiler is more strict then gcc compiler\n')
('g++', 'better', 'gcc', 'better', '8133175', 'so using g++ is better than gcc\n')
('g++', 'looser', 'gcc', '', '128221', 'unfortunately g++ packed the structs significantly looser than gcc which caused significant problems sharing objects between c and c++ code\n')
('g++', 'larger', 'gcc', '', '8625428', 'the g++ version is a little larger than the gcc version but not 100x larger\n')
('g++', 'better', 'gcc', 'better', '8574598', 'g++ seems to work better than gcc in my experience\n')
('g++', 'compiler more', 'gcc', '', '6371223', 'g++ compiler is more strict then gcc compiler\n')

stringr	stringi	3
('stringr', 'newer', 'stringi', '', '40296527', 'stringr is newer based on stringi internally and is often even faster\n')
('stringr', 'more human-readable', 'stringi', '', '5992152', 'stringr provides more human-readable wrappers around the base r functions though as of dec 2014 the development version has a branch built on top of stringi mentioned below\n')
('stringr', 'more', 'stringi', '', '5992152', 'stringr provides more human-readable wrappers around the base r functions though as of dec 2014 the development version has a branch built on top of stringi mentioned below\n')

strncpy	memcpy	8
('memcpy', 'much faster', 'strncpy', '', '10513169', 'even if underlying implementation is not so different memcpy is much faster because it does not have to check what it s copying strncpy will stop when it ll copy the end of string character null\n')
('memcpy', 'version not more', 'strncpy', '', '12284783', 'the memcpy version is not more complex or more dangerous than the strncpy version\n')
('strncpy', 'slower', 'memcpy', '', '610260', 'but for the example you give it doesn t matter - if it s going to fail it will be in the initial strlen so strncpy doesn t buy you anything in terms of safety and presumbly strncpy is slower as it has to both check bounds and for nul and any difference between memcpy and strcpy isn t worth changing code for speculatively\n')
('memcpy', 'faster', 'strncpy', '', '10513169', 'memcpy will always be faster than strncpy for any real world situation even in the corner case i spoke before look page_copy_fwd_maybe\n')
('memcpy', 'worse', 'strncpy', '', '38255275', 'if you compute the length of the string for unrelated reasons or have the length of the string from other resources it s unclear to me whether memcpy is better or worse than strncpy\n')
('memcpy', 'version not more complex', 'strncpy', '', '12284783', 'the memcpy version is not more complex or more dangerous than the strncpy version\n')
('memcpy', 'probably faster', 'strncpy', '', '38255292', 'which is more efficient is up for debate but based on cpu bulk instructions which can copy an entire block of memory in one instruction memcpy is probably faster as strncpy would check each copied byte for a nul character\n')
('memcpy', 'better', 'strncpy', '', '38255275', 'if you compute the length of the string for unrelated reasons or have the length of the string from other resources it s unclear to me whether memcpy is better or worse than strncpy\n')

wxpython	pyqt	3
('wxpython', 'probably easier', 'pyqt', '', '36914683', 'wxpython is probably easier than pyqt or tkinter i don t want to start a framework war\n')
('wxpython', 'less portable', 'pyqt', '', '3787488', 'two words of warning against wxpython it is not possible to install it via the popular fink package manager on mac os x currently which makes it far less portable than pyqt and tkinter\n')
('wxpython', 'easier', 'pyqt', '', '36914683', 'wxpython is probably easier than pyqt or tkinter i don t want to start a framework war\n')

hash	crypt	3
('hash', 'many more', 'crypt', '', '9108430', 'the second hashing function is hash which supports many more algorithms and variants than crypt but does not support some algorithms that crypt does\n')
('hash', 'newer', 'crypt', '', '10281373', 'hash is newer and seems to support more hashing alogrithms than crypt\n')
('hash', 'many more algorithms', 'crypt', '', '9108430', 'the second hashing function is hash which supports many more algorithms and variants than crypt but does not support some algorithms that crypt does\n')

ember.js	backbone.js	8
('ember.js', 'more', 'backbone.js', '', '12996823', 'i already know that ember.js is a more heavy weight approach in contrast to backbone.js\n')
('ember.js', 'more', 'backbone.js', '', '10105437', 'both give you the ability to implement things in a variety of ways which can be confusing but ember.js provides more of the code that you would have to write yourself in backbone.js as standard which for me personally is more important for rapid prototyping than the wealth of backbone.js examples available\n')
('ember.js', 'more heavy', 'backbone.js', '', '12996823', 'i already know that ember.js is a more heavy weight approach in contrast to backbone.js\n')
('ember.js', 'more complete imo', 'backbone.js', '', '10105437', 'but on the other hand although new the ember.js package is actually more complete imo than backbone.js\n')
('ember.js', 'package actually more complete', 'backbone.js', '', '10105437', 'but on the other hand although new the ember.js package is actually more complete imo than backbone.js\n')
('ember.js', 'larger', 'backbone.js', '', '12999399', 'ember.js is larger than backbone.js but thanks to expires cache-control this only matters on the the first load\n')
('ember.js', 'package actually more', 'backbone.js', '', '10105437', 'but on the other hand although new the ember.js package is actually more complete imo than backbone.js\n')
('ember.js', 'simpler', 'backbone.js', '', '9755245', 'ember.js would make things even simpler than backbone.js\n')

mousemove	mouseenter	3
('mousemove', 'earlier', 'mouseenter', '', '25777344', 'problably the problem is that mousemove event may fire earlier than mouseenter in some cases\n')
('mousemove', 'more', 'mouseenter', '', '40365654', 'mousemove is more intrusive than mouseenter but it tracks your mouse position all the time so that the tooltip moves accordingly\n')
('mousemove', 'more intrusive', 'mouseenter', '', '40365654', 'mousemove is more intrusive than mouseenter but it tracks your mouse position all the time so that the tooltip moves accordingly\n')

robocopy	xcopy	14
('robocopy', 'more robust', 'xcopy', '', '11546939', 'i have solved it in the past very successfully using robocopy it s much more robust than xcopy\n')
('robocopy', 'much more powerful', 'xcopy', '', '6912364', 'use robocopy it s much more powerful than xcopy\n')
('robocopy', 'faster', 'xcopy', '', '24962343', 'that would theoretically cut the time in half but it seems that robocopy is much faster than xcopy at least for this use so it took way less time\n')
('robocopy', 'more powerful', 'xcopy', '', '6912364', 'use robocopy it s much more powerful than xcopy\n')
('robocopy', 'much faster', 'xcopy', '', '24962343', 'that would theoretically cut the time in half but it seems that robocopy is much faster than xcopy at least for this use so it took way less time\n')
('robocopy', 'much more robust', 'xcopy', '', '11546939', 'i have solved it in the past very successfully using robocopy it s much more robust than xcopy\n')
('robocopy', 'command more', 'xcopy', '', '41016415', 'the robocopy command provides a more intelligent exclusion feature switches xd and xf than xcopy does which you could use for your task\n')
('robocopy', 'more powerful tool', 'xcopy', '', '5062597', 'if your batch file only needs to run on windows vista or later you can use robocopy instead which is an even more powerful tool than xcopy and is now built into the operating system\n')
('robocopy', 'more options', 'xcopy', '', '27951518', 'you might want look at robocopy as it has many more options than xcopy\n')
('robocopy', 'much more', 'xcopy', '', '11546939', 'i have solved it in the past very successfully using robocopy it s much more robust than xcopy\n')
('xcopy', 'better', 'robocopy', 'better', '23197486', 'xcopy will not be better than robocopy at this\n')
('robocopy', 'better', 'xcopy', 'better', '33527711', 'also robocopy is better than xcopy\n')
('robocopy', 'command more intelligent', 'xcopy', '', '41016415', 'the robocopy command provides a more intelligent exclusion feature switches xd and xf than xcopy does which you could use for your task\n')
('robocopy', 'much more', 'xcopy', '', '6912364', 'use robocopy it s much more powerful than xcopy\n')

freebsd	linux	3
('freebsd', 'much better', 'linux', '', '530086', 'just a tip but from personal experience i ve found that freebsd works much better on low-end hardware than a modern linux distro does\n')
('freebsd', 'more capable', 'linux', '', '30887647', 'be aware that the bourne shell in freebsd is more capable than on linux\n')
('freebsd', 'more', 'linux', '', '30887647', 'be aware that the bourne shell in freebsd is more capable than on linux\n')

padrino	ruby-on-rails	3
('padrino', 'better', 'ruby-on-rails', 'wuliwong complex faster', '12682214', 'but i don t know anything about sinatra and padrino is the footprint and speed really that better than ruby-on-rails\n')
('padrino', 'less complex', 'ruby-on-rails', 'wuliwong complex faster', '14831065', 'as wuliwong said sinatra and padrino are way less complex than ruby-on-rails\n')
('padrino', 'faster', 'ruby-on-rails', 'wuliwong complex faster', '12686116', 'sinatra and padrino are not automatically faster than ruby-on-rails\n')

lxml	elementtree	5
('lxml', 'better', 'elementtree', '', '1563301', 'lxml -- 100x better than elementtree\n')
('lxml', 'faster', 'elementtree', 'application speed effective', '20621248', 'lxml is faster than elementtree but i ve never found an application where the speed boost paid for the hassles of distribution\n')
('lxml', 'faster', 'elementtree', 'application speed effective', '7949706', 'but in general you will find that lxml is faster more effective and has an api which adheres closely to a python standard the elementtree which comes with the python standard library\n')
('lxml', 'more', 'elementtree', '', '37943680', 'note please do tell me if lxml is more easy or this elementtree\n')
('lxml', 'more easy', 'elementtree', '', '37943680', 'note please do tell me if lxml is more easy or this elementtree\n')

qqmlapplicationengine	qquickview	2
('qqmlapplicationengine', 'newer', 'qquickview', 'headline newer powerful', '46342425', 'since qqmlapplicationengine is newer than qquickview one would naturally assume that it is more powerful\n')
('qqmlapplicationengine', 'newer', 'qquickview', 'headline newer powerful', '40271518', 'headline qqmlapplicationengine is newer and more powerful than qquickview\n')

cpu	hyperthreading	4
('hyperthreading', 'more', 'cpu', '', '19170153', 'vcpu reg are virtual cpu registers that exist on many processors that have things like multiple cores hyperthreading or other features that enable higher layers to believe that there is more than one cpu present when there isn t -- such as today s x86s\n')
('cpu', 'more', 'hyperthreading', '', '149212', 'almost any new cpu has more than one core or if it has just one it might support hyperthreading and thus pretending it has more than one\n')
('cpu', 'more consistently', 'hyperthreading', '', '36958661', 'i tried using schedule static num_threads 4 and noticed that my programme always completes in 11.5s to 11.7s always below 12s at about 320 cpu runs more consistently and uses less resources even if the best run is half a second slower than the rare outlier with hyperthreading\n')
('cpu', 'more', 'hyperthreading', '', '36958661', 'i tried using schedule static num_threads 4 and noticed that my programme always completes in 11.5s to 11.7s always below 12s at about 320 cpu runs more consistently and uses less resources even if the best run is half a second slower than the rare outlier with hyperthreading\n')

mapr	cloudera	2
('mapr', 'clearly cheaper tco', 'cloudera', '', '46320326', 'mapr has clearly cheaper tco and technologically superior platform cloudera is a bit more polished hortonworks for pure open source don t read this as free or cheap as most companies end up spending more money on hw to get any value\n')
('mapr', 'clearly cheaper', 'cloudera', '', '46320326', 'mapr has clearly cheaper tco and technologically superior platform cloudera is a bit more polished hortonworks for pure open source don t read this as free or cheap as most companies end up spending more money on hw to get any value\n')

zen-cart	magento	1
('zen-cart', 'simpler', 'magento', '', '2225598', 'alternatively zen-cart looks simpler than magento but without some of the flexibility\n')

selenium	appium	2
('selenium', 'better luck', 'appium', '', '29148367', 'if you really want to use selenium inside an android app you might have better luck with appium\n')
('appium', 'more mobile', 'selenium', '', '41502422', 'you can use appium more mobile oriented than selenium and you can use c# to write your tests\n')

strlen	printf	1
('strlen', 'faster', 'printf', '', '31654631', 'strlen is fast alloca is fast copying the string up to the first n is fast puts is faster than printf but is is most likely far slower than all three operations mentioned before together\n')

bison	jison	1
('bison', 'easier', 'jison', '', '44829697', 'indeed it would be relatively easy to preprocess a bison grammar file but it is easier with jison because you can compute the grammar programmatically and pass it to jison as a json object\n')

hevc	h.264	1
('hevc', 'even better', 'h.264', '', '29082672', 'edit h.265 hevc is even better at compression 50 of h.264 size in some cases but support is not yet widespread so stick with h.264 for now\n')

colorbox	fancybox	1
('colorbox', 'much faster', 'fancybox', '', '9065359', 'i ve had to replace lyebox with colorbox which is much faster and seemingly has less problems conflicting with other scripts lightbox fancybox and others wouldn t work for me\n')

retaincount	dealloc	1
('retaincount', 'greater', 'dealloc', '', '10116389', 'if your array s retaincount is greater than 1 at the start of dealloc some other object is retaining it at least temporarily\n')

uibezierpath	uiimage	1
('uibezierpath', 'class easier', 'uiimage', '', '9974036', 'the uibezierpath class seems easier to use so how could i get that drawing in a uiimage\n')

scikit-learn	liblinear	2
('scikit-learn', 'even better', 'liblinear', '', '18379716', 'also linearsvc class from scikit-learn performs even better than liblinear whch is also surprising considering that it s a wrapper of liblinear\n')
('scikit-learn', 'better', 'liblinear', '', '18379716', 'also linearsvc class from scikit-learn performs even better than liblinear whch is also surprising considering that it s a wrapper of liblinear\n')

uitabbarcontroller	uinavigationcontroller	1
('uitabbarcontroller', 'more', 'uinavigationcontroller', '', '1117074', 'i am writing an app based on uitabbarcontroller which has more than 10 viewcontrollers with corresponding uinavigationcontroller\n')

scipy	pyfftw	2
('scipy', 'better job', 'pyfftw', '', '15165621', 'edit more recent scipy does a better job of not always padding to powers of 2 length so is closer in output to the pyfftw case\n')
('scipy', 'better', 'pyfftw', '', '15165621', 'edit more recent scipy does a better job of not always padding to powers of 2 length so is closer in output to the pyfftw case\n')

gulp-ruby-sass	gulp-sass	2
('gulp-ruby-sass', 'slower', 'gulp-sass', '', '29794151', 'but the plugin gulp-ruby-sass slower than gulp-sass\n')
('gulp-ruby-sass', 'slower', 'gulp-sass', '', '25985795', 'i ended up using gulp-ruby-sass that while is a bit slower than gulp-sass is rich with features such as loadpath\n')

texreg	stargazer	2
('texreg', 'more', 'stargazer', '', '24193452', 'yet from my point of view texreg is more efficient that stargazer and easier to customize than xtable\n')
('texreg', 'more efficient', 'stargazer', '', '24193452', 'yet from my point of view texreg is more efficient that stargazer and easier to customize than xtable\n')

packets	multicast	1
('packets', 'better', 'multicast', '', '22075284', 'a third possibility would be to send out some form of discovery packets either by broadcast or better by multicast udp\n')

percentile	median	1
('percentile', 'more productive', 'median', '', '3877986', 'as one good programmer can be more productive than two average programmers i vaguely remember an old ibm study concluding someone in the top percentile was 27x more productive than median it s useful to see the same programmers doing it both ways\n')

ng-include	ng-view	2
('ng-include', 'more processor', 'ng-view', '', '29088603', 'i could add the dropzone in a ng-include above the area and have it hidden when the template is looking elsewhere but have heard that ng-include uses more processor than ng-view so would prefer to keep it all together\n')
('ng-include', 'more', 'ng-view', '', '29088603', 'i could add the dropzone in a ng-include above the area and have it hidden when the template is looking elsewhere but have heard that ng-include uses more processor than ng-view so would prefer to keep it all together\n')

robospice	ion	2
('robospice', 'more robust', 'ion', '', '23863829', 'i ve used both robospice is more robust but ion is easier on the eyes\n')
('robospice', 'more', 'ion', '', '23863829', 'i ve used both robospice is more robust but ion is easier on the eyes\n')

tokudb	myisam	2
('tokudb', 'faster', 'myisam', '', '8615317', 'from my personal use i experienced about 5 - 10 times less disk usage due to tokudb s compression and it s much much faster than myisam or innodb\n')
('tokudb', 'slower', 'myisam', '', '21863823', 'at the beginning the insert performance of innodb is almost 50 times slower than myisam and tokudb is 40 times slower than myisam\n')

spsite	spweb	2
('spsite', 'longer url', 'spweb', '', '2000182', 'since spsite takes a longer url you may also be able to open the right spweb as well using site.openweb\n')
('spsite', 'longer', 'spweb', '', '2000182', 'since spsite takes a longer url you may also be able to open the right spweb as well using site.openweb\n')

i386	powerpc	1
('i386', 'faster', 'powerpc', '', '21257633', 'on i386 the dyld stub is much faster than the powerpc equivalent so we didn√¢ t bother doing extra work to bypass it\n')

centroid	threshold	1
('centroid', 'less', 'threshold', '', '33594868', 'precision parameter if centroid amount of change is less than a threshold delta stop the algorithm\n')

hive	hdfs	1
('hive', 'slower plain', 'hdfs', '', '9167763', 'plus the overhead of doing it is extremely costly- hive queries against hbase are on my cluster at least an order of magnitude slower than against plain hdfs files\n')

bitarray	bitset	1
('bitarray', 'more', 'bitset', '', '5005191', '1 might not yet be sparse enough to make this better compared to just a plain bitarray assuming longs storing 64 bits each it doesn t take more than 2 longs to have more than one bitset on average but if the sparsity increases beyond that the space and time savings will show\n')

git-rebase	git-merge	2
('git-rebase', 'tidier history', 'git-merge', '', '37939252', 'git-rebase creates a tidier history while git-merge back and forth may create a complex commit graph in the end\n')
('git-rebase', 'tidier', 'git-merge', '', '37939252', 'git-rebase creates a tidier history while git-merge back and forth may create a complex commit graph in the end\n')

jvisualvm	jhat	2
('jvisualvm', 'much more', 'jhat', '', '39790794', 'another way to do the same thing is to use jvisualvm which is much more user friendly but also more memory consuming than jhat\n')
('jvisualvm', 'much more user', 'jhat', '', '39790794', 'another way to do the same thing is to use jvisualvm which is much more user friendly but also more memory consuming than jhat\n')

abstract-class	subclass	1
('abstract-class', 'more', 'subclass', '', '190913', 'making abstract-class before i had more than one subclass in mind for them\n')

moles	moq	1
('moles', 'much better', 'moq', '', '8000104', 'personally i think moles is much better suited for mocking the unmockable and i prefer a combination of moq for my own interfaces and classes and moq for framework and externalities like file i o gui db connections etc\n')

flotr	highcharts	2
('flotr', 'better', 'highcharts', '', '11477001', 'you should be able to do this in flotr which has a better license than highcharts by just throwing what they showed in this blog post on its side\n')
('flotr', 'better license', 'highcharts', '', '11477001', 'you should be able to do this in flotr which has a better license than highcharts by just throwing what they showed in this blog post on its side\n')

jrebel	hotswap	2
('jrebel', 'much more powerful', 'hotswap', '', '15466805', 'it is worth mentioning that there is a commercial product named jrebel that is much more powerful than jvm hotswap\n')
('jrebel', 'much more', 'hotswap', '', '15466805', 'it is worth mentioning that there is a commercial product named jrebel that is much more powerful than jvm hotswap\n')

persistent	transient	2
('persistent', 'so more', 'transient', '', '2349847', 'memcache data lives in memory and isn t persistent so is for more transient data\n')
('transient', 'less overhead', 'persistent', '', '8792019', 'my intuition is that transient properties would incurr less overhead than persistent properties because they do not need to be persistent and read from the database so converting them to persistent properties will likely only make things slightly worse\n')

oncreate	setcontentview	1
('oncreate', 'nothing more', 'setcontentview', '', '11704785', 'i can make this happen with the minimal project where oncreate does nothing more than call super and setcontentview\n')

nsprogress	nsoperation	1
('nsprogress', 'more', 'nsoperation', '', '19188476', 'but i ve had difficulty implementing this it seems as though nsprogress is meant more for long operations that execute all their code on one background thread but have separate sections that make it easy to determine when progress has been made if this is the case then the use of the term suboperation is a bit misleading as it brings to mind the use of nested nsoperation\n')

aptana	dreamweaver	1
('aptana', 'better', 'dreamweaver', '', '8664117', 'i had previously used aptana 3 for a couple days and may have come to the conclusion that it is better than dreamweaver at actual html css coding\n')

rational-numbers	zero	1
('rational-numbers', 'greater', 'zero', '', '1780489', 'is there any way in haskell to get the constant that is the largest and smallest possible positive rational-numbers greater than zero that can be represented by doubles\n')

webstorm	phpstorm	1
('webstorm', 'less functionality', 'phpstorm', '', '46015895', 'however i do not know if webstorm has a comparable option like that as it has less functionality than phpstorm or even intellij\n')

scgi	fastcgi	1
('scgi', 'simpler', 'fastcgi', '', '15033764', 'you can also use scgi it is a lot simpler than fastcgi\n')

ilist	icollection	2
('ilist', 'more specialized', 'icollection', '', '26339314', 'ilist is a more specialized interface that extend icollection\n')
('ilist', 'more', 'icollection', '', '26339314', 'ilist is a more specialized interface that extend icollection\n')

nmock	moq	2
('nmock', 'older expectation', 'moq', '', '12625646', 'this is another reason why i d prefer rhinomocks and moq over nmock nmock uses the older expectation style whereas rhinomocks and moq both support the arrange act assert approach where you specify you expected interactions as assertions at the end of the test like this\n')
('nmock', 'older', 'moq', '', '12625646', 'this is another reason why i d prefer rhinomocks and moq over nmock nmock uses the older expectation style whereas rhinomocks and moq both support the arrange act assert approach where you specify you expected interactions as assertions at the end of the test like this\n')

umd	amd	1
('umd', 'even better', 'amd', '', '44340865', 'umd is even better supported since it is compatible with commonjs and amd so that would be a safer bet\n')

bltoolkit	nhibernate	1
('bltoolkit', 'better solution', 'nhibernate', '', '3345095', 'update for our purposes bltoolkit ended up being a better solution than nhibernate\n')

tlistview	tlistbox	1
('tlistview', 'better choice', 'tlistbox', '', '28203811', 'depending on your actual needs which you did not explain a multi-column tlistview in vsreport mode may be a better choice than a tlistbox\n')

phpunit	behat	2
('phpunit', 'more', 'behat', '', '14831333', 'for general testing phpunit is a more well-established product while behat is focussed on tests written using bdd methodology behaviour driven design\n')
('phpunit', 'more well-established', 'behat', '', '14831333', 'for general testing phpunit is a more well-established product while behat is focussed on tests written using bdd methodology behaviour driven design\n')

rtsp	rtp	1
('rtsp', 'more', 'rtp', '', '41291886', 'rtsp is more of a handshake done with the server while rtp is the actual stream coming in once the handshake is done and you start streaming\n')

multitasking	backgrounding	2
('multitasking', 'really more fast', 'backgrounding', '', '3543267', 'btw multitasking is really more fast switching than backgrounding in ios.\n')
('multitasking', 'really more', 'backgrounding', '', '3543267', 'btw multitasking is really more fast switching than backgrounding in ios.\n')

passenger	thin	2
('passenger', 'less', 'thin', '', '21745505', 'memory optimizations - phusion passenger uses less memory than thin and unicorn\n')
('passenger', 'less memory', 'thin', '', '21745505', 'memory optimizations - phusion passenger uses less memory than thin and unicorn\n')

grafana	kibana	2
('kibana', 'more', 'grafana', '', '42785707', 'kibana focuses more on logs and adhoc search while grafana focuses more on creating dashboards for visualizing time series data\n')
('grafana', 'more', 'kibana', '', '42781010', 'grafana is more of visualization only while kibana is for searching the logs is that right\n')

pom.xml	maven-shade-plugin	1
('pom.xml', 'better', 'maven-shade-plugin', '', '42719511', 'this is a lot more pom.xml code but i like it better than the maven-shade-plugin because it does just what i want and nothing more\n')

phpmyadmin	heidisql	2
('phpmyadmin', 'also larger number', 'heidisql', '', '46255006', 'phpmyadmin also shows the larger number however i have switched to heidisql since i find it s gui is superior for my local development\n')
('phpmyadmin', 'also larger', 'heidisql', '', '46255006', 'phpmyadmin also shows the larger number however i have switched to heidisql since i find it s gui is superior for my local development\n')

fleet	orchestration	2
('fleet', 'no longer', 'orchestration', '', '45852536', 'fleet docs say fleet is no longer actively developed or maintained by coreos and link to container orchestration moving from fleet to kubernetes\n')
('fleet', 'no longer actively', 'orchestration', '', '45852536', 'fleet docs say fleet is no longer actively developed or maintained by coreos and link to container orchestration moving from fleet to kubernetes\n')

printf	fgets	2
('printf', 'earlier', 'fgets', '', '11575102', 'i am getting a problem using printf and fgets as in my code printf is written earlier then fget but it does not run it runs after fgets runs\n')
('printf', 'earlier then', 'fgets', '', '11575102', 'i am getting a problem using printf and fgets as in my code printf is written earlier then fget but it does not run it runs after fgets runs\n')

iodbc	unixodbc	1
('iodbc', 'better luck', 'unixodbc', '', '17328798', 'the iodbc included with os x has some things that are listed as deprecated and i ve had better luck with unixodbc in the past\n')

qtablewidget	qtableview	1
('qtablewidget', 'slightly easier', 'qtableview', '', '38782197', 'the qtablewidget is slightly easier to implement than the qtableview which also needs a qtablemodel as backend but it has less capabilities\n')

sfml.net	bullet	1
('sfml.net', 'more', 'bullet', '', '30130528', 'i try to make shooter game on c# with sfml.net but i can t imagine how to make an ability to shoot more than 1 bullet because now i have just one null-object of bullet-class and when player presses space key this object gets link to the new bullet\n')

bundler	bcrypt-ruby	2
('bundler', 'newer', 'bcrypt-ruby', '', '10783218', 'if the bundler is newer then version 1.1.2 it will remove bcrypt-ruby 3.0.1-x86-mingw32 automaticaly\n')
('bundler', 'newer then', 'bcrypt-ruby', '', '10783218', 'if the bundler is newer then version 1.1.2 it will remove bcrypt-ruby 3.0.1-x86-mingw32 automaticaly\n')

lasagne	keras	2
('keras', 'better', 'lasagne', '', '39871218', 'if everything is correct why keras perform so much better than lasagne\n')
('lasagne', 'worse', 'keras', '', '39871218', 'as a result of this comparison i see that lasagne is performing so much worse than keras that i m starting to doubt about my code\n')

timeit	cprofile	1
('timeit', 'more accurate', 'cprofile', '', '24627415', 'you should always use the timeit module for time trials it is far more accurate than cprofile here\n')

bcolz	pandas	2
('bcolz', 'more', 'pandas', '', '29968370', 'i haven t played around with it recently but i think bcolz is more flexible here in terms of mixing dtypes but doesn t give you all the pandas dataframe conveniences obviously\n')
('bcolz', 'more flexible', 'pandas', '', '29968370', 'i haven t played around with it recently but i think bcolz is more flexible here in terms of mixing dtypes but doesn t give you all the pandas dataframe conveniences obviously\n')

maven-jaxb2-plugin	xjc	2
('maven-jaxb2-plugin', 'newer version', 'xjc', '', '25810873', 'however it may be that maven-jaxb2-plugin uses a newer version of xjc than you re using with enum\n')
('maven-jaxb2-plugin', 'newer', 'xjc', '', '25810873', 'however it may be that maven-jaxb2-plugin uses a newer version of xjc than you re using with enum\n')

sublimetext	textmate	2
('sublimetext', 'much thicker', 'textmate', '', '24598390', 'macvim sublimetext is much thicker whereas textmate is slicker and sophisticated\n')
('sublimetext', 'more', 'textmate', '', '13445838', 'but i ve found that sublimetext 2 has some features i like more than textmate and also tm v2 which is in beta\n')

fresco	imageview	1
('fresco', 'more customizable', 'imageview', '', '35290262', 'the fresco docs explain how to use drawees and you can see right from their xml definition that they are much more customizable than imageview\n')

icmp	mtu	2
('icmp', 'greater', 'mtu', '', '17880950', 'what happen when icmp is disabled in an router and when packet size greater than mtu how the router fragments that packet\n')
('mtu', 'smaller', 'icmp', '', '26364809', 'any device in the path of communication between the sender and receiver whose mtu is smaller than the packet will drop such packets and reply the sender with icmp destination unreachable datagram too big message containing the device s mtu\n')

cargo	maven	2
('cargo', 'more general', 'maven', '', '10936609', 'you could also use apache cargo which is more general than the tomcat maven plugin\n')
('cargo', 'more', 'maven', '', '10936609', 'you could also use apache cargo which is more general than the tomcat maven plugin\n')

dateadd	strtotime	1
('dateadd', 'better', 'strtotime', '', '3750603', 'that said the date class is much better in php5.3 -- it even has dateadd subtract functions which would also solve your problem much better than strtotime .\n')

httpd.conf	.htaccess	2
('httpd.conf', 'better results', '.htaccess', '', '21095965', 'instead of mucking with httpd.conf you might get better results with .htaccess\n')
('httpd.conf', 'faster', '.htaccess', '', '9329982', 'using apaches httpd.conf is faster since accessing the .htaccess adds a small overhead√¢ apache checks every directory√¢ and parent directory√¢ for the file and it will be loaded for every request\n')

asihttprequest	cfnetwork	2
('asihttprequest', 'better', 'cfnetwork', '', '6836365', 'you can use asihttprequest which is quite better than cfnetwork\n')
('asihttprequest', 'quite better', 'cfnetwork', '', '6836365', 'you can use asihttprequest which is quite better than cfnetwork\n')

xhtml	apache-fop	2
('xhtml', 'stronger syntax', 'apache-fop', '', '29554491', 'xhtml has a stronger syntax than html and is easier to convert to apache-fop this way\n')
('xhtml', 'stronger', 'apache-fop', '', '29554491', 'xhtml has a stronger syntax than html and is easier to convert to apache-fop this way\n')

crfsuite	crf++	1
('crfsuite', 'faster', 'crf++', '', '17912109', 'crfsuite is faster than crf++ and it can deal with a huge training data\n')

mathml	mathjax	2
('mathml', 'matters further', 'mathjax', '', '41676041', 'in addition the need for polyfills for mathml complicates matters further as they may handle the interaction differently as can be seen in the sample below when using the button to load mathjax\n')
('mathml', 'faster', 'mathjax', '', '29350954', 'if you are targeting android you can use firefox for android by developing a webapp that has native mathml support and because of it will be much faster than mathjax or other javascript solution\n')

arraylist	treeset	1
('arraylist', 'more effective', 'treeset', '', '38555784', 'so arraylist and sort is more effective than treeset\n')

jspm	bower	1
('jspm', 'much larger', 'bower', '', '26267036', 'well jspm is much larger and ambitious project than bower\n')

ember.js	sproutcore	2
('ember.js', 'better', 'sproutcore', '', '10828935', 'i have seen a lot of post where they are claiming that ember.js is much better than sproutcore but looking at the differences i have seen that the widget support is not there in ember.js\n')
('ember.js', 'much better', 'sproutcore', '', '10828935', 'i have seen a lot of post where they are claiming that ember.js is much better than sproutcore but looking at the differences i have seen that the widget support is not there in ember.js\n')

fileinputstream	bufferedreader	1
('fileinputstream', 'faster', 'bufferedreader', '', '23964531', 'see the referred post for an example that reads a single file in parallel with fileinputstream which should be significantly faster than using bufferedreader according to these benchmarks\n')

blockui	jqmodal	1
('blockui', 'higher', 'jqmodal', '', '6444837', 'one item to note be aware the default z-index for jqmodal is below default for blockui so using them together requires you set blockui basez option higher than jqmodal s default 3000.\n')

kate	gedit	2
('kate', 'better', 'gedit', '', '43830296', 'you can customize kate and i think you will like it better than gedit\n')
('kate', 'better', 'gedit', '', '25925631', 'if vim seems too much by the moment i think that kate is better than gedit\n')

while-loop	loops	2
('while-loop', 'more prone', 'loops', '', '32678931', 'if you re just going to loops through point use a for-loop as while-loop is more prone to dropping into an endless loops if you forgot to increment counter or doing wrongly or do it in multiple places\n')
('while-loop', 'more', 'loops', '', '32678931', 'if you re just going to loops through point use a for-loop as while-loop is more prone to dropping into an endless loops if you forgot to increment counter or doing wrongly or do it in multiple places\n')

jacoco	cobertura	1
('jacoco', 'easier', 'cobertura', '', '44594037', 'similarly you might find using jacoco easier than cobertura\n')

ng-view	ng-controller	1
('ng-view', 'more', 'ng-controller', '', '25096138', 'unlike the ng-view it s possible that there are more than one ng-controller in the same page\n')

scriptaculous	jquery	2
('scriptaculous', 'better', 'jquery', '', '2762721', 'i also kind of get the impression that scriptaculous drag and drop is better than jquery ui drag and drop based on the online demos\n')
('scriptaculous', 'more configurable', 'jquery', '', '5327986', 'i ended up using scriptaculous for most of my animations simply because it provides smoother animations and more configurable than what jquery ui provides\n')

heroku	openshift	2
('heroku', 'toolbelt much more powerful', 'openshift', '', '15770527', 'having used both i can tell you that it s a much more polished platform the servers are about 4√£ faster you can run as many apps as you want and the heroku toolbelt is much more powerful than the openshift s client tools\n')
('heroku', 'toolbelt much more', 'openshift', '', '15770527', 'having used both i can tell you that it s a much more polished platform the servers are about 4√£ faster you can run as many apps as you want and the heroku toolbelt is much more powerful than the openshift s client tools\n')

openssl	cryptlib	2
('openssl', 'more', 'cryptlib', '', '28573509', 'openssl is more similar to peter gutmann s cryptlib and gnu s gnutls\n')
('openssl', 'more similar', 'cryptlib', '', '28573509', 'openssl is more similar to peter gutmann s cryptlib and gnu s gnutls\n')

vbo	vao	2
('vbo', 'more', 'vao', '', '36241764', 'i have issue with drawing big vbo with vao because the vbo has more than 65536 vertices and my vao is just uint that has maximum 65536\n')
('vbo', 'more', 'vao', '', '15438605', 'is it possible to use the same vbo with more than one vao like this\n')

memset	memcpy	2
('memset', 'faster', 'memcpy', '', '21631430', 'it is understandable that memset is faster than memcpy\n')
('memcpy', 'slower', 'memset', '', '43168595', 'the problem is that memcpy is only slighly slower than memset when i expect it to be about two times slower since it operations on twice the memory\n')

murmurhash	md5	2
('murmurhash', 'way faster', 'md5', '', '17963853', 'but as that reference points out murmurhash is way faster than md5 and sha functions although it doesn t do a direct comparison to the object.gethashcode method i mentioned above\n')
('murmurhash', 'faster', 'md5', '', '30806419', 'murmurhash has 64 and 128-bit versions so you can experiment between the two and it s faster than md5 largely owing to md5 being a cryptographic hash function whereas murmur doesn t have the added expense complexity of being cryptographically secure i m assuming that you re not concerned about anybody attempting to intentionally generate hash collisions or anything like that\n')

xerces	tinyxml	1
('xerces', 'heavier', 'tinyxml', '', '3172803', 'for more complex xml reading writing you better check xerces which is heavier than tinyxml\n')

beautifulsoup	elementtree	2
('beautifulsoup', 'more forgiving', 'elementtree', '', '22599300', 'beautifulsoup is more forgiving in terms of well-formed xml structure see i had to edit the xml a bit to make things work for elementtree and it s actually much easier to work with\n')
('beautifulsoup', 'more', 'elementtree', '', '22599300', 'beautifulsoup is more forgiving in terms of well-formed xml structure see i had to edit the xml a bit to make things work for elementtree and it s actually much easier to work with\n')

conan	biicode	2
('conan', 'more', 'biicode', '', '36101735', 'conan uses a more direct and easier approach to library dependencies management than biicode supporting both binary packages as building from source\n')
('conan', 'more direct', 'biicode', '', '36101735', 'conan uses a more direct and easier approach to library dependencies management than biicode supporting both binary packages as building from source\n')

theano	keras	1
('theano', 'slower', 'keras', '', '42162709', 'should i be surprised that the keras theano backend is about 18x - 19x slower than the keras tensorflow backend\n')

jquery-week-calendar	fullcalendar	2
('jquery-week-calendar', 'more', 'fullcalendar', '', '4660742', 'in some ways the jquery-week-calendar has more features at the moment but fullcalendar has a bigger following and is closing the gap on features\n')
('jquery-week-calendar', 'more features', 'fullcalendar', '', '4660742', 'in some ways the jquery-week-calendar has more features at the moment but fullcalendar has a bigger following and is closing the gap on features\n')

rcharts	shiny	1
('rcharts', 'better', 'shiny', '', '24273444', 'possibly part of the reason of my problems is that the original code from ramnath uses rmaps while i m using rcharts also developed by ramnath as it is more developed better integrated with shiny and of course includes leaflet\n')

hash	whirlpool	2
('hash', 'more', 'whirlpool', '', '26016244', 'if you want longer hash lets call more secure you should use something like sha512 whirlpool etc\n')
('hash', 'more secure', 'whirlpool', '', '26016244', 'if you want longer hash lets call more secure you should use something like sha512 whirlpool etc\n')

touchesbegan	touchesmoved	1
('touchesbegan', 'greater', 'touchesmoved', '', '41318401', 'for some reason when the duration of touchesbegan is greater than the duration of touchesmoved my player will complete the touchesmoved actions first even though touchesbegan had to come first and then jump to a different x-position and then move with duration 4 to complete the touchesbegan\n')

queryover	nhibernate	2
('queryover', 'much more', 'nhibernate', '', '16040119', 'right now queryover is much more robust in the nhibernate community mainly because it is based on criteria queries which have been around for quite some time\n')
('queryover', 'much more robust', 'nhibernate', '', '16040119', 'right now queryover is much more robust in the nhibernate community mainly because it is based on criteria queries which have been around for quite some time\n')

fgets	strcpy	1
('fgets', 'more', 'strcpy', '', '46337879', 'fgets of course does not process escape sequences any more than strcpy would\n')

tree	skip-lists	2
('tree', 'better', 'skip-lists', '', '576296', 'so as you can see the random binary search tree was rather a lot better than the skip-lists\n')
('tree', 'better concurrent', 'skip-lists', '', '7989690', 'in a single thread world is different you can use a sorted set a binary tree or your custom data structure that would perform better than concurrent skip-lists\n')

webstorm	aptana	1
('webstorm', 'better', 'aptana', '', '1627531', 'if you re focussing on pure client code then i find webstorm to be an excellent javascript html ide - even better than aptana\n')

queue	fifo	2
('queue', 'more', 'fifo', '', '33907669', 'i have to develop a better queue that works more efficiently than the fifo queue\n')
('queue', 'more efficiently', 'fifo', '', '33907669', 'i have to develop a better queue that works more efficiently than the fifo queue\n')

fuzzyfinder	ctrlp	1
('fuzzyfinder', 'more powerful', 'ctrlp', '', '36865589', 'if you re looking for a ctrlp equivalent webstorm has a fuzzyfinder that s actually much more powerful than ctrlp\n')

libsvm	scikit-learn	2
('libsvm', 'much more', 'scikit-learn', '', '39161839', 'the libsvm results seems much more stable but scikit-learn results have some drastic fluctuation\n')
('libsvm', 'much more stable', 'scikit-learn', '', '39161839', 'the libsvm results seems much more stable but scikit-learn results have some drastic fluctuation\n')

do.call	tapply	1
('do.call', 'slower', 'tapply', '', '33806404', 'or is the do.call with by just typically much slower than tapply\n')

xfs	ntfs	1
('xfs', 'faster', 'ntfs', '', '23875193', 'extfs4 or xfs are between 25 and 40 faster than ntfs or refs depending on the optimization\n')

relaxng	schematron	2
('relaxng', 'more', 'schematron', '', '35346589', 'other options to check are relaxng which is more flexible and powerful than xml schema or schematron which allows for exactly this sort of validation that needs to go deeper than structure and simple type-checks\n')
('relaxng', 'more flexible', 'schematron', '', '35346589', 'other options to check are relaxng which is more flexible and powerful than xml schema or schematron which allows for exactly this sort of validation that needs to go deeper than structure and simple type-checks\n')

wideimage	phpthumb	2
('wideimage', 'more modern', 'phpthumb', '', '65079', 'wideimage is the more modern php5 approach while phpthumb has much more features\n')
('wideimage', 'more', 'phpthumb', '', '65079', 'wideimage is the more modern php5 approach while phpthumb has much more features\n')

strdup	strlen	2
('strdup', 'cleaner', 'strlen', '', '43080950', 'as i noted in comments however if you re willing to rely on posix s strdup then that s cleaner than strlen + malloc + and has the same semantics you take responsibility for freeing the memory allocated for the copy\n')
('strdup', 'more convenient', 'strlen', '', '39599359', 'additionally if you have strdup then it is much more convenient than strlen + malloc + strcpy with identical result including the same obligation to free the allocated storage when you no longer need it\n')

touchesbegan	touchesended	2
('touchesended', 'more', 'touchesbegan', '', '29729778', 'if the value of touchesended is more than 3 seconds beyond the current time and the time of touchesbegan is still before touchesended then it s time to show your hint\n')
('touchesbegan', 'greater', 'touchesended', '', '29729778', 'if the value of touchesbegan is greater than touchesended then an active touch is going on\n')

shellcheck	bash	1
('shellcheck', 'more explicit', 'bash', '', '29157663', 'shellcheck tends to be more explicit than bash\n')

valgrind	gprof	1
('valgrind', 'more information', 'gprof', '', '11952551', 'another important difference is that valgrind can report a lot more information than gprof does but that s not specifically related to using it\n')

ogre3d	irrlicht	1
('ogre3d', 'more mature', 'irrlicht', '', '4617930', 'ogre3d seems to be more mature than irrlicht judging by the amount of applications and games that is\n')

stemming	fuzzy	2
('stemming', 'better performance', 'fuzzy', '', '15522125', 'stemming gives better performance than fuzzy search because it is done when indexing and the actual search can be performed as exact match\n')
('stemming', 'better', 'fuzzy', '', '15522125', 'stemming gives better performance than fuzzy search because it is done when indexing and the actual search can be performed as exact match\n')

nstextview	nstextstorage	1
('nstextview', 'process much simpler', 'nstextstorage', '', '29032101', 'the nstextview process is much simpler as you only need to attach the nstextstorage object\n')

magento	opencart	1
('magento', 'larger extensions', 'opencart', '', '22501933', 'magento is way ahead and has larger extensions than opencart\n')

clutter	gtk	1
('clutter', 'much more', 'gtk', '', '10371167', 'use clutter which is much more suited to animation and integrates with gtk\n')

magma	cublas	1
('magma', 'higher performance', 'cublas', '', '14543887', 'magma routine magma_gemm has higher performance than cublas in some cases\n')

margin	font-size	1
('margin', 'more', 'font-size', '', '42619643', 'if you don t want to give padding or margin at all then set the line-height property of headings more than their font-size\n')

metrics	ganglia	1
('metrics', 'worse', 'ganglia', '', '17813524', 'however i wonder if this is the best way of doing this if you want to observe specific behaviour you might be better off isolating a specific input file and debugging against a local pseudo-cluster and if you want system metrics you could do worse than give ganglia a lookm as it is pretty mauch already built into hadoop\n')

bit-shift	xor	2
('bit-shift', 'operators more information', 'xor', '', '22549562', 'the official tutorial on bitwise and bit-shift operators has more information about other related operators and xor left shift right shift\n')
('bit-shift', 'operators more', 'xor', '', '22549562', 'the official tutorial on bitwise and bit-shift operators has more information about other related operators and xor left shift right shift\n')

quadprog	nlopt	1
('quadprog', 'more powerful solver', 'nlopt', '', '26924683', 'for quadprog ipopt would be a much more powerful solver than nlopt\n')

expression-blend	silverlight	2
('expression-blend', 'much more', 'silverlight', '', '3743941', 'expression-blend has much more advanced wpf silverlight visual designer than visual studio including wysiwyg animation editor etc\n')
('expression-blend', 'much more advanced', 'silverlight', '', '3743941', 'expression-blend has much more advanced wpf silverlight visual designer than visual studio including wysiwyg animation editor etc\n')

subreports	ireport	1
('subreports', 'better', 'ireport', '', '1936127', 'if your report is complicated and have many subreports and subdatasets its better to go this approach since ireport will make it quicker and easier for you to design and maintain later\n')

webchromeclient	webviewclient	2
('webchromeclient', 'lesser time', 'webviewclient', '', '12154530', 'my observation is that you get the webpage title using webchromeclient in lesser time than using webviewclient\n')
('webchromeclient', 'easier', 'webviewclient', '', '9592792', 'to sum up the webchromeclient is easier to use but the webviewclient allows you more configuration\n')

pbkdf2	md5	1
('pbkdf2', 'more computation', 'md5', '', '16044003', 'so we can use pbkdf2 with sha512 to gain a very significant advantage over the phpass algorithm mainly because sha512 is a harder algorithm with more computation than md5\n')

cons	cdr	1
('cons', 'simpler', 'cdr', '', '20574442', 'as a practical matter a cons is simpler than a list so you can get the value with a straight cdr rather than the conceptually more complex cadr the car of the cdr\n')

resharper	justcode	1
('resharper', 'more', 'justcode', '', '5837140', 'together resharper was finding more than justcode\n')

principles	ocp	1
('principles', 'easier', 'ocp', '', '18428363', 'i think adhering to the dip principles makes it easier to comply with the ocp principles\n')

umbraco	dotnetnuke	2
('umbraco', 'better', 'dotnetnuke', '', '7608578', 'consider umbraco its architecture is definitely better than dotnetnuke s\n')
('umbraco', 'more lean', 'dotnetnuke', '', '4841806', 'i also had good result with umbraco cms it s a bit more lean than dotnetnuke but not as user friendly and definitely not as popular\n')

trampolines	thunk	2
('trampolines', 'more', 'thunk', '', '42914976', 'trampolines never runs more than one thunk at a time so if you break\n')
('trampolines', 'never more', 'thunk', '', '42914976', 'trampolines never runs more than one thunk at a time so if you break\n')

distance	pdist	2
('distance', 'much faster then', 'pdist', '', '36651979', 'also note that in my code above manually calculating the euclidean distance is much faster then calling pdist\n')
('distance', 'much faster', 'pdist', '', '36651979', 'also note that in my code above manually calculating the euclidean distance is much faster then calling pdist\n')

kurtosis	variance	2
('kurtosis', 'more', 'variance', '', '29967130', 'higher kurtosis means more of the variance in the image is the result of infrequent extreme deviations as opposed to frequent modestly sized deviations\n')
('kurtosis', 'more', 'variance', '', '14691778', 'for this measure higher kurtosis means more of the variance is the result of infrequent extreme deviations as opposed to frequent modestly sized deviations\n')

yosemite	osx	1
('yosemite', 'more', 'osx', '', '30706316', 'it s true that the yosemite compatibility exists but i ve found that earlier mac machines does not have the propper hardware and you experience some lacks in memory and graphics when upgrading more than one osx\n')

jdbi	hibernate	1
('jdbi', 'simpler', 'hibernate', '', '4630832', 'other useful pieces would be jdbi for database access much simpler than hibernate or other full orms async-httpclient for doing calls to other web services\n')

buildout	plone	2
('buildout', 'older', 'plone', '', '12998588', 'i ve even tried to pin archetypes and atcontentypes so that the buildout uses older versions example those used in plone 4.2 by adding the following to my pinnedversions.cfg file which gets called after everything else\n')
('buildout', 'older versions', 'plone', '', '12998588', 'i ve even tried to pin archetypes and atcontentypes so that the buildout uses older versions example those used in plone 4.2 by adding the following to my pinnedversions.cfg file which gets called after everything else\n')

java.util.calendar	java.util.date	2
('java.util.calendar', 'comparative slower', 'java.util.date', '', '4044107', 'construct java.util.calendar is comparative slower than java.util.date\n')
('java.util.calendar', 'slower', 'java.util.date', '', '4044107', 'construct java.util.calendar is comparative slower than java.util.date\n')

json-rpc	xml-rpc	2
('json-rpc', 'more pythonic', 'xml-rpc', '', '14355078', 'json-rpc is more pythonic than xml-rpc or shudder soap\n')
('json-rpc', 'more', 'xml-rpc', '', '14355078', 'json-rpc is more pythonic than xml-rpc or shudder soap\n')

typemock	moq	1
('typemock', 'better', 'moq', '', '19092194', 'or would a tool like typemock be better suited than moq in this case\n')

qtkit	avfoundation	1
('qtkit', 'more', 'avfoundation', '', '36523854', 'since apple has decided that qtkit is no more and avfoundation appears to only support prores 4444 and 422 flavors how are developers supposed to write modern software that can handle 4444xq 422lt and 422 proxy\n')

cfstring	nsstring	1
('cfstring', 'better functionality', 'nsstring', '', '5868039', 'cfstring has some slightly better functionality than nsstring but is a bit harder to use\n')

alloca	malloc	1
('alloca', 'smaller resource', 'malloc', '', '7950970', 'while alloca gives you automatic de-allocation on function exit the stack is usually a smaller resource than the malloc heap and if you exhaust the heap it gives you back null\n')

nsstring	nsobject	2
('nsstring', 'higher level', 'nsobject', '', '30000679', 'nsstring has a higher level it also inherited form nsobject const on it should have no effect in fact not the same meaning about the no effect on immutable object\n')
('nsstring', 'higher', 'nsobject', '', '30000679', 'nsstring has a higher level it also inherited form nsobject const on it should have no effect in fact not the same meaning about the no effect on immutable object\n')

websocket	pusher	2
('websocket', 'technology bidirectional more', 'pusher', '', '42486232', 'the underlying websocket technology is bidirectional more info here but pusher s pub sub model is unidirectional\n')
('websocket', 'technology bidirectional more info', 'pusher', '', '42486232', 'the underlying websocket technology is bidirectional more info here but pusher s pub sub model is unidirectional\n')

silex	slim	2
('silex', 'uglier code', 'slim', '', '35993770', 'i think silex produces a bit uglier code than slim but i m afraid to choose slim because it s changing constantly and i will be stuck with the current version if it breaks backward compatibility\n')
('silex', 'bigger community', 'slim', '', '33462609', 'silex seems to have a bigger community than slim maybe it s just my point of view\n')

tga	ppm	1
('tga', 'more common', 'ppm', '', '21354215', 'you could use the tga format which is more common than ppm and allows true grayscale images\n')

puremvc	robotlegs	1
('puremvc', 'faster', 'robotlegs', '', '20356474', 'puremvc is generally much faster than robotlegs in terms of performance\n')

text-align	width	2
('text-align', 'less', 'width', '', '9755894', 'the has text-align center so the will be centred if the size of the is less than the width of the\n')
('width', 'wider', 'text-align', '', '30417308', 'but i don t need a perfect width even if the width is wider than the longest word it is ok as i will text-align center to enhance visibility\n')

lift	scalatra	1
('lift', 'more powerful', 'scalatra', '', '7510119', 'it fills the gap between scalatra and lift more powerful than scalatra and easier to use than lift\n')

hide	fadein	1
('hide', 'effect much softer', 'fadein', '', '43613881', 'note the show hide effect is much softer because of the commented fadein fadeout declarations that were triggering console errors probably because jsfiddle uses jquery slim now\n')

algol	apl	1
('algol', 'less weird', 'apl', '', '3725905', 'as far as the syntax goes i guess it s a bit different from the more classic syntax of the algol family languages but it s no more and possibly less weird than apl\n')

skybox	cube	1
('skybox', 'more polygons', 'cube', '', '30060980', 'i recently switched from unity to unreal and the first thing i wanted to do is create a skybox but the only thing it seems to support is a skydome which has far more polygons than a cube and the generated .dds cubemap files are far too huge to be used in webgl projects\n')

free	calloc	1
('free', 'harder', 'calloc', '', '17617309', 'malloc free is harder because there√¢ s also calloc and realloc\n')

oncreate	ondestroy	1
('oncreate', 'more', 'ondestroy', '', '13288579', 'otherwise if oncreate is being called more than ondestroy receiver is registered multiple time and the app mis-behaves\n')

notepad++	vim	1
('notepad++', 'more', 'vim', '', '26526628', 'lately i have used notepad++ a bit more than vim\n')

wordpress	elgg	2
('wordpress', 'more complex', 'elgg', '', '31861085', 'it is working only for simple .php files but wordpress is more complex and after long period of loading it show elgg nothing found site loaded\n')
('wordpress', 'more', 'elgg', '', '31861085', 'it is working only for simple .php files but wordpress is more complex and after long period of loading it show elgg nothing found site loaded\n')

jruby	rubinius	1
('jruby', 'slower', 'rubinius', '', '31906922', 'again we see the pattern of it getting faster during the first two runs after which it settles somewhere in between slightly faster than yarv and the other jruby and slightly slower than rubinius\n')

imshow	contourf	1
('imshow', 'more sense', 'contourf', '', '20146989', 'as an example of the second option i ll use imshow here because it makes more sense than contourf for random data but contourf would have identical usage other than the interpolation option.\n')

memmove	strcpy	1
('memmove', 'faster', 'strcpy', '', '12429831', 'marcus yes memmove is faster than strcpy and faster than python but why\n')

jtable	jlabel	2
('jtable', 'more complicated', 'jlabel', '', '22259109', 'why don t you do a simple test that tries to read and display an image in a jlabel first since using a jtable is more complicated than using a jlabel\n')
('jtable', 'more', 'jlabel', '', '22259109', 'why don t you do a simple test that tries to read and display an image in a jlabel first since using a jtable is more complicated than using a jlabel\n')

yourkit	visualvm	1
('yourkit', 'easier', 'visualvm', '', '36976937', 'i prefer yourkit as i find it easier than visualvm\n')

tabcontrol	tabitem	1
('tabcontrol', 'more', 'tabitem', '', '17307459', 'edit i can only reproduce this error when i have a tabcontrol with more than one tabitem\n')

jmeter	neoload	2
('jmeter', 'better', 'neoload', '', '26055441', 'for load testing jmeter is better option but you have quite enough funding then go for loadrunner neoload rational performance tester and for cloud try blazemeter\n')
('jmeter', 'better option', 'neoload', '', '26055441', 'for load testing jmeter is better option but you have quite enough funding then go for loadrunner neoload rational performance tester and for cloud try blazemeter\n')

uicollectionview	icarousel	2
('uicollectionview', 'better', 'icarousel', '', '14078238', 'my only problem is that is seems that using uicollectionview is a better approach and i have read some seemingly off-hand comments about icarousel being a poor approach\n')
('uicollectionview', 'better approach', 'icarousel', '', '14078238', 'my only problem is that is seems that using uicollectionview is a better approach and i have read some seemingly off-hand comments about icarousel being a poor approach\n')

cobertura	maven	1
('cobertura', 'better', 'maven', '', '1207519', 'i find cobertura and emma to be largely interchangeable in terms of coverage checking just that cobertura has a better maven plugin and emma has a better eclipse plugin in my opinion\n')

kombu	celery	1
('kombu', 'lower level', 'celery', '', '16328341', 'i did some reading on kombu and it seems to be able to do what i m thinking of although at a much lower level than celery\n')

scintilla	avalonedit	1
('scintilla', 'better', 'avalonedit', '', '8711597', 'personally i felt that scintilla performs better than avalonedit\n')

tlistview	tstringgrid	1
('tlistview', 'more limited', 'tstringgrid', '', '8731943', 'i have just spent a lot of time working with tlistview in view style mode vsreport and i find it is even more limited than tstringgrid for example it provides no in-place edit support\n')

django	turbogears	2
('django', 'more', 'turbogears', '', '1442201', 'web2py may be young but the mailing list has 2000 messages month which is similar to django and far more than turbogears\n')
('turbogears', 'easier', 'django', '', '3144382', 'compare the very active django tag on stack overflow with that of pylons or turbogears though and i d argue getting started is simply easier with django irrespective of anything to do with code\n')

dojo	dwr	1
('dojo', 'better choice', 'dwr', '', '4623300', 'they merged with dojo which in my opinion is a better choice than dwr\n')

jar	manifest.mf	1
('jar', 'way better', 'manifest.mf', '', '47364708', 'i think that s why i can t use to launch my project this way works but jar way is better because everything including the main_class is described in manifest.mf\n')

mallet	weka	1
('mallet', 'smarter', 'weka', '', '28362098', 'i have tried weka too but mallet is smarter than weka on this aspect\n')

markermanager	markerclusterer	2
('markermanager', 'more', 'markerclusterer', '', '36861965', 'the markermanager has a more involved setup than the markerclusterer but it does allow for more customization of what and where it displays\n')
('markermanager', 'more involved', 'markerclusterer', '', '36861965', 'the markermanager has a more involved setup than the markerclusterer but it does allow for more customization of what and where it displays\n')

jscrollpane	jlayeredpane	1
('jscrollpane', 'smaller', 'jlayeredpane', '', '4901460', 'the problem is that with the code below the jlayeredpane always expands to fit the size of the jscrollpane and in the event that the jscrollpane is smaller than the jlayeredpane it does not provide the scrolling ability\n')

helpers	actioncontroller	2
('helpers', 'more', 'actioncontroller', '', '16974509', 'actionlink helpers is more often used to generate url properly based on the actioncontroller route values etc and anchor tag based on htmlattributes etc\n')
('helpers', 'more often', 'actioncontroller', '', '16974509', 'actionlink helpers is more often used to generate url properly based on the actioncontroller route values etc and anchor tag based on htmlattributes etc\n')

adb	monkeyrunner	2
('adb', 'more', 'monkeyrunner', '', '12630645', 'adb is more reliable since you get the feedback immediately unlike monkeyrunner which does not provide reliable exceptions in case of any failure in triggering the event\n')
('adb', 'more reliable', 'monkeyrunner', '', '12630645', 'adb is more reliable since you get the feedback immediately unlike monkeyrunner which does not provide reliable exceptions in case of any failure in triggering the event\n')

compiled-language	dynamic-languages	1
('compiled-language', 'better', 'dynamic-languages', '', '3548478', 'because you can determine what code in a compiled-language is likely to do better than a dynamic-languages it has been determined more error free to use a compiled perspective for more things so as you can see with the availability of offset-management and lookup compiled behavior given to you in core perl there is no reason to mess with the symbol table if you don t have to\n')

branch	squash	1
('branch', 'issue much simpler', 'squash', '', '13082096', 'if you will have only yours commits on your branch issue is much simpler you can do squash those git squash\n')

saucelabs	browserstack	1
('saucelabs', 'better', 'browserstack', '', '22010163', 'edit i just came across saucelabs which seems to be even better than browserstack for manual testing and they also cover many web browsers tablet mobile devices\n')

lapack	openblas	1
('lapack', 'slower', 'openblas', '', '21647126', 'if you are on linux and have chosen blas and lapack from a repo it is very likely that they are much slower than openblas\n')

mod-alias	mod-rewrite	1
('mod-alias', 'faster', 'mod-rewrite', '', '2096899', 'evidently though mod-alias can be somewhat faster than mod-rewrite all other things being equal of course\n')

tooltip	popover	1
('tooltip', 'more', 'popover', '', '10643923', 'a tooltip has more in common with a popover but they are generally regarded as a popup historically\n')

freshmvvm	mvvmcross	1
('freshmvvm', 'better', 'mvvmcross', '', '44111651', 'it s very heavyweight and not fully featured for forms so prism or freshmvvm works better as these are designed for forms from the ground up but if you do use mvvmcross for forms its easy to go native if you need\n')

division	subtract	1
('division', 'result larger', 'subtract', '', '26920930', 'if division result is larger than 1 push the current transformer to the results array and subtract the current wattage from the total wattage\n')

pdcurses	ncurses	1
('pdcurses', 'more', 'ncurses', '', '9114289', 'i ve found pdcurses which is more like the ncurses but it lacks a lot of ncurses libraries\n')

force.com	salesforce	1
('force.com', 'easier integration', 'salesforce', '', '17879015', 'consider using force.com canvas now ga which is an added-value iframe with more security and easier integration with salesforce apis than raw iframes - see\n')

heapsort	in-place	1
('heapsort', 'slower standard', 'in-place', '', '8311230', 'but heapsort is assumed to be on average somewhat slower than standard in-place quicksort\n')

expressionengine	wordpress	2
('expressionengine', 'better choice', 'wordpress', '', '10113369', 'but in my opinion for most sites expressionengine is a better choice than wordpress\n')
('expressionengine', 'better', 'wordpress', '', '10113369', 'but in my opinion for most sites expressionengine is a better choice than wordpress\n')

roboguice	robolectric	1
('roboguice', 'better', 'robolectric', '', '17476067', 'you cannot use mocks in conjunction with roboguice it s better to let robolectric provide the context you need here\n')

snap.svg	svg.js	2
('snap.svg', 'raphaels younger', 'svg.js', '', '34997173', 'if you definitely need svg and want to only use existing elements you may want to look at snap.svg which is raphaels younger sister and shares a lot of the same codebase or another like svg.js\n')
('snap.svg', 'raphaels younger sister', 'svg.js', '', '34997173', 'if you definitely need svg and want to only use existing elements you may want to look at snap.svg which is raphaels younger sister and shares a lot of the same codebase or another like svg.js\n')

getdate	datepart	1
('getdate', 'shorter', 'datepart', '', '6687049', 'i prefer using these short forms because to me year getdate is shorter to type and better to read than datepart yyyy getdate\n')

beyondcompare	winmerge	1
('beyondcompare', 'more comfortable', 'winmerge', '', '39738554', 'my friend used beyondcompare however i am more comfortable with winmerge\n')

principles	srp	1
('principles', 'more', 'srp', '', '10609215', 'there is another principles which i like even more than srp - dry\n')

qtkit	quicktime	1
('qtkit', 'better', 'quicktime', '', '7271789', 'you can do it with qtkit but works better in 32bit quicktime framework\n')

flac	mp3	2
('flac', 'file newer', 'mp3', '', '2483182', 'if a flac file is newer than the corresponding mp3 file or the corresponding mp3 file doesn t exist then i want to run a bunch of commands to convert the flac file to an mp3 file and copy the tags across\n')
('flac', 'file newer', 'mp3', '', '2483418', 'if a flac file is newer than the corresponding mp3 file or the corresponding mp3 file doesn t exist then i want to run a bunch of commands to convert the flac file to an mp3 file and copy the tags across\n')

sublimetext	emacs	1
('sublimetext', 'better', 'emacs', '', '37955314', 'this is the one thing i think sublimetext does better than emacs\n')

mediacodec	mediarecorder	2
('mediacodec', 'faster', 'mediarecorder', '', '13418093', 'i d like to use mediacodec to encode the data coming from the camera reason it s more low-level so hopefully faster than using mediarecorder\n')
('mediarecorder', 'more convenient', 'mediacodec', '', '16446982', 'android 5.0 api 21 allows surface input to mediarecorder which is often much more convenient than mediacodec\n')

opensuse	debian	1
('opensuse', 'newer', 'debian', '', '13459028', 'note that centos software versions are older than debian s but versions of opensuse software are newer than debian s versions\n')

terminate	timeout	1
('terminate', 'more', 'timeout', '', '31255118', 'but the problem is that i need to terminate a process if it lasts more than a timeout 3 seconds\n')

emacs	aquamacs	2
('emacs', 'more native', 'aquamacs', '', '6205509', 'on unix like environments emacs is more native and you can use slime which is usually available as a os package or as a separate download for aquamacs\n')
('emacs', 'more', 'aquamacs', '', '6205509', 'on unix like environments emacs is more native and you can use slime which is usually available as a os package or as a separate download for aquamacs\n')

inline-functions	inlining	1
('inline-functions', 'shorter', 'inlining', '', '31355050', 'using options such as -os for the compiler to tell it to make the code small in other words don t inline-functions unless the code is shorter by inlining than by calling the function and don t unroll loops etc etc - but do inline-functions called only once as that does make the code shorter\n')

greenfoot	bluej	1
('greenfoot', 'better', 'bluej', '', '259080', 'i think greenfoot is better than bluej for 8-years old\n')

textctrl	wxpython	1
('textctrl', 'more', 'wxpython', '', '7097874', 'i have been working on a simple textctrl project to get more acquainted with wxpython and i have hit a small road block\n')

mantis	bugzilla	2
('mantis', 'more complete', 'bugzilla', '', '1188910', 'since mantis is a bit more complete than bugzilla when it comes to features you could define separate issues with custom field for your tasks\n')
('mantis', 'simpler', 'bugzilla', '', '12054692', 'research showed me that mantis is simpler to use over bugzilla so i decided to use mantis but have no idea how to install it.can anyone please tell me what are the steps you need to take in order to install mantis bug tracking system in a small company to track website mobile portal bugs\n')

velocity	thymeleaf	1
('velocity', 'faster', 'thymeleaf', '', '28026223', 'i m working in a spring mvc project and i want to use a template engine i originally choose apache velocity because a slideshare presentation that says it was two times faster than thymeleaf page 41 and since i m working with big tables i need to use a fast template engine does apache velocity supports html5 if not is there other template engine that supports html5 that is not thymeleaf\n')

cclabelttf	ccmenuitem	1
('cclabelttf', 'more', 'ccmenuitem', '', '16316610', 'if i create the same cclabelttf once then i can t add it to more than one ccmenuitem because it will give runtime error about label already added\n')

spf	dns	2
('spf', 'record more', 'dns', '', '34619533', 'your spf record requires more than 10 dns lookups to process\n')
('spf', 'more', 'dns', '', '34619533', 'your spf record requires more than 10 dns lookups to process\n')

strtod	atoi	2
('strtod', 'better alternative', 'atoi', '', '31328588', 'also strtod is a better alternative to atoi\n')
('strtod', 'better', 'atoi', '', '31328588', 'also strtod is a better alternative to atoi\n')

ng-show	ng-switch	1
('ng-show', 'faster', 'ng-switch', '', '19748236', 'note that some people feel that ng-show is a little faster than ng-switch and ng-if for file-based templates\n')

railo	coldfusion	1
('railo', 'generally stricter', 'coldfusion', '', '24370779', 'there are many other small differences railo is generally stricter about syntax and semantics than adobe coldfusion and often those decisions are driven by performance concerns in that compatibility with adobe coldfusion would make railo slower\n')

graphlab	pandas	1
('graphlab', 'more such', 'pandas', '', '44887738', 'i m using the module graphlab in my python script and many more such as pandas and numpy etc graphlab module only works on python2 not for python3\n')

memmove	strncpy	1
('memmove', 'faster', 'strncpy', '', '2884915', 'if you know the lengths of the strings memmove is a sensible choice - and nominally faster than strncpy because it does not have to check for nulls as it goes\n')

textmate	emacs	2
('emacs', 'better', 'textmate', '', '967805', 'i feel like emacs is so much better than textmate\n')
('textmate', 'better', 'emacs', '', '48015', 'textmate is a better emacs for macs though that won t help you with solaris\n')

kde	gnome	2
('kde', 'larger', 'gnome', '', '8838690', 'the motivation is that font size 12 under kde seems to be much larger than under gnome\n')
('kde', 'quicker', 'gnome', '', '11794298', 'on kde aptana ran perfectly quicker than on gnome at the best of times\n')

chaco	matplotlib	1
('chaco', 'faster', 'matplotlib', '', '20483834', 'enthought-dev is chaco faster than matplotlib\n')

oxygene	delphi	1
('oxygene', 'much better', 'delphi', '', '15781281', 'right now oxygene is much better as it supports a broader set of language and platform features than delphi .net ever did\n')

speex	wma	1
('speex', 'better', 'wma', '', '2526831', 'speex is designed for speech and should perform better than wma mp3 or other audio codecs that are designed to handle music if you are just encoding speech which i assume since you are grabbing from the mic\n')

sproutcore	javascriptmvc	1
('sproutcore', 'more heavyweight', 'javascriptmvc', '', '509703', 'it s probably overkill for what you need but sproutcore is an mvc framework and it doesn t look any more heavyweight than javascriptmvc or trimpath s junction\n')

extjs	gxt	1
('extjs', 'more time', 'gxt', '', '1034539', 'i have worked pretty heavily with both flavors of the gwt extjs libraries though i ve spent more time with gxt recently\n')

janusgraph	titan	2
('janusgraph', 'more up-to-date', 'titan', '', '44815800', 'janusgraph is a more up-to-date version of titan despite the low version number\n')
('janusgraph', 'more', 'titan', '', '44815800', 'janusgraph is a more up-to-date version of titan despite the low version number\n')

jpgraph	phpgraphlib	2
('jpgraph', 'far more capabilities', 'phpgraphlib', '', '14926288', 'jpgraph has far more capabilities than phpgraphlib\n')
('jpgraph', 'far more', 'phpgraphlib', '', '14926288', 'jpgraph has far more capabilities than phpgraphlib\n')

livescript	coffeescript	1
('livescript', 'more compatible', 'coffeescript', '', '12585426', 'livescript is coco but much more compatible with coffeescript more functional and more feature rich\n')

jta	jms	1
('jta', 'more', 'jms', '', '5528145', 'you ll have to use jta if you need transactional access to more than one jms session\n')

magnolia	opencms	1
('magnolia', 'newer', 'opencms', '', '15018912', 'however if i d built a new site with a cms on java i d probably go with magnolia cms because the documentation and community is more mature despite that it s newer than opencms\n')

agda	haskell	2
('agda', 'more haskell-y', 'haskell', '', '3771477', 'coq is probably the most prominent language of the style but agda has a more haskell-y feel as well as being written in haskell itself\n')
('agda', 'more', 'haskell', '', '3771477', 'coq is probably the most prominent language of the style but agda has a more haskell-y feel as well as being written in haskell itself\n')

slimdx	xna	1
('slimdx', 'better', 'xna', '', '11730008', 'considering the lack of windows 8 love that xna is getting support being dropped apps won t be sellable on the app store -- i d go with slimdx -- it s better than xna anyway -- the only down side is that you can t make xbox apps with it\n')

ng-app	ng-controller	1
('ng-app', 'more', 'ng-controller', '', '36743175', 'a ng-app can have more than 1 ng-controller\n')

hidapi	libusb	1
('hidapi', 'better fit', 'libusb', '', '32592171', 'also if this controller is an hid the hidapi library might be a better fit than libusb\n')

gsl	fftw	1
('gsl', 'slower', 'fftw', '', '36222272', 'you can have a look at this speed performance benchmark from fftw which suggests that gsl is about 3-4 times slower than fftw 3\n')

icalendar	rrule	1
('icalendar', 'shorter', 'rrule', '', '27554974', 'it s possible for icalendar software to make this a lot shorter with rrule but these calculations are hard and not everybody implements it\n')

qcubed	qcodo	1
('qcubed', 'community much stronger', 'qcodo', '', '843733', 'qcubed community is much stronger at the moment so you might want to check in qcodo forum for your answers on basic problems but post on the qcubed forum\n')

clgeocoder	mkreversegeocoder	1
('clgeocoder', 'lower', 'mkreversegeocoder', '', '12599418', 'in ios 5.0 and later you can use clgeocoder of core location framework as for ios lower than 5.0 mkreversegeocoder of map kit framework\n')

wireless	ethernet	1
('wireless', 'more', 'ethernet', '', '10007514', 'if you are working on physical machine that has cable and wireless connectivity then you will have more than one ethernet adaptor choise\n')

sqlcommand	oledbcommand	2
('sqlcommand', 'more', 'oledbcommand', '', '15882849', 'as shown in sample below for sqlcommand which is more or less same as oledbcommand\n')
('sqlcommand', 'less same', 'oledbcommand', '', '15882849', 'as shown in sample below for sqlcommand which is more or less same as oledbcommand\n')

scylla	cassandra	2
('scylla', 'more', 'cassandra', '', '47127723', 'i wrote a detailed description of the sstable format on scylla s site scylla is a more efficient c++ re-implementation of cassandra to which i contribute\n')
('scylla', 'more efficient', 'cassandra', '', '47127723', 'i wrote a detailed description of the sstable format on scylla s site scylla is a more efficient c++ re-implementation of cassandra to which i contribute\n')

qtreewidget	qtreeview	1
('qtreewidget', 'more', 'qtreeview', '', '25554005', 'if your exchange data between 2 widget i suggest to use qtreewidget more than qtreeview because data in qtreewidget can edit dynamic data row and value\n')

whirlpool	md5	1
('whirlpool', 'slower', 'md5', '', '5082524', 'at best it is a computationally expensive hash function like whirlpool that for example is five times slower than md5 and thus allows only a fifth of the number of hash operations in opposite to md5\n')

range	median	1
('range', 'smaller', 'median', '', '19693299', 'you should also adjust your conditionals to check for a low high range as it should quickly get smaller as your median value approaches the real value\n')

viewdidload	viewdidappear	2
('viewdidload', 'earlier', 'viewdidappear', '', '25648503', 'you could try the block of code in the viewdidload method which is called earlier than viewdidappear\n')
('viewdidload', 'earlier', 'viewdidappear', '', '14063610', 'so viewdidload is called slightly earlier than viewdidappear the only difference is that when viewdidappear the view have been already drawn instead in viewdidload the view has still to be drawn\n')

inmobi	admob	1
('inmobi', 'higher', 'admob', '', '37393576', 'i set ecpm for inmobi and mobfox higher than for admob\n')

qmap	qlist	1
('qmap', 'larger', 'qlist', '', '16594128', 'this relates to another question i asked a while back at size of qt containers is qmap much larger than qlist\n')

openblas	armadillo	1
('openblas', 'faster', 'armadillo', '', '46097040', 'i wish program with armadillo and openblas is faster than with only armadillo\n')

tinyint	boolean	2
('boolean', 'better', 'tinyint', '', '21227175', 'for all thing with boolean is better tinyint 1 or enum y n\n')
('tinyint', 'more space', 'boolean', '', '1731950', 'does tinyint in mysql take up more space than boolean\n')

textpad	notepad	2
('textpad', 'more advanced', 'notepad', '', '1860622', 'as it happens my choice is textpad but just about anything which is more advanced than notepad ought to be able to do this\n')
('notepad', 'better', 'textpad', '', '7377521', 'on windows machine i would probably go with textpad personally i now use programmers notepad 2 however it does not support a spell checker and i don t really thinks it s better than textpad by any measure\n')

matplotlib	colormap	2
('matplotlib', 'more', 'colormap', '', '43811382', 'to allow you to scale down the data away from 0 and 1 i had to do this when combining colormap in matplotlib single pcolormesh with more than one colormap using matplotlib so you can likely see how the code works but basically say you have values -5 1 10 in a sample but want to normalize based on a range of -7 to 7 so anything above 7 our 10 is treated as a 7 effectively with a midpoint of 2 but shrink it to fit a 256 rgb colormap\n')
('matplotlib', 'more', 'colormap', '', '43811598', 'to allow you to scale down the data away from endpoints 0 and 1 i had to do this when combining colormap in matplotlib single pcolormesh with more than one colormap using matplotlib so you can likely see how the code works but basically say you have values -5 1 10 in a sample but want to normalize based on a range of -7 to 7 so anything above 7 our 10 is treated as a 7 effectively with a midpoint of 2 but shrink it to fit a 256 rgb colormap\n')

boofcv	opencv	1
('boofcv', 'faster', 'opencv', '', '32721644', 'i have made an app similar to yours for android we use boofcv whose surf is much faster than opencv\n')

lemmatization	fuzzy	2
('lemmatization', 'broader scope', 'fuzzy', '', '33300859', 'lemmatization implies a broader scope of fuzzy word matching that is\n')
('lemmatization', 'broader', 'fuzzy', '', '33300859', 'lemmatization implies a broader scope of fuzzy word matching that is\n')

emgucv	opencv	2
('emgucv', 'blurrier', 'opencv', '', '8214222', 'the results end up very close but the emgucv image comes out a little bit blurrier than the opencv image\n')
('emgucv', 'slower', 'opencv', '', '28241977', 'unless you re doing very heavy processing working with a single frame is probably faster than transferring it to the server as far as i know emgucv in c# isn t considerably slower than opencv in c c++\n')

umask	sudo	2
('umask', 'more', 'sudo', '', '2406721', 'if you forget to use this and your default umask is more restrictive or less restrictive then you will need to re-run the non- sudo\n')
('umask', 'more restrictive', 'sudo', '', '2406721', 'if you forget to use this and your default umask is more restrictive or less restrictive then you will need to re-run the non- sudo\n')

highcharts	fusioncharts	2
('highcharts', 'more customizable', 'fusioncharts', '', '10647688', 'customization and variety of animations highcharts has more customizable animations when compared to fusioncharts javascript charts\n')
('highcharts', 'more', 'fusioncharts', '', '10647688', 'customization and variety of animations highcharts has more customizable animations when compared to fusioncharts javascript charts\n')

bash	tcsh	1
('bash', 'better', 'tcsh', '', '30290413', 'i want to do this in tcsh i know bash is better to use but i have to use tcsh\n')

reboot	uptime	1
('reboot', 'more 3-y', 'uptime', '', '37192473', 'yesterday i needed to reboot production server on debian 6 with more than 3-y uptime and 3rd party configured billing system on it\n')

fgets	atoi	1
('fgets', 'more', 'atoi', '', '22819227', 'so here fgets is reading more than one integer at a time from file so atoi is not getting the integers in file too\n')

caliburn	viewmodel	2
('caliburn', 'even easier', 'viewmodel', '', '11127247', 'with caliburn it is even easier since you just need to bind a property on your viewmodel to selecteditem\n')
('viewmodel', 'more general way', 'caliburn', '', '30369414', 'how can i connect a method and not a command with a binding from the viewmodel to an attached event to ask in a more general way with caliburn micro\n')

ftp	smb	1
('ftp', 'faster', 'smb', '', '482412', 'push log files to a central location ftp is faster than smb the windows ftp command can be automated with -s scriptfile\n')

pbkdf2	scrypt	2
('scrypt', 'stronger', 'pbkdf2', '', '30308723', 'bcrypt is weaker than scrypt although still three orders of magnitude stronger than pbkdf2 because it only requires 4 kb of memory\n')
('pbkdf2', 'better option bcrypt', 'scrypt', '', '13424062', 'pbkdf2 is arguably a better option than bcrypt scrypt having been much more thoroughly studied and tested\n')

erlang	ocaml	2
('erlang', 'more expressive', 'ocaml', '', '34956771', 'while erlang is more expressive ocaml pattern matching is simpler which means a simpler language definition compiler etc. and you still can do what you need at the cost of writing more code\n')
('erlang', 'more', 'ocaml', '', '34956771', 'while erlang is more expressive ocaml pattern matching is simpler which means a simpler language definition compiler etc. and you still can do what you need at the cost of writing more code\n')

palindrome	square-root	1
('palindrome', 'less', 'square-root', '', '29933222', 'the mathematical reason for this is that once the solution 906609 is found it will no longer be possible to find a larger palindrome where the larger factor is less than the square-root of 906609 which is 952.160.\n')

qwidget	qgridlayout	1
('qwidget', 'gauge1 always bigger', 'qgridlayout', '', '29731804', 'however the qwidget gauge1 is always bigger than the other one.i want to use a qgridlayout because the application has to work on different sizes of a screen\n')

python-mode	jedi	1
('python-mode', 'slower', 'jedi', '', '29195460', 'if it s too slow i would ditch the autocompletion part of python-mode because it uses rope which is slower than jedi\n')

constexpr	inline	1
('constexpr', 'better', 'inline', '', '24602957', 'you may be interested in looking at the constexpr keyword which i think is better than the inline keyword when you can make use of it\n')

named	countif	1
('named', 'more', 'countif', '', '27692551', 'the roundabout method i ve employed is to create additional columns with a regular countif and counta formulae - in other words i count the number of countries a named has visited more than x times countif and then use the counta to sum the number of named in that column who have visited x times\n')

bada	marmalade	1
('bada', 'more check', 'marmalade', '', '7025166', 'cocos2d-x already works with marmalade so if you want to take your cocos2d game to ios android symbian webos bada rim qnx and more check out marmalade\n')

perforce	cvs	2
('perforce', 'less', 'cvs', '', '4332537', 'since perforce is less commonly used compared to cvs svn amongst bamboo users we generally get less feedback about it and hear less about existing issues\n')
('perforce', 'less commonly', 'cvs', '', '4332537', 'since perforce is less commonly used compared to cvs svn amongst bamboo users we generally get less feedback about it and hear less about existing issues\n')

strtod	atof	2
('strtod', 'better idea', 'atof', '', '11895699', 'you can actually switch to strtod always a much better idea than atof and ask it to give you the character position that caused it to stop parsing\n')
('strtod', 'better', 'atof', '', '8165120', 'edit basile starynkevitch mentions that strtod is better than atof for this job as it gives the ending character\n')

kdtree	octree	2
('kdtree', 'less memory', 'octree', '', '29076540', 'kdtree needs less memory than octree and sometimes is even faster\n')
('kdtree', 'less', 'octree', '', '29076540', 'kdtree needs less memory than octree and sometimes is even faster\n')

grouplayout	gridbaglayout	1
('grouplayout', 'harder', 'gridbaglayout', '', '20558525', 'i find grouplayout to be fine to code by hand certainly no harder than gridbaglayout though i can certainly see why it would be a favorite for tools to use\n')

bfg-repo-cleaner	git-filter-branch	2
('bfg-repo-cleaner', 'faster solution', 'git-filter-branch', '', '34840785', 'but bfg-repo-cleaner is a much faster solution than git-filter-branch\n')
('bfg-repo-cleaner', 'faster solution', 'git-filter-branch', '', '35399505', 'but bfg-repo-cleaner is a much faster solution than git-filter-branch\n')

flyway	liquibase	1
('flyway', 'better', 'liquibase', '', '32159287', 'the downside is that you are losing the big part of the flyway s appeal in its simplicity and technically could be better off by using liquibase s dsl\n')

wadl	wsdl	1
('wadl', 'lightweight easier', 'wsdl', '', '17340057', 'like the rest of rest wadl is lightweight easier to understand and easier to write than wsdl\n')

xquery	schematron	1
('xquery', 'more', 'schematron', '', '21823929', 'but xquery will be more than schematron and i use xquery heavily to validate xml values and i should be able to produce html reports well\n')

ico	png	1
('ico', 'larger', 'png', '', '35544336', 'however ico files if stored properly are not significantly larger than png files because since windows vista ico files can store png\n')

carrierwave	fog	1
('carrierwave', 'much faster', 'fog', '', '9817544', 'i ve read that carrierwave is much faster without using fog\n')

nsorderedset	nsset	1
('nsorderedset', 'faster', 'nsset', '', '36971254', 'is nsorderedset faster than nsset\n')

qabstractitemmodel	qstandarditemmodel	1
('qabstractitemmodel', 'more useful', 'qstandarditemmodel', '', '14528353', 'do need implementation of qabstractitemmodel that can be more useful than qstandarditemmodel\n')

sqrt	atan2	2
('sqrt', 'faster', 'atan2', '', '9318108', 'with typical libraries on common modern hardware sqrt is faster than atan2\n')
('sqrt', 'better', 'atan2', '', '9325404', 'indeed sqrt is better than atan2 and 1 sqrt is better than sqrt\n')

vfork	posix	1
('vfork', 'less strict', 'posix', '', '28040596', 'both old and some modern systems implement a special vfork call which has somewhat strict limitations although less strict than the posix requireemnts for vfork but avoid this copy for performance reasons\n')

swing	windowbuilder	1
('swing', 'easier', 'windowbuilder', '', '36899666', 'in my opinion swing is easier to start because there are tools like the eclipse windowbuilder which enables you to create your application in a graphical interface but javafx is more likely to be used in the future because it has some great improvements over swing like css skins etc.\n')

autotools	automake	2
('autotools', 'slightly more complicated', 'automake', '', '1035179', 'in the case of autotools it is slightly more complicated because not everybody who compiles the software would need automake and autoconf installed only those that need to change the build system adding new files counts as changing the build system\n')
('autotools', 'slightly more', 'automake', '', '1035179', 'in the case of autotools it is slightly more complicated because not everybody who compiles the software would need automake and autoconf installed only those that need to change the build system adding new files counts as changing the build system\n')

moshi	gson	1
('moshi', 'better', 'gson', '', '44781960', 'if you re using retrofit and okhttp to perform the network calls i suggest you use moshi as it s also from square and claimed to work faster and better than gson\n')

fractions	rational-numbers	1
('fractions', 'more', 'rational-numbers', '', '11600191', 'and most importantly all decimals stored on a computer are terminating because in a computer a decimal fractions is not much more than a rational-numbers m n with n being a power of 2\n')

ansible	puppet	1
('ansible', 'earlier stage chef', 'puppet', '', '22212327', 'ansible is in an earlier stage than chef puppet and other tools out there when it comes to community support\n')

onsubmit	onclick	1
('onsubmit', 'more reliable', 'onclick', '', '11028384', 'you can indeed execute scripts on almost any page using content scripts that can manipulate the dom allowing you to add an onsubmit event listener to a form more reliable than onclick on a button as it is fired however the form is submitted - hitting enter\n')

swt	styledtext	2
('swt', 'package harder', 'styledtext', '', '23455654', 'but adding a class to swt package seems harder first because there is different jars depending on the operating system used org.eclipse.swt.cocoa org.eclipse.swt.gtk .... and also because copy pasting the code of styledtext is not that easy since there is call to external methods waiting for a strict styledtext\n')
('swt', 'package harder first', 'styledtext', '', '23455654', 'but adding a class to swt package seems harder first because there is different jars depending on the operating system used org.eclipse.swt.cocoa org.eclipse.swt.gtk .... and also because copy pasting the code of styledtext is not that easy since there is call to external methods waiting for a strict styledtext\n')

uipageviewcontroller	uitableview	1
('uipageviewcontroller', 'more detailpageviewcontroller', 'uitableview', '', '21461847', 'in my app i have a rootpageviewcontroller which contains the uipageviewcontroller and one or more detailpageviewcontroller with a uitableview as a childview\n')

snap.svg	fabricjs	1
('snap.svg', 'faster', 'fabricjs', '', '21791388', 'my speed test claims that svg is significantly faster than canvas at least snap.svg seems to be significantly faster than fabricjs\n')

substr	grepl	2
('substr', 'operation slightly better', 'grepl', '', '41553334', 'finally i also made a benchmark test which shows that substr operation is slightly better than sapply grepl and significantly better than vectorised grepl alone\n')
('substr', 'better sapply', 'grepl', '', '41553334', 'finally i also made a benchmark test which shows that substr operation is slightly better than sapply grepl and significantly better than vectorised grepl alone\n')

ostream	std	1
('ostream', 'more', 'std', '', '33477368', 'so if using std ostream is more limiting than std basic_ostream\n')

highcharts	flot	1
('highcharts', 'more dynamic', 'flot', '', '6178094', 'highcharts is svg and as such it is much more dynamic than flot you can restyle graphs with css attach events perform animations etc..\n')

glassfish	resin	1
('glassfish', 'slower', 'resin', '', '12723426', 'glassfish seems to be slower than resin\n')

vba	vbscript	2
('vba', 'more sense', 'vbscript', '', '1001855', 'i believe that the reports are using something more along the lines of vbscript edit oregonghost says vba which actually makes more sense than vbscript than vb.net and very limited at that\n')
('vba', 'better', 'vbscript', '', '962399', 'vb6 vba though a little better than vbscript in general still has many similar issues where for their domain they require much more boiler plate to do simple tasks than what i would like and have seen in other scripting languages\n')

sublimetext	gedit	1
('sublimetext', 'better', 'gedit', '', '8951744', 'i have tried with sublimetext 2 and it work very very good better than gedit p\n')

hql	jpql	1
('hql', 'more', 'jpql', '', '16886935', 'because hql is more or less superset of jpql it of course works also in hql\n')

shellsort	quicksort	1
('shellsort', 'slower', 'quicksort', '', '128055', 'if you use shellsort no extra memory is needed at all though shellsort will be much slower than quicksort\n')

comparator	comparable	2
('comparable', 'easier', 'comparator', '', '47012236', 'using just the keyfn return a comparable value that matches your requirements is much easier than implementing comparator\n')
('comparator', 'class better', 'comparable', '', '13545953', 'a comparator class is better since use of comparable would mean using\n')

sublimetext	scite	2
('sublimetext', 'much more time', 'scite', '', '44034227', 'sublimetext 3 needs much more time several seconds more then scite before the opened file shows up and i suppose it is because sublimetext does some pre-evaluation of the file content like detecting areas suitable for folding there are fold triangles available depending on indentation of non-white characters in the file\n')
('sublimetext', 'much more', 'scite', '', '44034227', 'sublimetext 3 needs much more time several seconds more then scite before the opened file shows up and i suppose it is because sublimetext does some pre-evaluation of the file content like detecting areas suitable for folding there are fold triangles available depending on indentation of non-white characters in the file\n')

phong	shading	2
('phong', 'more', 'shading', '', '15802920', 'phong is a more nuanced shading model albeit a more hacky one which says that light is composed of ambient + diffuse + specular components\n')
('phong', 'more nuanced', 'shading', '', '15802920', 'phong is a more nuanced shading model albeit a more hacky one which says that light is composed of ambient + diffuse + specular components\n')

code128	code39	1
('code128', 'better', 'code39', '', '1243627', 'data density in code128 is better than code39 - since it gets mentioned that often in other replies\n')

break	control-structure	1
('break', 'more special other', 'control-structure', '', '6114085', 'e.g. break with labels as in java or even a more generic goto. continue does not seem more special than other control-structure mechanisms except that it is present in more languages\n')

vundle	pathogen	1
('vundle', 'better', 'pathogen', '', '17790897', 'also i tried installing pathogen and that worked for some bundles but would not work for perlomni.vim because it was an ftplugin and pathogen was not appending the bundles correctly and after research i saw most people saying vundle was better than pathogen\n')

onload	onreadystatechange	2
('onload', 'function more', 'onreadystatechange', '', '14729732', 'it looks like the onload function is a more modern convenience method and the old way of checking the result is using onreadystatechange instead\n')
('onload', 'function more modern', 'onreadystatechange', '', '14729732', 'it looks like the onload function is a more modern convenience method and the old way of checking the result is using onreadystatechange instead\n')

xhprof	xdebug	1
('xhprof', 'lighter', 'xdebug', '', '1283195', 'thanks mikushi for the comment another possibility that i haven t used much is the the xhprof extension it also helps with profiling can generate callgraphs -- but is lighter than xdebug which mean you should be able to install it on a production server\n')

calayer	cagradientlayer	1
('calayer', 'smoother results', 'cagradientlayer', '', '24724320', 'however i wish to use a custom calayer that uses an internal cggradient for drawing instead as this should produce smoother results than cagradientlayer see here\n')

mouseleave	mousemove	1
('mouseleave', 'better', 'mousemove', '', '6937090', 'take a look at mouseenter and mouseleave events they are better than mousemove and mouseenter combinations\n')

uiswipegesturerecognizer	catransition	1
('uiswipegesturerecognizer', 'better', 'catransition', '', '10407713', 'if you want to use a continuous gesture that tracks the user s finger you can use uipangesturerecognizer rather than uiswipegesturerecognizer and i think animatewithduration is better than catransition in that case\n')

logical-or	associativity	2
('logical-or', 'operator higher precedence', 'associativity', '', '15163782', 'i looked it up and the logical-or operator has a higher precedence than the conditional operator and the conditional operator has right-to-left associativity\n')
('logical-or', 'operator higher', 'associativity', '', '15163782', 'i looked it up and the logical-or operator has a higher precedence than the conditional operator and the conditional operator has right-to-left associativity\n')

profiler	perf	2
('profiler', 'more', 'perf', '', '410465', 'a profiler gives you more detailed information which can help to diagnose and fix perf problems\n')
('profiler', 'more detailed', 'perf', '', '410465', 'a profiler gives you more detailed information which can help to diagnose and fix perf problems\n')

hapijs	express	1
('hapijs', 'more', 'express', '', '37680583', 'we started experimenting with hapijs on smaller services and kind of like it more than express\n')

magento	expressionengine	1
('magento', 'any better', 'expressionengine', '', '9080288', 'thinking you can format magento blocks any better in a cms such as expressionengine and use magento just for the backend will put you on a hiding to nothing to end up with a fairly useless setup that isn t going to go anywhere\n')

dxcore	coderush	2
('dxcore', 'newer', 'coderush', '', '6608244', 'dxcore is the newer name for coderush dxcore and coderush are a refactoring and productivity tool by devexpress that extends the functionality of microsoft visual studio 2002 2003 2005 2008 and 2010\n')
('dxcore', 'newer name', 'coderush', '', '6608244', 'dxcore is the newer name for coderush dxcore and coderush are a refactoring and productivity tool by devexpress that extends the functionality of microsoft visual studio 2002 2003 2005 2008 and 2010\n')

jspm	npm	2
('jspm', 'more suitable', 'npm', '', '37119794', 'assuming that you are building a webapp jspm is more suitable for managing your frontend dependencies than npm\n')
('jspm', 'more', 'npm', '', '37119794', 'assuming that you are building a webapp jspm is more suitable for managing your frontend dependencies than npm\n')

mouseleave	mouseenter	1
('mouseleave', 'div thicker', 'mouseenter', '', '6888665', 'mouseleave div becomes thicker which will cause an almost automatic mouseenter\n')

d3.js	leaflet	1
('d3.js', 'better', 'leaflet', '', '38617263', 'i think d3.js looks so much better than leaflet but for quick zooming panning functionality my first question is is this better off in leaflet or can d3.js handle slick zoom pan even though it s not tile-based\n')

scala	typesafe	1
('scala', 'less reliable', 'typesafe', '', '17532715', 'scala does not provide an alternative and any alternative that was provided would likely be less reliable as typesafe does not have the resources that sun oracle ibm etc\n')

glsl	hlsl	1
('glsl', 'better', 'hlsl', '', '3075629', 'opengl is better for playing around and experimenting because you can easily draw triangle without messing with hardware buffers available on larger selection of platforms plus glsl is better than hlsl because it doesn t compile into assembly\n')

iqueryable	ilist	1
('iqueryable', 'better', 'ilist', '', '6841928', 'generally ienumerable and iqueryable are even better than ilist as they re more generic unless you want to limit this with good reason of course\n')

uwsgi	gunicorn	2
('uwsgi', 'better', 'gunicorn', '', '27571641', 'i ve been using uwsgi in production on heroku for over a year and it seems to handle everything a lot better than gunicorn\n')
('uwsgi', 'better performance', 'gunicorn', '', '34023826', 'according to many benchmarks uwsgi seems to provides better performance than gunicorn and if the performance doesn t change significantly you ll be able to focus your investigation on nginx or ec2 configurations\n')

pyodbc	adodbapi	1
('pyodbc', 'better', 'adodbapi', '', '11666564', 'i am not sure but by reading the documentation i think you need to download the pyodbc it seems to be better supported than adodbapi\n')

angle	concave	2
('angle', 'bigger', 'concave', '', '22340300', 'edit2 okay i just see that if the angle is bigger than 180√¢ it s concave so i have to change the shape for be simple than a triangulation\n')
('angle', 'less', 'concave', '', '26031127', 'if the total of the angle is less than 180√¢ the triangle must be √¢ ≈ìhyperbolic√¢ on a concave surface which might be the shape of our universe\n')

prolog	lisp	1
('prolog', 'easier', 'lisp', '', '406426', 'i also checked prolog and it seems a pretty cool language easy to do relations between data and easier than lisp but i d like to hear what you think\n')

atof	istream	1
('atof', 'indeed better', 'istream', '', '32496181', 'atof is indeed better in reading floating point values than istream\n')

ssms	sqlcmd	2
('ssms', 'more', 'sqlcmd', '', '24651261', 'in ssms it takes more than 1 minute to complete while in sqlcmd it takes no longer than one second\n')
('sqlcmd', 'faster', 'ssms', '', '24651261', 'is sqlcmd always that much faster than ssms\n')

dialog	popupwindow	2
('dialog', 'far better', 'popupwindow', '', '13891924', 'i give up using popupwindow and use dialog instead after some tests i found dialog is far better than popupwindow there are quite a few problems with popupwindow\n')
('dialog', 'better', 'popupwindow', '', '13891924', 'i give up using popupwindow and use dialog instead after some tests i found dialog is far better than popupwindow there are quite a few problems with popupwindow\n')

google-api-python-client	oauth2client	2
('google-api-python-client', 'older', 'oauth2client', '', '43080972', 'there s a known bug that when you install the googleads library using pip it will install a newer version of the oauth2client library which will break my google analytics api scripts because the google-api-python-client uses an older version of oauth2client\n')
('google-api-python-client', 'older version', 'oauth2client', '', '43080972', 'there s a known bug that when you install the googleads library using pip it will install a newer version of the oauth2client library which will break my google analytics api scripts because the google-api-python-client uses an older version of oauth2client\n')

terracotta	hazelcast	2
('terracotta', 'bigger community', 'hazelcast', '', '5271450', 'we started with ehcache terracotta server array cause it s well-known backed by terracotta and has bigger community support than hazelcast\n')
('terracotta', 'bigger', 'hazelcast', '', '5271450', 'we started with ehcache terracotta server array cause it s well-known backed by terracotta and has bigger community support than hazelcast\n')

tabs	toolbar	1
('tabs', 'more', 'toolbar', '', '32543099', 'search to each tabs in more than one toolbar\n')

des	rsa	2
('des', 'larger', 'rsa', '', '864659', 'des code is 8 times larger than rsa\n')
('des', 'faster', 'rsa', '', '10094969', 'by comparison des see section 3.2 and other block ciphers are much faster than the rsa algorithm\n')

razorpdf	itextsharp	2
('razorpdf', 'older', 'itextsharp', '', '29825482', 'razorpdf uses an older version of itextsharp which i believe was the latest free itextsharp version\n')
('razorpdf', 'older version', 'itextsharp', '', '29825482', 'razorpdf uses an older version of itextsharp which i believe was the latest free itextsharp version\n')

onclick	onmouseup	1
('onclick', 'more appropriate', 'onmouseup', '', '9850188', 'note also that onclick would be much more appropriate than onmouseup for this\n')

wxhaskell	gtk2hs	1
('wxhaskell', 'better', 'gtk2hs', '', '2896854', 'in practice i ve never had resource management issues with wxhaskell although i agree that it s possible and is an area handled better by gtk2hs which uses reference counting in the underlying library\n')

font-size	fontfamily	1
('font-size', 'lesser', 'fontfamily', '', '6409986', 'the actual visible size is determined by the font-size and to a lesser extend by the fontfamily\n')

magma	lapack	2
('magma', 'slower', 'lapack', '', '9742864', 'b magma runs always slower than lapack sequential around 10 times slower\n')
('magma', 'always slower', 'lapack', '', '9742864', 'b magma runs always slower than lapack sequential around 10 times slower\n')

uitabbarcontroller	uitabbaritem	1
('uitabbarcontroller', 'more', 'uitabbaritem', '', '2895389', 'i have a uitabbarcontroller with more than 5 uitabbaritem so the morenavigationcontroller is available\n')

pycharm	spyder	1
('pycharm', 'slower', 'spyder', '', '43038122', 'i like the auto-complete feature of pycharm but from my experience it is slower than spyder\n')

double-quotes	single-quotes	2
('double-quotes', 'more work', 'single-quotes', '', '17127591', 'first you can use double-quotes or q it just takes more work than single-quotes or q\n')
('single-quotes', 'tidier', 'double-quotes', '', '37335836', 'another side note single-quotes inside xpath string looks a bit tidier than escaped double-quotes imo\n')

each	prop	2
('each', 'more', 'prop', '', '8743173', 'needless to say each product has more than one prop which is kept in the producthas table\n')
('each', 'product more', 'prop', '', '8743173', 'needless to say each product has more than one prop which is kept in the producthas table\n')

spring-data-commons	spring-data-jpa	2
('spring-data-commons', 'older', 'spring-data-jpa', '', '46858551', 'you may encounter noclassdeffounderror if the version of spring-data-commons is older then required by spring-data-jpa\n')
('spring-data-commons', 'older then', 'spring-data-jpa', '', '46858551', 'you may encounter noclassdeffounderror if the version of spring-data-commons is older then required by spring-data-jpa\n')

dropbox	icloud	1
('dropbox', 'more reliable', 'icloud', '', '22235828', 'instead of dropbox i could use key value store as rest web service which i want to do later but have no time for this for now in my opinion my solution is more reliable than icloud and which is very important i have full control on how it√¢ s working mainly because it√¢ s my own code\n')

centos	solaris	2
('centos', 'more involved', 'solaris', '', '47192219', 'i would give you more info except a ip aliasing on centos 7 is more involved than i like much easier on solaris and b i m not familiar at all with configuring nginx very easy on apache\n')
('centos', 'more', 'solaris', '', '47192219', 'i would give you more info except a ip aliasing on centos 7 is more involved than i like much easier on solaris and b i m not familiar at all with configuring nginx very easy on apache\n')

monomac	monobjc	1
('monomac', 'less mature', 'monobjc', '', '15046560', 'when i evaluated monomac it was less mature than monobjc\n')

bellman-ford	floyd-warshall	1
('bellman-ford', 'faster', 'floyd-warshall', '', '7265454', 'because bellman-ford runs in time o mn the overall asymptotic runtime is still o mn + n 2 log n so if m o n 2 note that this is little-o of n this approach is asymptotically faster than using floyd-warshall\n')

parfor	matlabpool	1
('parfor', 'less worker', 'matlabpool', '', '10800861', 'if you want to batch and parfor at the same time open one less worker with matlabpool than you otherwise would\n')

uitapgesturerecognizer	uibutton	1
('uitapgesturerecognizer', 'more flexible', 'uibutton', '', '28340726', 'the first thought is that you could build a uiview showing image and text then attach a uitapgesturerecognizer to it which would be more flexible than uibutton\n')

mapguide	arcmap	1
('mapguide', 'more', 'arcmap', '', '303277', 'i mostly work with esri software though i ve had a little bit of work with mapguide mostly for clients whose engineering departments are using cad more than arcmap\n')

openkm	alfresco	2
('openkm', 'more well', 'alfresco', '', '12050599', 'i think the preview function in openkm is more well than alfresco\n')
('openkm', 'more', 'alfresco', '', '12050599', 'i think the preview function in openkm is more well than alfresco\n')

rouge	pygments	2
('rouge', 'lesser language', 'pygments', '', '30630740', 'note that at time of writing rouge has lesser language support compared to pygments\n')
('rouge', 'lesser', 'pygments', '', '30630740', 'note that at time of writing rouge has lesser language support compared to pygments\n')

subset-sum	np-complete	2
('subset-sum', 'problem hard more', 'np-complete', '', '17125649', 'the subset-sum problem is hard more precisely it s np-complete which means that your variant is hard too it s not np-complete because it s not a decision problem but it is np-hard\n')
('subset-sum', 'problem hard more precisely', 'np-complete', '', '17125649', 'the subset-sum problem is hard more precisely it s np-complete which means that your variant is hard too it s not np-complete because it s not a decision problem but it is np-hard\n')

aptana	textmate	1
('aptana', 'more', 'textmate', '', '4725870', 'in studio 3 much of this sort of functionality is still coming as aptana is going more of a textmate bundle route for a great deal of their features which i think is really cool\n')

boxlayout	grouplayout	2
('boxlayout', 'example better', 'grouplayout', '', '22849876', 'as a concrete example this boxlayout example is better done using grouplayout illustrated here and here\n')
('grouplayout', 'better such', 'boxlayout', '', '28289928', 'some don t take too well to added components for example grouplayout while others do better such as boxlayout\n')

vips	opencv	1
('vips', 'better job', 'opencv', '', '33195055', 'this is done on an extremely large image and i feel vips might do a better job than opencv on this\n')

nspersistentdocument	uimanageddocument	1
('nspersistentdocument', 'less hassle', 'uimanageddocument', '', '21869216', 'unfortunately the sample apps are not based on uimanageddocument or nspersistentdocument but if you look at the way they handle backup files you could probably use that approach to create a document based app with less hassle than using uimanageddocument\n')

bitvector	bitarray	2
('bitvector', 'more efficient', 'bitarray', '', '903548', 'why is the bitvector 32 structure more efficient than bitarray\n')
('bitvector', 'better', 'bitarray', '', '21745124', 'you will probably find that bitvector performs a good deal better than bitarray\n')

pbkdf2	hmac	2
('pbkdf2', 'also more complex', 'hmac', '', '44505548', 'pbkdf2 also uses a more complex construction in particular hmac over direct digest to make recovering the input password from an output value more difficult\n')
('pbkdf2', 'also more', 'hmac', '', '44505548', 'pbkdf2 also uses a more complex construction in particular hmac over direct digest to make recovering the input password from an output value more difficult\n')

oursql	mysql-python	2
('oursql', 'more proficient', 'mysql-python', '', '15832451', 'at least for .executemany oursql seems to be more proficient than mysql-python as the sql statement is only prepared once for all submitted values\n')
('oursql', 'nicer', 'mysql-python', '', '2542930', 'i hear oursql is nicer the mysql-python\n')

runtimeexception	unchecked-exception	1
('runtimeexception', 'simpler', 'unchecked-exception', '', '19805646', 'using throw new runtimeexception e is simpler to comprehend than throwables.propagate in the scenario where you want to throw an unchecked-exception wrapping a checked exception\n')

cakephp	zend-framework	1
('cakephp', 'lighter', 'zend-framework', '', '6018469', 'since cakephp seems to be much lighter than zend-framework i would suggest that you take a look at cakephp\n')

notepad++	sublimetext	2
('sublimetext', 'more customizable', 'notepad++', '', '12729127', 'i prefer sublimetext because it s a little more customizable than notepad++ but they re both great options and lighter than dreamweaver\n')
('notepad++', 'more broken', 'sublimetext', '', '10467472', 'notepad++ which is often recommended are even more broken than sublimetext 2 which i find to be pretty good actually\n')

scalacheck	quickcheck	1
('scalacheck', 'richer', 'quickcheck', '', '9351767', 'scalacheck s api is also a bit richer than quickcheck s api\n')

primes	square-root	1
('primes', 'less', 'square-root', '', '29443876', 'iterate over the primes already found which are less than the square-root of p\n')

libtiff	libjpeg	2
('libtiff', 'narrower functionality', 'libjpeg', '', '3932742', 'the situation is critical if on some platform libtiff provides a narrower functionality and does not link to libjpeg which will not be available on that platform at all so the above command for linking will fail due to unsatisfied library dependency\n')
('libtiff', 'narrower', 'libjpeg', '', '3932742', 'the situation is critical if on some platform libtiff provides a narrower functionality and does not link to libjpeg which will not be available on that platform at all so the above command for linking will fail due to unsatisfied library dependency\n')

scipy	sympy	1
('scipy', 'better option', 'sympy', '', '16105354', 'first of all if it was not for the relative complexity of the expressions here scipy would have been definitely the better option over sympy\n')

pytables	pandas	2
('pytables', 'more', 'pandas', '', '42074431', 'pytables seems more flexible but i am unclear about what the most direct way of using it to save a full pandas dataframe with multiindex and all\n')
('pytables', 'more flexible', 'pandas', '', '42074431', 'pytables seems more flexible but i am unclear about what the most direct way of using it to save a full pandas dataframe with multiindex and all\n')

affinity	processors	1
('affinity', 'more', 'processors', '', '27416478', 'so the difference between the two is that if you assign affinity at the thread level you can assign them to more than one processors and spread the load more than with all threads assigned to one processors\n')

docx4j	apache-poi	2
('docx4j', 'more convenient', 'apache-poi', '', '35200946', 'if you are dealing with docx document docx4j is more convenient than apache-poi\n')
('docx4j', 'more', 'apache-poi', '', '35200946', 'if you are dealing with docx document docx4j is more convenient than apache-poi\n')

wildfly	glassfish	1
('wildfly', 'better', 'glassfish', '', '41608974', 'a time ago i change glassfish to wildfly it works better than glassfish but i m having some problems with this exception\n')

caf	wav	1
('caf', 'better', 'wav', '', '1618687', '2 caf seems a little better than wav but not much\n')

cairo	drawingarea	1
('cairo', 'larger', 'drawingarea', '', '28038754', 'i found another approach using the cairo context passed to the handler of draw events but it resulted in capturing a region of the parent window that was larger than the drawingarea\n')

jmeter	soapui	1
('jmeter', 'more reliable', 'soapui', '', '18339600', 'i have found jmeter to be more reliable than soapui or loadui\n')

xtend	stringtemplate	1
('xtend', 'nicer', 'stringtemplate', '', '43201794', 'please consider also to use xtend for code generation that s much nicer than stringtemplate and integrates smoothly with xtext infrastructure\n')

eigen	boost	1
('eigen', 'faster', 'boost', '', '16991255', 'inspecting the assembly shows that in the sequential access case eigen is faster because the sum becomes vectorized while it does not when using raw boost multi_array\n')

handbrake	ffmpeg	2
('handbrake', 'simpler encoder', 'ffmpeg', '', '15694380', 'you may also use handbrake which is a simpler encoder than ffmpeg\n')
('handbrake', 'simpler', 'ffmpeg', '', '15694380', 'you may also use handbrake which is a simpler encoder than ffmpeg\n')

gruntjs	package.json	2
('gruntjs', 'gruntfile.js less license', 'package.json', '', '38026255', 'dist fonts gruntjs gruntfile.js js less license package.json readme.md\n')
('gruntjs', 'gruntfile.js less', 'package.json', '', '38026255', 'dist fonts gruntjs gruntfile.js js less license package.json readme.md\n')

nuxeo	alfresco	1
('nuxeo', 'definitely more', 'alfresco', '', '35253152', 'nuxeo is definitely more advanced in this because with its web interface you can customise almost everything but alfresco has other advantages\n')

lz77	lzw	2
('lz77', 'more suitable', 'lzw', '', '39759195', 'if so what is the nature of the output of lz77 that makes it more suitable for huffman compression than lzw or some other method entirely\n')
('lz77', 'more', 'lzw', '', '39759195', 'if so what is the nature of the output of lz77 that makes it more suitable for huffman compression than lzw or some other method entirely\n')

lasagne	theano	2
('lasagne', 'way simpler', 'theano', '', '37088930', 'and using keras or lasagne is way simpler to develop nns then pure theano which was just side research project in montreal to support development of pylearn\n')
('lasagne', 'more deeply', 'theano', '', '31073251', 'it is similar in spirit to keras which is built as a high-level api on top of theano tensorflow cntk although the main difference is that lasagne implements only one backend allowing it to integrate more deeply with theano features\n')

rtcp	rtp	2
('rtcp', 'sender', 'rtp', '', '34574076', 'the strange thing is that when streaming is done via rtsp unicast rtcp generates both sender reports and receiver reports but when streaming is done via rtp multicast only sender reports are generated\n')
('rtcp', 'sender reports', 'rtp', '', '34574076', 'the strange thing is that when streaming is done via rtsp unicast rtcp generates both sender reports and receiver reports but when streaming is done via rtp multicast only sender reports are generated\n')

minix	netbsd	1
('minix', 'better', 'netbsd', '', '27707650', 'i want test unix-like operating systems on historicial computers like commodore amiga atari st and i386 cpu and run posix compatible apps like pkgsrc x window system and blackbox wm for 40mhz higher versions minix 1.5 is best os for those systems better than netbsd but it is not posix-compatible\n')

background-color	transparency	1
('background-color', 'more', 'transparency', '', '19879489', 'you just set the div with border-radius so that it is a circle and background-color is the more transparency color in the circle\n')

redmine	bugzilla	1
('redmine', 'more', 'bugzilla', '', '323542', 'i think you ll find that your team will like either trac or redmine more than bugzilla or mantis\n')

blazemeter	jmeter	1
('blazemeter', 'better', 'jmeter', '', '40932322', 'why blazemeter is better than jmeter\n')

icomparable	equals	2
('icomparable', 'greater', 'equals', '', '36867352', 'no - icomparable is for seeing if one object is greater than equals to or less than another\n')
('icomparable', 'less', 'equals', '', '1421320', 'icomparable is an interface that defines that two instances of the implementing class can be seen as greater than less than or equals to one another\n')

mef	prism	1
('mef', 'easier', 'prism', '', '16455913', 'mef seemed a bit easier than prism and i started to do a hello world mef app with this tutorial\n')

hebrew	persian	1
('hebrew', 'slower', 'persian', '', '4333757', 'i am not sure it can satisfy you but hebrew test is 4 times slower than persian\n')

puremvc	cairngorm	2
('puremvc', 'more invasive', 'cairngorm', '', '109038', 'puremvc is more invasive than cairngorm meaning that your code is heavily dependent on the framework you have to subclass implement the framework classes interfaces but that doesn t mean that cairngorm isn t\n')
('puremvc', 'more', 'cairngorm', '', '109038', 'puremvc is more invasive than cairngorm meaning that your code is heavily dependent on the framework you have to subclass implement the framework classes interfaces but that doesn t mean that cairngorm isn t\n')

paxos	raft	1
('paxos', 'better', 'raft', '', '27558708', 'i couldn t understand why paxos is better for split-brain scenarios or other network failures than traditional bully algorithm because i can easily find out when quorum of nodes leave from the cluster without using raft\n')

splines	interpolation	1
('splines', 'better', 'interpolation', '', '29103996', 'with a lower order splines that works better but then you lose the advantage of cubic interpolation\n')

jquery	curvycorners	1
('jquery', 'bigger', 'curvycorners', '', '7823163', 'i know another plugin named jquery corner is available however it s file size being massively bigger than curvycorners i decided to with curvycorners\n')

startapp	interstitial	1
('startapp', 'better', 'interstitial', '', '26170889', 'imo startapp is better than admob especially when using their interstitial ads\n')

bitblt	stretchblt	1
('bitblt', 'x75 faster', 'stretchblt', '', '23450377', 'from my tests bitblt is x75 faster than stretchblt\n')

getline	istream	1
('getline', 'safer', 'istream', '', '46683458', 'note the use of std getline is safer and more convenient than std istream getline\n')

fossil	git	2
('fossil', 'easier', 'git', '', '4435582', 'fossil is another one that s easy to use i would say easier than git to learn but it uses an sqlite file to store your code and i m not sure if it scales to really big projects\n')
('fossil', 'more', 'git', '', '2120804', 'from the article it sounds like fossil isn t a database any more than git is a database\n')

struts	wicket	1
('struts', 'style simpler', 'wicket', '', '17072165', 'you could argue that the struts style is simpler and you can do it in wicket too it just isn t optimal but keeping the state only in the server has many advantages\n')

avassetexportsession	avassetwriter	1
('avassetexportsession', 'much easier', 'avassetwriter', '', '24191989', 'this will work directly with avassetexportsession which is much easier than playing with avassetwriter unless you have a very specific requirement typically you need to manipulate the actual video frames\n')

ats	agda	1
('ats', 'less elegant', 'agda', '', '10800833', 'ats is a dependently-typed language that is designed for low-level programming though it s somewhat less elegant than agda\n')

puma	webrick	2
('puma', 'also better', 'webrick', '', '13532865', 'puma also has better concurrency but that threadsafe confgi make webrick multi-thread for me\n')
('puma', 'also better concurrency', 'webrick', '', '13532865', 'puma also has better concurrency but that threadsafe confgi make webrick multi-thread for me\n')

uiview	caanimation	1
('uiview', 'animation generally easier', 'caanimation', '', '23037815', 'uiview animation is generally easier and more intuitive to use than caanimation\n')

gdk	cairo	2
('gdk', 'more basic', 'cairo', '', '3221088', 'to draw you can use either plain gdk which is more basic or use cairo which is more flexible drawing library nb\n')
('gdk', 'more', 'cairo', '', '3221088', 'to draw you can use either plain gdk which is more basic or use cairo which is more flexible drawing library nb\n')

momentjs	datejs	1
('momentjs', 'better', 'datejs', '', '17263103', 'you should try momentjs i think its much better than datejs\n')

hiawatha	apache	1
('hiawatha', 'faster', 'apache', '', '29657343', 'i had the same problem configuring apache until i gave up and change to hiawatha much more easy to configure and according some benchmark is faster than apache\n')

uppercase	tolower	1
('uppercase', 'comparison more', 'tolower', '', '2256479', 'further uppercase comparison is more optimized than tolower if that tiny degree of performance matters\n')

strcpy	printf	1
('strcpy', 'faster', 'printf', '', '28663679', 'at first glance it must be significantly faster because strcpy must be significantly faster than printf\n')

mongoose	mongojs	1
('mongoose', 'slower', 'mongojs', '', '17690970', 'in either case mongoose is going to add a tiny amount of overhead so it s likely to be technically slower than mongojs but not by any meaningful amount like it takes 5.1 seconds to insert 20k records vs 5.0 seconds\n')

permalinks	slug	1
('permalinks', 'more', 'slug', '', '43915592', 'i want my permalinks to be accessable via more than one slug\n')

bootcamp	vmware	1
('bootcamp', 'faster', 'vmware', '', '9422814', 'i ve found that bootcamp was slightly faster than vmware non bootcamp image but i still use vmware the majority of the time because i like using the host os for things like mail chat browsing\n')

spring	appfuse	1
('spring', 'better', 'appfuse', '', '4370193', 'if you actually need dao s this is something that comes out-of-the-box in appfuse and put partly in spring roo but there is also a great addon for spring roo hades addon that does a great job at this maybe even better than appfuse\n')

jlabel	jinternalframe	1
('jlabel', 'smaller', 'jinternalframe', '', '8088885', 'my problem is this i don t want the jlabel or the jscrollpane to stretch to the size of the jinternalframe if the jlabel is smaller than the jinternalframe\n')

imagemagick	magick++	1
('imagemagick', 'more correct', 'magick++', '', '7678511', 'now i m trying to do the same thing with imagemagick to be more correct with magick++\n')

calloc	realloc	1
('calloc', 'easier', 'realloc', '', '7762023', 'the various alternatives calloc realloc work roughly the same way calloc is easier to use when dealing with arrays and zero-fills the data while realloc is useful when you need to resize a block of memory\n')

flac	ogg	1
('flac', 'less', 'ogg', '', '3169917', 'i suspect the computational demands of flac decoding are probably considerably less than ogg and if dsp gets you excited taking the time to figure all this stuff out is 100 worth it even if the flash route possibly leads to disappointment\n')

tooltip	scrollbar	1
('tooltip', 'text more', 'scrollbar', '', '20739296', 'tooltip text is more scrollbar is displayed to scroll through to\n')

xslt	xsl-fo	1
('xslt', 'more', 'xsl-fo', '', '512569', 'all in all t4 to me is more of a inside vs code-generation tool to quickly create c# or other files while xslt is more of a data-processing data-transformation tool to turn data from xml into another format typically html or pdf using xsl-fo\n')

jersey-client	httpclient	1
('jersey-client', 'easier', 'httpclient', '', '5704086', 'you can also use jersey-client it is gae compatible and much easier than httpclient\n')

qtwebengine	qtwebkit	2
('qtwebengine', 'significantly faster', 'qtwebkit', '', '28758928', 'i ve also noticed that qtwebengine is significantly faster and more stable that the old qtwebkit based widgets\n')
('qtwebengine', 'much worse', 'qtwebkit', '', '41974756', 'unfortunately qtwebengine has much worse and poorer integration with the rest of qt facilities than qtwebkit\n')

fadein	removeclass	2
('fadein', 'better', 'removeclass', '', '3206128', 'for some reason fadein works better than show or simply removing a hidden class via removeclass if you take that approach\n')
('removeclass', 'faster', 'fadein', '', '13281297', 'that s because removeclass is executed faster than fadein method you can remove the class when animation is complete\n')

colorbox	thickbox	1
('colorbox', 'better', 'thickbox', '', '6462838', 'colorbox is implemented as a jquery plugin which is a bit different and better than thickbox s sort-of-self-contained widget model\n')

charts	pie-chart	1
('charts', 'more', 'pie-chart', '', '28714739', 'if you want to do a split slice operation on a pie charts first you need to create a pie charts with slices.here from what i understand you tried to give the option split charts first which actually is to make differrent pie charts in the same row or column which needs more than one pie-chart\n')

onresume	onpause	1
('onresume', 'more', 'onpause', '', '9647275', 'and you should not access vehicledataprovider before onresume in the life cylcle and no more after onpause\n')

junit	cactus	1
('junit', 'older', 'cactus', '', '7558548', 'junit is older and have more extensions dbunit cactus etc\n')

wtforms	formencode	1
('wtforms', 'much easier', 'formencode', '', '4610027', 'i also recommend wtforms it s much easier to use than formencode and have builtin sqlalchemy extensions\n')

bigloo	ecl	2
('bigloo', 'more', 'ecl', '', '9873521', 'this one is more for bigloo - is it more functional than ecl\n')
('bigloo', 'more functional', 'ecl', '', '9873521', 'this one is more for bigloo - is it more functional than ecl\n')

qlabel	qlineedit	1
('qlabel', 'better', 'qlineedit', '', '26849876', 'qlabel has no any other unnecessary things so it is better than qlineedit or qprogressbar\n')

jchart2d	jfreechart	1
('jchart2d', 'way better', 'jfreechart', '', '24244037', 'as a note jchart2d is way better than other libraries as jfreechart for real time applications\n')

tortoisegit	svn	2
('tortoisegit', 'more', 'svn', '', '2096222', 'the compare dialog of tortoisegit is more about file and with git you have to compare two master branches not just two commits of the same branches both pointing to the same svn central repo\n')
('tortoisegit', 'better', 'svn', '', '384102', 'nobody has ever accused git of being easy-to-use no tortoisegit for example although i hear it s coming so you might be better off with svn beanstalk\n')

colt	jama	2
('colt', 'more powerful', 'jama', '', '879201', 'colt does this already but i have found it is more complicated and more powerful than jama which may explain why simple functions are slower with colt\n')
('jama', 'slower', 'colt', '', '879201', 'colt does this already but i have found it is more complicated and more powerful than jama which may explain why simple functions are slower with colt\n')

opentype	woff	1
('opentype', 'better compression', 'woff', '', '29221367', 'truetype opentype font that provides better compression than woff 1.0\n')

jtextcomponent	documentfilter	1
('jtextcomponent', 'documentlistener', 'documentfilter', '', '9430683', 'for listening changes into jtextcomponent is there documentlistener if you have to need control over inputed char sings whitespace chars or word s you have to implements documentfilter\n')

node.js	express	2
('node.js', 'better .the', 'express', '', '19130458', 'first its not a bad idea to use node.js to satisfy your requirement the uniqueness of node and added advantage compared to conventional technologies like apache-php is clearly explained in this following video why node.js is better .the notion of node being just used for advanced or complex applications is wrong you can use node for building applications which are very simple to anything of huge proportion.it would be a not so comfortable task for a node beginner to code without using any frameworks but by using this web application framework called express you need not code from scratch and its very easy to setup html pages using its simplified html templating language called jade and route requests also you can even use your html pages if you are not willing to use jade for rendering the views of your application .here are the series of tutorials which would help you tutorials on beginning with node.js basics of expressjs\n')
('node.js', 'better', 'express', '', '19130458', 'first its not a bad idea to use node.js to satisfy your requirement the uniqueness of node and added advantage compared to conventional technologies like apache-php is clearly explained in this following video why node.js is better .the notion of node being just used for advanced or complex applications is wrong you can use node for building applications which are very simple to anything of huge proportion.it would be a not so comfortable task for a node beginner to code without using any frameworks but by using this web application framework called express you need not code from scratch and its very easy to setup html pages using its simplified html templating language called jade and route requests also you can even use your html pages if you are not willing to use jade for rendering the views of your application .here are the series of tutorials which would help you tutorials on beginning with node.js basics of expressjs\n')

qfile	qtextstream	1
('qfile', 'more conveniently', 'qtextstream', '', '10093960', 'a qfile may be used by itself or more conveniently with a qtextstream or qdatastream\n')

eclemma	cobertura	1
('eclemma', 'better', 'cobertura', '', '11801652', 'also forgot to mention junit testing framework and a great eclipse plugin eclemma for code coverage much better than cobertura ecobertura and easier to use and of course you can try maven as the other post mentionned or try ant as build tool\n')

audiorecord	mediarecorder	2
('audiorecord', 'lower level', 'mediarecorder', '', '4059119', 'this class leverages audiorecord which is a lower level approach to using mediarecorder\n')
('audiorecord', 'lower', 'mediarecorder', '', '4059119', 'this class leverages audiorecord which is a lower level approach to using mediarecorder\n')

koala	facebooker2	2
('koala', 'better', 'facebooker2', '', '5453213', 'relevant discussion here as well is fb_graph or koala ruby gem better than facebooker2 using the facebook graph\n')
('koala', 'better', 'facebooker2', '', '5201993', 'is fb_graph or koala gem better than facebooker2\n')

ipa	info.plist	1
('ipa', 'more', 'info.plist', '', '32953147', 'we are having an issue with uploading ipa files to our mdm solution when there is more than one info.plist present in the ipa file\n')

selecteditem	selectedindex	2
('selecteditem', 'more reliable', 'selectedindex', '', '27923683', 'i ve found that setting the selecteditem is more reliable than setting the selectedindex\n')
('selecteditem', 'more', 'selectedindex', '', '27923683', 'i ve found that setting the selecteditem is more reliable than setting the selectedindex\n')

daemons	systemd	1
('daemons', 'safer', 'systemd', '', '2277474', 'use daemons mode and then simply touching the wsgi script file when an atomic set of changes have been completed isn t that hard and certainly safer than a systemd which restarts arbitrarily when it detects any single change\n')

redeclaration	ivar	2
('redeclaration', 'cleaner', 'ivar', '', '13670789', 'this redeclaration allows a cleaner way to access and mutate the property internally without resorting to fragile ivar synthesis which is becoming an antiquity now that the compiler does it for you\n')
('redeclaration', 'cleaner way', 'ivar', '', '13670789', 'this redeclaration allows a cleaner way to access and mutate the property internally without resorting to fragile ivar synthesis which is becoming an antiquity now that the compiler does it for you\n')

rebol	lisp	2
('rebol', 'more homoiconic', 'lisp', '', '42854953', 'aside does this mean rebol is more homoiconic than lisp\n')
('rebol', 'more', 'lisp', '', '42854953', 'aside does this mean rebol is more homoiconic than lisp\n')

uiview	uiwindow	2
('uiview', 'more', 'uiwindow', '', '26706709', 'uiview is more generic than uiwindow and should be preferred\n')
('uiview', 'more generic', 'uiwindow', '', '26706709', 'uiview is more generic than uiwindow and should be preferred\n')

mockito	jmockit	2
('mockito', 'older library', 'jmockit', '', '7717332', 'mockito s a much older library than jmockit so you could expect that it would have many more features\n')
('mockito', 'better', 'jmockit', '', '5418052', 'comparison between mockito vs jmockit - why is mockito voted better than jmockit\n')

viewdidappear	viewwillappear	1
('viewdidappear', 'more', 'viewwillappear', '', '4297436', 'in this case viewdidappear behaves more like viewwillappear ..\n')

codeception	phpunit	1
('codeception', 'more elegant', 'phpunit', '', '25675213', '1 split those tests to unit and acceptance and use a tool like codeception to help you do acceptance which is way more elegant than phpunit for this kind of test\n')

tcmalloc	libc	1
('tcmalloc', 'better', 'libc', '', '31078698', 'the tcmalloc library for example can be easily inserted into an application to evaluate performance gains in heavily threaded applications where tcmalloc tends to perform a lot better than libc s malloc implementation\n')

csv	tsv	1
('csv', 'more', 'tsv', '', '44288514', 'also your csv looks more like a tsv tab separated instead of comma separated\n')

mysql-workbench	phpmyadmin	2
('mysql-workbench', 'more', 'phpmyadmin', '', '4739146', 'i think you should install phpmyadmin on your server this will allow you to access your database from work school cafe etc mysql-workbench is more advanced and gives you more features so you can deal with changing the structure and editing any rows columns relations and much more look at phpmyadmin s features it has most if not all\n')
('mysql-workbench', 'more advanced', 'phpmyadmin', '', '4739146', 'i think you should install phpmyadmin on your server this will allow you to access your database from work school cafe etc mysql-workbench is more advanced and gives you more features so you can deal with changing the structure and editing any rows columns relations and much more look at phpmyadmin s features it has most if not all\n')

arc4random	srand	2
('arc4random', 'much better random', 'srand', '', '4253674', 'from what i can gather arc4random generates much better random numbers than rand does however i haven t seen a way to seed it and i would like to just like using srand\n')
('arc4random', 'much better', 'srand', '', '4253674', 'from what i can gather arc4random generates much better random numbers than rand does however i haven t seen a way to seed it and i would like to just like using srand\n')

cefglue	cefsharp	1
('cefglue', 'more difficult', 'cefsharp', '', '28732691', 'however integrating cefglue into your winforms or wpf app may be more difficult than cefsharp\n')

prism	caliburn	1
('prism', 'more', 'caliburn', '', '12522366', 'prism is more of a modularity framework and caliburn is more of a mvvm framework i know both have overlapping features but it would be great to take best features from two frameworks when they are combined\n')

tablesorter	datatables	1
('tablesorter', 'simpler', 'datatables', '', '12522533', 'one thing you could look into is using tablesorter - which is much simpler than datatables - with a drag and drop plugin like sortable for jquery ui or this\n')

textblock	richtextbox	1
('textblock', 'simpler', 'richtextbox', '', '1287034', 'good advice but in the end i decided a bindable textblock was more useful and simpler than a richtextbox\n')

webrick	thin	1
('webrick', 'slower', 'thin', '', '1267852', 'from my experience webrick is slower than mongrel is slower than thin\n')

ivar	accessor	2
('ivar', 'faster', 'accessor', '', '16664597', 'nonatomic properties don t use locks but direct ivar is faster because it skips the accessor call\n')
('ivar', 'directly faster', 'accessor', '', '14113098', 'technically accessing the ivar directly is faster than using accessor but there are very few situations in which it will make a significant performance difference and would probably be a case of premature optimization\n')

microcontroller	avr	1
('microcontroller', 'cheaper', 'avr', '', '4156810', 'i see that the microcontroller used in commercial devices are much cheaper than the avr or pic\n')

mbprogresshud	uialertview	2
('mbprogresshud', 'more', 'uialertview', '', '9816661', 'mbprogresshud has more features than uialertview so it might be better suited and more easily adapted for your purposes\n')
('mbprogresshud', 'more features', 'uialertview', '', '9816661', 'mbprogresshud has more features than uialertview so it might be better suited and more easily adapted for your purposes\n')

crypt	md5	1
('crypt', 'better solution', 'md5', '', '19040830', 'i should also mention that crypt has this built-in and may be a better solution than md5\n')

antivirus	norton	1
('antivirus', 'better', 'norton', '', '215539', 'many other antivirus software that works just as well if not better than norton like avg avast and others do allow you to uninstall from the add remove\n')

xlsxwriter	xlwings	2
('xlsxwriter', 'faster', 'xlwings', '', '43527906', 'i know that xlsxwriter is way faster than xlwings and have functionality to add border but it is just a writer it can t update already existing spreadsheet\n')
('xlsxwriter', 'way faster', 'xlwings', '', '43527906', 'i know that xlsxwriter is way faster than xlwings and have functionality to add border but it is just a writer it can t update already existing spreadsheet\n')

avassetexportsession	avassetreader	2
('avassetexportsession', 'slightly more', 'avassetreader', '', '36726335', 'in my experience avassetexportsession is slightly more performant than using avassetreader and avassetwriter for a straight forward format a - format b type conversion however that said it s probably not by enough to be too concerned about\n')
('avassetexportsession', 'slightly more performant', 'avassetreader', '', '36726335', 'in my experience avassetexportsession is slightly more performant than using avassetreader and avassetwriter for a straight forward format a - format b type conversion however that said it s probably not by enough to be too concerned about\n')

bufferedwriter	fileoutputstream	1
('bufferedwriter', 'even worse', 'fileoutputstream', '', '6976914', 'for a few bytes passed in just one call probably the bufferedwriter is even worse because it problably later calls fileoutputstream\n')

xlsb	xlsm	1
('xlsb', 'faster', 'xlsm', '', '39221744', 'but i heard that xlsb loads way faster than xlsm so i would not like to change the fileformat\n')

pillow	imagemagick	1
('pillow', 'better performance', 'imagemagick', '', '37254177', 'there exists a simd fork of pillow which claims to have much better performance than imagemagick or plain pillow but there are no comparisons to opencv\n')

argumentexception	invalidoperationexception	2
('argumentexception', 'more', 'invalidoperationexception', '', '16434842', 'i think the argumentexception is more appropriate because the invalidoperationexception documentation says that the object itself on what the method is called has to be in an invalid state right\n')
('argumentexception', 'more appropriate', 'invalidoperationexception', '', '16434842', 'i think the argumentexception is more appropriate because the invalidoperationexception documentation says that the object itself on what the method is called has to be in an invalid state right\n')

casting	autoboxing	1
('casting', 'cheaper', 'autoboxing', '', '10019000', 'is that casting from long to int plus sparsearray optimizations are going to be cheaper than autoboxing long to long for my hashmap operations\n')

factories	presenter	2
('factories', 'lighter', 'presenter', '', '14440549', 'which is basically the same thing as the factories then depend on sub-factories but at least they are lighter than presenter views services and they don t need to load the sub-factories until they are needed\n')
('presenter', 'better', 'factories', '', '32147921', 'a presenter is better to accept some kind of a view factories or a supplier in general as we can already hold an existing view especially in a gwt case and let the presenter decide when instantiate or accept the view\n')

jsr286	jsr168	2
('jsr286', 'newer spec', 'jsr168', '', '9036984', 'the posts you see seem to be logical as jsr286 is a newer spec and there are some features that make jsr268 portlet not a jsr168 portlet\n')
('jsr286', 'newer', 'jsr168', '', '9036984', 'the posts you see seem to be logical as jsr286 is a newer spec and there are some features that make jsr268 portlet not a jsr168 portlet\n')

umask	chown	1
('umask', 'better', 'chown', '', '2561800', 'but changing the chmod maybe even working with umask is better than dealing with root-access and using chown\n')

libstdc++	libc++	2
('libstdc++', 'more', 'libc++', '', '12574479', 'libstdc++ does this a lot more than libc++ and the former is the default library for llvm-g++ gcc llvm the latter for clang apple llvm which means a lot of errors will seem to go away when you switch to gcc llvm or just stick with apple llvm and switch your library but your code is still wrong\n')
('libc++', 'more complete', 'libstdc++', '', '17901868', 'the above links to libc++ which is the preferred c++ standard library for mac os x with clang and a lot more complete than libstdc++ even when considering the newest gcc\n')

s-function	matlab	1
('s-function', 'faster', 'matlab', '', '20815265', 'my c s-function is faster than my embedded matlab function block in matlab environment but when i use it in rt-lab the embedded is faster\n')

tapestry	wicket	1
('tapestry', 'more powerful', 'wicket', '', '2556364', 'in my opinion this is a more elegant solution than jsf and i think tapestry s ioc container makes it more powerful than wicket\n')

postorder	inorder	1
('postorder', 'trickier', 'inorder', '', '38729809', 'postorder is trickier because the stack has to store nodes to visit and nodes to process and they aren t always simply related like they are in the inorder case\n')

fancybox	thickbox	1
('fancybox', 'smaller', 'thickbox', '', '3458145', 'i m using facebox and fancybox both smaller than thickbox\n')

radgrid	gridview	2
('radgrid', 'heavier asp.net', 'gridview', '', '7382971', 'each tab contains multiple radgrids as radgrid is heavier than asp.net gridview\n')
('radgrid', 'heavier', 'gridview', '', '7382971', 'each tab contains multiple radgrids as radgrid is heavier than asp.net gridview\n')

tidekit	tidesdk	2
('tidekit', 'better', 'tidesdk', '', '25117498', 'here is the blog post about the comparison how tidekit would be better than tidesdk\n')
('tidekit', 'better', 'tidesdk', '', '24966264', 'here is the blog post about the comparison how tidekit would be better than tidesdk\n')

adventureworks	northwind	1
('adventureworks', 'better', 'northwind', '', '597847', 'talk about sql server 2005 adventureworks is better than northwind\n')

linefeed	delimiter	1
('linefeed', 'longer string', 'delimiter', '', '8644931', 'i ve taken the example of two linefeed here but the same is true for any character string i could subvert the problem by maybe taking a longer string as the delimiter but that would have two undersirable effects\n')

modulo	multiplication	2
('modulo', 'lower precedence', 'multiplication', '', '45400129', 'it appears that you consider modulo to have lower precedence than multiplication and division when in fact it does not\n')
('modulo', 'slower', 'multiplication', '', '45747034', 'note that is equivalent to i 10 but much faster since modulo is around 10 times slower than multiplication\n')

idris	haskell	2
('idris', 'probably more', 'haskell', '', '41109958', 'in dependently-typed languages like idris it s probably more useful than in haskell\n')
('idris', 'probably more useful', 'haskell', '', '41109958', 'in dependently-typed languages like idris it s probably more useful than in haskell\n')

onload	domcontentloaded	1
('onload', 'event longer', 'domcontentloaded', '', '9078062', 'sometimes it s preferable because onload event takes longer to fire then domcontentloaded\n')

codelite	codeblocks	1
('codelite', 'better', 'codeblocks', '', '3067921', 'we sort of settled on it but later found codelite and liked it better than codeblocks\n')

leaflet	openlayers	1
('leaflet', 'more lightweight', 'openlayers', '', '13807524', 'while leaflet aims to be more lightweight than openlayers openlayers is by far the more mature proj\n')

tee	cat	2
('tee', 'then more data', 'cat', '', '25335034', 'tee then writes more data t and tries to read from the pipe then goes to sleep until cat writes more data\n')
('tee', 'then more', 'cat', '', '25335034', 'tee then writes more data t and tries to read from the pipe then goes to sleep until cat writes more data\n')

openpgp	x509	1
('openpgp', 'simpler', 'x509', '', '2282055', 'openpgp is simpler than x509 but more limited especially if you wish to have a strong legal meaning behind the certificates\n')

cas	shibboleth	2
('cas', 'more similar', 'shibboleth', '', '38311403', 'conceptually it seems like a type of central authentication system cas but is more similar to shibboleth also a federated identity management system\n')
('cas', 'more', 'shibboleth', '', '38311403', 'conceptually it seems like a type of central authentication system cas but is more similar to shibboleth also a federated identity management system\n')

chameleon	jinja2	2
('chameleon', 'faster', 'jinja2', '', '5324691', 'template engines are rarely the cause of performance problems even if chameleon is slightly faster than jinja2 i doubt the effort of learning a new template language etc\n')
('chameleon', 'slightly faster', 'jinja2', '', '5324691', 'template engines are rarely the cause of performance problems even if chameleon is slightly faster than jinja2 i doubt the effort of learning a new template language etc\n')

springlayout	gridbaglayout	1
('springlayout', 'more robust', 'gridbaglayout', '', '10837003', 'not many layout problems can t be conquered using it and its easy to understand as opposed to springlayout groupedlayout etc and far less code and more robust than gridbaglayout\n')

dotcover	ncover	1
('dotcover', 'less expensive', 'ncover', '', '4006956', 'as of now i think dotcover and resharper combined are less expensive than ncover\n')

py4j	jpype	2
('py4j', 'bigger', 'jpype', '', '18484879', 'in terms of performance py4j has a bigger overhead than both of the previous solutions jython and jpype because it relies on sockets but if performance is critical to your application accessing java objects from python programs might not be the best idea\n')
('py4j', 'bigger overhead', 'jpype', '', '18484879', 'in terms of performance py4j has a bigger overhead than both of the previous solutions jython and jpype because it relies on sockets but if performance is critical to your application accessing java objects from python programs might not be the best idea\n')

qtreewidget	qlistwidget	1
('qtreewidget', 'more involved', 'qlistwidget', '', '23836692', 'posting here an example showing how to implement same approach but now applied to qtreewidget which a bit more involved than qlistwidget\n')

wsimport	wsdl2java	1
('wsimport', 'better', 'wsdl2java', '', '12248473', 'wsimport is better don t use wsdl2java\n')

jfreechart	achartengine	1
('jfreechart', 'more features', 'achartengine', '', '13732689', 'android plot and other free chart solutions mentioned here doesn t support annotations the only one is afreechart which is a port of jfreechart for android i am currently using it and it is awesome and has much more features than achartengine\n')

xts	zoo	2
('xts', 'generally faster', 'zoo', '', '38492601', 'however there are many others ts xts which is generally faster than zoo .\n')
('xts', 'faster', 'zoo', '', '38492601', 'however there are many others ts xts which is generally faster than zoo .\n')

phalcon	cakephp	2
('phalcon', 'more powerful', 'cakephp', '', '32407950', 'phalcon is more powerful verstile but to get started with it i feel you have to be a better php developer than you do to get started with something like cakephp\n')
('phalcon', 'more', 'cakephp', '', '32407950', 'phalcon is more powerful verstile but to get started with it i feel you have to be a better php developer than you do to get started with something like cakephp\n')

lxml	celementtree	2
('lxml', 'faster', 'celementtree', '', '22295513', 'instead doing it with lxml which i found to be the fastest somehow even faster than celementtree\n')
('lxml', 'slower', 'celementtree', '', '3605831', 'as a side-effect of implementing proper parent traversal lxml is a bit slower than celementtree for parsing\n')

tensorflow	cudnn	1
('tensorflow', 'older', 'cudnn', '', '43243162', 'currently tensorflow supports the older cudnn v.5.1 while there is a newer cudnn 6.0 available on nvidia site\n')

pyenv	virtualenv	2
('pyenv', 'more global', 'virtualenv', '', '46344026', 'python versions you install using pyenv go into its directory by default pyenv root is .pyenv so are more global than virtualenv\n')
('pyenv', 'wider scale', 'virtualenv', '', '46344026', 'pyenv operates on a wider scale than virtualenv - it holds a register of python installations and can be used to install new ones and allows you to configure which version of python to run when you use the python command\n')

safari	opera	2
('opera', 'smaller', 'safari', '', '13137862', 'works in google-chrome firefox a bit weirdish blur effect on hover opera ends look smaller safari ends look smaller\n')
('safari', 'slower', 'opera', '', '8993541', 'incidentally the scrolling on the windows version of safari is fine albeit a little slower than ie opera and firefox\n')

combinators	fold	1
('combinators', 'more complex', 'fold', '', '7533837', 'i m also looking for more examples and explanations of complex combinators more complex than fold in common programming languages\n')

quadtree	octree	1
('quadtree', 'better', 'octree', '', '2856593', 'quadtree is better for big open spaces and octree is better for in-door spaces with many levels\n')

many-to-one	many-to-many	2
('many-to-one', 'much more', 'many-to-many', '', '24982430', 'where instead of expected many-to-one is much more complex and partially expressed many-to-many\n')
('many-to-one', 'much more complex', 'many-to-many', '', '24982430', 'where instead of expected many-to-one is much more complex and partially expressed many-to-many\n')

box2d	scene2d	1
('box2d', 'more', 'scene2d', '', '33025970', 'so basically when box2d is more about how objects will behave themselves during application running the scene2d is more about how you write your code before application running\n')

m2crypto	openssl	2
('m2crypto', 'no longer maintained', 'openssl', '', '18808106', 'm2crypto is no longer maintained and doesn t work with openssl 1.0 and newer\n')
('m2crypto', 'no longer', 'openssl', '', '18808106', 'm2crypto is no longer maintained and doesn t work with openssl 1.0 and newer\n')

asp.net-mvc	html.actionlink	1
('asp.net-mvc', 'more', 'html.actionlink', '', '3056869', 'i am using asp.net-mvc 2 and i see more than one html.actionlink method that takes an idictionary as a parameter for the html attributes\n')

qt-designer	wxpython	2
('qt-designer', 'more powerful', 'wxpython', '', '515325', 'as far as i can tell qt-designer is more powerful than any wxpython counterpart like boa constructor and pyglade\n')
('qt-designer', 'more', 'wxpython', '', '515325', 'as far as i can tell qt-designer is more powerful than any wxpython counterpart like boa constructor and pyglade\n')

ejml	jama	1
('ejml', 'faster', 'jama', '', '10110317', 'ejml looks really good it works almost 2x faster than jama on my data.\n')

key	hash-collision	1
('key', 'space vastly larger', 'hash-collision', '', '3114315', 'but if your key space is vastly larger than the number of targets you ll have a sizable number of hash-collision where you ll have to check if the target stored there is really the key you re looking\n')

caffe	mxnet	2
('caffe', 'use larger', 'mxnet', '', '39544441', 'i like caffe but the amount of gpu memory caffe use is larger than mxnet i test in resnet-50 with mxnet-memonger\n')
('caffe', 'larger', 'mxnet', '', '39544441', 'i like caffe but the amount of gpu memory caffe use is larger than mxnet i test in resnet-50 with mxnet-memonger\n')

qwidget	qgraphicsview	2
('qwidget', 'sometimes faster', 'qgraphicsview', '', '33046694', 'i ve read that painting to a qwidget is sometimes faster than qgraphicsview but it would by a lot of extra work for the mouse handling i think\n')
('qwidget', 'faster', 'qgraphicsview', '', '33046694', 'i ve read that painting to a qwidget is sometimes faster than qgraphicsview but it would by a lot of extra work for the mouse handling i think\n')

stringwriter	stringbuilder	1
('stringwriter', 'more versatile', 'stringbuilder', '', '31559640', 'building on the previous good answers stringwriter is actually much more versatile than stringbuilder providing lots of overloads\n')

spreadsheetml	presentationml	2
('spreadsheetml', 'more', 'presentationml', '', '2481595', 'the one thing to keep in mind is that spreadsheetml is more similiar to presentationml than it is to wordprocessingml in file structure inside the package for every sheet there is a seperate file\n')
('spreadsheetml', 'more similiar', 'presentationml', '', '2481595', 'the one thing to keep in mind is that spreadsheetml is more similiar to presentationml than it is to wordprocessingml in file structure inside the package for every sheet there is a seperate file\n')

pyquery	lxml.html	1
('pyquery', 'much faster', 'lxml.html', '', '16679703', 'there is a project pyquery that is much faster as it uses lxml.html library speed comparasion can be found here\n')

findviewbyid	oncreate	1
('findviewbyid', 'earlier', 'oncreate', '', '15314477', 'you can t findviewbyid earlier than oncreate\n')

onclick	onchange	2
('onclick', 'more reliable', 'onchange', '', '6817388', 'here s something that should get you started - this is all based on the assumption that there are only 3 checkboxes on your whole page and that you re interested in all of them - you ll want to make a method like this respond to your checkbox elements onclick events - i ve found that to be more reliable than onchange\n')
('onchange', 'more meaningful', 'onclick', '', '43392549', 'checkbox onchange should be more meaningful than onclick\n')

m3u	mp3	1
('m3u', 'file nothing more', 'mp3', '', '3107988', 'an m3u file is nothing more than a text file listing mp3 and or other format digital audio files to be interpreted by player software as a series of audio files to be played in succession\n')

salt	crypt	1
('salt', 'much easier', 'crypt', '', '37308056', 'although you could tell dancer2 plugin passphrase to use a 4-byte salt it s much easier to just use crypt saltedhash everywhere\n')

wav	ogg	1
('wav', 'way bigger', 'ogg', '', '20539275', 'it is even slower since i could only upload wav which is way bigger in size compared with ogg and opus\n')

charles	fiddler	1
('charles', 'better ui', 'fiddler', '', '17037632', 'charles has a much better ui than fiddler\n')

mousedown	mouseup	2
('mousedown', 'better', 'mouseup', '', '26230436', 'is there any reason mousedown should be inherently faster better than mouseup\n')
('mousedown', 'position more', 'mouseup', '', '15815658', 'something like if mousedown position is more than 10px away from mouseup position\n')

src	attr	2
('src', 'attribute better', 'attr', '', '29883611', 'if you just want change the src attribute is better you use attr\n')
('attr', 'function better', 'src', '', '35958453', 'display attr function is better to get src attribute\n')

eloquera	db4o	2
('eloquera', 'better', 'db4o', '', '5302408', 'i think that eloquera www.eloquera.com is better than db4o and additionally has better licensing\n')
('eloquera', 'www.eloquera.com better', 'db4o', '', '5302408', 'i think that eloquera www.eloquera.com is better than db4o and additionally has better licensing\n')

fputs	getc	1
('fputs', 'faster', 'getc', '', '35480396', 'using fgets and fputs is faster than multiple calls to getc and putc all you need is a buffer a little buffer in this case to store the current line\n')

zlib	libpng	1
('zlib', 'worse', 'libpng', '', '10644164', 'several things i found in the cocos2d forums lead me to believe it s an issue with the zlib implementation on ios but i ve tried using both stb_image and lodepng to avoid zlib and those libraries actually performed even worse than libpng\n')

nsstring	uilabel	1
('nsstring', 'less', 'uilabel', '', '23756258', 'but the problem i am facing if text is doted inside the label it calculates nsstring size less than uilabel size in the below code\n')

jpopupmenu	jmenuitem	1
('jpopupmenu', 'more just', 'jmenuitem', '', '2581314', 'the jpopupmenu has this behavior but i need more than just jmenuitem\n')

twitter4j	scribe	1
('twitter4j', 'easier', 'scribe', '', '15810279', 'i have an app that uses the public part of the twitter api the on who not requires to login but with the update the login is required so i need to implement oauth i ve seen there are libraries like twitter4j who makes this easier but my app has a lot of code and i don t wanna rewrite it not now so i ve think to use scribe or oauth-signpost but i dont realy know how to\n')

cifs	smb	2
('cifs', 'newer', 'smb', '', '28497298', 'now if you re intending to use a remote filesystem with ofs which is the primary use-case you have to first install the relevant remote filesystem packages on the os you re using then use for example if we ve got cifs which is the newer name for smb samba\n')
('cifs', 'newer name', 'smb', '', '28497298', 'now if you re intending to use a remote filesystem with ofs which is the primary use-case you have to first install the relevant remote filesystem packages on the os you re using then use for example if we ve got cifs which is the newer name for smb samba\n')

teamcity	cruisecontrol	1
('teamcity', 'far easier', 'cruisecontrol', '', '226593', 'for a one man shop teamcity is far easier to setup and configure than cruisecontrol\n')

vaadin	smartgwt	2
('vaadin', 'more', 'smartgwt', '', '7583971', 'thus i think vaadin is more suitable for intranet and takes less time to develop your app while smartgwt is better for more complex gui or unstable connections where additional roundtrips matter\n')
('vaadin', 'more suitable', 'smartgwt', '', '7583971', 'thus i think vaadin is more suitable for intranet and takes less time to develop your app while smartgwt is better for more complex gui or unstable connections where additional roundtrips matter\n')

purrr	dplyr	2
('purrr', 'more compact', 'dplyr', '', '46294040', 'with library purrr you can have a prettier more compact form see soto s answer for an even more compact one with dplyr\n')
('purrr', 'better regular', 'dplyr', '', '39176792', 'note that while you could use purrr for the job it s not particularly better suited than regular dplyr\n')

mousedown	mouseenter	1
('mousedown', 'slower', 'mouseenter', '', '34848460', 'this would explain why in your case mousedown or click are slower than mouseenter which in a touch device happens as soon as you touch the element being monitored\n')

datagram	recvfrom	1
('datagram', 'larger', 'recvfrom', '', '27689332', 'the datagram is larger than your buffer so it gets trucated you get an error return from recvfrom and getlasterror returns 10040 wsaemsgsize\n')

qbs	qmake	1
('qbs', 'more powerful', 'qmake', '', '41993264', 'please keep in mind that qmake and qbs are two very different build systems with fundamentally different designs and capabilities and qbs verbosity is in part due to its fundamental architectural differences which make it far more powerful than qmake will ever be capable of\n')

cvsnt	svn	1
('cvsnt', 'simply much better', 'svn', '', '559225', 'just a wild guess here but if you re using cvsnt on the server this observation might be based on the fact that cvsnt simply is much better at merging than svn because it has the notion of mergepoints\n')

filechannel	fileoutputstream	1
('filechannel', 'faster', 'fileoutputstream', '', '3162604', 'i don t see any reason why filechannel could be any faster than fileoutputstream in this case\n')

slurm	torque	1
('slurm', 'better', 'torque', '', '8485138', 'i performed survey on torque slurm loadleveler slurm is better than torque in handling large nodes but in a single cluster\n')

qthread	qobject	1
('qthread', 'more', 'qobject', '', '34159328', 'finally consider that you can have more than one qthread as well as more than one qobject running on a qthread\n')

if-statement	for-loop	1
('if-statement', 'worse', 'for-loop', '', '12656655', 'this is little strange to me why if-statement is in this aspect treated worse than for-loop\n')

strdup	free	1
('strdup', 'worse', 'free', '', '12993581', 'in c memory most other things are managed by the programmer so strdup is no worse than forgetting to free malloc ed memory failing to null terminate a string using incorrect format string in scanf and invoking undefined behaviour accessing dangling pointer etc\n')

textscan	fread	1
('textscan', 'more powerful', 'fread', '', '1457281', 'then for reading i find textscan to be more powerful than fread fscanf the differences between them all are summarized here\n')

uilabel	uibutton	2
('uilabel', 'larger', 'uibutton', '', '26728652', 'if the uilabel is larger it will then wrap around the uibutton to the next line\n')
('uilabel', 'more', 'uibutton', '', '27420107', 'secondviewcontroller which is a subclass of firstviewcontroller also has a uilabel but has one more uibutton\n')

kif	xctest	1
('kif', 'less complex', 'xctest', '', '46401096', 'kif makes ui testing really easy and useful with lots of great apis that are less complex than xctest\n')

onfocus	onclick	1
('onfocus', 'more appropriate', 'onclick', '', '23768046', 'also the onfocus event would be more appropriate than onclick because it handles other scenarios such as pressing the tab key to change the active input\n')

ostringstream	std	1
('ostringstream', 'slower', 'std', '', '4340396', 'on ideone the ostringstream is about 3 times slower than std copy + back_inserter + std vector and about 15 times slower than memcpy into a raw buffer\n')

binary	octal	1
('binary', 'more useful', 'octal', '', '12205716', 'you ll need to convert binary to another base here i use decimal when writing this code because c doesn t have binary constants which would be ten times more useful than octal constants\n')

setter	mutators	1
('setter', 'better accessor', 'mutators', '', '27413746', 'these methods which give us access to private members are known as getter setter or better knows as accessor mutators\n')

modulo	bitwise-and	1
('modulo', 'slower', 'bitwise-and', '', '21889838', 'i read in couple of blogs that in java modulo reminder operator is slower than bitwise-and\n')

fileinputstream	fileoutputstream	1
('fileinputstream', 'smaller files', 'fileoutputstream', '', '17099870', 'at first i tried reading the original pdf with a fileinputstream and finding the signature hex strings to split it into smaller files with a fileoutputstream as i have done with jpgs\n')

fasttext	word2vec	2
('fasttext', 'better', 'word2vec', '', '45565389', 'fasttext is not better than word2vec as for as semantic similarity is concerned\n')
('fasttext', 'not better', 'word2vec', '', '45565389', 'fasttext is not better than word2vec as for as semantic similarity is concerned\n')

es2015	tree-shaking	2
('es2015', 'module more', 'tree-shaking', '', '38842577', 'es2015 module is more efficient than the other formats and can facilitate the creation of smaller bundle size through tree-shaking technique importing just the bits you need instead of importing the whole thing\n')
('es2015', 'module more efficient', 'tree-shaking', '', '38842577', 'es2015 module is more efficient than the other formats and can facilitate the creation of smaller bundle size through tree-shaking technique importing just the bits you need instead of importing the whole thing\n')

uu-parsinglib	parsec	2
('uu-parsinglib', 'more familiar', 'parsec', '', '26206529', 'looking briefly at the list-like combinators for uu-parsinglib i m more familiar with parsec i think you can solve this by folding over the result of the psome combinator\n')
('uu-parsinglib', 'more declarative', 'parsec', '', '27967512', 'it seems that the idea of uu-parsinglib it to be more declarative than parsec so you just have pure\n')

uitapgesturerecognizer	uigesturerecognizer	1
('uitapgesturerecognizer', 'more', 'uigesturerecognizer', '', '10949107', 'i added the check for uitapgesturerecognizer in case your class handles more than 1 uigesturerecognizer s and you only want to remove that\n')

hikaricp	c3p0	1
('hikaricp', 'better', 'c3p0', '', '36564484', 'i would also recommend you to check hikaricp as its way much better than c3p0\n')

do.call	mapply	1
('do.call', 'more efficient', 'mapply', '', '33077700', 'if for some strange reason you can do the obvious do.call would be more efficient than mapply\n')

lift	wicket	1
('lift', 'less verbose', 'wicket', '', '3241030', 'lift s ajax support is far less verbose than wicket s\n')

ioexception	filewriter	2
('ioexception', 'more useful', 'filewriter', '', '22332678', 'for example public static void copy reader r writer w throws ioexception is more useful reusable than public static void copy filereader r filewriter w throws ioexception\n')
('ioexception', 'more', 'filewriter', '', '22332678', 'for example public static void copy reader r writer w throws ioexception is more useful reusable than public static void copy filereader r filewriter w throws ioexception\n')

svn	collabnet	2
('svn', 'protocol much faster', 'collabnet', '', '2352784', 'however svn protocol is much faster so i suggest using collabnet svn for performance reasons\n')
('svn', 'protocol much faster so', 'collabnet', '', '2352784', 'however svn protocol is much faster so i suggest using collabnet svn for performance reasons\n')

saaj	jax-ws	1
('saaj', 'lower level', 'jax-ws', '', '2205637', 'one could use saaj soap with attachments api for java which runs at a lower level than jax-ws\n')

stringtokenizer	stringbuilder	1
('stringtokenizer', 'faster', 'stringbuilder', '', '41343728', 'stringtokenizer is faster than stringbuilder\n')

aurora	marathon	2
('aurora', 'better capabilities', 'marathon', '', '29511619', 'even though aurora has better capabilities i prefer marathon due to auroras complexity overhead and lack of ui for control api\n')
('aurora', 'better', 'marathon', '', '29511619', 'even though aurora has better capabilities i prefer marathon due to auroras complexity overhead and lack of ui for control api\n')

background-size	background-image	1
('background-size', 'larger', 'background-image', '', '38863728', 'however for some reason ulkit is making a background-size larger than my background-image\n')

xom	xstream	1
('xom', 'better', 'xstream', '', '4492941', 'but if convenience is more important than efficiency yes you probably should consider a tree model not dom necessarily xom is better for example or data binding jaxb or xstream\n')

uialertview	uiwindow	2
('uialertview', 'much more', 'uiwindow', '', '20342799', 'the internal view hierarchy of uialertview is much more complicated than it appears and starting from ios 7 it is not even added to any uiwindow so it s no big surprise that it doesn t participate to the responder chain as you expect\n')
('uialertview', 'much more complicated', 'uiwindow', '', '20342799', 'the internal view hierarchy of uialertview is much more complicated than it appears and starting from ios 7 it is not even added to any uiwindow so it s no big surprise that it doesn t participate to the responder chain as you expect\n')

gridview	objectdatasource	1
('gridview', 'nicer', 'objectdatasource', '', '9131691', 'from what i ve read the gridview control plays a lot nicer with the objectdatasource\n')

stripes	struts	2
('stripes', 'better', 'struts', '', '2051851', 'stripes the actionbean approach doesn t look much better than struts\n')
('stripes', 'more lightweight', 'struts', '', '2085070', 'i ve found stripes to be really effective and surprisingly lightweight....it aims to be more lightweight than struts\n')

addition	subtract	1
('addition', 'greater', 'subtract', '', '11563070', 'if you continue to use your method of performing this task then you need to manually check if the addition of the two lower order decimal digits has caused a carry by checking if the result of the addition is greater than 10 and if it is subtract 10 from the number and then add 1 to the higher order digit calculation\n')

canopy	ptvs	1
('canopy', 'more complete integration', 'ptvs', '', '19575436', 'the upcoming canopy 1.2 release in a couple of weeks will include more complete integration with ptvs and visual studio that will automate this and remove the need for canopy to be the default python environment\n')

glkbaseeffect	opengl-es	2
('glkbaseeffect', 'shader', 'opengl-es', '', '9821580', 'among other things the apple template code will include creation of a glkbaseeffect which provides some shader functionality that seems to be required in order to be able to draw with opengl-es 2.0\n')
('glkbaseeffect', 'shader functionality', 'opengl-es', '', '9821580', 'among other things the apple template code will include creation of a glkbaseeffect which provides some shader functionality that seems to be required in order to be able to draw with opengl-es 2.0\n')

autoresetevent	manualresetevent	1
('autoresetevent', 'longer', 'manualresetevent', '', '32123986', 'edit this is why autoresetevent does not have a slim version - basically it s because the wait times of autoresetevent are typically longer than manualresetevent so it isn t appropriate to use busy spinning\n')

rank	median	1
('rank', 'greater', 'median', '', '23921595', 'we use ave to see which rank are greater than the median for each group and we select where those are true\n')

rdiscount	bluecloth	1
('rdiscount', 'more reliable', 'bluecloth', '', '277564', 'rdiscount seems to be much faster and more reliable than bluecloth\n')

qnetworkaccessmanager	qtcpsocket	2
('qnetworkaccessmanager', 'higher', 'qtcpsocket', '', '5990009', 'qnetworkaccessmanager is higher level than qhttp and qtcpsocket so they have abstracted away the sockets connection state\n')
('qnetworkaccessmanager', 'higher level', 'qtcpsocket', '', '5990009', 'qnetworkaccessmanager is higher level than qhttp and qtcpsocket so they have abstracted away the sockets connection state\n')

tvos	ios	2
('tvos', 'more similar', 'ios', '', '34006933', 'tvos is more similar to ios than it is to watchos although they all have some similarities\n')
('tvos', 'more', 'ios', '', '34006933', 'tvos is more similar to ios than it is to watchos although they all have some similarities\n')

qweb	odoo	2
('qweb', 'nicer', 'odoo', '', '31691085', 'qweb is nicer templating tool and it was created by odoo and its designed to work cross language originally which can be forked from git - qweb\n')
('qweb', 'nicer templating', 'odoo', '', '31691085', 'qweb is nicer templating tool and it was created by odoo and its designed to work cross language originally which can be forked from git - qweb\n')

gridview	datalist	2
('gridview', 'much more bells', 'datalist', '', '756327', 'gridview has much more bells and whistles than datalist\n')
('gridview', 'much more', 'datalist', '', '756327', 'gridview has much more bells and whistles than datalist\n')

xilinx	altera	1
('xilinx', 'better', 'altera', '', '3697715', 'xilinx tools suck but their raw silicon is better than altera\n')

rethinkdb	couchdb	2
('rethinkdb', 'more similar', 'couchdb', '', '44327492', 'rethinkdb is more similar to pouchdb couchdb\n')
('rethinkdb', 'more', 'couchdb', '', '44327492', 'rethinkdb is more similar to pouchdb couchdb\n')

charat	indexof	1
('charat', 'faster', 'indexof', '', '18848063', 'i ve found that using a simple for-loop iterating over all elements in the string and comparing using charat performs faster than indexof or regex\n')

gulp-sass	node-sass	1
('gulp-sass', 'more just', 'node-sass', '', '36294249', 'the cons of gulp-sass is that you get more than just node-sass - you also get gulp-utils and other things - which is a problem if you are not using gulp in the first place\n')

ucma	ucwa	1
('ucma', 'somewhat easier', 'ucwa', '', '33989895', 'old thread but in my experience writing server-side code with ucma is somewhat easier than trying to use ucwa - and all that ucwa really is is a ucma application sitting on your lync s4b server with a rest wrapper\n')

nemerle	boo	1
('nemerle', 'more powerful', 'boo', '', '4575558', 'i read somewhere that nemerle s macro service is more powerful than boo s\n')

opengl-es	glsurfaceview	1
('opengl-es', 'more flexible', 'glsurfaceview', '', '17374578', 'textureview will display opengl-es rendering but is much more flexible than glsurfaceview and will follow the normal layout hierarchy in android which allows views to be moved on the display\n')

nstableview	nssplitview	1
('nstableview', 'shorter', 'nssplitview', '', '241621', 'a pattern i also use is to make the nstableview slightly shorter than the nssplitview and have buttons at the bottom add delete etc\n')

pdfsharp	itext	1
('pdfsharp', 'library more', 'itext', '', '8123876', 'as noted in the comment by quandary the pdfsharp library offers a more relaxed license mit compared to the commercial or agpl license offered by itext\n')

mapply	melt	1
('mapply', 'more succinctly', 'melt', '', '31927100', 'could i use mapply to do this more succinctly than running melt and dcast separately for each of employed girls guys\n')

autocompletetextview	spinner	2
('autocompletetextview', 'more', 'spinner', '', '15828256', 'also from your requirements autocompletetextview is more suitable than spinner\n')
('autocompletetextview', 'more suitable', 'spinner', '', '15828256', 'also from your requirements autocompletetextview is more suitable than spinner\n')

xuggle	vlcj	1
('xuggle', 'lower level', 'vlcj', '', '6963013', 'apart from that you might want to give xuggle a try - it works on a much lower level than vlcj but this should give you much more control over what s happening and unlike jmf it s a good actively maintained project.\n')

avro	thrift	1
('avro', 'far more', 'thrift', '', '10465052', 'but avro offers far more than just doing away with the need for your own writables although that is in my view a considerable plus it offers fairly efficient serialization the choice between serializing against generated entity classes like thrift requires or using a so-called genericrecord structure instead and not having to have tagged data\n')

strlen	strncpy	2
('strlen', 'source greater', 'strncpy', '', '21974397', 'however if strlen source is greater than n then strncpy will simply copy the first n bytes and will not terminate the string dest with a null byte because there is no space for it\n')
('strlen', 'greater', 'strncpy', '', '10388582', 'this is the case here because strlen hello is greater than 3 your last strncpy argument\n')

libgdx	cocos2d-x	2
('libgdx', 'more', 'cocos2d-x', '', '27213729', 'performance i did some test with simple game similar to swing copters and found that game created with libgdx consumes 15-20 more ram on ios device that the same game created with cocos2d-x but then i used apportable to run cocos2d-x game on my android device and found it almost not playable\n')
('libgdx', 'more ram', 'cocos2d-x', '', '27213729', 'performance i did some test with simple game similar to swing copters and found that game created with libgdx consumes 15-20 more ram on ios device that the same game created with cocos2d-x but then i used apportable to run cocos2d-x game on my android device and found it almost not playable\n')

ublas	eigen	1
('ublas', 'faster', 'eigen', '', '7380818', 'from my own experience mtl4 is much faster than ublas and it is also faster than eigen\n')

treeview	tabcontrol	1
('treeview', 'height smaller', 'tabcontrol', '', '18518693', 'i can t find any way to make the treeview s height smaller or the tabcontrol s larger\n')

layoutparams	viewgroup	1
('layoutparams', 'more', 'viewgroup', '', '23710232', 'unless you know exactly what you are doing do not use the same layoutparams for more than one viewgroup\n')

pyomo	scipy	1
('pyomo', 'less', 'scipy', '', '46609929', 'pyomo runs in less than one minute and scipy takes 4 hours\n')

kmz	gpx	1
('kmz', 'quicker', 'gpx', '', '12825810', 'kmz loads much quicker than gpx and can be integrated with the google maps api as a kml layer\n')

icmp	udp	2
('icmp', 'slower', 'udp', '', '2290931', 'an icmp packet has a header that is 20 bytes and is probably going to be slightly slower than udp\n')
('icmp', 'less limitations', 'udp', '', '30832868', 'in fact icmp especially the ttl excceeding message has even less limitations than udp on nats for the error message can be sent from every corner of the internet and routers with nat cannot be aware that these messages are not the true ones\n')

slick2d	lwjgl	2
('lwjgl', 'newer', 'slick2d', '', '44324111', 'slick2d is made to work with lwjgl 2 lwjgl 3 however is way newer than slick2d and therefore slick2d does not support using lwjgl 3\n')
('slick2d', 'way easier', 'lwjgl', '', '16659010', 'you could use slick2d it is way easier to use and works with lwjgl\n')

reductio	crossfilter	1
('reductio', 'easier raw', 'crossfilter', '', '40770472', 'i think reductio will make this easier but with raw crossfilter this would look something like\n')

hotmail	gmail	1
('hotmail', 'closer', 'gmail', '', '43749225', 'in outlook.com hotmail it looks closer to the results shown with gmail\n')

jung	jgraph	1
('jung', 'easier', 'jgraph', '', '11692277', 'i ve created an application with this library instead of jgraph because i thought that jung is easier to learn than jgraph for newbies even if it provide less features\n')

scheme	erlang	1
('scheme', 'older', 'erlang', '', '29173287', 'just for the record the tipc addressing scheme is several years older than distributed erlang\n')

odp.net	system.data.oracleclient	1
('odp.net', 'better', 'system.data.oracleclient', '', '7935618', 'agreed that using odp.net is better than deprecated system.data.oracleclient\n')

cron	jobs	2
('cron', 'more', 'jobs', '', '11041968', 'check out the quartz scheduler it does what cron does and more is easily integrated in a web app and allows you to call jobs written in java without any complicated plumbing\n')
('jobs', 'more sophisticated', 'cron', '', '19941712', 'i would suggest scheduling your jobs using something more sophisticated than cron\n')

ng-controller	ng-include	1
('ng-controller', 'lower', 'ng-include', '', '24390251', 'the priority level of ng-controller is lower than that of ng-include\n')

qtreeview	qcheckbox	1
('qtreeview', 'more column', 'qcheckbox', '', '20013717', 'i need show files from qfilesystemmodel in qtreeview and customize that tree to show one more column with qcheckbox so user can pick 0..n files from that qtreeview\n')

ravendb	couchdb	1
('ravendb', 'more', 'couchdb', '', '4163673', 'ravendb more than couchdb but that s neither here nor there\n')

pyqt	kivy	1
('pyqt', 'better choice', 'kivy', '', '39360654', 'if you don t plan to move to mobiles later tkinter or pyqt may be a better choice than kivy\n')

gedit	textmate	1
('gedit', 'more', 'textmate', '', '1365849', 'i tried a few ides on ubuntu and it just didn t seem right - gedit is lightweight and i actually enjoy using it more than textmate on os x\n')

arp	icmp	1
('arp', 'slower', 'icmp', '', '12085301', 'in addition seeing arp being slower than icmp doesn t necessarily mean icmp isn t deprioritized---it might mean bandwidth is insufficient to hit the limiting threshold\n')

floor	sqrt	1
('floor', 'larger', 'sqrt', '', '19306324', 'the other suggestion keep repeating until x stops changing does not work either because for non-perfect squares x will alternate between the floor and the ceiling of the root √¢ because of integer mathematics the term n x will alternate when x is slightly smaller or slightly larger than sqrt n\n')

timsort	mergesort	1
('timsort', 'more complex algorithm', 'mergesort', '', '10179057', 'timsort is used by python and java for their sort methods and is rather supernaturally fast but it s a more complex algorithm than mergesort which matters if you re working in something like c - so if you just need something that works pretty well and is simple go with mergesort\n')

gridview	checkboxlist	2
('gridview', 'control better', 'checkboxlist', '', '19729088', 'since you re presenting multiple columns a gridview control is a better alternative to checkboxlist\n')
('gridview', 'control better alternative', 'checkboxlist', '', '19729088', 'since you re presenting multiple columns a gridview control is a better alternative to checkboxlist\n')

capybara	rspec	2
('capybara', 'more sense', 'rspec', '', '9906488', 'i use rspec and capybara together but the language syntax of capybara makes more sense is semantic as rspec when testing for request expectations\n')
('capybara', 'more', 'rspec', '', '9906488', 'i use rspec and capybara together but the language syntax of capybara makes more sense is semantic as rspec when testing for request expectations\n')

primes	palindrome	2
('primes', 'more iteration', 'palindrome', '', '26344108', 'calculating primes takes more iteration than checking for a palindrome\n')
('primes', 'more', 'palindrome', '', '26344108', 'calculating primes takes more iteration than checking for a palindrome\n')

irc	xmpp	2
('irc', 'protocol more', 'xmpp', '', '9795702', 'regardless the irc protocol is more simplistic in nature can handle orders of magnitude more client connections than xmpp for the same memory utilization uses less bandwidth on the wire doesn t require authentication although you can add this feature etc\n')
('irc', 'protocol more simplistic', 'xmpp', '', '9795702', 'regardless the irc protocol is more simplistic in nature can handle orders of magnitude more client connections than xmpp for the same memory utilization uses less bandwidth on the wire doesn t require authentication although you can add this feature etc\n')

silverstripe	laravel	1
('silverstripe', 'better', 'laravel', '', '36183018', 'the silverstripe cms is a great php framework better than laravel the most popular at the moment but its documenation lacking\n')

btrace	profiler	2
('btrace', 'overhead far less noticeable', 'profiler', '', '13726773', 'in my experience btrace overhead is far less noticeable than any profiler depending on activity of course - if you want to trace execution of all methods this will be expensive no matter what\n')
('btrace', 'overhead far less', 'profiler', '', '13726773', 'in my experience btrace overhead is far less noticeable than any profiler depending on activity of course - if you want to trace execution of all methods this will be expensive no matter what\n')

goose	boilerpipe	1
('goose', 'faster', 'boilerpipe', '', '14164350', '2 readability library content is passable slower on average than goose but faster than boilerpipe\n')

coalesce	sum	1
('coalesce', 'less', 'sum', '', '960774', 'i m pretty sure the linker will coalesce equivalent strings so the total will be less than the sum of the parts for these sections but i guess typically not by much\n')

passenger	puma	1
('passenger', 'more features', 'puma', '', '15435871', 'phusion passenger 4 enterprise bring many advantages over has more features than puma and rainbows for example it has out of band garbage collection can dynamically adjust the number of processes based on traffic completely automates rolling restarts so you don t need scripting etc\n')

ivr	asterisk	2
('ivr', 'better', 'asterisk', '', '5966362', 'microsoft has the microsoft speech api sapi however if you want simple ivr it is better not to reinvent the wheel and customize an asterisk implementation which i guess falls under the great ivr library for c++ category it s c not c++ but if you know c++ you should be able to understand the c . using asterisknow you may not even need to write any custom code it may do what you want already\n')
('ivr', 'better not', 'asterisk', '', '5966362', 'microsoft has the microsoft speech api sapi however if you want simple ivr it is better not to reinvent the wheel and customize an asterisk implementation which i guess falls under the great ivr library for c++ category it s c not c++ but if you know c++ you should be able to understand the c . using asterisknow you may not even need to write any custom code it may do what you want already\n')

vlfeat	opencv	1
('vlfeat', 'smaller', 'opencv', '', '15091737', 'have a look at sift and surf and at vlfeat which has a good sift implementation and also implements mser and hog and is much smaller than opencv\n')

odoo	openerp	1
('odoo', 'more', 'openerp', '', '31589303', 'its just a name they choosed it because odoo provides more than openerp for example web site modules\n')

wmv	flv	1
('wmv', 'easier', 'flv', '', '2562', 'i found the production of wmv much better and easier than flv because all windows flv encoders i tried are not really good and stable whereas pretty much every tool can natively output wmv\n')

vsts	tfs	1
('vsts', 'more', 'tfs', '', '1961714', 'unless something has changed a lot with 2010 the basic vsts install is more or less the same as the pro version of vs - and then you install the team explorer on top to gain the tfs specific client-side extensions\n')

monodevelop	sharpdevelop	2
('monodevelop', 'better', 'sharpdevelop', '', '1640244', 'i like the monodevelop ide even better than sharpdevelop but i m not sold on installing and using mono s compiler just yet nor do i know if it can even handle the latest vb.net c# language features\n')
('monodevelop', 'more', 'sharpdevelop', '', '17615657', 'monodevelop is more of a replacement of an ide for mac and linux in windows the recommended thing is to use visual studio or sharpdevelop\n')

ratingbar	textview	2
('ratingbar', 'smaller', 'textview', '', '19805199', 'the thing is like ratingbar is smaller than the textview i don t get a correct aligment\n')
('ratingbar', 'smaller', 'textview', '', '19805576', 'unfortunately i dont understand what you mean by stating ratingbar is smaller than textview\n')

entity-relationship	erd	1
('entity-relationship', 'modeling more', 'erd', '', '12446158', 'first entity-relationship modeling is more than just an erd\n')

cos	sqrt	1
('cos', 'slower', 'sqrt', '', '8248588', 'in term of speed square rooting is easy a few arithmetical operations for some newton-like method but it is not clear what asin does probably quite costly cos is likely to be one order of magnitude slower than sqrt and thus one square root is likely to be quickier than those two transcendental function calls\n')

dataframe	multi-index	2
('dataframe', 'more columns', 'multi-index', '', '37569881', 'the real dataframe has more columns in the multi-index\n')
('dataframe', 'more', 'multi-index', '', '37569881', 'the real dataframe has more columns in the multi-index\n')

operands	scalar	1
('operands', 'higher alignment', 'scalar', '', '42140790', 'vector instructions may use array operands that require a higher alignment than any scalar\n')

rubymine	radrails	2
('rubymine', 'more features', 'radrails', '', '6521764', 'webstorm + pycharm + rubymine + phpstorm though to be fair rubymine has more features than radrails atm\n')
('rubymine', 'more', 'radrails', '', '6521764', 'webstorm + pycharm + rubymine + phpstorm though to be fair rubymine has more features than radrails atm\n')

qabstracttablemodel	qabstractitemmodel	1
('qabstracttablemodel', 'more specialized interface', 'qabstractitemmodel', '', '20298589', 'well obviously you created an implementation qabstracttablemodel which has a little bit more specialized interface than qabstractitemmodel\n')

substr	explode	2
('substr', 'slightly faster', 'explode', '', '38780119', 'just wanted to add that using strrpos + substr is slightly faster than explode + end\n')
('substr', 'faster', 'explode', '', '38780119', 'just wanted to add that using strrpos + substr is slightly faster than explode + end\n')

qstyleditemdelegate	qitemdelegate	1
('qstyleditemdelegate', 'newer', 'qitemdelegate', '', '28871121', 'qstyleditemdelegate is newer and the qt documentation about qitemdelegate states that\n')

cmmotionmanager	uiaccelerometer	2
('cmmotionmanager', 'slower', 'uiaccelerometer', '', '17659352', 'basically it seems like cmmotionmanager is much larger and slower than uiaccelerometer is\n')
('cmmotionmanager', 'much larger', 'uiaccelerometer', '', '17659352', 'basically it seems like cmmotionmanager is much larger and slower than uiaccelerometer is\n')

flex	osmf	2
('flex', 'older less', 'osmf', '', '4487496', 'flex uses an older less capable version of the osmf platform for its videoplayer\n')
('flex', 'older', 'osmf', '', '4487496', 'flex uses an older less capable version of the osmf platform for its videoplayer\n')

sin	sqrt	1
('sin', 'faster', 'sqrt', '', '39808091', 'it s like asking whether sin is faster than sqrt\n')

mixture	poisson	1
('mixture', 'more', 'poisson', '', '47198637', 'so intutively it appears that to explain the variance we should go for mixture of more than two poisson distribution\n')

add-in	vsto	2
('add-in', 'more', 'vsto', '', '40342201', 'however since i know that the add-in is more or less working as is for all users some of whom use excel 2010 and some of whom use excel 2013 and some of whom may explicitly have vsto installed and some of whom may not i d like to be sure that i m not setting myself up for a bruising later on when some features of the add-in stop working for no apparent reason due to changing the setting\n')
('add-in', 'more familar', 'vsto', '', '28491633', 'the comaddin base class makes it a bit easier to create an office add-in and reduce infrastructure code to be more familar with vsto - thats the whole idea\n')

hasownproperty	indexof	2
('hasownproperty', 'much faster', 'indexof', '', '41878143', 'however i ve seen that object s hasownproperty is much faster than indexof\n')
('hasownproperty', 'faster', 'indexof', '', '41878143', 'however i ve seen that object s hasownproperty is much faster than indexof\n')

stargazer	latex	1
('stargazer', 'more general', 'latex', '', '22337804', 'stargazer is at least in my experience more general than latex from hmisc\n')

seaborn	matplotlib	2
('seaborn', 'higher level', 'matplotlib', '', '42659940', 'seaborn is a higher level library above matplotlib\n')
('seaborn', 'higher', 'matplotlib', '', '42659940', 'seaborn is a higher level library above matplotlib\n')

quanteda	tidytext	1
('quanteda', 'package faster', 'tidytext', '', '46318346', 'the quanteda package is faster and more straightforward than tm and works nicely with tidytext as well\n')

xlib	sdl	1
('xlib', 'faster', 'sdl', '', '23998096', 'in my experience xlib via mit-shm extension was significantly faster than sdl surfaces not sure i used sdl in the most optimal way though\n')

testdriven.net	xunit.net	1
('testdriven.net', 'easier', 'xunit.net', '', '4103837', 'one option is to install testdriven.net which makes it easier to run unit tests on any of the major unit testing .net frameworks nunit xunit.net vs tools etc\n')

add-on	xpcom	2
('add-on', 'way better', 'xpcom', '', '12964786', 'you could try using c-types with ff which is a regular dll being called by javascript in your add-on this is way better approach that using xpcom because if the interfaces you use in there can change in each ff version indeed you will have to do multiple dlls each for your add-on supported ff versions\n')
('add-on', 'way better approach', 'xpcom', '', '12964786', 'you could try using c-types with ff which is a regular dll being called by javascript in your add-on this is way better approach that using xpcom because if the interfaces you use in there can change in each ff version indeed you will have to do multiple dlls each for your add-on supported ff versions\n')

qregularexpression	qregexp	1
('qregularexpression', 'more familiar', 'qregexp', '', '29902956', 'qregularexpression and i m much more familiar with qregexp\n')

clion	qt-creator	1
('clion', 'nicer', 'qt-creator', '', '43932756', 'another alternative that people might mention is clion which is from jetbrains but its closed-source not well supported and whilst it might look nicer than qt-creator it has more or less the same features but is much more resource-heavy and laggy so i d pass on that\n')

mouseenter	mouseover	1
('mouseenter', 'better choice', 'mouseover', '', '2157980', 'the mouseenter event is usually a better choice than mouseover\n')

vim	geany	1
('vim', 'slower', 'geany', '', '37644682', 'it looks like vim is slower than geany\n')

iequalitycomparer	idictionary	1
('iequalitycomparer', 'better', 'idictionary', '', '25990934', 'using iequalitycomparer which is better because works without altering initial idictionary signature\n')

irq	cpu	2
('irq', 'more', 'cpu', '', '28687599', 'in some cases irq constitutes more than 8 of cpu for a process\n')
('irq', 'more', 'cpu', '', '18322925', 'cannot sleep run atomically in soft irq context and are guaranteed to never run on more than one cpu of a given processors for a given tasklet\n')

afnetworking	sdwebimage	1
('afnetworking', 'better choice', 'sdwebimage', '', '37085338', 'so i think afnetworking would a better choice than sdwebimage\n')

scala-ide	sbt	1
('scala-ide', 'tighter integration', 'sbt', '', '11480225', 'it d be really nice if scala-ide supported tighter integration with sbt\n')

rank	min	2
('rank', 'less', 'min', '', '13146750', 'thus if the rank of an nxm matrix is less than min n m then the matrix is singular\n')
('rank', 'greater value', 'min', '', '21209545', 'a simple way to get the indices of a rank 1 array arr for elements greater than value min is\n')

punctuation	words	2
('punctuation', 'longer', 'words', '', '36800519', 'now i have it so that the line is split into an array of strings using the .split method however it splits on white space and punctuation meaning that cities with names longer than one words won t work\n')
('words', 'more whitespace', 'punctuation', '', '45464100', 'note that in case your words are separated with more than whitespace punctuation for example use w+\n')

phpquery	querypath	1
('phpquery', 'often faster', 'querypath', '', '3659729', 'it is said that phpquery is often faster than querypath because of fewer overall features\n')

uinavigationbar	uinavigationcontroller	1
('uinavigationbar', 'more', 'uinavigationcontroller', '', '6305055', 'the ardalahmet solution is not the right one if you need different backgrounds for each uinavigationbar when you have more than one uinavigationcontroller such as in a uitabbar because it using uinavigationbar categories\n')

jvectormap	jqvmap	2
('jvectormap', 'more', 'jqvmap', '', '11182812', 'jvectormap comes with more pre-generated maps than jqvmap\n')
('jvectormap', 'more pre-generated', 'jqvmap', '', '11182812', 'jvectormap comes with more pre-generated maps than jqvmap\n')

canvasjs	d3.js	1
('canvasjs', 'more', 'd3.js', '', '41302433', 'canvasjs is more of creating charts using canvas element of html5 and d3.js uses svg\n')

facade	command-pattern	1
('facade', 'easier', 'command-pattern', '', '32532729', 'i guess the point that the article is trying to make here is that a facade is easier to implement when you already have this command-pattern in place\n')

model-glue	coldspring	1
('model-glue', 'easier', 'coldspring', '', '7291086', 'fortunately model-glue has tight integration with coldspring a popular bean container for cfml and model-glue 3 makes it easier than ever to use coldspring beans in your controllers\n')

eclemma	ecobertura	1
('eclemma', 'plugin nicer', 'ecobertura', '', '5265916', 'the eclemma plugin is nicer and more mature then ecobertura\n')

substr	strsplit	2
('substr', 'more', 'strsplit', '', '17960609', 'joe duffy s blog implies using substr is more efficient than strsplit\n')
('substr', 'more efficient', 'strsplit', '', '17960609', 'joe duffy s blog implies using substr is more efficient than strsplit\n')

packery	masonry	2
('packery', 'better then', 'masonry', '', '29288180', 'for my project packery is better then masonry because packery is filling up all gaps masonry is just looking for the first possible gap and doesn t fill empty gaps\n')
('packery', 'better', 'masonry', '', '29288180', 'for my project packery is better then masonry because packery is filling up all gaps masonry is just looking for the first possible gap and doesn t fill empty gaps\n')

http.sys	httplistener	1
('http.sys', 'more customizable', 'httplistener', '', '1374448', 'and also don t forget - http.sys much more customizable than httplistener\n')

diagonal	minimum	2
('diagonal', 'lesser global', 'minimum', '', '42716989', 'one way would be to fill the diagonal elements with something lesser than global minimum and then use argsort -\n')
('diagonal', 'shorter', 'minimum', '', '36036177', 'even with 32 levels of recusions it will never explode in a rectangular draw area whose diagonal is shorter than 2 32 pixels the limit would be reached only if you are splitting a virtual bezier in a virtually infinite space with floating-point coordinates but you don t intend to draw it directly because you won t have the 1 2 pixel limitation in such space and only if you have set an extreme value for the flatness such that your minimum square sine constant parameter is 1 2 32 or lower\n')

nsscanner	nsnumberformatter	1
('nsscanner', 'easier', 'nsnumberformatter', '', '4092589', 'i was originally using nsscanner because it was easier than nsnumberformatter to use but i ran into the same problem it doesn t parse the entire string just the first number in the string\n')

goto	do-while	1
('goto', 'better', 'do-while', '', '45495264', 'but goto is rarely used in modern coding it is not likely to perform any better than a do-while loop after compiler optimizations are applied and it has limitations on how it can be used\n')

unicode	ucs	1
('unicode', 'more', 'ucs', '', '1674236', 'according to wikipedia the bmp of the ucs has 65536 characters the latest version of unicode contains more than 107000 characters and the ucs has more than one million code points\n')

gedit	komodo	1
('gedit', 'quicker', 'komodo', '', '2066036', 'when i m in a hurry i use gedit purely because it is quicker than komodo edit\n')

user-controls	tabcontrol	1
('user-controls', 'larger', 'tabcontrol', '', '10881361', 'some user-controls s are larger than the tabcontrol and got clipped so i modified its template by wrapping the contentpresenter in a scrollviewer with horizontalscrollbarvisibility and verticalscrollbarvisibility set to auto\n')

unicorn	passenger	1
('unicorn', 'less memory', 'passenger', '', '33593995', 'unicorn does not use less memory than passenger\n')

vert.x	netty	1
('vert.x', 'better benchmarks', 'netty', '', '45214442', 'also vert.x has little bit better benchmarks than netty\n')

pygtk	wxpython	2
('wxpython', 'better', 'pygtk', '', '3165474', 'thanks to opencv i managed to rewrite everything with wxpython which i know better than pygtk\n')
('pygtk', 'lighter', 'wxpython', '', '2502963', 'also pygtk is lighter than wxpython but i ended up bitting the bullet and using wxpython for the same purpose recently it is heavy but it didn t have any affect on the script performance\n')

allegro	sdl	2
('allegro', 'easier', 'sdl', '', '35510183', 'i d strongly recommend to go with allegro 5.1.x it s a little bit more difficult than sfml but very functional and easier than sdl it s got nice support and it s compatible with plenty of os\n')
('allegro', 'better', 'sdl', '', '8957972', 'i was also looking at sdl allegro sfml i didnt see much tutorials help on this but heard its better than sdl\n')

suds	soappy	1
('suds', 'better', 'soappy', '', '5788942', 'finally if soappy just isn t working for you try suds it s better documented than soappy\n')

fakeiteasy	moq	2
('fakeiteasy', 'less powerful', 'moq', '', '8445110', 'btw why do you want to use fakeiteasy it looks to me less powerful than moq\n')
('fakeiteasy', 'nicer syntax', 'moq', '', '11473992', 'fakeiteasy seems to have an overall nicer syntax than moq like the strongly-typed way the former deals with passing parameters to a constructor of a faked class\n')

scite	notepad++	1
('scite', 'more lightweight', 'notepad++', '', '1838114', 'by the way if you like minimalistic approach there is also scite editor which is my personal preference for doing small bits of code it s even more lightweight than notepad++\n')

reactiveui	caliburn	1
('reactiveui', 'easier', 'caliburn', '', '17108323', 'personally i really like reactiveui which is fairly unusual but does make getting things right an awful lot easier than caliburn\n')

guard	autotest	2
('guard', 'better', 'autotest', '', '7222776', 'i recently moved from autotest to guard for a reason it works better than autotest and it has a lot of available guard\n')
('guard', 'more', 'autotest', '', '7222776', 'in other words guard is more a generic framework for every process which needs to do something triggered by a file change autotest is restricted to running tests\n')

istanbul	lcov	2
('istanbul', 'more complete', 'lcov', '', '21890213', 'istanbul has more complete coverage stats not just lines - branches etc and can export to lcov for tools like code climate\n')
('istanbul', 'more', 'lcov', '', '21890213', 'istanbul has more complete coverage stats not just lines - branches etc and can export to lcov for tools like code climate\n')

maven-antrun-plugin	maven-wagon-plugin	1
('maven-antrun-plugin', 'better', 'maven-wagon-plugin', '', '10839694', 'instead of maven-antrun-plugin it is better to use upload goal of maven-wagon-plugin\n')

procedure	ora-06502	2
('procedure', 'more parameters', 'ora-06502', '', '20841260', 'your problem is that your procedure has more parameters then you pass to it on mybatis call so at any point after the missing parameter you should have your ora-06502 pl sql numeric or value error error since the following paramters doesn t have the same type on the order you are passing it\n')
('procedure', 'more', 'ora-06502', '', '20841260', 'your problem is that your procedure has more parameters then you pass to it on mybatis call so at any point after the missing parameter you should have your ora-06502 pl sql numeric or value error error since the following paramters doesn t have the same type on the order you are passing it\n')

encoder	decoder	2
('encoder', 'more complex', 'decoder', '', '46753030', 'in the end you have a scheme whose encoder is more complex but whose decoder couldn t be simpler\n')
('encoder', 'more', 'decoder', '', '46753030', 'in the end you have a scheme whose encoder is more complex but whose decoder couldn t be simpler\n')

greenplum	postgresql	2
('greenplum', 'better', 'postgresql', '', '1792370', 'greenplum and other similar solutions should work a bit better than postgresql depending on your data sets and use cases\n')
('postgresql', 'gather', 'greenplum', '', '12586673', 'according to the postgresql which i gather greenplum is based on documentation for sequence manipulation functions it should return the value most recently returned by nextval in the current session.\n')

uialertview	uialertcontroller	2
('uialertview', 'whitier', 'uialertcontroller', '', '43092664', 'but in your case alertview is displayed above alertcontroller ie why it feels like uialertview is whitier than uialertcontroller\n')
('uialertview', 'better experience', 'uialertcontroller', '', '26431886', 'however take some time to consider how you re currently using uialertview and whether you are able to give ios 8 users a better experience by supporting uialertcontroller\n')

jax-rs	jax-ws	2
('jax-rs', 'much younger', 'jax-ws', '', '29928306', 'jax-rs is much younger than jax-ws jax-ws had a final draft in 2006 jax-rs came out in 2008-9\n')
('jax-rs', 'younger', 'jax-ws', '', '29928306', 'jax-rs is much younger than jax-ws jax-ws had a final draft in 2006 jax-rs came out in 2008-9\n')

xna	spritebatch	1
('xna', 'more', 'spritebatch', '', '941685', 'in xna when is it appropriate to render your game content using more than one spritebatch\n')

getline	getchar	1
('getline', 'probably better', 'getchar', '', '2472862', 'getline is probably better than getchar in most cases\n')

csc	vbc	1
('csc', 'smarter', 'vbc', '', '9209810', 'so yes at least in this respect csc is smarter than vbc\n')

ocaml	racket	1
('ocaml', 'faster', 'racket', '', '4305402', 'ocaml is faster than racket for most of the benchmarks on languages benchmark game\n')

qtreeview	qtableview	1
('qtreeview', 'slower', 'qtableview', '', '17464100', 'qtreeview is known for being slower than a qtableview and consume a lot of memory and you are using a plain table model anyways so try with a qtableview\n')

hammer.js	fastclick.js	2
('hammer.js', 'more', 'fastclick.js', '', '16737168', 'hammer.js is a more full-featured touch library has many swipe commands than fastclick.js most upvoted answer\n')
('hammer.js', 'more full-featured', 'fastclick.js', '', '16737168', 'hammer.js is a more full-featured touch library has many swipe commands than fastclick.js most upvoted answer\n')

nodevalue	innerhtml	1
('nodevalue', 'faster', 'innerhtml', '', '21311670', 'nodevalue is a little more confusing to use but faster than innerhtml\n')

soundcloud	grooveshark	1
('soundcloud', 'better', 'grooveshark', '', '29315632', 'i used soundcloud api and sdk and it is better than the grooveshark api which till now i don t know how to embed songs and use my own player anyways soundcloud is good just try it goodluck\n')

keystore	jks	2
('jks', 'format better', 'keystore', '', '28050018', 'in this default implementation the jks format is better suited for a single keystore that is to handle both trusted entries and key entries in the same container\n')
('keystore', 'differ', 'jks', '', '12621128', 'java has build-in support for work with pkcs#12 keystore work with this containers doesn t much differ than standart jks keystore\n')

adplus	procdump	1
('adplus', 'simpler sysinternals', 'procdump', '', '2731984', 'if you have a customer who is willing to work with you a bit it might shed some light on the situation to get a crash dump with adplus or maybe simpler with sysinternals procdump when the error message is showing\n')

matlab	simulink	1
('matlab', 'faster', 'simulink', '', '29978481', 'for that purpose i want to transform the simulink model into a c version and launch it from a matlab script so that the process would be much faster than opening simulink environment\n')

fileoutputstream	filewriter	1
('fileoutputstream', 'better', 'filewriter', '', '27571929', 'you need to create a fileoutputstream and decorates it with printstream or better filewriter with printwriter\n')

uiview	catransition	1
('uiview', 'more limited', 'catransition', '', '630770', 'the uiview class methods are convenience methods for common animations but are more limited than catransition\n')

lz4	snappy	1
('lz4', 'probably better', 'snappy', '', '21870564', 'lz4 is probably better though snappy was developed by google with protobufs in mind so you might want to test both on your data set.\n')

grouplayout	springlayout	2
('grouplayout', 'more effective', 'springlayout', '', '7128912', 'in it developers seem to agree that grouplayout is a more effective replacement of springlayout\n')
('grouplayout', 'more', 'springlayout', '', '7128912', 'in it developers seem to agree that grouplayout is a more effective replacement of springlayout\n')

cmder	cygwin	1
('cmder', 'better', 'cygwin', '', '28890026', 'imho cmder is better in windows than cygwin to work with unix commands\n')

glfw	lwjgl	1
('glfw', 'better way', 'lwjgl', '', '36265609', 'so glfw is just a library for creating windows in a better way than lwjgl did before\n')

printf	strtod	1
('printf', 'slower', 'strtod', '', '5830907', 'a fairer comparison would be comparing stringstream to the printf sscanf line of functions which would be slower than strtod but still faster than stringstream\n')

vpn	lan	1
('vpn', 'slower', 'lan', '', '14573814', 'the reason why the vpn is slow is well because your vpn is likely 50 to 100 times slower than your lan local area network\n')

wicket	jsf	2
('wicket', 'faster', 'jsf', '', '5381240', 'i m in the hate it part so anything i said is biased plus in our test prototypes developing in wicket was faster than jsf\n')
('wicket', 'easier', 'jsf', '', '2852664', 'i would advise you to try wicket it is very easy to learn much easier than jsf and it let s you re-use many existing components as well\n')

tablet	mdpi	2
('tablet', 'smaller', 'mdpi', '', '29828523', 'owing to the fact that the screens density on the tablet is smaller android therefore uses the images in the mdpi folder for the tablet and the slightly bigger ones in the hdpi folder for the phone\n')
('tablet', 'smaller android', 'mdpi', '', '29828523', 'owing to the fact that the screens density on the tablet is smaller android therefore uses the images in the mdpi folder for the tablet and the slightly bigger ones in the hdpi folder for the phone\n')

gitkraken	smartgit	1
('gitkraken', 'better', 'smartgit', '', '44673730', 'i think you should use gitkraken it will be better than smartgit on ubuntu\n')

pdflib	pdfbox	2
('pdflib', 'tet slightly better', 'pdfbox', '', '22675690', 'edit 31 march 2014 for what it s worth i have found that pdfbox is much better at text extraction than itextsharp notwithstanding a bespoke strategy implementation and pdflib tet is slightly better than pdfbox but it s quite expensive\n')
('pdflib', 'better', 'pdfbox', '', '22675690', 'edit 31 march 2014 for what it s worth i have found that pdfbox is much better at text extraction than itextsharp notwithstanding a bespoke strategy implementation and pdflib tet is slightly better than pdfbox but it s quite expensive\n')

objectdatasource	sqldatasource	2
('objectdatasource', 'also more', 'sqldatasource', '', '1423595', 'objectdatasource also allows for more efficient paging than a simple sqldatasource i m assuming that s what you re using\n')
('objectdatasource', 'also more efficient', 'sqldatasource', '', '1423595', 'objectdatasource also allows for more efficient paging than a simple sqldatasource i m assuming that s what you re using\n')

glfw	glut	2
('glfw', 'much closer', 'glut', '', '2254966', 'between these glfw is much closer to glut in character -- a small toolkit for abstracting away most of the os-dependent parts so you can produce opengl programs with relatively little hassle\n')
('glfw', 'better', 'glut', '', '4497793', 'or if you re really focused on only doing opengl i may suggest using glfw which is the better glut but you ll have to draw the menus yourself using opengl\n')

trac	bugzilla	1
('trac', 'better', 'bugzilla', '', '471259', 'trac s issue tracking is little better than bugzilla s...i know a lot of folks love trac but i find it very inflexible\n')

androidviewclient	monkeyrunner	2
('androidviewclient', 'easier', 'monkeyrunner', '', '27562701', 'i recomend to use dtmilano tool androidviewclient that is easier to use than monkeyrunner\n')
('androidviewclient', 'slower', 'monkeyrunner', '', '30491862', 'i need to perform several device.touch events as fast as possible however androidviewclient seems to achieve those significantly slower than monkeyrunner\n')

networkx	igraph	1
('networkx', 'much easier', 'igraph', '', '22098160', 'networkx is much easier to deal with and usually performance is good enough but for large brute force algorithms like this igraph will probably be at least an order of magnitude faster\n')

fseek	fread	2
('fseek', 'faster', 'fread', '', '10118975', 'i probably feel fseek might be bit faster than fread as fseek changes the pointer position to the new address space that you have mentioned and there is no date read is happening\n')
('fseek', 'faster', 'fread', '', '10118483', 'so i guess fseek should be much faster than fread\n')

required	placeholder	1
('required', 'more', 'placeholder', '', '17626712', 'in such a case passing by value may no required actually passing anything at all -- the value that s passed is basically little or nothing more than a placeholder for this is the object\n')

wunderground	openweathermap	2
('wunderground', 'higher', 'openweathermap', '', '26804596', 'i see that the paid version of wunderground has some higher tiers with more features but openweathermap s free tier allows a huge number of uses\n')
('wunderground', 'higher tiers', 'openweathermap', '', '26804596', 'i see that the paid version of wunderground has some higher tiers with more features but openweathermap s free tier allows a huge number of uses\n')

opencover	partcover	1
('opencover', 'better', 'partcover', '', '6988219', 'you may also find that opencover will work better than partcover as it has 32 and 64 bit support as well as supporting .net2 and .net4 - and copes much better with target processes that spin off more processes to do the actual testing\n')

vml	svg	1
('vml', 'slower', 'svg', '', '7892772', 'ie s vml is slower than other browser s svg\n')

erd	diagram	2
('erd', 'lower multiplicity', 'diagram', '', '23322086', 'the circle in erd denotes the lower multiplicity bound of 0 see diagram bellow\n')
('erd', 'lower', 'diagram', '', '23322086', 'the circle in erd denotes the lower multiplicity bound of 0 see diagram bellow\n')

vbo	normals	1
('vbo', 'model worse', 'normals', '', '9655339', 'when i use vertex array model looks perfect but when i switch to vbo model looks worse because of vertex normals\n')

strcpy	strdup	2
('strcpy', 'nicer', 'strdup', '', '1969127', 'in general it is nicer in c to have the caller allocate memory not the callee - hence why strcpy is a nicer function in my opinion than strdup\n')
('strcpy', 'nicer function', 'strdup', '', '1969127', 'in general it is nicer in c to have the caller allocate memory not the callee - hence why strcpy is a nicer function in my opinion than strdup\n')

free	memmove	1
('free', 'more efficient', 'memmove', '', '388146', 'the compiler is free to choose a method that is more efficient than memmove\n')

nserror	nsexception	2
('nserror', 'much more', 'nsexception', '', '1117426', 'aside from obejctive-c convention and best practices nserror is much more robust and flexibly than nsexception and allows the caller to effectively ignore the problem if they want to\n')
('nserror', 'much more robust', 'nsexception', '', '1117426', 'aside from obejctive-c convention and best practices nserror is much more robust and flexibly than nsexception and allows the caller to effectively ignore the problem if they want to\n')

nsis	uninstaller	1
('nsis', 'more', 'uninstaller', '', '10593657', 'can a nsis section create more than 1 uninstaller\n')

django-userena	pinax	2
('django-userena', 'better', 'pinax', '', '9572536', 'i was thinking of using the accounts app but django-userena seems better so i created a project zero with pinax and tried to integrate django-userena with it\n')
('django-userena', 'better so', 'pinax', '', '9572536', 'i was thinking of using the accounts app but django-userena seems better so i created a project zero with pinax and tried to integrate django-userena with it\n')

suffix-tree	suffix-array	1
('suffix-tree', 'faster', 'suffix-array', '', '11956604', 'i am interested in this because the factor oracle is easy to construct with 30 lines of c++ suffix-array needs about 60 and suffix-tree needs 150 and it runs faster than suffix-array and suffix-tree\n')

repeater	datalist	2
('repeater', 'more', 'datalist', '', '24339151', 'repeater is more light than datalist as datalist creates the view by creating a table whereas repeater doesn t\n')
('repeater', 'more light', 'datalist', '', '24339151', 'repeater is more light than datalist as datalist creates the view by creating a table whereas repeater doesn t\n')

pdfbox	itextsharp	1
('pdfbox', 'much better', 'itextsharp', '', '22675690', 'edit 31 march 2014 for what it s worth i have found that pdfbox is much better at text extraction than itextsharp notwithstanding a bespoke strategy implementation and pdflib tet is slightly better than pdfbox but it s quite expensive\n')

uart	adc	1
('uart', 'higher priority', 'adc', '', '24189309', 'the only problem is that when the mcu is transmitting data uart transmission interrupt has higher priority than the adc reading interrupt the adc is not sampling data hence there will be data loss sample rate is around 500 samples sec\n')

typo3	joomla	1
('typo3', 'more professional', 'joomla', '', '683028', 'i didn t work with these applications yet but afaik typo3 and ezpublish both php are considered much more professional than joomla\n')

jslider	jscrollbar	2
('jslider', 'more', 'jscrollbar', '', '24593045', 'aside you should probably look into using a jslider which seems more natural than using a jscrollbar for value adjustment\n')
('jslider', 'more natural', 'jscrollbar', '', '24593045', 'aside you should probably look into using a jslider which seems more natural than using a jscrollbar for value adjustment\n')

openrasta	asp.net-mvc	1
('openrasta', 'much closer', 'asp.net-mvc', '', '585100', 'i d suggest having a look at openrasta which is much closer to http semantics than asp.net asp.net-mvc is\n')

uiview	cashapelayer	1
('uiview', 'easier', 'cashapelayer', '', '30911368', 'you can use a bezier path either in a custom uiview w drawrect or easier with a cashapelayer whose curvature can be controlled via its control points\n')

button	right-align	1
('button', 'easier', 'right-align', '', '7810180', 'instead of figuring out the individual positions for each image button it is easier to simply right-align them by modifying the anchorpoint to 1.0f 0.5f and then position the images button at exactly the screen width and variable screen height position screen width 100\n')

strcpy	strlen	2
('strcpy', 'shorter', 'strlen', '', '33238443', 'strcpy incoming connected will overwrite dataa and maybe datab if your first token pointed to by header is shorter than strlen connected\n')
('strcpy', 'more', 'strlen', '', '5941669', 'if strcpy is anything like strcpy it will write one byte more than strlen returns to zero terminate the string\n')

justmock	typemock	1
('justmock', 'less expensive', 'typemock', '', '12626118', 'justmock less expensive than typemock but still expensive\n')

gedit	vim	2
('gedit', 'better', 'vim', '', '18436657', 'if you re just going to use vim the same way you use gedit don t bother - gedit is better than vim at being gedit\n')
('gedit', 'better', 'vim', '', '16252339', 'if you are on linux eg ubuntu you may try gedit for ease of use with some plug-ins but to handle very large files you re better off with vim\n')

gson	xstream	1
('gson', 'more', 'xstream', '', '2788981', 'gson is more about json-based persistence in the vein of xstream which can do json too and sounds a bit too heavyweight for just an applet\n')

rythm	freemarker	1
('rythm', 'faster', 'freemarker', '', '13855484', 'probably you can take a look at rythm template engine which is much faster than freemarker and velocity also much easier to use\n')

dash	cut	2
('dash', 'symbol better', 'cut', '', '40914062', 'the smaller the dash symbol is the better results you will get the existing api code doesn t seem to cut off the symbol at the final vertex of a polyline segment and doesn t seem to account for the section of the symbol that went past the polyline after the vertex\n')
('dash', 'symbol better results', 'cut', '', '40914062', 'the smaller the dash symbol is the better results you will get the existing api code doesn t seem to cut off the symbol at the final vertex of a polyline segment and doesn t seem to account for the section of the symbol that went past the polyline after the vertex\n')

ceil	parseint	1
('ceil', 'faster', 'parseint', '', '17551105', 'the math.floor ceil method being marginally faster than parseint and mod\n')

hdfs	namenode	1
('hdfs', 'more', 'namenode', '', '47349397', 'hdfs high availabilty is only available when you have more than one namenode configured\n')

tcp	tftp	1
('tcp', 'probably better', 'tftp', '', '32126306', 'you are right that using tcp is probably better to use for something like this or even an existing protocol like tftp\n')

mongoid	mongomapper	2
('mongoid', 'more regularly', 'mongomapper', '', '14064146', 'over the last year it looks like mongoid has been more regularly maintained and updated than mongomapper\n')
('mongoid', 'more', 'mongomapper', '', '14064146', 'over the last year it looks like mongoid has been more regularly maintained and updated than mongomapper\n')

mutation	crossover	1
('mutation', 'typically easier', 'crossover', '', '9824732', 'mutation is typically easier to do this with than crossover\n')

tcpreplay	wireshark	1
('tcpreplay', 'different less', 'wireshark', '', '43753735', 'i use tcpreplay to replay it on an interface but the problem is that the number of attempted packets in tcpreplay is different less with number of packets showing in wireshark\n')

icomparable	compareto	2
('icomparable', 'more fine-grain', 'compareto', '', '11193158', 'implementing icomparable is a more fine-grain way of comparison as it provides the compareto method which is a greater-than less-than comparison as opposed to equals which is simply a is-equal-or-not comparison\n')
('icomparable', 'more', 'compareto', '', '11193158', 'implementing icomparable is a more fine-grain way of comparison as it provides the compareto method which is a greater-than less-than comparison as opposed to equals which is simply a is-equal-or-not comparison\n')

minimum	median	2
('median', 'smaller', 'minimum', '', '41420080', 'there are at least n m+1 2 elements no larger than the maximum hi of these median and at least n m+1 2 no smaller than the minimum lo\n')
('minimum', 'greater current', 'median', '', '21073127', 'maintain 2 heaps maximum heap for numbers less than current median and minimum heap for numbers greater than current median\n')

jscrollpane	jinternalframe	1
('jscrollpane', 'bigger', 'jinternalframe', '', '30339173', 'specifically jscrollpane have height bigger than jinternalframe\n')

highcharts	gridster	1
('highcharts', 'bigger', 'gridster', '', '32656402', 'if i resize the window and a widget with a highcharts is bigger than the window i want to resize it to make it smaller and gridster should recalculate the positions of the others\n')

loops	if-statement	1
('loops', 'more', 'if-statement', '', '33905400', 'nevertheless i need a dynamic list for my loops with nested loops which is processed more than 500 times and multiple if-statement therefore the arraylist\n')

clicklistener	buttonclick	1
('clicklistener', 'more', 'buttonclick', '', '28341548', 'if you need more than a simple method call you could just as well create a more elaborate clicklistener implementation that has more than the buttonclick method\n')

smalltalk	lisp	2
('lisp', 'lesser extent', 'smalltalk', '', '3819159', 'common lisp is an image base language although usually to a lesser extent than smalltalk\n')
('smalltalk', 'more fine-grained', 'lisp', '', '3057686', 'smalltalk methods tend to be more fine-grained than lisp functions so that may be a good place to begin\n')

buildr	maven	2
('buildr', 'faster', 'maven', '', '145433', 'and even though everybody says ruby is slow buildr was 2-6x faster than maven\n')
('buildr', 'faster', 'maven', '', '7776944', 'i read in a blog article that buildr a ruby based build tool was two times faster than maven for a simple build\n')

set	bag	1
('set', 'more', 'bag', '', '28813068', 'take into account that lazy mappings will be disabled so it may be useful to evaluate what will be need to be set to fetchtype.eager with fetchmode.subselect if more than 1 bag is needed to be initialized with it\n')

fsunit	xunit.net	1
('fsunit', 'more natural oo', 'xunit.net', '', '1468941', 'i d rather use fsunit or fstest to write tests in f# it feels more natural than oo xunit.net style tests\n')

strdup	printf	1
('strdup', 'faster', 'printf', '', '33003723', 'doing a single printf and strdup is faster and simpler than doing 2-3 printf calls\n')

fgets	fgetc	2
('fgets', 'faster multiple', 'fgetc', '', '5186505', 'if not multiple fgets calls will still be faster than multiple fgetc calls because the overhead of the latter will be greater\n')
('fgetc', 'simpler', 'fgets', '', '13322357', 'fgetc is a function to read a single char simpler than using fgets\n')

uiimage	ciimage	1
('uiimage', 'slightly larger', 'ciimage', '', '11301560', 'it seems like if the uiimage is slightly larger the ciimage is double the size whereas if the uiimage is slightly smaller this isn t the case\n')

jmock	junit	1
('jmock', 'things easier', 'junit', '', '10572775', 'the later version of jmock makes things easier by integrating with the junit lifecycle as a runner\n')

imagemagick	libjpeg	1
('imagemagick', 'slower', 'libjpeg', '', '965313', 'basically imagemagick was only slightly slower than libjpeg\n')

prefuse	jung	2
('jung', 'rendering also better', 'prefuse', '', '4670846', 'somehow the layout algorithms in prefuse seem to display a better layout than in jung rendering is also better i think though most of the layout algorithms in prefuse are based on jung implementation\n')
('prefuse', 'better layout', 'jung', '', '4670846', 'somehow the layout algorithms in prefuse seem to display a better layout than in jung rendering is also better i think though most of the layout algorithms in prefuse are based on jung implementation\n')

voip	sip	1
('voip', 'more', 'sip', '', '5309949', 'almost all sip voip providers allow you to forward calls from an attached did telephone number to more than one sip device so your request could be satisfied by a basic account on your friendly neighbourhood voip provider\n')

concurrenthashmap	readwritelock	1
('concurrenthashmap', 'more concurrency', 'readwritelock', '', '35215283', 'the other question why not use a concurrenthashmap here since it will provide some concurrent writes to different mapentries and provide more concurrency than readwritelock\n')

lxml	libxml2	1
('lxml', 'more', 'libxml2', '', '10715774', 'the chapter starts with short course to xml general talk but with the atom syndication feed example then it continues with the standard xml.etree.elementtree and continues with third party lxml that implements more with the same interface full xpath 1.0 based on libxml2\n')

stderr	stdout	2
('stderr', 'more control', 'stdout', '', '47591405', 'in other words instead of mis-using stderr like this - look into ways to gain more control over stdout\n')
('stderr', 'better', 'stdout', '', '3113442', 'stderr is better than stdout for errors for a couple of reasons\n')

xamarin.android	mono	1
('xamarin.android', 'faster', 'mono', '', '22214966', 'i m using xamarin.android to write c# but the native java rsa key generator is much faster than the mono one\n')

content-length	content-type	1
('content-length', 'greater', 'content-type', '', '25000107', '...web api relies on system.net.http library for getting request headers and this library gives a null for httprequestmessage s content.headers.contenttype in this case and web api sees that content-length is greater than 0 but no content-type header and hence returns a 415 unsupported media type\n')

vbscript	vb6	2
('vbscript', 'much more convenient', 'vb6', '', '1124848', 'vbscript is much more convenient than creating an activex on vb6 or c# vb.net\n')
('vbscript', 'much more', 'vb6', '', '1124848', 'vbscript is much more convenient than creating an activex on vb6 or c# vb.net\n')

knitr	latex	2
('knitr', 'clunkier pure', 'latex', '', '28529833', 'even when latex editors support knitr their support makes working with .rnw files much clunkier than pure latex .tex files\n')
('knitr', 'easier', 'latex', '', '27659793', 'you might want to use r markdown and knitr which is easier than using latex and r as also zhaoy suggested\n')

insertion-sort	quicksort	2
('insertion-sort', 'less', 'quicksort', '', '18309423', 'in cs insertion-sort is less commonly used because we have much better algorithms quicksort and merge-sort come to mind\n')
('insertion-sort', 'less commonly', 'quicksort', '', '18309423', 'in cs insertion-sort is less commonly used because we have much better algorithms quicksort and merge-sort come to mind\n')

ostream	ostringstream	2
('ostream', 'more', 'ostringstream', '', '12054458', 'ostream is more general subclasses support writing to different places ostringstream is a specific one writing to a string\n')
('ostream', 'more general', 'ostringstream', '', '12054458', 'ostream is more general subclasses support writing to different places ostringstream is a specific one writing to a string\n')

ng-show	ng-class	1
('ng-show', 'better option', 'ng-class', '', '25702788', 'edit as mentioned by chandresh using the ng-show directive with a true false value would be a better option than using ng-class\n')

memset	malloc	2
('memset', 'greater', 'malloc', '', '4868335', 'it requests memory from the os kernel but the request is not satisfied until the memory is written to with memset . this allows for greater efficiency in the system s memory management but it can result in misleading malloc behaviour\n')
('memset', 'greater efficiency', 'malloc', '', '4868335', 'it requests memory from the os kernel but the request is not satisfied until the memory is written to with memset . this allows for greater efficiency in the system s memory management but it can result in misleading malloc behaviour\n')

case-insensitive	case-sensitive	2
('case-insensitive', 'slower', 'case-sensitive', '', '7652236', 'this tiny overhead on add is vastly outweighed by the savings on lookups since all programmers should know and understand that case-insensitive compares are vastly slower than case-sensitive especially with unicode - the cpu can t just do a block compare of data but must check each pair of characters specially even using a table look-up this is vastly slower\n')
('case-sensitive', 'faster', 'case-insensitive', '', '32202691', 'btw a case-sensitive search done with removing i is much faster than a case-insensitive search\n')

fog	paperclip	1
('fog', 'more trouble', 'paperclip', '', '11912590', 'i have found though that since i started using the asset_sync gem which uses fog instead of aws-s3 gem i don t have any more trouble with paperclip and s3\n')

altitude	satellite	2
('altitude', 'more', 'satellite', '', '23617594', 'vertical position altitude needs one more satellite in view at least 4 so is not always reliable if gps sees only 3 satelites\n')
('altitude', 'error much greater', 'satellite', '', '7618704', 'quote from the third link - the altitude error is much greater because it is a satellite based system\n')

tokudb	innodb	1
('tokudb', 'faster', 'innodb', '', '5691542', 'i use tokudb on tables of up to 18 billion rows and nothing else comes close it s at least 100 times faster than innodb for random inserts on big tables\n')

direct3d	gdi	2
('direct3d', 'faster', 'gdi', '', '33487104', 'so decide what you want to use direct3d is significaly faster than gdi\n')
('direct3d', 'significaly faster', 'gdi', '', '33487104', 'so decide what you want to use direct3d is significaly faster than gdi\n')

qobject	qevent	1
('qobject', 'faster', 'qevent', '', '10839789', 'posting qevents to qobject is faster than using signal-slot invocations because there are no copy constructors called and there s no marshalling done except directly by you upon construction of a qevent\n')

stdout	fflush	2
('stdout', 'more', 'fflush', '', '2605364', 'occasionally the stdout needs more than a write method fflush is another common one which stringio will handle\n')
('fflush', 'frequency lower', 'stdout', '', '5903481', 'i guess that these lines have shorter output so the fflush frequency is lower i used the stdout line to print a deliberate help message\n')

opus	speex	1
('opus', 'better', 'speex', '', '7271348', 'it will continue to be available but since opus is better than speex in all aspects users are encouraged to switch\n')

jtextfield	jlabel	2
('jtextfield', 'more', 'jlabel', '', '47476065', 'jtextfield is more than 1 line height and jlabel is not in left side\n')
('jtextfield', 'always easier', 'jlabel', '', '34516471', 'because copying text result from jtextfield is always easier than retyping it from jlabel note that jlabel is not focusable\n')

scoreloop	openfeint	1
('scoreloop', 'quicker', 'openfeint', '', '8975862', 'further to this i m still opting for scoreloop and i can confirm this behaves the same regarding one score per user but it offers a lot more functionality and does seem to respond much quicker than openfeint did for me\n')

invokelater	invokeandwait	2
('invokelater', 'better', 'invokeandwait', '', '32543633', 'you can use eventqueue.invokelater to switch to the swing thread and back greenfoot isn t designed to support this but it should work anyway -- invokelater is a better bet than invokeandwait\n')
('invokelater', 'better bet', 'invokeandwait', '', '32543633', 'you can use eventqueue.invokelater to switch to the swing thread and back greenfoot isn t designed to support this but it should work anyway -- invokelater is a better bet than invokeandwait\n')

silex	symfony	1
('silex', 'lower overhead', 'symfony', '', '14501349', 'also take a look at silex as this has lower overhead than symfony and works with symfony forms\n')

smartgwt	uibinder	2
('smartgwt', 'much more sophisticated', 'uibinder', '', '6262121', 'while smartgwt has much more sophisticated widgets than gwt you still can t use uibinder in conjunction with it which is why i rejected using smartgwt\n')
('smartgwt', 'much more', 'uibinder', '', '6262121', 'while smartgwt has much more sophisticated widgets than gwt you still can t use uibinder in conjunction with it which is why i rejected using smartgwt\n')

cocos2d-x	corona	2
('cocos2d-x', 'better', 'corona', '', '10185108', 'i would recommend cocos2d-x as it is in my opinion equally or even better than corona and it is free\n')
('corona', 'easier', 'cocos2d-x', '', '11746599', 'the consensus seems to be that corona is easier to use but that cocos2d-x has the advantages that come from being open source easy to customize merge with other code community etc\n')

zsh	subshell	1
('zsh', 'more', 'subshell', '', '46202735', 'simple function in zsh to parallelize jobs in not more than 4 subshell using lock files in tmp\n')

persian	farsi	1
('persian', 'better', 'farsi', '', '16129313', 'in persian it s better to say farsi a decimal number like 32.98 is written 32 98 slash is used instead of point\n')

renderscript	glsurfaceview	1
('renderscript', 'more control', 'glsurfaceview', '', '21351418', 'both a renderscript and opengl are used for getting high performance graphics and animation s.but still opengl is the best option to get high performance graphics because it is well documented and you will have more control over the glsurfaceview .but in renderscript some of the classes are depreciated in the current versions .its almost not possible to make a rssurfaceview to transparent\n')

pygobject	gio	1
('pygobject', 'nothing more', 'gio', '', '5819202', 'pygobject is nothing more than a thin layer of glue making gobject gio .\n')

pgm	bmp	1
('pgm', 'more portable', 'bmp', '', '37988585', 'i used ppm pgm files as they are simpler to write and more portable than bmp\n')

passenger	webrick	1
('passenger', 'better', 'webrick', '', '4727430', 'phusion passenger is the de facto apache mod and yes it s better than webrick which is really only good for tiny sites or testing\n')

azure	hdinsight	1
('azure', 'batch cheaper', 'hdinsight', '', '35640508', 'running with azure batch is also an option as the .net will work well and azure batch is cheaper if the custom activity is the only reason for having a hdinsight cluster\n')

comm	grep	2
('grep', 'faster', 'comm', '', '43449232', 'i rather prefer grep since it s much faster than comm and also does not require the input to be sorted\n')
('comm', 'faster', 'grep', '', '38694413', 'if this is an issue you could try sd stream diff which doesn t require sorting like comm does nor process substitution like the above examples is orders or magnitude faster than grep -f and supports infinite streams\n')

httr	rcurl	1
('httr', 'nicer', 'rcurl', '', '29130522', 'the httr package is a bit nicer than rcurl for making http requests in my opinion and it sets a user-agent string by default\n')

lxml.html	beautifulsoup	2
('lxml.html', 'faster', 'beautifulsoup', '', '8698357', 'but if you are allowed to store whole tree into memory you can use lxml.html which is faster than beautifulsoup\n')
('lxml.html', 'better', 'beautifulsoup', '', '4014590', 'lxml.html deals with badly formed html better than beautifulsoup is actively maintained beautifulsoup isn t and is a lot faster since it uses libxml2 internally\n')

sqldf	plyr	2
('sqldf', 'faster', 'plyr', '', '4329527', 'in the first example sqldf is 3x slower than data.table and in the second its 200x faster than plyr and 100 times faster than data.table\n')
('sqldf', '3x slower', 'plyr', '', '4329527', 'in the first example sqldf is 3x slower than data.table and in the second its 200x faster than plyr and 100 times faster than data.table\n')

bazaar	svn	1
('bazaar', 'much more', 'svn', '', '1645672', 'bazaar seems much more like svn with branches just being separate directories so maybe not\n')

tunnel	vpn	1
('tunnel', 'nothing more', 'vpn', '', '9325951', 'and between we are just looking to send and receive data over tunnel there is nothing more or need to control computer on the network all we need is to route data through corporate firewall and should support multiple vpn servers such as cisco microsoft etc\n')

gradle	ivy	1
('gradle', 'longer', 'ivy', '', '20470505', 'today gradle comes with a full-fledged dependency management implementation that no longer builds upon ivy except for some traces that haven t been removed yet for backwards compatibility reasons\n')

d3.js	chart.js	2
('d3.js', 'steeper learning', 'chart.js', '', '41853317', 'd3.js has a steeper learning curve than chart.js but once you get the hang of it you can do pretty much anything graph related with it.official site is here\n')
('d3.js', 'steeper', 'chart.js', '', '41853317', 'd3.js has a steeper learning curve than chart.js but once you get the hang of it you can do pretty much anything graph related with it.official site is here\n')

getline	fgetc	2
('getline', 'faster', 'fgetc', '', '8854366', 'the fact that using getline with iostreams is faster than fgetc at least in release mode runs counter to the reasoning that copying all that data must be slower than not copying it so i m not sure what all optimization is able to avoid and i didn t really look to find any explanation but it d be interesting to understand what s being optimized away\n')
('getline', 'version slower', 'fgetc', '', '8854366', 'i confirmed that in debug mode the getline version is slower about 130 √¢¬µs vs 60 √¢¬µs for the fgetc version\n')

socks	ssl	1
('socks', 'more', 'ssl', '', '41940245', 'since socks proxy is in theory nothing more than a ssl tunnel i thought i could give that property another try\n')

ecto	elixir	2
('ecto', 'better', 'elixir', '', '41630254', 'fortunately ecto 2.1 has a better alternative since it s supports the built-in calendrical types from elixir 1.3\n')
('ecto', 'better alternative', 'elixir', '', '41630254', 'fortunately ecto 2.1 has a better alternative since it s supports the built-in calendrical types from elixir 1.3\n')

salt	pbkdf2	2
('salt', 'no longer secure', 'pbkdf2', '', '28428874', 'it should be in my opinion more strongly noted that password hashing with salt is no longer secure and should not be used as others noted use pbkdf2 or bcrypt\n')
('salt', 'no longer', 'pbkdf2', '', '28428874', 'it should be in my opinion more strongly noted that password hashing with salt is no longer secure and should not be used as others noted use pbkdf2 or bcrypt\n')

spaces	linefeed	1
('spaces', 'more', 'linefeed', '', '33176095', 'this regex does replace by a single spaces all contiguous spaces 2 or more followed by a linefeed or individual tabs\n')

mpandroidchart	achartengine	2
('mpandroidchart', 'more option', 'achartengine', '', '29864340', 'achartengine is easy to use mpandroidchart has more option but is less easy to use than achartengine\n')
('mpandroidchart', 'more', 'achartengine', '', '29864340', 'achartengine is easy to use mpandroidchart has more option but is less easy to use than achartengine\n')

cstring	bstr	1
('cstring', 'more', 'bstr', '', '12632385', 'a cstring is more like a visual basic string or a bstr\n')

mktime	strtotime	1
('mktime', 'dumber', 'strtotime', '', '7263012', 'you d be better off using mktime for this as it s dumber than strtotime\n')

operator-precedence	associativity	1
('operator-precedence', 'higher precedence', 'associativity', '', '27779081', 'taking java s operator-precedence notably that + has higher precedence than and associativity rules into account the expression is equivalent to\n')

modulus	primes	1
('modulus', 'more', 'primes', '', '9195786', 'it is perfectly possible to use rsa with a modulus n that is composed of more than two primes factors p and q but two things have to be noted\n')

tcplistener	tcpclient	1
('tcplistener', 'nothing more', 'tcpclient', '', '9608101', 'on the server side you re using tcplistener which is nothing more than a socket or tcpclient factory\n')

ppm	bmp	1
('ppm', 'easier', 'bmp', '', '29444516', 'the only thing i can suggest is that you use ppm format which is even easier than bmp for you to read from\n')

sata	ssd	2
('ssd', 'faster', 'sata', '', '38005710', 'the ssd disks are from 4 to 8 times faster than a sata hdd depending on the model\n')
('sata', 'lower price', 'ssd', '', '7874956', 'as compilation is mostly reading small files i wonder if buying a fast usb key to work on can speed up compilation time compared to a standard sata drive and with a lower price than an ssd drive 16gb keys are 30\n')

wildfly	undertow	1
('wildfly', 'bigger', 'undertow', '', '45767806', 'i m working on a wildfly swarm project using wildfly swarm version 2017.8.1 maven 3.5.0 openjdk 1.8.0_141 where users will often upload files way bigger than undertow s default 10485760 bytes 10mb max-post-size setting\n')

weka	libsvm	1
('weka', 'slower', 'libsvm', '', '18696558', 'i am using a sparse format but suggestions are welcome on other formats too i am able to use the data with weka in a dense format using the function names as variables and it works just muuch slower than with libsvm\n')

dkim	email	1
('dkim', 'more', 'email', '', '33510409', '4 some email providers might mark that email as spam however most spam checks are based on spf and dkim checks more than email existence checks\n')

rdflib	jena	1
('rdflib', 'more useful', 'jena', '', '23196911', 'since you tagged this with python you might find rdflib more useful than jena but the real question here should be about how to do the conversion not the library request since library requests are off topic for stack overflow\n')

keras	tensorboard	1
('keras', 'easier', 'tensorboard', '', '46996697', 'you should check out losswise it has a plugin for keras that s easier to use than tensorboard and has some nice extra features\n')

jackson	xstream	1
('jackson', 'faster', 'xstream', '', '17566034', 'jackson xml module faster than xstream\n')

avcapturesession	avassetwriter	2
('avcapturesession', 'far more rudimentary', 'avassetwriter', '', '38257010', 'avcapturesession is far more rudimentary compared to avaudiorecorder - it does not provide any recording facilities by itself for example and so if you wanted to also record the audio you would need to use an avassetwriter to save the samples\n')
('avcapturesession', 'far more', 'avassetwriter', '', '38257010', 'avcapturesession is far more rudimentary compared to avaudiorecorder - it does not provide any recording facilities by itself for example and so if you wanted to also record the audio you would need to use an avassetwriter to save the samples\n')

post	get	243
('post', 'more secure', 'get', 'secure data request', '42360118', 'please always try to use post method for submitting data as it is more secure than get method\n')
('post', 'more secure', 'get', 'secure data request', '15523045', 'also note that using post is absolutely not more secure than get because the request parameters aren t immediately visible in url\n')
('post', 'higher', 'get', 'user easier sandbox', '9322946', 'post has a higher overhead marginally if we re honest but it all adds up but it doesn t become part of the url so can t be seen by say a casual observer over the user s shoulder - whereas get can\n')
('post', 'more secure', 'get', 'secure data request', '34822709', 'on an unencrypted connection post is no more secure than get\n')
('post', 'more secure', 'get', 'secure data request', '38099246', 'hence post is more secure than get\n')
('get', 'larger more', 'post', '', '17974157', 'for example on the blog page of my current project i have two widgets in the sidebar one for latest tweets and one for latest music news however as you can see on this page the content of the blog post all test posts... are much longer than the height of the two widgets and would of course get larger as more post are added\n')
('get', 'more', 'post', 'secure data request', '6656594', 'if you use post when get is more semantically correct it is less communicative of the intent of your request since post usually means you are sending a payload\n')
('post', 'more letter', 'get', '', '1494266', 'post has one more letter in it than get so it s less compact\n')
('post', 'better', 'get', 'better faster method', '2796836', 'using post over https is better than using get and http\n')
('post', 'request less efficient', 'get', 'secure data request', '6219147', 'however a post request is less efficient as a get request - bear that in mind and only use post if you really need to\n')
('post', 'also more', 'get', 'secure data request', '7411370', 'post is also more secure than get because you aren t sticking information into a url\n')
('post', 'more secure', 'get', 'secure data request', '12266054', 'you can feel like post is more secure than get all you want but it s a false premise\n')
('get', 'more clarification', 'post', '', '44779524', 'hope you get the more clarification by this post\n')
('get', 'more', 'post', 'user easier sandbox', '38993766', 'you can t get more than 20 post if you are a sandbox user\n')
('get', 'faster type', 'post', '', '15757966', 'is type get faster than type post cause i am curious how both work\n')
('post', 'more details', 'get', 'blog token level', '26336047', 'these steps were taken from this blog post which contains more details about how to investigate and what output you ll get\n')
('post', 'larger', 'get', 'secure data request', '9745606', 'post requests can be much larger than get requests as get requests are limited by the maximum length of a url\n')
('get', 'quicker', 'post', 'better faster method', '11603297', 'a get is a bit quicker and than a post in an ajax scenario\n')
('get', 'more lightweight', 'post', 'requests lightweight high', '32572284', 'more over it seems that get requests are more lightweight than post under high load\n')
('get', 'more', 'post', 'user easier sandbox', '42085149', 'first of all if your instagram client is in sandbox mode then you can t get more than 20 post more clearly last 20 post\n')
('get', 'more', 'post', '', '39072833', 'i have been trying get data out of new reddit post but theres limitation where you cant get data from more than 100 post\n')
('get', 'deeper', 'post', '', '33120663', 'i m trying to get deeper with post and pre incrementors but am a bit stuck with the following expression\n')
('post', 'better', 'get', 'secure data request', '45940733', 'but i believe sending data using curl with post method is better than get method\n')
('get', 'better', 'post', 'better faster method', '26344599', 'get is a better method in this case than post\n')
('get', 'less secure', 'post', 'secure data request', '21579295', 'however in the comparative table i linked get is listed as less secure than post\n')
('post', 'more users', 'get', '', '25411516', 'here s the solution for post variables as well which is probably trickier for more users than the get solution\n')
('get', 'more', 'post', '', '8297272', 'maybe i would mostly always choose post over get it s more tidy and refreshing and going back issues with post method are a thing from the past in any major browser they just ask you if you want to resend the data don t they\n')
('post', 'neater', 'get', '', '29165001', 'the pinoyyd post is neater and get straight to the point how do i authorise a background web app without user intervention\n')
('post', 'more', 'get', '', '17599439', 'the post at has more information on how to get that access token\n')
('get', 'much easier', 'post', 'user easier sandbox', '22266230', 'using get is much easier than using post for most of developers\n')
('post', 'more secure', 'get', 'secure data request', '21832271', 'firstly post can seem more secure than get\n')
('post', 'slightly less', 'get', '', '1744404', 'the only scenario in which post is slightly less susceptible is that many websites that aren√¢ t under the attacker√¢ s control say a third-party forum allow embedding arbitrary images allowing the attacker to inject an arbitrary get request but prevent all ways of injecting an arbitary post request whether automatic or manual\n')
('post', 'more secure', 'get', 'secure data request', '10331965', 'as powelljf3 said post is more secure then get though it can still be gotten to\n')
('post', 'more recent', 'get', '', '2816936', 'if a post has a more recent reply i want to get the replies created_on value but also get the post post_id and subject\n')
('get', 'more', 'post', '', '15089866', 'so it is considerably less then what facebook states in their documentation at least looking by the date however by count it seems you get more than 50 post\n')
('post', 'much more', 'get', 'secure data request', '10277598', 'this means the amount of data you could pass by using post verb is much more than by using a query string and a get method\n')
('post', 'more secure', 'get', 'secure data request', '6735507', 'using the post method isn t necessarily more secure than get\n')
('post', 'also more', 'get', 'secure data request', '20042408', 'post is also more secure than get because you aren t sticking\n')
('get', 'more', 'post', '', '42926672', 'i need a query to get results from stackexchange dataset in such a way that it returns me 100 top reputation users with not more than 3 post body of post for each user\n')
('get', 'more', 'post', 'user easier sandbox', '36406549', 'note that i am assuming a user can get invited to more than one post which seems logical\n')
('get', 'more specific', 'post', 'better faster method', '44642770', 'i ll get better with formatting and being more specific with the post\n')
('post', 'more secure', 'get', 'secure data request', '19343161', 'although post is more secure as compared to get when ssl is present\n')
('post', 'better', 'get', '', '33811958', 'if you are curious though rather than just trusting a book or a blog post it is better to make a simple example and take it apart - you get it straight from the horse s mouth and you learn a whole lot more\n')
('post', 'cleaner', 'get', '', '10292008', 'also you can determine if someone is submitting a form or getting the form by checking if _server request_method post which is cleaner than using a get url parameter though i guess there s nothing wrong with the other approach...\n')
('post', 'more preferred', 'get', 'better faster method', '42979778', 'is this why post method is more preferred than get or does it really matter in any case if it internally uses post or get\n')
('post', 'more secure', 'get', 'secure data request', '35128233', 'using post data is more secure than get because with get the details would be in the query string portion of the url\n')
('post', 'safer', 'get', 'request better requests', '15663389', 'post request is a little safer than get because the parameters are not stored in browser history or in web server logs\n')
('post', 'safer', 'get', 'safer misleading indirect', '6285401', 'regarding your question about safety -- the answer is post is absolutely no safer than get\n')
('get', 'less', 'post', 'secure data request', '2977506', 'first off get is no less secure than post\n')
('get', 'slightly less', 'post', 'secure data request', '3682493', 'after that is done you can go into security details where get is slightly less secure than post - see the comments for details.\n')
('post', 'shorter', 'get', '', '33863455', 'i have simplified the app so the post is shorter but the basic problem is that if i get test in workouthandler - it cannot recognize methods in wardenstrategies or loginhelper unless i also include those files in the handler they are already included in app.rb\n')
('post', 'more secure', 'get', 'secure data request', '3735534', 'post isn t more secure than get\n')
('get', 'better', 'post', 'better faster method', '1678727', 'when get is better than post\n')
('get', 'more', 'post', 'api instagram tumblr', '6721054', 'however it isn t clear how much the value can be for the standard tumblr api you can t get more than 50 post at a time\n')
('post', 'here more', 'get', 'secure data request', '9378699', 'following my comment on your original post here s some more information that will help you get through this\n')
('get', 'faster', 'post', 'better faster method', '37863029', 'get is simpler and faster than post and can be used in most cases\n')
('post', 'much more', 'get', '', '1241338', 'i m sure there s a work around to use get for emails but the alternative post is much more easier and doesn t require any hacks to get around\n')
('get', 'more appropriate', 'post', 'queries appropriate appropiate', '7205747', 'get is more appropriate than post for queries because of its safe semantics\n')
('post', 'more secure', 'get', 'secure data request', '45793760', 'i am asked to apply to all the actions of one mvc project for security reason says post is more secure than get which i disagree with\n')
('get', 'more performant', 'post', 'body encapsulation character', '1850196', 'get is more performant as it is idempotent and does not contain a message body where as post does\n')
('get', 'more suitable', 'post', 'secure data request', '33648257', 'actually if you would like to retrieve specific task with all its details get request would be more suitable than post\n')
('get', 'more', 'post', '', '27907832', 'i m able to query my database below to get the result that i want but i don t want to have to iterate through all of the author objects just the ones that have more than one post\n')
('get', 'easier', 'post', 'user easier sandbox', '26404658', 'get would obviously allow for a user to change the value a lot easier than post so suitable checks for existance and ownership of the record would be important\n')
('get', 'more', 'post', 'queries appropriate appropiate', '24883267', 'on that base a get is more appropriate then a post\n')
('post', 'less secure', 'get', 'secure data request', '2080901', 'i wouldn t call post more or less secure than get\n')
('get', 'more', 'post', '', '7212715', 'i normally use something like this tag.object.annotate num_post count post .filter num_post__gt 2 to get tags with more than 2 post\n')
('get', 'more', 'post', 'queries appropriate appropiate', '198565', 'get is more appropiate for idempotent queries while post is more appropiate for action queries but you can shoot yourself in the foot just as easily with any of them if you don t understand the security architecture for the application you re maintaining\n')
('get', 'lower', 'post', 'higher limit good', '1678683', 'generally when passing lots of data to the server to be processed or stored using post is a good idea since get has a lower limit than that of post\n')
('post', 'request relatively harder', 'get', 'secure data request', '1597598', 'for example post request are considered more secure than get request as creating a post request is relatively harder than creating a get request\n')
('get', 'more', 'post', '', '20773871', 'when taking input we can use either get or post.the input is shown in the url when using get but not when post is used.is there a situation where get is more useful than post\n')
('get', 'method faster', 'post', 'better faster method', '39555144', 'i have seen other people asking the same question why get method is faster than post\n')
('post', 'better', 'get', 'request better requests', '12100416', 'this response thus assumes that a request using the post verb would not use the uri to transfer sensitive information or it would be no better than get\n')
('post', 'more', 'get', 'secure data request', '2389112', 'why everybody here is saying post is more secure than get when used over https\n')
('get', 'easier', 'post', 'second easier thats', '3701546', 'from a hacker s point of view a get forgery is much easier than post forgery at the first you only post a link at the second you need to point to a malware website with hidden iframe and autosubmit forms but both of them fail if tokens are checked\n')
('get', 'faster', 'post', 'better faster method', '34187465', 'i used get because is faster than post if you need it just to get a list of element for suggestions\n')
('post', 'more safety', 'get', 'request better requests', '13484830', 'a post request would not provide any more safety than a get request any half-decent web debugging tool can forge post requests\n')
('post', 'larger', 'get', '', '5375742', 'the usual wait time of the post is not too long not too larger than get so i don t think that should be an issue and post always gets back with a 200\n')
('post', 'better', 'get', 'better faster method', '11761592', 'in this case post may be better than get anyways\n')
('get', 'easier', 'post', 'second easier thats', '15992008', 'in my opinion the second way to achieve this is better because using get is not thats ecure in my opinion.it s easier than using post\n')
('get', 'better', 'post', 'request better requests', '42527058', 'i was taught from him that using get requests was better than post but after reading up i would like to switch to post my only problems is i am a little unsure how to modify my code to switch over from get\n')
('get', 'more', 'post', '', '27456657', 'not able to get more than 100 post in single rest api call for the linkedin company updates\n')
('get', 'more help', 'post', 'secure data request', '22719995', 'to get more help with that post information about your table structures and content\n')
('get', 'method faster', 'post', 'better faster method', '1211881', 'it is said that get method is faster than post but i don t know why is it\n')
('post', 'better', 'get', 'request better requests', '28670988', 'i am aware that a post is better for this kind of thing but my question is is this expected from a get request\n')
('post', 'more', 'get', 'blog token level', '12876876', 'this blog post is more detailed but unfortunately does also not mention where to get the product key\n')
('post', 'more compact', 'get', 'requests lightweight high', '1494219', 'is post more compact than get since get requests have to be url-encoded\n')
('post', 'more secure', 'get', 'secure data request', '11211762', 'post is more secure than get this is just a quick example\n')
('post', 'more complex', 'get', '', '23586414', 'post is a little more complex than get though\n')
('get', 'more', 'post', 'api instagram tumblr', '37363458', 'how to get more than 20 post from instagram using their api\n')
('post', 'more secure', 'get', '', '1311780', 'there appears to be a common mis-conception that post is more secure than get simply because it seems more obvious how to get a browser to manipulate the post variable\n')
('get', 'smaller limits', 'post', 'request better requests', '25149172', 'get requests have smaller limits than post in the specs\n')
('get', 'more', 'post', 'category categories ones', '10259488', 'i get somehow category repeated if it has more than 1 post eg\n')
('post', 'request more different', 'get', 'secure data request', '45697102', 'here i don t like that the body of the post request contains more different fields then the body returned from the get request - but maybe this is not a problem\n')
('get', 'more', 'post', '', '47250254', 'you can t get a patent any more because with this post i will claim prior art -\n')
('post', 'more secure', 'get', 'secure data request', '9330797', 'post is absolutely not more secure than get as to man in middle attacks\n')
('get', 'more', 'post', '', '38592739', 'however there s one thing we haven t considered yet - what if you never get more than 5 post\n')
('post', 'harder simple', 'get', 'secure data request', '41080455', 'although putting data with post method little harder than simple get\n')
('get', 'less insecure', 'post', 'secure data request', '4938414', 'get requests are no less insecure than post requests\n')
('get', 'smaller', 'post', 'secure data request', '18192221', 'a get request will be slightly smaller than a post although using websockets would give a more accurate figure\n')
('post', 'better', 'get', 'better faster method', '6735520', 'post is not better than get\n')
('post', 'more data', 'get', 'secure data request', '4565070', 'using post allows for more data to be transferred since get will append the values to the url itself\n')
('post', 'more', 'get', 'forms calls brute', '4218091', 'while the post method can be submitted with forms or ajax calls and it is pretty safe at least more than the get\n')
('get', 'request longer', 'post', 'secure data request', '39968178', 'so if your get request is longer than 255 bytes it s advised to use post requests instead\n')
('post', 'safer', 'get', '', '42603163', 'both get post user can put any thing in it and you must filter any input that user make it in your form example the value in textfiled sent to server by post method and that don t make it safer than get method the difference between them that the textfiled value doesn t visible in url\n')
('post', 'more secure', 'get', 'secure data request', '8388711', 'post is not any more secure than get\n')
('post', 'more', 'get', 'blog token level', '23905175', 'this blog post explains more on how to get an access token on android\n')
('get', 'less subsequent', 'post', '', '698048', 'an initial get request to a page usually costs less than subsequent post anyway so there s not much reason to avoid it\n')
('post', 'better', 'get', 'request better requests', '40896793', 'i think whoever said post is better than get when using passwords meant that the passwords would be part of the url in the get request which would obviously be bad\n')
('get', 'more', 'post', 'limit size smaller', '12297727', 'so is it enough only to use limit to get more than 50 post\n')
('get', 'more performant', 'post', '', '1849962', 'ajax calls using get are more performant than post according to yahoo\n')
('post', 'slower', 'get', 'secure data request', '44409255', 'but generally post is slower and would be bigger in size than a get request\n')
('get', 'more images', 'post', '', '20499631', 'i m trying to get cloudinary direct uploads working on a rails app using carrierwave and accepts_nested_attributes_for to submit one or more images with a post\n')
('post', 'more capacity', 'get', 'secure data request', '34988907', 'post has more capacity it can transfer more data than get\n')
('post', 'more secure', 'get', 'secure data request', '43522161', 'edit taking into account what was said in the comments though it looks more secure and is recommended by w3 see touheed khan s answer post isn t more secure than get and as riggsfolly said\n')
('get', 'method faster', 'post', 'method proccessing login', '16049028', 'usually in ajax get method is faster as it doesn t involve proccessing post fields and as you are only getting information i would stick it\n')
('post', 'safer', 'get', 'secure data request', '42591598', 'when you use post data is a alot more safer than get and you can send large no\n')
('post', 'far easier', 'get', 'user easier sandbox', '36313123', 'while users can manipulate post it s far easier to manipulate get\n')
('get', 'less secure', 'post', '', '24430127', 'get is basically for just getting retrieving data a get should not have a body so aside from cookies the only place to pass info is in the url and urls are limited in length get is less secure compared to post because data sent is part of the url\n')
('post', 'more secure', 'get', 'secure data request', '8985967', 'post method are generally consume more secure than get because when we use get method than it can display the data in url bar.if the data is more sensitive data like password then it can be inggeris\n')
('get', 'more', 'post', 'category categories ones', '34934045', 'i try it and i get all the categories and not just the ones with more than 1 post in them\n')
('get', 'more', 'post', '', '19306690', 'what i m trying to get is a page that displays 20 users per page will have pagination with the fallowing info it should show only users that have more than 2 post published\n')
('post', 'more secure', 'get', 'secure data request', '4294578', 'post data isn t inherently more secure than get data\n')
('post', 'more details', 'get', '', '22153922', 'another post outlines some more details on this how to get master-master replication with subversion\n')
('get', 'better', 'post', 'better faster method', '26117168', 'i d question whether get is the right verb here considering you need to pass a complex type it sounds like it would be better served as a post\n')
('get', 'smaller', 'post', 'limit size smaller', '1860743', 'you ll hit problems with larger submissions and file-uploads as the size limit for a get is much smaller than a post\n')
('post', 'more robust', 'get', 'secure data request', '37863029', 'characters post is more robust and secure than get\n')
('get', 'better', 'post', 'better faster method', '25863164', '1 reading other questions about the rest method for this proposes i think that i should use get better than post\n')
('get', 'better', 'post', 'method proccessing login', '39251439', 'i don t recommend sending such parameters via url get it is better and safer if you use post form method\n')
('post', 'higher priority', 'get', 'higher limit good', '18140518', 'if you have both post and get params with same name and if you using then it will take post variable only.because post has the higher priority than get\n')
('get', 'less', 'post', '', '5199763', 'other than the fact that get has one character less than post i doubt there is any performance difference\n')
('post', 'more secure', 'get', 'secure data request', '5287145', 'using post prevents this particular attack but is this actually any more secure than using get\n')
('get', 'more', 'post', 'secure data request', '12582162', 'i m searching for the best method to get result with database contain more than 100000 post and more than 100000 cat\n')
('get', 'more info', 'post', 'better faster method', '6636839', 'however i ve searched for a couple days and am not getting a definitive answer and i need a better understand of this so i know no better way to get more info than to post here\n')
('get', 'faster', 'post', 'better faster method', '8515020', 'get is faster than post\n')
('get', 'less secure', 'post', 'secure data request', '7292552', 'data should be in post or get.if you dont put your data in your form then you will have to use get which is less secure than post\n')
('post', 'less', 'get', 'forms calls brute', '7652047', 'i also found a post that suggests a less brute force method to get the urlroutingmodule to catch the combres.axd route\n')
('get', 'method faster', 'post', 'better faster method', '44409327', 'you should check this thread why get method is faster than post\n')
('post', 'higher', 'get', 'higher limit good', '35679660', 'there is a default limit of post method which is 2mb which is way higher than get\n')
('get', 'more', 'post', '', '6364373', 'usual way with tagging is to get objects by tag but if tags are used by few applications it may give more than post\n')
('get', 'more vulnerable', 'post', '', '30753913', 'get is more vulnerable than post as it can be transmitted and stored\n')
('get', 'shorter', 'post', 'better faster method', '16102098', 'generaly get is shorter than post\n')
('post', 'safer', 'get', 'secure data request', '16505451', 'post request are safer than get but that does not mean are invulnerable\n')
('post', 'better', 'get', 'better faster method', '1678727', 'when post is better than get\n')
('post', 'worse', 'get', '', '5797770', 'one reason post is worse for security is that get is logged by default parameters and all data is almost universally logged by your webserver\n')
('post', 'better choice', 'get', 'better faster method', '7381842', 'instead i m using post which isn t exactly bullet proof but still a better choice than get in this case\n')
('post', 'probably easier', 'get', 'user easier sandbox', '13225433', 'have a look at this post it is probably easier to get the selected radio button by changing your itemscontrol to use a listbox with the existing datatemplate\n')
('post', 'better way', 'get', 'better faster method', '40474452', 'yes generally post is a better way of submitting data than get\n')
('post', 'more data', 'get', 'secure data request', '2539220', 'post get method doesn t have the same lenght limit you can use post to send more data than with get\n')
('get', 'more light weight', 'post', 'secure data request', '30861556', 'other than that accepting a get request might be - depending on the server side rest framework - slightly more light weight than post requests\n')
('get', 'more', 'post', '', '43769189', 'i know there can be problems with posts_per_page but nothing is working i ve searched a lot to get the query to display more than one post\n')
('post', 'more secure', 'get', 'secure data request', '27221476', 'in my opinion post requests are not more secure than get requests and the data can be easily intercepted\n')
('get', 'more often', 'post', 'things type sorry', '21773039', 'get is more often used on unsecure type of datatransactions like for example a searchform and post is used when you want to make more secure things like a login form\n')
('get', 'simpler http', 'post', '', '4594163', 'this would make things considerably easier as the android library has native support for json serialization and making http get requests to restful urls is much simpler than http post requests it s not a huge deal but just less stuff you have to worry about\n')
('post', 'shipping longer', 'get', '', '15689066', 'the problem is that the post shipping takes longer than the call get alert then shows me the session variable not updated\n')
('get', 'more', 'post', '', '23850341', 'but a get seems more logical than a post anyway\n')
('post', 'more secure', 'get', 'secure data request', '25757870', 'last to address other answers while you should use post data when modifying something it is in no way more secure than get\n')
('post', 'more secure', 'get', 'secure data request', '27822450', 'post is no more secure than get over the http protocol\n')
('post', 'more details', 'get', '', '40746542', 'this post goes into more details how to get charles proxy work with android 7 nougat\n')
('post', 'less data', 'get', 'secure data request', '29409356', 'supply more data upon post and receive less data upon get\n')
('post', 'better', 'get', 'better faster method', '6777202', 'i believe post is better than get\n')
('post', 'better', 'get', 'secure data request', '1008704', 'yes post is better than get because post data is not usualy logged by a proxy or server but it is not secure\n')
('post', 'request better', 'get', 'request better requests', '42391293', 'as it s widely known that an asynchronous post request is better since the user won t get a perception that the app has crashed while it s loading the long process\n')
('post', 'safer', 'get', 'safer misleading indirect', '1145134', 'and apart from common misleading information where post is safer than get it is not\n')
('get', 'better', 'post', 'better faster method', '19732711', 'get is better for some cases but it seems to me you should use post instead\n')
('post', 'more', 'get', 'secure data request', '45127067', 'as suggested in the comments since you are saving data post is more appropriate than get\n')
('post', 'more safe', 'get', 'user easier sandbox', '35813468', 'however post is a bit more safe than get because get could be stored in the history\n')
('post', 'better', 'get', 'secure data request', '30907893', 'because post method storing capacity of response is better than get response\n')
('get', 'earlier', 'post', 'request better requests', '20961057', 'i am using custom delegate methods but when i run this the get request is performed earlier than the post so i cannot get the key before the get is done\n')
('post', 'safer', 'get', 'safer misleading indirect', '6368250', 'post requests are no safer than restful requests which are no safer than get requests\n')
('post', 'more secure', 'get', 'secure data request', '3544966', 'post is more secure then get and data transfer size limits are also there\n')
('post', 'safer', 'get', 'better faster method', '2143377', 'is post safer than get\n')
('post', 'safer', 'get', 'safer misleading indirect', '26804763', 'use post its safer than get if you use rest\n')
('post', 'more', 'get', 'secure data request', '27822450', 'in effect post is no more secure than get\n')
('get', 'parameter longer', 'post', '', '14532340', 'i noticed once the length of a get parameter is longer than 400 bytes or 2000 bytes for a post parameter g-wan returns 400 error\n')
('post', 'more', 'get', 'secure data request', '38714426', 'using post is more secure than get in the sense that data shown into the url in get request but not in post\n')
('get', 'more', 'post', 'secure data request', '31949863', 'also it seems that my view gets called more than once according to the log outputs and that is normal except it should be a post then redirect to a get but it seems to have more than one post request\n')
('get', 'wich more', 'post', '', '38310005', 'note that doing this will get the values via post var instead get wich makes more sense since you are sending via post your form\n')
('post', 'script more', 'get', '', '17341132', 'for eps is the same situation the post script is more readable but you should apply all necessery transformations on object before get its size\n')
('post', 'safer', 'get', 'secure data request', '18954610', 'one more thing some guys would misunderstand that post is safer than get as user can not see the sent data\n')
('get', 'more', 'post', '', '12297727', 'i get far more than 50 post\n')
('get', 'less safe', 'post', 'user easier sandbox', '8566523', 'some people say get can be less safe than post -- but to the seasoned user this doesn t make any significant difference because they can intercept and modify headers of the request\n')
('post', 'more options', 'get', '', '19724396', 'post gives you more options and dosn t have a limit on parameter query string length like get the only negative is post is slower by a couple of milliseconds to create the request\n')
('post', 'older code', 'get', '', '33075819', 'curl commands seem to work as do some other post commands from older code but when i log out req.body all i get is\n')
('post', 'larger', 'get', '', '9422310', 'to answer part of your second question with .net if the post is larger than maxrequestlength part of the .net configuration but smaller than maxallowedcontentlength part of the iis configuration you can create a custom http module to get at the portion of the post that came through\n')
('post', 'result earlier', 'get', '', '20868786', 'the problem i have noticed is that sometimes the jquery post result is retrieved earlier than the load of the .js file has been completed so i get an error and of course the jquery plugin doesn t work\n')
('get', 'more', 'post', '', '19621961', 'however if you want to get more than one post rather use functions mentioned above i think the most important thing is to grab them in one db query and not in ineffective way one-by-one\n')
('get', 'presumably more', 'post', 'blog token level', '18308085', 'but using post instead of get presumably adds one more level of protection for xsrf types of attack it does not you need some form of explicit xsrf protection token with post or with get\n')
('get', 'more', 'post', '', '45773707', 'when i try to get more than 100 post it returns\n')
('post', 'better', 'get', 'better faster method', '5884242', 'also post is generally considered better than get for ajax calls as it doesn t have the same string length limit slightly more secure too\n')
('get', 'method faster', 'post', 'better faster method', '9644621', 'why get method is faster than post\n')
('post', 'less secure', 'get', 'secure data request', '32367715', 'the plugin defaults to requiring a post request to logout but using the config setting you reference you can make your application more convenient to use but less secure by allowing get or post requests\n')
('get', 'slightly faster', 'post', 'secure data request', '25307589', 'get is slightly faster because the values are sent in the header unlike the post the values are sent in the request body in the format that the content type specifies\n')
('post', 'more', 'get', 'things type sorry', '724272', 'sorry that this post is more of the and for further information... type than a direct answer which i think has now been given-- i just thought it was helpful not to get things lost inside comments\n')
('get', 'much more lax', 'post', '', '7852059', 'the post get may fix the problem - get is much more lax with security than post\n')
('post', 'worse performance', 'get', 'better faster method', '18455818', 'post has worse performance than get\n')
('post', 'more', 'get', 'secure data request', '43934930', 'post is more secure than get because you aren t showing information anywhere\n')
('get', 'simpler', 'post', 'better faster method', '3521290', 'as a pragmatist i m inclined to use get because implementing it is way simpler than post\n')
('get', 'more', 'post', '', '43786621', 'when i want to get more than 54 post i receive this error\n')
('post', 'more', 'get', '', '1030688', 'i think using post is more elegant and has more options for further development than passing them via get\n')
('post', 'more', 'get', '', '30662798', 'additional options are to show this via a timeout so it s only shown when the post takes more than a short time and to use some form of fadein not sure if possible with a dialog then you don t get the annoying flash on the times it s very quick\n')
('post', 'better', 'get', 'request better requests', '1500539', 'since post is better suited to transfer large amounts of data or difficult formatted data it is the established standard for submitting forms but it is in no way safer unsafer or more less secure than get requests\n')
('post', 'better', 'get', 'better faster method', '17949020', 'and i think post is better than get\n')
('post', 'not more secure', 'get', 'secure data request', '1008671', 'post is not more secure than get as it√¢ s also send unencrypted\n')
('get', 'better', 'post', 'better faster method', '12490278', 'is get method is better than post method if you use a form\n')
('get', 'better', 'post', 'request better requests', '30069145', 'speaking of get request types you should also know that get requests tend to perform better than post\n')
('get', 'more', 'post', '', '45773707', 'anyone knows how to bypass this problem and get more than 100 post\n')
('post', 'more', 'get', '', '6342651', 'this post is more to get advises and ideas rather than solving a problem\n')
('get', 'usually faster', 'post', 'body encapsulation character', '33412031', 'the get is usually faster because it has no encapsulation sends data via url usually with a 255 character limit as post exists encapsulation by being sent by the body of the http request\n')
('post', 'better', 'get', 'secure data request', '36831306', 'so for creating a friendship post method suits better than get\n')
('get', 'more', 'post', '', '34493726', 'you can also chose to get more than 25 post at once\n')
('post', 'safer', 'get', 'safer misleading indirect', '22791339', 'post is a little safer than get because the parameters are not stored in browser history or in web server logs. also data is not displayed in the url\n')
('post', 'much better', 'get', 'secure data request', '30721515', 'as far as security goes post is much better than get as the data is sent behind-the-scenes rather than embedded in the url making it the typical protocol for login info\n')
('post', 'safer', 'get', 'safer misleading indirect', '7148371', 'however note that post is not much safer than get\n')
('post', 'broader', 'get', '', '24353372', 'a post has broader application and is generally used to send persistent data to a server in fact prescriptively get should not be used for this purpose\n')
('get', 'larger more', 'post', '', '24538442', 'so i have a post system and i want the box to get larger as more post come in\n')
('post', 'more', 'get', 'secure data request', '16294056', 'if the post has more than 9 pictures related to it i only get data from the first 9\n')
('post', 'more advantages', 'get', '', '17212144', 'post has a lot more advantages than get\n')
('post', 'better', 'get', 'secure data request', '17044607', 'also a post request would be better than a get if you re sending json\n')
('post', 'more', 'get', 'safer misleading indirect', '16195031', 'post makes it more indirect to intercept and read the payload than get but not safer\n')
('post', 'more', 'get', 'blog token level', '8836906', 'this blog post provides more info to get started\n')
('get', 'easier', 'post', 'secure data request', '9606511', 'another reason but rather a minor one is that get is easier to exploit that post as there are more ways to trigger get request than to trigger post request\n')
('post', 'safer', 'get', 'method proccessing login', '43934585', 'i just want to know if i use post method for login api then is it safer than get method\n')
('post', 'more', 'get', 'secure data request', '33307724', 'param should be params and therefore your data is not being serialized which would explain why the server is rejecting your post since post requires more privileges than get presumably\n')
('post', 'higher end', 'get', '', '37884205', 'gets have a size restrictions post do not or at least it s a configurable setting on the server and has a larger higher end than a get request would\n')
('get', 'less secure', 'post', 'secure data request', '1744404', 'the get request is marginally less secure than the post request\n')
('post', 'faster', 'get', 'better faster method', '26923286', 'i run the ab test several times with same results post is faster but get is lighter\n')
('post', 'more', 'get', 'secure data request', '4466537', 'stick with post on any action that does more than get data avoid xss-issues\n')
('get', 'easier', 'post', 'user easier sandbox', '26405424', 'get would obviously allow for a user to change the value a lot easier than post\n')
('get', 'more', 'post', 'user easier sandbox', '9557460', 'i want to get all the users that has more than one post but\n')
('post', 'more appropriate', 'get', 'secure data request', '4157893', 'i can t help with the coding side of your question but if you re passing in a non-url input then the post method would be more appropriate than get\n')
('get', 'safer', 'post', 'secure data request', '29245172', 'get method is not safer than post data never trust datas coming from the client side\n')
('post', 'more secure', 'get', 'secure data request', '8956020', 'edit2 seems as if i m wrong re post being more secure than get\n')
('get', 'better', 'post', '', '1772728', 'sometimes get is a better option in those read-only scenarios because it makes your url scheme richer and avoids these sort of post warnings\n')
('get', 'more fast', 'post', '', '14083346', 'i had the idea to switch automatically between get and post for example if cookie set because get is more fast and cache able and post is more save\n')
('post', 'safer', 'get', 'secure data request', '14039155', 'however post data are not much safer than get data anyway\n')
('get', 'more', 'post', '', '11057732', 'i need to create a menu based on that list but cannot simply list all post and get it because it is a busy blog and has more than 2000 post\n')
('get', 'more frequent', 'post', '', '9923433', 'get and head being much more frequent than post\n')
('post', 'request not more', 'get', 'secure data request', '8277796', 'standard post request is not more secure than get one\n')
('get', 'request more', 'post', '', '11287884', 'but do also remember that in your case get request looks more appropriate and as balusc says its not good practice to use post for bookmarkable page-to-page navigation\n')
('get', 'always faster', 'post', 'better faster method', '11008319', 'get is always faster than post\n')
('get', 'faster response', 'post', '', '34426880', 'we provide a number of support resources which may get faster response than post on third party sites including the virtuoso users mailing list public support forums and confidential support cases\n')
('get', 'more secure', 'post', '', '18020715', 'it is just an example that shows a scenario in which get is more secure than post but i don t think it would be a good idea to choose get over post from this attack reason\n')
('post', 'more data', 'get', '', '3882214', 'i don t want to use the get request since it says in the guidelines of a restful api that it should use post for this purpose plus i might want to send more data than get can handle\n')

innodb	myisam	195
('myisam', 'better', 'innodb', 'better oracle read', '6564281', 'sometimes i got asked on some interviews what benefits does innodb have against myisam and when myisam is better than innodb\n')
('myisam', 'better', 'innodb', 'better oracle read', '8132481', 'you insert in there but never select from there as far as i know today myisam is better than innodb in this case\n')
('myisam', 'faster', 'innodb', '', '3707592', 'i ve figure out that even though myisam has locking contention it s still faster than innodb in most scenarios because of the rapid lock acquisition scheme it uses\n')
('innodb', 'often slower', 'myisam', 'faster slower use', '5896369', 'innodb is often slower than myisam being a transactional db engine with acid properties\n')
('myisam', 'slower', 'innodb', '', '13442619', 'this also affects how it is stored which leads to myisam being slower than innodb on insert due to myisam requiring a full index re-write on every insertion\n')
('innodb', 'longer', 'myisam', 'longer primary noticeable', '15385004', 'one thing is that if your inserts are not in the order of increasing primary keys innodb can take a bit longer than myisam\n')
('innodb', 'better', 'myisam', 'better oracle read', '31744395', 'you can also try using innodb since it s said is better than myisam handling bulk inserts with data already on it\n')
('innodb', 'less', 'myisam', 'faster slower use', '16397869', 'with innodb there is less time lost from table locking while myisam is faster in table readings\n')
('myisam', 'better', 'innodb', 'better oracle read', '6564322', 'myisam is better than innodb when you don t need those advanced features and storage speed is more important than other concerns\n')
('myisam', 'faster', 'innodb', 'faster slower use', '10332345', '2 - i have read about myisam vs innodb the conclusion for me was that myisam is faster when it comes to read-only whereas innodb is designed for tables that get updated or inserts more frequently\n')
('innodb', 'more effecient', 'myisam', 'strict integrity loose', '30134365', 'innodb -- more effecient than myisam because of the way the primary key is clustered with the data in innodb\n')
('innodb', 'slower', 'myisam', 'faster slower use', '37088068', 'after all innodb shouldn t be slower than myisam when using count + where but that s exactly what is happening here\n')
('innodb', 'more', 'myisam', 'default tuning different', '24803579', 'and now i have learned that innodb uses more memory at-least while reading than myisam engine so i am trying to change the default engine of mysql to use myisam\n')
('innodb', 'more complex', 'myisam', '', '9211731', 'innodb implements mvcc multi-versioning concurrency control so locking is much more complex than with myisam\n')
('innodb', 'less archived', 'myisam', '', '40198622', 'you will need about six times less disk space to store and memory to process your dataset compared to innodb or about 2-3 times less than archived myisam\n')
('innodb', 'more', 'myisam', 'longer primary noticeable', '17195485', 'innodb is affected by the primary key much more than myisam and it could make a noticeable difference\n')
('innodb', 'better', 'myisam', 'better oracle read', '3286802', 'therefore innodb can handle higher levels of concurrency better than myisam\n')
('innodb', 'more strict', 'myisam', 'strict integrity loose', '7776021', 'innodb is more strict in data integrity while myisam is loose\n')
('myisam', 'faster', 'innodb', 'faster slower use', '15620322', 'in general is myisam faster than innodb\n')
('innodb', 'better', 'myisam', 'better oracle read', '15729523', 'innodb is a better choice as myisam is really old engine and would fade away in near future\n')
('innodb', 'slower', 'myisam', 'faster slower use', '5291159', 'oh and just incase you were thinking innodb is slower than myisam - the myisam implementation i tested was twice as slow in all counts\n')
('myisam', 'more susceptible', 'innodb', 'better oracle read', '14464983', 'myisam is more susceptible to data corruption than innodb and usually innodb performs better because it caches both data and indexes\n')
('myisam', 'faster', 'innodb', '', '3184908', 'there is a difference between the different storage engines though myisam is faster for a lot of select innodb is faster for a lot of insert update because it uses row locking instead of table locking and the way it handles indexes\n')
('myisam', 'marginally better', 'innodb', 'default tuning different', '7492861', 'there may be some exotic corner cases where myisam performs marginally better for certain workloads table-scans or high-volume insert-only work but the default choice should be innodb unless you can prove you have a case that myisam does better\n')
('myisam', 'smaller footprints', 'innodb', '', '5676173', 'myisam tables have smaller footprints than innodb ones myth\n')
('myisam', 'faster', 'innodb', 'faster slower use', '26888417', 'myisam for reads may well be faster than innodb\n')
('innodb', 'better', 'myisam', 'better oracle read', '43767498', 'in fact oracle is so sure that innodb is better that they removed myisam from 8.0\n')
('myisam', 'faster', 'innodb', 'faster slower use', '1730317', 'it is a massive over simplification in some cases and plain wrong in others to say we know that myisam is faster than innodb\n')
('myisam', 'better faster', 'innodb', 'faster slower use', '35190842', 'most of the literature that says myisam is better faster whatever then innodb is old literature\n')
('myisam', 'faster', 'innodb', 'faster slower use', '990780', 'i heard myisam is faster but others say innodb can be fast also but it takes abit more to optimize it\n')
('innodb', 'slower', 'myisam', '', '25632749', 'first question is it normal that innodb is much slower 7x slower than myisam for such usage\n')
('myisam', 'generally faster', 'innodb', 'faster slower use', '3536007', 'myisam generally performs faster because it lacks certain functions innodb has such as rollback... but it has only table locking\n')
('innodb', 'more', 'myisam', '', '20327983', 'to our suprise innodb took hours more than myisam\n')
('innodb', 'more optimization', 'myisam', '', '12100342', '3 a first of all if you haven t done yet change the storage engine to innodb which has row level locking and in newer versions of mysql has more optimization than myisam has\n')
('innodb', 'slower', 'myisam', '', '46446800', 'during my tests of innodb v myisam i found that when i did resolve any contention issues the innodb model was 40 slower than myisam\n')
('innodb', 'slower', 'myisam', 'faster slower use', '1359270', 'however innodb tends to be slower as myisam\n')
('myisam', 'faster', 'innodb', 'faster slower use', '4087592', 'myisam table is much faster than innodb but no rollback is possible\n')
('myisam', 'really better', 'innodb', 'better oracle read', '6564281', 'but when myisam is really better than innodb\n')
('innodb', 'more', 'myisam', 'better oracle read', '15558403', 'innodb is more complex while myisam is simpler\n')
('innodb', 'better', 'myisam', 'better oracle read', '46680251', 'oracle has kept improving innodb by so much that they declare that it is better than myisam in virtually all situations\n')
('myisam', 'better read', 'innodb', 'better oracle read', '19664261', 'myisam delivers better read performance compared to innodb at the cost of being less acid compliant\n')
('myisam', 'slower', 'innodb', '', '45542267', 'i am trying to compare the myisam and innodb write read performance but i am suprised that the myisam s read is much more slower than innodb while its write is much more faster this is totally opposite compared to what i have learned\n')
('myisam', 'faster', 'innodb', 'faster slower use', '40690288', 'myisam is not faster than innodb anymore for most types of queries\n')
('innodb', 'slower', 'myisam', '', '15213196', 'innodb does support transactions and referential integrity but the trade-off is that it is a bit slower than myisam\n')
('myisam', 'faster', 'innodb', 'boost quicker reliable', '11390363', 'out of experience i m involved to a project that uses huge amount of data using mysql and we mostly prefer myisam for data that can be generated it allows to achieve much higher performance losing transactions but generally speaking myisam is faster but innodb is more reliable\n')
('myisam', 'faster', 'innodb', 'table number records', '32931270', 'i am creating an commerce website and i am stuck in a database problem i am storing customer orders please tell me which is better myisam or innodb i have to use transaction like feature in customer order table and i personally prefer myisam because it is much faster than innodb and it also supports full-text searching is there any way to use transaction like rollback feature in myisam so that if anything goes wrong table will be rollback to its previous state how to do that without any external library or any other server side access and i have to use mysql\n')
('myisam', 'faster', 'innodb', 'faster slower use', '8869636', 'if you are not using transactions while storing or updating tables switch table type to myisam its quite faster than innodb with much less overhead\n')
('innodb', 'slower', 'myisam', '', '4747099', 'innodb table is a bit slower than myisam tables but i don t think it is a major problem as you told you are using drupal system is that a kind of mult-sites like a word-press system\n')
('myisam', 'faster', 'innodb', 'faster slower use', '20297324', 'also note that some mysql engines are faster than others for example myisam may run faster than innodb at expense of the lack of real foreign keys\n')
('innodb', 'better crash', 'myisam', 'integrity crash better', '7776021', 'innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n')
('innodb', 'better', 'myisam', 'integrity crash better', '42305333', 'innodb uses row level locking while myisam can only use table level locking that is why innodb has crash revovery is better than myisam\n')
('myisam', 'faster', 'innodb', '', '9948201', 'myisam has historically been viewed as faster than innodb but for recent versions of innodb that is true for a much much smaller set of use cases\n')
('myisam', 'faster', 'innodb', 'faster slower use', '24465773', 'in a thread i came to know that myisam is faster for reads innodb is faster for writes\n')
('innodb', 'faster', 'myisam', 'faster slower use', '10558700', 'beststat is innodb so i have row-level locking and consindering i do a lot of inserts-updates it should be faster than myisam\n')
('innodb', 'slower', 'myisam', 'available clauses versions', '17641256', 'generally you can have as good performance for reading as in myisam in innodb tables - you just can use count without where clause and you always should have a suitable index for where clauses as in innodb table scan will be slower than in myisam\n')
('myisam', 'better', 'innodb', 'better oracle read', '20900198', 'since myisam is better on selecting while innodb is better on writing\n')
('myisam', 'better', 'innodb', 'better oracle read', '8615205', 'since you don t do updates i think myisam would be better than innodb in this scenario\n')
('myisam', 'faster', 'innodb', 'faster slower use', '18971053', 'use myisam usually much faster than innodb if your data base isnt transaction oriented\n')
('myisam', '2x faster then', 'innodb', '', '13494410', 'select queries in myisam runs 2x faster then in innodb but the updates and insert queries are much slower in myisam\n')
('innodb', 'sometimes better', 'myisam', 'better oracle read', '37900930', 'this is one way in which innodb is sometimes better than myisam\n')
('innodb', 'higher throughput', 'myisam', 'higher throughput harder', '405022', 'innodb is harder to tune since it has more knobs but a properly tuned innodb system can often have higher throughput than myisam due to better locking and better i o patterns\n')
('innodb', 'slower', 'myisam', '', '5676173', 'innodb is transactional so inserts will generally be slower than myisam\n')
('myisam', 'better', 'innodb', 'better oracle read', '13388561', 'i have heard that myisam performs better than innodb on read-oriented tables\n')
('myisam', 'faster', 'innodb', 'faster slower use', '32692860', 'speed does matter here myisam is still slightly faster than innodb especially for reads\n')
('innodb', 'newer', 'myisam', 'newer older transaction', '8213500', 'innodb is relatively newer than myisam and is transaction safe\n')
('innodb', 'slower', 'myisam', '', '37657534', 'there are several q a for why is innodb much slower than myisam but i could not find any topic for the opposite\n')
('innodb', 'more', 'myisam', 'strict integrity loose', '10308655', 'innodb is more strict in data integrity while myisam is not as\n')
('innodb', 'better', 'myisam', 'correct right frequent', '1729806', 'am i right that innodb is better for frequent concurrent updates and inserts than myisam\n')
('myisam', 'often faster', 'innodb', 'faster slower use', '19705475', 'myisam is often faster than innodb in terms of raw performance mostly because it is not acid\n')
('myisam', 'less resources', 'innodb', '', '19705475', 'therefore accessing myisam consumes less resources than innodb\n')
('innodb', 'quicker', 'myisam', '', '32987720', 'there are other optimizations available but general rule is that innodb will be quicker than myisam is even with table growth\n')
('myisam', 'faster', 'innodb', 'faster slower use', '5676173', 'myisam is faster than innodb for reads myth\n')
('innodb', 'faster', 'myisam', 'faster slower use', '7558597', 'if there are many modifications of the data it s said that innodb works faster because it uses row locking instead of table locking like myisam\n')
('myisam', 'much faster', 'innodb', 'faster slower use', '8171849', 'in general it seems as though the concensus is to primarily use innodb but there are still some areas in which myisam is much faster than innodb\n')
('innodb', 'slower', 'myisam', '', '228750', 'also innodb is slower than myisam unless myisam is blocking for a huge select\n')
('innodb', 'faster', 'myisam', 'faster slower use', '20412828', 'have you considered changing to innodb - it has much better concurrency support and in some contexts will run faster than myisam\n')
('innodb', 'faster', 'myisam', '', '3137522', 'but innodb has improved dramatically in the past few years and in most cases today innodb performs faster than myisam\n')
('myisam', 'better', 'innodb', 'integrity crash better', '14063234', 'also i can t see your table engine but myisam is better for full text searching rather than innodb\n')
('innodb', 'better job', 'myisam', '', '45256543', 'in this area i think innodb s change buffer does a better job than myisam s do it now\n')
('innodb', 'much slower', 'myisam', '', '1730317', 'if you find that innodb is much slower for inserts updates bear in mind that it offers a much better level of durability - if you tune it for approximately the same durability as myisam then you ll see good performance hopefully\n')
('innodb', 'higher throughput', 'myisam', 'higher throughput harder', '9220735', 'innodb delivered 4.6x higher throughput than myisam while achieving\n')
('myisam', 'significantly faster', 'innodb', 'faster slower use', '27496923', 'myisam is the perfect choice since the database is almost only used for reading and myisam is significantly faster that innodb\n')
('myisam', 'infinitely more', 'innodb', '', '18088402', 'there are some situations when myisam is infinitely more efficient than innodb when manipulating large data dumps offline because of table lock\n')
('myisam', 'actually better', 'innodb', 'doubt specific result', '7887458', 'myisam is actually better than innodb for spatial data btw because it also supports r-tree spatial indexes but not as powerful queries as postgis. if you just need points though innodb or myisam b-trees are adequate\n')
('myisam', 'smaller same', 'innodb', '', '14454893', 'as you know myisam table sizes are about three or more times smaller than same innodb tables\n')
('innodb', 'slightly faster', 'myisam', 'faster slower use', '30776508', 'innodb seems slightly faster than myisam but this is really marginal\n')
('myisam', 'better performance', 'innodb', 'better oracle read', '5019157', 'i currently have myisam and i would like to stay with it because it had far better performance than innodb in my case but i heard that innodb has acid transactions\n')
('myisam', 'faster', 'innodb', 'faster slower use', '1647114', 'ok there are some cases where myisam is faster than innodb but rarely enough that it s worth putting up with the lack of acid-compliance\n')
('innodb', 'better', 'myisam', 'correct right frequent', '4548313', 'i heard correct me if i am wrong that innodb is better for tables that will be updated a lot because of row locking opposed to myisam s table locking\n')
('myisam', 'faster', 'innodb', 'faster slower use', '26759803', 'note however that for high traffic websites we do modify the joomla core and we also switch the tables from innodb to myisam regardless what others might think here myisam is much faster than innodb\n')
('innodb', 'slower', 'myisam', 'faster slower use', '990830', 'innodb is slower for read only databases because it has features acid compliant row level locking that myisam leaves out\n')
('innodb', 'better choice', 'myisam', 'better oracle read', '24803981', 'mostly innodb is better choice than a myisam\n')
('innodb', 'more', 'myisam', '', '9675447', 'innodb doesnt read number of rows from stored cached value like myisam does if column is not null cause innodb is more optimized for writing than reading opposing to myisam\n')
('innodb', 'slower', 'myisam', '', '31143008', 'i know innodb tends to be a bit slower than myisam on counting but this is far too long\n')
('innodb', 'better', 'myisam', 'better oracle read', '23940847', 'innodb when tuned well performs better than myisam\n')
('myisam', 'faster', 'innodb', 'faster slower use', '9114209', 'the script was tested using myisam and it indexes products relatively fast much much faster than innodb\n')
('innodb', 'slower', 'myisam', 'faster slower use', '15213134', 'innodb shouldn t be much slower than myisam\n')
('innodb', 'heavier', 'myisam', 'faster slower use', '262798', 'i know innodb is heavier than myisam but just how much more\n')
('innodb', 'safer acid', 'myisam', 'integrity crash better', '1042989', 'innodb is a safer acid compliant engine with some integrity features that myisam lacks\n')
('innodb', 'longer', 'myisam', 'longer primary noticeable', '3075441', 'so that means that in practice an innodb write will take 3 times longer than a myisam write\n')
('myisam', 'longer', 'innodb', '', '11056538', 'although 4m isn t that many rows with contention and depending on your structure and database engine it may take a while i think myisam alters take longer than innodb because myisam requires whole table locks and handles concurrency less well\n')
('innodb', 'faster', 'myisam', 'faster slower use', '29879444', 'also mysql version starting from 5.5 - innodb performs faster than myisam\n')
('myisam', 'faster', 'innodb', 'web access search', '9671122', 'i did a search online comparing myisam and innodb but all of the articles i read judged myisam being faster than innodb on select queries\n')
('myisam', 'more space', 'innodb', 'space disk 2x-3x', '26765961', 'myisam is more space friendly than innodb you can start with that one\n')
('innodb', 'more reliable', 'myisam', '', '5676173', 'innodb is more reliable than myisam\n')
('innodb', 'slower', 'myisam', '', '16785740', 'in innodb the count s when where group by or join is not used execute slower than in myisam because the row count is not stored internally\n')
('myisam', 'less', 'innodb', '', '7558745', 'myisam uses less memory than innodb and the actual data files are often quite a bit larger for innodb\n')
('myisam', 'more', 'innodb', '', '14232379', 'myisam is more prone to locking problems than innodb i believe\n')
('myisam', 'faster', 'innodb', '', '4548349', 'myisam is faster for certain queries and supports fulltext and spatial indexes while innodb is transactional and more concurrent\n')
('innodb', 'more', 'myisam', 'space disk 2x-3x', '38401922', 'innodb consumes more disk space than myisam -- typically 2x-3x\n')
('innodb', 'better', 'myisam', 'better oracle read', '13247861', 'innodb has better crash recovery while myisam is poor at recovering\n')
('innodb', 'faster', 'myisam', 'faster slower use', '12620218', 'i have been told innodb is faster on executing writes but slower than myisam doing reads i cannot back this up and could not find any article that analyses this i do however have the guy that told me this in high regard feel free to ignore this point or do your own research\n')
('myisam', 'faster', 'innodb', 'faster slower use', '20327983', 'myisam is almost 4 time faster than innodb which is not acceptable in the environment we are working as i mentioned earlier that every second is worth many dollers for us\n')
('myisam', 'faster', 'innodb', 'faster slower use', '6679187', 'after testing it seems that myisam is faster than innodb when using when there is no where clause\n')
('innodb', 'slower', 'myisam', 'faster slower use', '9114209', 'why is innodb so much slower than myisam in my case\n')
('innodb', 'better', 'myisam', 'better oracle read', '8444146', 'innodb scales better than myisam\n')
('innodb', 'slower', 'myisam', 'faster slower use', '21863823', 'at the beginning the insert performance of innodb is almost 50 times slower than myisam and tokudb is 40 times slower than myisam\n')
('myisam', 'faster', 'innodb', 'faster slower use', '30776508', 'in terms of pure speed it is not always the case that myisam is faster than innodb but in my experience it tends to be faster for pure read working environments by a factor of about 2.0-2.5 times\n')
('innodb', 'faster', 'myisam', '', '23940847', 'even this blog from 2007 shows benchmark results that innodb is on par with or faster than myisam under most workloads\n')
('myisam', 'better', 'innodb', 'better oracle read', '5850324', 'it is said that if you have a mostly read based application you should use myisam as it is better than innodb\n')
('innodb', 'better', 'myisam', 'available clauses versions', '8388057', 'newer versions of mysql 5.5+ have extended innodb to support all the features that were previously only available on myisam such as fulltext and geospatial indexing and innodb performance is usually considerably better than myisam when configured properly\n')
('myisam', 'much faster', 'innodb', 'faster slower use', '10474759', 'myisam is much faster for reads but since it locks the whole table for writes this is where overall throughput drops compared with innodb\n')
('innodb', 'more concurrent', 'myisam', '', '8349825', 'innodb is more concurrent than myisam since it provides row-level locking\n')
('myisam', 'faster', 'innodb', 'faster slower use', '6174246', 'in some benchmarks i see that myisam is faster than innodb but seems i have a little improvement\n')
('innodb', 'slower', 'myisam', 'faster slower use', '9744170', 'innodb is slower than myisam but in which cases\n')
('innodb', 'better choice', 'myisam', 'better oracle read', '15329943', 'so for such an application is it will innodb be a better choice over myisam\n')
('innodb', 'quicker', 'myisam', '', '38256015', 'innodb handles inserts with composite primary keys quicker than myisam\n')
('innodb', 'more overhead', 'myisam', '', '365834', 'innodb has more overhead but uses row-level locking so that reads and writes can happen concurrently without the problems that myisam s table locking incurs\n')
('myisam', 'older mysql', 'innodb', '', '39187518', 'the lone exception is myisam which is an older mysql storage engine which does not support transactions is more prone to corruption and generally tends to perform worse than innodb\n')
('myisam', 'better', 'innodb', 'integrity crash better', '1318324', '3 mysqlhotcopy inly works on myisam tables and in most applications you are better off with innodb\n')
('innodb', 'higher resource', 'myisam', 'higher throughput harder', '13888408', 'innodb has a higher resource consumption rates then myisam so keep that in mind\n')
('innodb', 'more', 'myisam', '', '8203841', 'innodb is also being developed more than myisam\n')
('innodb', 'better choice', 'myisam', 'better oracle read', '19725362', 'innodb would be a better choice than myisam for a high-write table\n')
('innodb', 'actually faster', 'myisam', 'faster slower use', '389824', 'innodb is actually faster than myisam in quite a few cases so it depends on what your application s mix of selects updates concurrent queries indexes buffer configuration etc\n')
('innodb', 'better due', 'myisam', 'better oracle read', '13628627', 'furthermore i do not have control over the engine √¢ myisam or innodb innodb performs better due to row based locking instead of table as in case of myisam\n')
('myisam', 'faster', 'innodb', 'faster slower use', '1774377', 'myisam inserts are going to be faster than innodb so if you re logging data and retrieving it later that will be a win\n')
('myisam', 'less space', 'innodb', 'space disk 2x-3x', '41418598', 'myisam also tends to store data in less space than innodb\n')
('myisam', 'faster', 'innodb', 'faster slower use', '40690288', 'the trope about myisam being faster than innodb is a holdover from code that was current in the mid-2000 s\n')
('myisam', 'slightly faster', 'innodb', 'faster slower use', '4233878', 'myisam is slightly faster than innodb and implements the fulltext index which is quite useful for integrating search capabilities\n')
('innodb', 'better', 'myisam', 'available clauses versions', '9913344', 'innodb is usually much better than myisam at tables being available while insert update and delete are happening because innodb uses row level locking for updates whereas myisam uses table level locking\n')
('innodb', 'much faster', 'myisam', 'table number records', '2943437', 'if you have so many records in the table then the first thing is to change the table engine to innodb if its not innodb because for large number of records innodb is much faster as it caches the table data while on the contrary myisam engine only caches the indexes so each time it has to do a full table scan from disk if the data required cannot be fetched from index\n')
('myisam', 'longer', 'innodb', 'longer primary noticeable', '12584994', 'myisam supports longer rows than innodb does\n')
('myisam', 'faster', 'innodb', 'large counting buffer', '12088160', 'the engine is myisam i ve heard people recommend switching to innodb but many others said myisam is faster with large amounts of data in terms of counting and innodb better for safe transactions\n')
('myisam', 'faster', 'innodb', 'faster slower use', '1647078', 'i am not sure if this is no longer true myisam is faster than innodb for reads\n')
('myisam', 'better', 'innodb', 'better oracle read', '32689837', 'but in certain scenarios myisam works better than innodb\n')
('innodb', 'slower', 'myisam', 'faster slower use', '2369500', 'innodb tables are even slower than myisam tables for inserts and the delayed key write option is not available\n')
('myisam', 'much more', 'innodb', 'boost quicker reliable', '31182295', 'this is a huge performance boost look like myisam is much more quicker for fulltext in mysql than innodb\n')
('innodb', 'slower', 'myisam', '', '11505760', 'if you use a where clause though it changes the execution pattern to use indexes so in general innodb will be slower than myisam on full unrestricted counts where as the performance matches up on restricted counts\n')
('myisam', 'better', 'innodb', 'better oracle read', '8893726', 'myisam is better for high read volumes innodb for high update volumes due to table vs row locking\n')
('innodb', 'more sensible', 'myisam', '', '29054457', 'for an oltp type system innodb is usually more sensible than myisam did you check the contention before trying a different engine\n')
('innodb', 'better', 'myisam', 'integrity crash better', '1247801', 'innodb supports better locking semantics so if there will be occasional or frequent writes or if you want better data integrity i d suggest starting there and then benchmarking myisam later if you can t hit your performance targets\n')
('innodb', 'safer', 'myisam', '', '46067630', 'nothing is 100 safe but innodb properly used is a lot safer than myisam against data loss and corruption\n')
('innodb', 'newer', 'myisam', 'newer older transaction', '13247861', 'innodb is newer while myisam is older\n')
('myisam', 'faster', 'innodb', 'faster slower use', '6689067', 'edited to add myisam is faster than innodb because it is simpler\n')
('innodb', 'vastly better', 'myisam', 'integrity crash better', '5248641', 'you can also use compression on the tables to keep them smaller but innodb is vastly better than myisam at data integrity\n')
('myisam', 'faster', 'innodb', '', '1959795', 'anyone who thinks myisam is faster is either not tuning innodb correctly or has such small data that who cares\n')
('innodb', 'much better', 'myisam', 'better oracle read', '1970160', 'someone just told me that innodb is much better than myisam\n')
('innodb', 'higher', 'myisam', 'higher throughput harder', '579589', 'their conclusion innodb has 30 higher performance than myisam on average\n')
('myisam', 'really faster', 'innodb', 'faster slower use', '45542506', 'you are right because myisam is really faster than innodb\n')
('myisam', 'faster', 'innodb', 'faster slower use', '4077800', 'myisam is faster but does not support the use of transactions like innodb does\n')
('innodb', 'faster', 'myisam', 'faster slower use', '2757616', 'database performance of the innodb is not necessary faster than the myisam engine\n')
('innodb', 'better', 'myisam', 'doubt specific result', '9776443', 'your table sounds fairly large so i doubt it s being held entirely in memory but it sounds like innodb handles indexes better than myisam anyway plus since you re being so specific it may be caching the result of the query\n')
('innodb', 'better', 'myisam', '', '380074', 'innodb has better performance than myisam though innodb needs more attention to tuning the configuration innodb supports atomic changes transactions foreign keys and innodb is much more resistant to corrupting data in a crash\n')
('myisam', 'more', 'innodb', '', '6314981', 'not sure why people think myisam is more performant than innodb - it s a conundrum wrapped in an enigma\n')
('innodb', 'stricter', 'myisam', '', '8021206', 'innodb is much much stricter than myisam\n')
('innodb', 'bigger', 'myisam', '', '2114537', 'innodb tables are about 4x bigger than their myisam counterparts\n')
('myisam', 'often faster', 'innodb', 'faster slower use', '14568413', 'myisam is often faster than innodb but isn t safe to use in a production environment for critical data\n')
('myisam', 'faster', 'innodb', '', '405022', 'myisam is faster in data warehousing situations such as full table scan reporting etc.. but innodb can actually be faster in many cases with normal oltp queries\n')
('innodb', 'primarily better', 'myisam', '', '7335774', 'as you are no doubt aware from your searches innodb is primarily better than myisam for high volume inserts not counting non-comparable features like foreign keys or full text searches which are exclusive to innodb and myisam respectively while myisam is primarily useful for tables which are read more often than they are written to\n')
('innodb', 'more', 'myisam', '', '9114324', 'innodb provides more complex keys structure than myisam foreign keys and regenerating keys is really slow in innodb\n')
('innodb', 'slower', 'myisam', 'faster slower use', '6348127', 'generally speaking innodb is slower than myisam as innodb is atomic while myisam is not\n')
('innodb', 'slower', 'myisam', 'faster slower use', '277511', 'innodb is slower than myisam for most uses but can perform faster in certain conditions due to a better locking mechanism\n')
('innodb', 'faster', 'myisam', 'faster slower use', '14846908', 'innodb not only has the advantages you list but it is also faster than myisam in many benchmarks\n')
('myisam', 'better', 'innodb', 'better oracle read', '13482192', 'finally even if somehow you could manage myisam to perform better than innodb that doesn t mean innodb is inadecuate at all\n')
('innodb', 'slower', 'myisam', 'faster slower use', '15678536', 'edit for the read-performance this link shows that innodb often is actually not slower than myisam\n')
('innodb', 'better engine', 'myisam', 'default tuning different', '11977129', 'tuning innodb which is the better engine requires adjusting different values than myisam which is often the fast-but-unsafe default\n')
('myisam', 'faster', 'innodb', 'faster slower use', '4459983', 'some people have said that for reads myisam is faster but recent improvements in innodb have either alleviated or eradicated this difference\n')
('innodb', 'larger', 'myisam', 'table number records', '8004971', 'put another way let s say i start with a new innodb table and insert 20 gb of data assuming that 20 gb incorporates all the excess innodb stuff i realize data stored in innodb is larger than myisam then i delete all data then i insert 10 gb of data\n')
('myisam', 'better', 'innodb', 'better oracle read', '5675916', '1 in mysql engines myisam is better or innodb\n')
('innodb', 'better', 'myisam', 'large counting buffer', '9947851', 'if your database has a large innodb buffer pool and a small key buffer then innodb performance is going to be better than myisam performance especially for large tables\n')
('innodb', 'much better', 'myisam', 'better oracle read', '30545353', 'in many discussions and even in mysql documents it has been mentioned that in case of updates innodb performs much better than myisam\n')
('myisam', 'faster', 'innodb', 'faster slower use', '43767498', 'yes it is an old wives tale that myisam is faster than innodb\n')
('myisam', 'faster', 'innodb', 'web access search', '8153417', 'myisam is still widely used in web applications as it has traditionally been perceived as faster than innodb in situations where most db access is reads\n')
('innodb', 'faster', 'myisam', 'faster slower use', '15620322', 'now the response i got from my boss is that i need to prove that innodb will run faster than myisam\n')
('innodb', 'more resistant', 'myisam', '', '7492861', 'innodb is more resistant to table corruption than myisam\n')
('myisam', 'generally less suitable', 'innodb', '', '754723', 'plus you have to make your tables myisam which is generally less suitable than innodb\n')
('innodb', 'better', 'myisam', 'better oracle read', '17765637', 'almost always innodb is a better choice than myisam\n')
('innodb', 'much better', 'myisam', 'integrity crash better', '8021213', 'generally innodb is much better for preserving your data integrity so stick with it and do not go back to myisam there is also a matter of what each engine is best fore but unless you give us more details there is no point in dwelling on that\n')
('myisam', 'faster', 'innodb', 'faster slower use', '30655594', 'myisam is faster when the query is simple but it s much slower in a high concurrent environment as its table level lock comparing to innodb s row level lock\n')
('myisam', 'slower', 'innodb', '', '32780790', 'to answer the real question why is myisam slower than innodb i can t give an authoritative answer\n')
('innodb', 'more', 'myisam', '', '23090582', 'innodb is more scalable and myisam doesn t support any of the properties of acid\n')
('innodb', 'engine more', 'myisam', '', '9671726', 'it is possible that the config of your innodb engine is more efficient for your searches than the way you have myisam set up\n')
('myisam', 'faster', 'innodb', 'faster slower use', '1729806', 'we know that myisam is faster than innodb when we don t have many concurrent updates inserts\n')
('myisam', 'faster', 'innodb', 'faster slower use', '4546410', 'in my opinion myisam use to be faster than innodb now they are pretty much the same in speed\n')
('myisam', 'faster', 'innodb', 'faster slower use', '12285797', 'myisam has proved to be faster than innodb for me\n')

